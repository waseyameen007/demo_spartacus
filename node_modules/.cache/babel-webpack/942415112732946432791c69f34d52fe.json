{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { Config, provideDefaultConfig } from '@spartacus/core';\nimport { OrderEntriesSource } from '@spartacus/storefront';\nclass ImportExportConfig {}\nImportExportConfig.ɵfac = function ImportExportConfig_Factory(t) {\n  return new (t || ImportExportConfig)();\n};\nImportExportConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ImportExportConfig,\n  factory: function ImportExportConfig_Factory(t) {\n    let r = null;\n    if (t) {\n      r = new (t || ImportExportConfig)();\n    } else {\n      r = i0.ɵɵinject(Config);\n    }\n    return r;\n  },\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImportExportConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: Config\n    }]\n  }], null, null);\n})();\n\n/**\n * Indicates from which source the new saved cart name\n * should be taken.\n */\nvar CartNameSource;\n(function (CartNameSource) {\n  CartNameSource[\"FILE_NAME\"] = \"fileName\";\n  CartNameSource[\"DATE_TIME\"] = \"dateTime\";\n})(CartNameSource || (CartNameSource = {}));\nconst defaultImportExportConfig = {\n  cartImportExport: {\n    file: {\n      separator: ','\n    },\n    import: {\n      fileValidity: {\n        maxSize: 1,\n        maxEntries: {\n          [OrderEntriesSource.NEW_SAVED_CART]: 100,\n          [OrderEntriesSource.SAVED_CART]: 100,\n          [OrderEntriesSource.ACTIVE_CART]: 10,\n          [OrderEntriesSource.QUICK_ORDER]: 10\n        },\n        allowedTypes: ['application/vnd.openxmlformats-officedocument.spreadsheetml.sheet', 'application/vnd.ms-excel', 'text/csv', '.csv']\n      },\n      cartNameGeneration: {\n        source: CartNameSource.FILE_NAME\n      }\n    },\n    export: {\n      additionalColumns: [{\n        name: {\n          key: 'name'\n        },\n        value: 'product.name'\n      }, {\n        name: {\n          key: 'price'\n        },\n        value: 'totalPrice.formattedValue'\n      }],\n      messageEnabled: true,\n      downloadDelay: 1000,\n      maxEntries: 1000,\n      fileOptions: {\n        fileName: 'cart',\n        extension: 'csv',\n        type: 'text/csv'\n      }\n    }\n  }\n};\nclass ImportExportCoreModule {\n  static forRoot() {\n    return {\n      ngModule: ImportExportCoreModule,\n      providers: [provideDefaultConfig(defaultImportExportConfig)]\n    };\n  }\n}\nImportExportCoreModule.ɵfac = function ImportExportCoreModule_Factory(t) {\n  return new (t || ImportExportCoreModule)();\n};\nImportExportCoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: ImportExportCoreModule\n});\nImportExportCoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImportExportCoreModule, [{\n    type: NgModule,\n    args: [{}]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CartNameSource, ImportExportConfig, ImportExportCoreModule, defaultImportExportConfig };\n//# sourceMappingURL=spartacus-cart-import-export-core.js.map","map":{"version":3,"names":["i0","Injectable","NgModule","Config","provideDefaultConfig","OrderEntriesSource","ImportExportConfig","ɵfac","ImportExportConfig_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","r","ɵɵinject","providedIn","ngDevMode","ɵsetClassMetadata","type","args","useExisting","CartNameSource","defaultImportExportConfig","cartImportExport","file","separator","import","fileValidity","maxSize","maxEntries","NEW_SAVED_CART","SAVED_CART","ACTIVE_CART","QUICK_ORDER","allowedTypes","cartNameGeneration","source","FILE_NAME","export","additionalColumns","name","key","value","messageEnabled","downloadDelay","fileOptions","fileName","extension","ImportExportCoreModule","forRoot","ngModule","providers","ImportExportCoreModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector"],"sources":["D:/demo_spartacus/node_modules/@spartacus/cart/fesm2015/spartacus-cart-import-export-core.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport { Config, provideDefaultConfig } from '@spartacus/core';\nimport { OrderEntriesSource } from '@spartacus/storefront';\n\nclass ImportExportConfig {\n}\nImportExportConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ImportExportConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nImportExportConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ImportExportConfig, providedIn: 'root', useExisting: Config });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ImportExportConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useExisting: Config,\n                }]\n        }] });\n\n/**\n * Indicates from which source the new saved cart name\n * should be taken.\n */\nvar CartNameSource;\n(function (CartNameSource) {\n    CartNameSource[\"FILE_NAME\"] = \"fileName\";\n    CartNameSource[\"DATE_TIME\"] = \"dateTime\";\n})(CartNameSource || (CartNameSource = {}));\n\nconst defaultImportExportConfig = {\n    cartImportExport: {\n        file: {\n            separator: ',',\n        },\n        import: {\n            fileValidity: {\n                maxSize: 1,\n                maxEntries: {\n                    [OrderEntriesSource.NEW_SAVED_CART]: 100,\n                    [OrderEntriesSource.SAVED_CART]: 100,\n                    [OrderEntriesSource.ACTIVE_CART]: 10,\n                    [OrderEntriesSource.QUICK_ORDER]: 10,\n                },\n                allowedTypes: [\n                    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n                    'application/vnd.ms-excel',\n                    'text/csv',\n                    '.csv',\n                ],\n            },\n            cartNameGeneration: {\n                source: CartNameSource.FILE_NAME,\n            },\n        },\n        export: {\n            additionalColumns: [\n                {\n                    name: {\n                        key: 'name',\n                    },\n                    value: 'product.name',\n                },\n                {\n                    name: {\n                        key: 'price',\n                    },\n                    value: 'totalPrice.formattedValue',\n                },\n            ],\n            messageEnabled: true,\n            downloadDelay: 1000,\n            maxEntries: 1000,\n            fileOptions: {\n                fileName: 'cart',\n                extension: 'csv',\n                type: 'text/csv',\n            },\n        },\n    },\n};\n\nclass ImportExportCoreModule {\n    static forRoot() {\n        return {\n            ngModule: ImportExportCoreModule,\n            providers: [provideDefaultConfig(defaultImportExportConfig)],\n        };\n    }\n}\nImportExportCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ImportExportCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nImportExportCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ImportExportCoreModule });\nImportExportCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ImportExportCoreModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ImportExportCoreModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CartNameSource, ImportExportConfig, ImportExportCoreModule, defaultImportExportConfig };\n//# sourceMappingURL=spartacus-cart-import-export-core.js.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}