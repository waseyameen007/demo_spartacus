{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, PLATFORM_ID, Inject, NgModule } from '@angular/core';\nimport * as i2 from '@spartacus/core';\nimport { Config, StateUtils, GlobalMessageType, SiteContextActions, normalizeHttpError, provideDefaultConfig } from '@spartacus/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i1 from '@ngrx/store';\nimport { createFeatureSelector, createSelector, select, StoreModule } from '@ngrx/store';\nimport { Subscription, of } from 'rxjs';\nimport { map, filter, withLatestFrom, mergeMap, catchError, switchMap } from 'rxjs/operators';\nimport * as i1$1 from '@ngrx/effects';\nimport { ofType, Effect, EffectsModule } from '@ngrx/effects';\nimport { __decorate } from 'tslib';\nclass StoreFinderConfig {}\nStoreFinderConfig.ɵfac = function StoreFinderConfig_Factory(t) {\n  return new (t || StoreFinderConfig)();\n};\nStoreFinderConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StoreFinderConfig,\n  factory: function StoreFinderConfig_Factory(t) {\n    let r = null;\n    if (t) {\n      r = new (t || StoreFinderConfig)();\n    } else {\n      r = i0.ɵɵinject(Config);\n    }\n    return r;\n  },\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreFinderConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root',\n      useExisting: Config\n    }]\n  }], null, null);\n})();\nclass StoreFinderAdapter {}\nclass StoreFinderConnector {\n  constructor(adapter) {\n    this.adapter = adapter;\n  }\n  search(query, searchConfig, longitudeLatitude, radius) {\n    return this.adapter.search(query, searchConfig, longitudeLatitude, radius);\n  }\n  getCounts() {\n    return this.adapter.loadCounts();\n  }\n  get(storeId) {\n    return this.adapter.load(storeId);\n  }\n}\nStoreFinderConnector.ɵfac = function StoreFinderConnector_Factory(t) {\n  return new (t || StoreFinderConnector)(i0.ɵɵinject(StoreFinderAdapter));\n};\nStoreFinderConnector.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StoreFinderConnector,\n  factory: StoreFinderConnector.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreFinderConnector, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: StoreFinderAdapter\n    }];\n  }, null);\n})();\nconst STORE_FINDER_SEARCH_PAGE_NORMALIZER = new InjectionToken('StoreFinderSearchPageNormalizer');\nconst STORE_COUNT_NORMALIZER = new InjectionToken('StoreCountNormalizer');\nconst STORE_FINDER_FEATURE = 'stores';\nconst STORE_FINDER_DATA = '[StoreFinder] Store Finder Data';\nconst FIND_STORES_ON_HOLD = '[StoreFinder] On Hold';\nconst FIND_STORES = '[StoreFinder] Find Stores';\nconst FIND_STORES_FAIL = '[StoreFinder] Find Stores Fail';\nconst FIND_STORES_SUCCESS = '[StoreFinder] Find Stores Success';\nconst FIND_STORE_BY_ID = '[StoreFinder] Find a Store by Id';\nconst FIND_STORE_BY_ID_FAIL = '[StoreFinder] Find a Store by Id Fail';\nconst FIND_STORE_BY_ID_SUCCESS = '[StoreFinder] Find a Store by Id Success';\nclass FindStoresOnHold extends StateUtils.LoaderLoadAction {\n  constructor() {\n    super(STORE_FINDER_DATA);\n    this.type = FIND_STORES_ON_HOLD;\n  }\n}\nclass FindStores extends StateUtils.LoaderLoadAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA);\n    this.payload = payload;\n    this.type = FIND_STORES;\n  }\n}\nclass FindStoresFail extends StateUtils.LoaderFailAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA, payload);\n    this.payload = payload;\n    this.type = FIND_STORES_FAIL;\n  }\n}\nclass FindStoresSuccess extends StateUtils.LoaderSuccessAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA);\n    this.payload = payload;\n    this.type = FIND_STORES_SUCCESS;\n  }\n}\nclass FindStoreById extends StateUtils.LoaderLoadAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA);\n    this.payload = payload;\n    this.type = FIND_STORE_BY_ID;\n  }\n}\nclass FindStoreByIdFail extends StateUtils.LoaderFailAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA, payload);\n    this.payload = payload;\n    this.type = FIND_STORE_BY_ID_FAIL;\n  }\n}\nclass FindStoreByIdSuccess extends StateUtils.LoaderSuccessAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA);\n    this.payload = payload;\n    this.type = FIND_STORE_BY_ID_SUCCESS;\n  }\n}\nconst VIEW_ALL_STORES = '[StoreFinder] View All Stores';\nconst VIEW_ALL_STORES_FAIL = '[StoreFinder] View All Stores Fail';\nconst VIEW_ALL_STORES_SUCCESS = '[StoreFinder] View All Stores Success';\nconst CLEAR_STORE_FINDER_DATA = '[StoreFinder] Clear Data';\nclass ViewAllStores extends StateUtils.LoaderLoadAction {\n  constructor() {\n    super(STORE_FINDER_DATA);\n    this.type = VIEW_ALL_STORES;\n  }\n}\nclass ViewAllStoresFail extends StateUtils.LoaderFailAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA, payload);\n    this.payload = payload;\n    this.type = VIEW_ALL_STORES_FAIL;\n  }\n}\nclass ViewAllStoresSuccess extends StateUtils.LoaderSuccessAction {\n  constructor(payload) {\n    super(STORE_FINDER_DATA);\n    this.payload = payload;\n    this.type = VIEW_ALL_STORES_SUCCESS;\n  }\n}\nclass ClearStoreFinderData {\n  constructor() {\n    this.type = CLEAR_STORE_FINDER_DATA;\n  }\n}\nvar storeFinderGroup_actions = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  FIND_STORES_ON_HOLD: FIND_STORES_ON_HOLD,\n  FIND_STORES: FIND_STORES,\n  FIND_STORES_FAIL: FIND_STORES_FAIL,\n  FIND_STORES_SUCCESS: FIND_STORES_SUCCESS,\n  FIND_STORE_BY_ID: FIND_STORE_BY_ID,\n  FIND_STORE_BY_ID_FAIL: FIND_STORE_BY_ID_FAIL,\n  FIND_STORE_BY_ID_SUCCESS: FIND_STORE_BY_ID_SUCCESS,\n  FindStoresOnHold: FindStoresOnHold,\n  FindStores: FindStores,\n  FindStoresFail: FindStoresFail,\n  FindStoresSuccess: FindStoresSuccess,\n  FindStoreById: FindStoreById,\n  FindStoreByIdFail: FindStoreByIdFail,\n  FindStoreByIdSuccess: FindStoreByIdSuccess,\n  VIEW_ALL_STORES: VIEW_ALL_STORES,\n  VIEW_ALL_STORES_FAIL: VIEW_ALL_STORES_FAIL,\n  VIEW_ALL_STORES_SUCCESS: VIEW_ALL_STORES_SUCCESS,\n  CLEAR_STORE_FINDER_DATA: CLEAR_STORE_FINDER_DATA,\n  ViewAllStores: ViewAllStores,\n  ViewAllStoresFail: ViewAllStoresFail,\n  ViewAllStoresSuccess: ViewAllStoresSuccess,\n  ClearStoreFinderData: ClearStoreFinderData\n});\nconst getStoreFinderState = createFeatureSelector(STORE_FINDER_FEATURE);\nconst getFindStoresState = createSelector(getStoreFinderState, storesState => storesState.findStores);\nconst getFindStoresEntities = createSelector(getFindStoresState, state => StateUtils.loaderValueSelector(state));\nconst getStoresLoading = createSelector(getFindStoresState, state => StateUtils.loaderLoadingSelector(state));\nconst getStoresSuccess = createSelector(getFindStoresState, state => StateUtils.loaderSuccessSelector(state));\nconst getViewAllStoresState = createSelector(getStoreFinderState, storesState => storesState.viewAllStores);\nconst getViewAllStoresEntities = createSelector(getViewAllStoresState, state => StateUtils.loaderValueSelector(state));\nconst getViewAllStoresLoading = createSelector(getViewAllStoresState, state => StateUtils.loaderLoadingSelector(state));\nvar storeFinderGroup_selectors = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  getFindStoresState: getFindStoresState,\n  getFindStoresEntities: getFindStoresEntities,\n  getStoresLoading: getStoresLoading,\n  getStoresSuccess: getStoresSuccess,\n  getViewAllStoresState: getViewAllStoresState,\n  getViewAllStoresEntities: getViewAllStoresEntities,\n  getViewAllStoresLoading: getViewAllStoresLoading\n});\nclass StoreFinderService {\n  constructor(store, winRef, globalMessageService, routingService, platformId) {\n    this.store = store;\n    this.winRef = winRef;\n    this.globalMessageService = globalMessageService;\n    this.routingService = routingService;\n    this.platformId = platformId;\n    this.geolocationWatchId = null;\n    this.subscription = new Subscription();\n    this.reloadStoreEntitiesOnContextChange();\n  }\n  /**\n   * Returns boolean observable for store's loading state\n   */\n  getStoresLoading() {\n    return this.store.pipe(select(getStoresLoading));\n  }\n  /**\n   * Returns boolean observable for store's success state\n   */\n  getStoresLoaded() {\n    return this.store.pipe(select(getStoresSuccess));\n  }\n  /**\n   * Returns observable for store's entities\n   */\n  getFindStoresEntities() {\n    return this.store.pipe(select(getFindStoresEntities), map(data => data.findStoresEntities));\n  }\n  /**\n   * Returns observable for a single store by Id\n   */\n  getFindStoreEntityById() {\n    return this.store.pipe(select(getFindStoresEntities), map(data => data.findStoreEntityById));\n  }\n  /**\n   * Returns boolean observable for view all store's loading state\n   */\n  getViewAllStoresLoading() {\n    return this.store.pipe(select(getViewAllStoresLoading));\n  }\n  /**\n   * Returns observable for view all store's entities\n   */\n  getViewAllStoresEntities() {\n    return this.store.pipe(select(getViewAllStoresEntities), map(data => data.viewAllStoresEntities));\n  }\n  /**\n   * Store finding action functionality\n   * @param queryText text query\n   * @param searchConfig search configuration\n   * @param longitudeLatitude longitude and latitude coordinates\n   * @param countryIsoCode country ISO code\n   * @param useMyLocation current location coordinates\n   * @param radius radius of the scope from the center point\n   */\n  findStoresAction(queryText, searchConfig, longitudeLatitude, countryIsoCode, useMyLocation, radius) {\n    if (useMyLocation && this.winRef.nativeWindow) {\n      this.clearWatchGeolocation(new FindStoresOnHold());\n      this.geolocationWatchId = this.winRef.nativeWindow.navigator.geolocation.watchPosition(pos => {\n        const position = {\n          longitude: pos.coords.longitude,\n          latitude: pos.coords.latitude\n        };\n        this.clearWatchGeolocation(new FindStores({\n          queryText: queryText,\n          searchConfig: searchConfig,\n          longitudeLatitude: position,\n          countryIsoCode: countryIsoCode,\n          radius: radius\n        }));\n      }, () => {\n        this.globalMessageService.add({\n          key: 'storeFinder.geolocationNotEnabled'\n        }, GlobalMessageType.MSG_TYPE_ERROR);\n        this.routingService.go(['/store-finder']);\n      });\n    } else {\n      this.clearWatchGeolocation(new FindStores({\n        queryText: queryText,\n        searchConfig: searchConfig,\n        longitudeLatitude: longitudeLatitude,\n        countryIsoCode: countryIsoCode,\n        radius: radius\n      }));\n    }\n  }\n  /**\n   * View all stores\n   */\n  viewAllStores() {\n    this.clearWatchGeolocation(new ViewAllStores());\n  }\n  /**\n   * View all stores by id\n   * @param storeId store id\n   */\n  viewStoreById(storeId) {\n    this.clearWatchGeolocation(new FindStoreById({\n      storeId\n    }));\n  }\n  clearWatchGeolocation(callbackAction) {\n    var _a;\n    if (this.geolocationWatchId !== null) {\n      (_a = this.winRef.nativeWindow) === null || _a === void 0 ? void 0 : _a.navigator.geolocation.clearWatch(this.geolocationWatchId);\n      this.geolocationWatchId = null;\n    }\n    this.store.dispatch(callbackAction);\n  }\n  isEmpty(store) {\n    return !store || typeof store === 'object' && Object.keys(store).length === 0;\n  }\n  /**\n   * Reload store data when store entities are empty because of the context change\n   */\n  reloadStoreEntitiesOnContextChange() {\n    if (isPlatformBrowser(this.platformId) || !this.platformId) {\n      this.subscription = this.getFindStoresEntities().pipe(filter(data => this.isEmpty(data)), withLatestFrom(this.getStoresLoading(), this.getStoresLoaded(), this.routingService.getParams())).subscribe(([, loading, loaded, routeParams]) => {\n        if (!loading && !loaded) {\n          if (routeParams.country && !routeParams.store) {\n            this.callFindStoresAction(routeParams);\n          }\n          if (routeParams.store) {\n            this.viewStoreById(routeParams.store);\n          }\n        }\n      });\n    }\n  }\n  callFindStoresAction(routeParams) {\n    this.findStoresAction('', {\n      pageSize: -1\n    }, undefined, routeParams.country);\n  }\n  ngOnDestroy() {\n    var _a;\n    (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n  }\n  /**\n   * Returns store latitude\n   * @param location store location\n   */\n  getStoreLatitude(location) {\n    var _a;\n    return (_a = location === null || location === void 0 ? void 0 : location.geoPoint) === null || _a === void 0 ? void 0 : _a.latitude;\n  }\n  /**\n   * Returns store longitude\n   * @param location store location\n   */\n  getStoreLongitude(location) {\n    var _a;\n    return (_a = location === null || location === void 0 ? void 0 : location.geoPoint) === null || _a === void 0 ? void 0 : _a.longitude;\n  }\n}\nStoreFinderService.ɵfac = function StoreFinderService_Factory(t) {\n  return new (t || StoreFinderService)(i0.ɵɵinject(i1.Store), i0.ɵɵinject(i2.WindowRef), i0.ɵɵinject(i2.GlobalMessageService), i0.ɵɵinject(i2.RoutingService), i0.ɵɵinject(PLATFORM_ID));\n};\nStoreFinderService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: StoreFinderService,\n  factory: StoreFinderService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreFinderService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.Store\n    }, {\n      type: i2.WindowRef\n    }, {\n      type: i2.GlobalMessageService\n    }, {\n      type: i2.RoutingService\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, null);\n})();\n\n/// <reference types=\"@types/googlemaps\" />\nclass GoogleMapRendererService {\n  constructor(config, storeFinderService, scriptLoader) {\n    this.config = config;\n    this.storeFinderService = storeFinderService;\n    this.scriptLoader = scriptLoader;\n    this.googleMap = null;\n  }\n  /**\n   * Renders google map on the given element and draws markers on it.\n   * If map already exists it will use an existing map otherwise it will create one\n   * @param mapElement HTML element inside of which the map will be displayed\n   * @param locations array containign geo data to be displayed on the map\n   * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n   */\n  renderMap(mapElement, locations, selectMarkerHandler) {\n    if (Object.entries(locations[Object.keys(locations)[0]]).length > 0) if (this.googleMap === null) {\n      this.scriptLoader.embedScript({\n        src: this.config.googleMaps.apiUrl,\n        params: {\n          key: this.config.googleMaps.apiKey\n        },\n        attributes: {\n          type: 'text/javascript'\n        },\n        callback: () => {\n          this.drawMap(mapElement, locations, selectMarkerHandler);\n        }\n      });\n    } else {\n      this.drawMap(mapElement, locations, selectMarkerHandler);\n    }\n  }\n  /**\n   * Centers the map to the given point\n   * @param latitute latitude of the new center\n   * @param longitude longitude of the new center\n   */\n  centerMap(latitute, longitude) {\n    this.googleMap.panTo({\n      lat: latitute,\n      lng: longitude\n    });\n    this.googleMap.setZoom(this.config.googleMaps.selectedMarkerScale);\n  }\n  /**\n   * Defines and returns {@link google.maps.LatLng} representing a point where the map will be centered\n   * @param locations list of locations\n   */\n  defineMapCenter(locations) {\n    return new google.maps.LatLng(this.storeFinderService.getStoreLatitude(locations[0]), this.storeFinderService.getStoreLongitude(locations[0]));\n  }\n  /**\n   * Creates google map inside if the given HTML element centered to the given point\n   * @param mapElement {@link HTMLElement} inside of which the map will be created\n   * @param mapCenter {@link google.maps.LatLng} the point where the map will be centered\n   */\n  initMap(mapElement, mapCenter) {\n    const gestureOption = 'greedy';\n    const mapProp = {\n      center: mapCenter,\n      zoom: this.config.googleMaps.scale,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      gestureHandling: gestureOption\n    };\n    this.googleMap = new google.maps.Map(mapElement, mapProp);\n  }\n  /**\n   * Erases the current map's markers and create a new one based on the given locations\n   * @param locations array of locations to be displayed on the map\n   * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n   */\n  createMarkers(locations, selectMarkerHandler) {\n    this.markers = [];\n    locations.forEach((element, index) => {\n      const marker = new google.maps.Marker({\n        position: new google.maps.LatLng(this.storeFinderService.getStoreLatitude(element), this.storeFinderService.getStoreLongitude(element)),\n        label: index + 1 + ''\n      });\n      this.markers.push(marker);\n      marker.setMap(this.googleMap);\n      marker.addListener('mouseover', function () {\n        marker.setAnimation(google.maps.Animation.BOUNCE);\n      });\n      marker.addListener('mouseout', function () {\n        marker.setAnimation(null);\n      });\n      if (selectMarkerHandler) {\n        marker.addListener('click', function () {\n          selectMarkerHandler(index);\n        });\n      }\n    });\n  }\n  /**\n   * Initialize and draw the map\n   * @param mapElement {@link HTMLElement} inside of which the map will be drawn\n   * @param locations array of locations to be displayed on the map\n   * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n   */\n  drawMap(mapElement, locations, selectMarkerHandler) {\n    this.initMap(mapElement, this.defineMapCenter(locations));\n    this.createMarkers(locations, selectMarkerHandler);\n  }\n}\nGoogleMapRendererService.ɵfac = function GoogleMapRendererService_Factory(t) {\n  return new (t || GoogleMapRendererService)(i0.ɵɵinject(StoreFinderConfig), i0.ɵɵinject(StoreFinderService), i0.ɵɵinject(i2.ScriptLoader));\n};\nGoogleMapRendererService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GoogleMapRendererService,\n  factory: GoogleMapRendererService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GoogleMapRendererService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: StoreFinderConfig\n    }, {\n      type: StoreFinderService\n    }, {\n      type: i2.ScriptLoader\n    }];\n  }, null);\n})();\nconst defaultStoreFinderConfig = {\n  googleMaps: {\n    apiUrl: 'https://maps.googleapis.com/maps/api/js',\n    apiKey: '',\n    scale: 5,\n    selectedMarkerScale: 17,\n    radius: 50000\n  }\n};\nconst initialState$1 = {\n  findStoresEntities: {},\n  findStoreEntityById: {}\n};\nfunction findStoresReducer(state = initialState$1, action) {\n  switch (action.type) {\n    case FIND_STORES_SUCCESS:\n      {\n        const findStoresEntities = action.payload;\n        return Object.assign(Object.assign({}, state), {\n          findStoresEntities\n        });\n      }\n    case FIND_STORE_BY_ID_SUCCESS:\n      {\n        const findStoreEntityById = action.payload;\n        return Object.assign(Object.assign({}, state), {\n          findStoreEntityById\n        });\n      }\n  }\n  return state;\n}\nconst initialState = {\n  viewAllStoresEntities: {}\n};\nfunction viewAllStoresReducer(state = initialState, action) {\n  switch (action.type) {\n    case VIEW_ALL_STORES_SUCCESS:\n      {\n        const viewAllStoresEntities = action.payload;\n        return Object.assign(Object.assign({}, state), {\n          viewAllStoresEntities\n        });\n      }\n  }\n  return state;\n}\nfunction getReducers() {\n  return {\n    findStores: StateUtils.loaderReducer(STORE_FINDER_DATA, findStoresReducer),\n    viewAllStores: StateUtils.loaderReducer(STORE_FINDER_DATA, viewAllStoresReducer)\n  };\n}\nconst reducerToken = new InjectionToken('StoreFinderReducers');\nconst reducerProvider = {\n  provide: reducerToken,\n  useFactory: getReducers\n};\nfunction clearStoreFinderState(reducer) {\n  return function (state, action) {\n    if (action.type === SiteContextActions.LANGUAGE_CHANGE) {\n      state = undefined;\n    }\n    if (action.type === CLEAR_STORE_FINDER_DATA) {\n      state = undefined;\n    }\n    return reducer(state, action);\n  };\n}\nconst metaReducers = [clearStoreFinderState];\nclass FindStoresEffect {\n  constructor(actions$, storeFinderConnector) {\n    this.actions$ = actions$;\n    this.storeFinderConnector = storeFinderConnector;\n    this.findStores$ = this.actions$.pipe(ofType(FIND_STORES), map(action => action.payload), mergeMap(payload => this.storeFinderConnector.search(payload.queryText, payload.searchConfig, payload.longitudeLatitude, payload.radius).pipe(map(data => {\n      if (payload.countryIsoCode) {\n        data.stores = data.stores.filter(store => store.address.country.isocode === payload.countryIsoCode);\n        data.stores.sort((a, b) => a.name < b.name ? -1 : a.name > b.name ? 1 : 0);\n      }\n      return new FindStoresSuccess(data);\n    }), catchError(error => of(new FindStoresFail(normalizeHttpError(error)))))));\n    this.findStoreById$ = this.actions$.pipe(ofType(FIND_STORE_BY_ID), map(action => action.payload), switchMap(payload => this.storeFinderConnector.get(payload.storeId).pipe(map(data => new FindStoreByIdSuccess(data)), catchError(error => of(new FindStoreByIdFail(normalizeHttpError(error)))))));\n  }\n}\nFindStoresEffect.ɵfac = function FindStoresEffect_Factory(t) {\n  return new (t || FindStoresEffect)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(StoreFinderConnector));\n};\nFindStoresEffect.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: FindStoresEffect,\n  factory: FindStoresEffect.ɵfac\n});\n__decorate([Effect()], FindStoresEffect.prototype, \"findStores$\", void 0);\n__decorate([Effect()], FindStoresEffect.prototype, \"findStoreById$\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FindStoresEffect, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: StoreFinderConnector\n    }];\n  }, {\n    findStores$: [],\n    findStoreById$: []\n  });\n})();\nclass ViewAllStoresEffect {\n  constructor(actions$, storeFinderConnector) {\n    this.actions$ = actions$;\n    this.storeFinderConnector = storeFinderConnector;\n    this.viewAllStores$ = this.actions$.pipe(ofType(VIEW_ALL_STORES, CLEAR_STORE_FINDER_DATA), switchMap(() => {\n      return this.storeFinderConnector.getCounts().pipe(map(data => {\n        data.sort((a, b) => a.name < b.name ? -1 : a.name > b.name ? 1 : 0);\n        return new ViewAllStoresSuccess(data);\n      }), catchError(error => of(new ViewAllStoresFail(normalizeHttpError(error)))));\n    }));\n    this.clearStoreFinderData$ = this.actions$.pipe(ofType(SiteContextActions.LANGUAGE_CHANGE, SiteContextActions.CURRENCY_CHANGE), map(() => {\n      return new ClearStoreFinderData();\n    }));\n  }\n}\nViewAllStoresEffect.ɵfac = function ViewAllStoresEffect_Factory(t) {\n  return new (t || ViewAllStoresEffect)(i0.ɵɵinject(i1$1.Actions), i0.ɵɵinject(StoreFinderConnector));\n};\nViewAllStoresEffect.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: ViewAllStoresEffect,\n  factory: ViewAllStoresEffect.ɵfac\n});\n__decorate([Effect()], ViewAllStoresEffect.prototype, \"viewAllStores$\", void 0);\n__decorate([Effect()], ViewAllStoresEffect.prototype, \"clearStoreFinderData$\", void 0);\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ViewAllStoresEffect, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1$1.Actions\n    }, {\n      type: StoreFinderConnector\n    }];\n  }, {\n    viewAllStores$: [],\n    clearStoreFinderData$: []\n  });\n})();\nconst effects = [FindStoresEffect, ViewAllStoresEffect];\nclass StoreFinderStoreModule {}\nStoreFinderStoreModule.ɵfac = function StoreFinderStoreModule_Factory(t) {\n  return new (t || StoreFinderStoreModule)();\n};\nStoreFinderStoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StoreFinderStoreModule\n});\nStoreFinderStoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [reducerProvider],\n  imports: [[CommonModule, StoreModule.forFeature(STORE_FINDER_FEATURE, reducerToken, {\n    metaReducers\n  }), EffectsModule.forFeature(effects)]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreFinderStoreModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, StoreModule.forFeature(STORE_FINDER_FEATURE, reducerToken, {\n        metaReducers\n      }), EffectsModule.forFeature(effects)],\n      providers: [reducerProvider]\n    }]\n  }], null, null);\n})();\nclass StoreFinderCoreModule {}\nStoreFinderCoreModule.ɵfac = function StoreFinderCoreModule_Factory(t) {\n  return new (t || StoreFinderCoreModule)();\n};\nStoreFinderCoreModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: StoreFinderCoreModule\n});\nStoreFinderCoreModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [provideDefaultConfig(defaultStoreFinderConfig), StoreFinderConnector],\n  imports: [[StoreFinderStoreModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(StoreFinderCoreModule, [{\n    type: NgModule,\n    args: [{\n      imports: [StoreFinderStoreModule],\n      providers: [provideDefaultConfig(defaultStoreFinderConfig), StoreFinderConnector]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GoogleMapRendererService, STORE_COUNT_NORMALIZER, STORE_FINDER_DATA, STORE_FINDER_FEATURE, STORE_FINDER_SEARCH_PAGE_NORMALIZER, storeFinderGroup_actions as StoreFinderActions, StoreFinderAdapter, StoreFinderConfig, StoreFinderConnector, StoreFinderCoreModule, storeFinderGroup_selectors as StoreFinderSelectors, StoreFinderService };\n//# sourceMappingURL=spartacus-storefinder-core.js.map","map":{"version":3,"names":["i0","Injectable","InjectionToken","PLATFORM_ID","Inject","NgModule","i2","Config","StateUtils","GlobalMessageType","SiteContextActions","normalizeHttpError","provideDefaultConfig","isPlatformBrowser","CommonModule","i1","createFeatureSelector","createSelector","select","StoreModule","Subscription","of","map","filter","withLatestFrom","mergeMap","catchError","switchMap","i1$1","ofType","Effect","EffectsModule","__decorate","StoreFinderConfig","ɵfac","StoreFinderConfig_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","r","ɵɵinject","providedIn","ngDevMode","ɵsetClassMetadata","type","args","useExisting","StoreFinderAdapter","StoreFinderConnector","constructor","adapter","search","query","searchConfig","longitudeLatitude","radius","getCounts","loadCounts","get","storeId","load","StoreFinderConnector_Factory","STORE_FINDER_SEARCH_PAGE_NORMALIZER","STORE_COUNT_NORMALIZER","STORE_FINDER_FEATURE","STORE_FINDER_DATA","FIND_STORES_ON_HOLD","FIND_STORES","FIND_STORES_FAIL","FIND_STORES_SUCCESS","FIND_STORE_BY_ID","FIND_STORE_BY_ID_FAIL","FIND_STORE_BY_ID_SUCCESS","FindStoresOnHold","LoaderLoadAction","FindStores","payload","FindStoresFail","LoaderFailAction","FindStoresSuccess","LoaderSuccessAction","FindStoreById","FindStoreByIdFail","FindStoreByIdSuccess","VIEW_ALL_STORES","VIEW_ALL_STORES_FAIL","VIEW_ALL_STORES_SUCCESS","CLEAR_STORE_FINDER_DATA","ViewAllStores","ViewAllStoresFail","ViewAllStoresSuccess","ClearStoreFinderData","storeFinderGroup_actions","Object","freeze","__proto__","getStoreFinderState","getFindStoresState","storesState","findStores","getFindStoresEntities","state","loaderValueSelector","getStoresLoading","loaderLoadingSelector","getStoresSuccess","loaderSuccessSelector","getViewAllStoresState","viewAllStores","getViewAllStoresEntities","getViewAllStoresLoading","storeFinderGroup_selectors","StoreFinderService","store","winRef","globalMessageService","routingService","platformId","geolocationWatchId","subscription","reloadStoreEntitiesOnContextChange","pipe","getStoresLoaded","data","findStoresEntities","getFindStoreEntityById","findStoreEntityById","viewAllStoresEntities","findStoresAction","queryText","countryIsoCode","useMyLocation","nativeWindow","clearWatchGeolocation","navigator","geolocation","watchPosition","pos","position","longitude","coords","latitude","add","key","MSG_TYPE_ERROR","go","viewStoreById","callbackAction","_a","clearWatch","dispatch","isEmpty","keys","length","getParams","subscribe","loading","loaded","routeParams","country","callFindStoresAction","pageSize","undefined","ngOnDestroy","unsubscribe","getStoreLatitude","location","geoPoint","getStoreLongitude","StoreFinderService_Factory","Store","WindowRef","GlobalMessageService","RoutingService","decorators","GoogleMapRendererService","config","storeFinderService","scriptLoader","googleMap","renderMap","mapElement","locations","selectMarkerHandler","entries","embedScript","src","googleMaps","apiUrl","params","apiKey","attributes","callback","drawMap","centerMap","latitute","panTo","lat","lng","setZoom","selectedMarkerScale","defineMapCenter","google","maps","LatLng","initMap","mapCenter","gestureOption","mapProp","center","zoom","scale","mapTypeId","MapTypeId","ROADMAP","gestureHandling","Map","createMarkers","markers","forEach","element","index","marker","Marker","label","push","setMap","addListener","setAnimation","Animation","BOUNCE","GoogleMapRendererService_Factory","ScriptLoader","defaultStoreFinderConfig","initialState$1","findStoresReducer","action","assign","initialState","viewAllStoresReducer","getReducers","loaderReducer","reducerToken","reducerProvider","provide","useFactory","clearStoreFinderState","reducer","LANGUAGE_CHANGE","metaReducers","FindStoresEffect","actions$","storeFinderConnector","findStores$","stores","address","isocode","sort","a","b","name","error","findStoreById$","FindStoresEffect_Factory","Actions","prototype","ViewAllStoresEffect","viewAllStores$","clearStoreFinderData$","CURRENCY_CHANGE","ViewAllStoresEffect_Factory","effects","StoreFinderStoreModule","StoreFinderStoreModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","imports","forFeature","StoreFinderCoreModule","StoreFinderCoreModule_Factory","StoreFinderActions","StoreFinderSelectors"],"sources":["D:/demo_spartacus/node_modules/@spartacus/storefinder/fesm2015/spartacus-storefinder-core.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, InjectionToken, PLATFORM_ID, Inject, NgModule } from '@angular/core';\nimport * as i2 from '@spartacus/core';\nimport { Config, StateUtils, GlobalMessageType, SiteContextActions, normalizeHttpError, provideDefaultConfig } from '@spartacus/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i1 from '@ngrx/store';\nimport { createFeatureSelector, createSelector, select, StoreModule } from '@ngrx/store';\nimport { Subscription, of } from 'rxjs';\nimport { map, filter, withLatestFrom, mergeMap, catchError, switchMap } from 'rxjs/operators';\nimport * as i1$1 from '@ngrx/effects';\nimport { ofType, Effect, EffectsModule } from '@ngrx/effects';\nimport { __decorate } from 'tslib';\n\nclass StoreFinderConfig {\n}\nStoreFinderConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nStoreFinderConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderConfig, providedIn: 'root', useExisting: Config });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                    useExisting: Config,\n                }]\n        }] });\n\nclass StoreFinderAdapter {\n}\n\nclass StoreFinderConnector {\n    constructor(adapter) {\n        this.adapter = adapter;\n    }\n    search(query, searchConfig, longitudeLatitude, radius) {\n        return this.adapter.search(query, searchConfig, longitudeLatitude, radius);\n    }\n    getCounts() {\n        return this.adapter.loadCounts();\n    }\n    get(storeId) {\n        return this.adapter.load(storeId);\n    }\n}\nStoreFinderConnector.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderConnector, deps: [{ token: StoreFinderAdapter }], target: i0.ɵɵFactoryTarget.Injectable });\nStoreFinderConnector.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderConnector, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderConnector, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: StoreFinderAdapter }]; } });\n\nconst STORE_FINDER_SEARCH_PAGE_NORMALIZER = new InjectionToken('StoreFinderSearchPageNormalizer');\nconst STORE_COUNT_NORMALIZER = new InjectionToken('StoreCountNormalizer');\n\nconst STORE_FINDER_FEATURE = 'stores';\nconst STORE_FINDER_DATA = '[StoreFinder] Store Finder Data';\n\nconst FIND_STORES_ON_HOLD = '[StoreFinder] On Hold';\nconst FIND_STORES = '[StoreFinder] Find Stores';\nconst FIND_STORES_FAIL = '[StoreFinder] Find Stores Fail';\nconst FIND_STORES_SUCCESS = '[StoreFinder] Find Stores Success';\nconst FIND_STORE_BY_ID = '[StoreFinder] Find a Store by Id';\nconst FIND_STORE_BY_ID_FAIL = '[StoreFinder] Find a Store by Id Fail';\nconst FIND_STORE_BY_ID_SUCCESS = '[StoreFinder] Find a Store by Id Success';\nclass FindStoresOnHold extends StateUtils.LoaderLoadAction {\n    constructor() {\n        super(STORE_FINDER_DATA);\n        this.type = FIND_STORES_ON_HOLD;\n    }\n}\nclass FindStores extends StateUtils.LoaderLoadAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA);\n        this.payload = payload;\n        this.type = FIND_STORES;\n    }\n}\nclass FindStoresFail extends StateUtils.LoaderFailAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA, payload);\n        this.payload = payload;\n        this.type = FIND_STORES_FAIL;\n    }\n}\nclass FindStoresSuccess extends StateUtils.LoaderSuccessAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA);\n        this.payload = payload;\n        this.type = FIND_STORES_SUCCESS;\n    }\n}\nclass FindStoreById extends StateUtils.LoaderLoadAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA);\n        this.payload = payload;\n        this.type = FIND_STORE_BY_ID;\n    }\n}\nclass FindStoreByIdFail extends StateUtils.LoaderFailAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA, payload);\n        this.payload = payload;\n        this.type = FIND_STORE_BY_ID_FAIL;\n    }\n}\nclass FindStoreByIdSuccess extends StateUtils.LoaderSuccessAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA);\n        this.payload = payload;\n        this.type = FIND_STORE_BY_ID_SUCCESS;\n    }\n}\n\nconst VIEW_ALL_STORES = '[StoreFinder] View All Stores';\nconst VIEW_ALL_STORES_FAIL = '[StoreFinder] View All Stores Fail';\nconst VIEW_ALL_STORES_SUCCESS = '[StoreFinder] View All Stores Success';\nconst CLEAR_STORE_FINDER_DATA = '[StoreFinder] Clear Data';\nclass ViewAllStores extends StateUtils.LoaderLoadAction {\n    constructor() {\n        super(STORE_FINDER_DATA);\n        this.type = VIEW_ALL_STORES;\n    }\n}\nclass ViewAllStoresFail extends StateUtils.LoaderFailAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA, payload);\n        this.payload = payload;\n        this.type = VIEW_ALL_STORES_FAIL;\n    }\n}\nclass ViewAllStoresSuccess extends StateUtils.LoaderSuccessAction {\n    constructor(payload) {\n        super(STORE_FINDER_DATA);\n        this.payload = payload;\n        this.type = VIEW_ALL_STORES_SUCCESS;\n    }\n}\nclass ClearStoreFinderData {\n    constructor() {\n        this.type = CLEAR_STORE_FINDER_DATA;\n    }\n}\n\nvar storeFinderGroup_actions = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        FIND_STORES_ON_HOLD: FIND_STORES_ON_HOLD,\n        FIND_STORES: FIND_STORES,\n        FIND_STORES_FAIL: FIND_STORES_FAIL,\n        FIND_STORES_SUCCESS: FIND_STORES_SUCCESS,\n        FIND_STORE_BY_ID: FIND_STORE_BY_ID,\n        FIND_STORE_BY_ID_FAIL: FIND_STORE_BY_ID_FAIL,\n        FIND_STORE_BY_ID_SUCCESS: FIND_STORE_BY_ID_SUCCESS,\n        FindStoresOnHold: FindStoresOnHold,\n        FindStores: FindStores,\n        FindStoresFail: FindStoresFail,\n        FindStoresSuccess: FindStoresSuccess,\n        FindStoreById: FindStoreById,\n        FindStoreByIdFail: FindStoreByIdFail,\n        FindStoreByIdSuccess: FindStoreByIdSuccess,\n        VIEW_ALL_STORES: VIEW_ALL_STORES,\n        VIEW_ALL_STORES_FAIL: VIEW_ALL_STORES_FAIL,\n        VIEW_ALL_STORES_SUCCESS: VIEW_ALL_STORES_SUCCESS,\n        CLEAR_STORE_FINDER_DATA: CLEAR_STORE_FINDER_DATA,\n        ViewAllStores: ViewAllStores,\n        ViewAllStoresFail: ViewAllStoresFail,\n        ViewAllStoresSuccess: ViewAllStoresSuccess,\n        ClearStoreFinderData: ClearStoreFinderData\n});\n\nconst getStoreFinderState = createFeatureSelector(STORE_FINDER_FEATURE);\n\nconst getFindStoresState = createSelector(getStoreFinderState, (storesState) => storesState.findStores);\nconst getFindStoresEntities = createSelector(getFindStoresState, (state) => StateUtils.loaderValueSelector(state));\nconst getStoresLoading = createSelector(getFindStoresState, (state) => StateUtils.loaderLoadingSelector(state));\nconst getStoresSuccess = createSelector(getFindStoresState, (state) => StateUtils.loaderSuccessSelector(state));\n\nconst getViewAllStoresState = createSelector(getStoreFinderState, (storesState) => storesState.viewAllStores);\nconst getViewAllStoresEntities = createSelector(getViewAllStoresState, (state) => StateUtils.loaderValueSelector(state));\nconst getViewAllStoresLoading = createSelector(getViewAllStoresState, (state) => StateUtils.loaderLoadingSelector(state));\n\nvar storeFinderGroup_selectors = /*#__PURE__*/Object.freeze({\n        __proto__: null,\n        getFindStoresState: getFindStoresState,\n        getFindStoresEntities: getFindStoresEntities,\n        getStoresLoading: getStoresLoading,\n        getStoresSuccess: getStoresSuccess,\n        getViewAllStoresState: getViewAllStoresState,\n        getViewAllStoresEntities: getViewAllStoresEntities,\n        getViewAllStoresLoading: getViewAllStoresLoading\n});\n\nclass StoreFinderService {\n    constructor(store, winRef, globalMessageService, routingService, platformId) {\n        this.store = store;\n        this.winRef = winRef;\n        this.globalMessageService = globalMessageService;\n        this.routingService = routingService;\n        this.platformId = platformId;\n        this.geolocationWatchId = null;\n        this.subscription = new Subscription();\n        this.reloadStoreEntitiesOnContextChange();\n    }\n    /**\n     * Returns boolean observable for store's loading state\n     */\n    getStoresLoading() {\n        return this.store.pipe(select(getStoresLoading));\n    }\n    /**\n     * Returns boolean observable for store's success state\n     */\n    getStoresLoaded() {\n        return this.store.pipe(select(getStoresSuccess));\n    }\n    /**\n     * Returns observable for store's entities\n     */\n    getFindStoresEntities() {\n        return this.store.pipe(select(getFindStoresEntities), map((data) => data.findStoresEntities));\n    }\n    /**\n     * Returns observable for a single store by Id\n     */\n    getFindStoreEntityById() {\n        return this.store.pipe(select(getFindStoresEntities), map((data) => data.findStoreEntityById));\n    }\n    /**\n     * Returns boolean observable for view all store's loading state\n     */\n    getViewAllStoresLoading() {\n        return this.store.pipe(select(getViewAllStoresLoading));\n    }\n    /**\n     * Returns observable for view all store's entities\n     */\n    getViewAllStoresEntities() {\n        return this.store.pipe(select(getViewAllStoresEntities), map((data) => data.viewAllStoresEntities));\n    }\n    /**\n     * Store finding action functionality\n     * @param queryText text query\n     * @param searchConfig search configuration\n     * @param longitudeLatitude longitude and latitude coordinates\n     * @param countryIsoCode country ISO code\n     * @param useMyLocation current location coordinates\n     * @param radius radius of the scope from the center point\n     */\n    findStoresAction(queryText, searchConfig, longitudeLatitude, countryIsoCode, useMyLocation, radius) {\n        if (useMyLocation && this.winRef.nativeWindow) {\n            this.clearWatchGeolocation(new FindStoresOnHold());\n            this.geolocationWatchId =\n                this.winRef.nativeWindow.navigator.geolocation.watchPosition((pos) => {\n                    const position = {\n                        longitude: pos.coords.longitude,\n                        latitude: pos.coords.latitude,\n                    };\n                    this.clearWatchGeolocation(new FindStores({\n                        queryText: queryText,\n                        searchConfig: searchConfig,\n                        longitudeLatitude: position,\n                        countryIsoCode: countryIsoCode,\n                        radius: radius,\n                    }));\n                }, () => {\n                    this.globalMessageService.add({ key: 'storeFinder.geolocationNotEnabled' }, GlobalMessageType.MSG_TYPE_ERROR);\n                    this.routingService.go(['/store-finder']);\n                });\n        }\n        else {\n            this.clearWatchGeolocation(new FindStores({\n                queryText: queryText,\n                searchConfig: searchConfig,\n                longitudeLatitude: longitudeLatitude,\n                countryIsoCode: countryIsoCode,\n                radius: radius,\n            }));\n        }\n    }\n    /**\n     * View all stores\n     */\n    viewAllStores() {\n        this.clearWatchGeolocation(new ViewAllStores());\n    }\n    /**\n     * View all stores by id\n     * @param storeId store id\n     */\n    viewStoreById(storeId) {\n        this.clearWatchGeolocation(new FindStoreById({ storeId }));\n    }\n    clearWatchGeolocation(callbackAction) {\n        var _a;\n        if (this.geolocationWatchId !== null) {\n            (_a = this.winRef.nativeWindow) === null || _a === void 0 ? void 0 : _a.navigator.geolocation.clearWatch(this.geolocationWatchId);\n            this.geolocationWatchId = null;\n        }\n        this.store.dispatch(callbackAction);\n    }\n    isEmpty(store) {\n        return (!store || (typeof store === 'object' && Object.keys(store).length === 0));\n    }\n    /**\n     * Reload store data when store entities are empty because of the context change\n     */\n    reloadStoreEntitiesOnContextChange() {\n        if (isPlatformBrowser(this.platformId) || !this.platformId) {\n            this.subscription = this.getFindStoresEntities()\n                .pipe(filter((data) => this.isEmpty(data)), withLatestFrom(this.getStoresLoading(), this.getStoresLoaded(), this.routingService.getParams()))\n                .subscribe(([, loading, loaded, routeParams]) => {\n                if (!loading && !loaded) {\n                    if (routeParams.country && !routeParams.store) {\n                        this.callFindStoresAction(routeParams);\n                    }\n                    if (routeParams.store) {\n                        this.viewStoreById(routeParams.store);\n                    }\n                }\n            });\n        }\n    }\n    callFindStoresAction(routeParams) {\n        this.findStoresAction('', {\n            pageSize: -1,\n        }, undefined, routeParams.country);\n    }\n    ngOnDestroy() {\n        var _a;\n        (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n    }\n    /**\n     * Returns store latitude\n     * @param location store location\n     */\n    getStoreLatitude(location) {\n        var _a;\n        return (_a = location === null || location === void 0 ? void 0 : location.geoPoint) === null || _a === void 0 ? void 0 : _a.latitude;\n    }\n    /**\n     * Returns store longitude\n     * @param location store location\n     */\n    getStoreLongitude(location) {\n        var _a;\n        return (_a = location === null || location === void 0 ? void 0 : location.geoPoint) === null || _a === void 0 ? void 0 : _a.longitude;\n    }\n}\nStoreFinderService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderService, deps: [{ token: i1.Store }, { token: i2.WindowRef }, { token: i2.GlobalMessageService }, { token: i2.RoutingService }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Injectable });\nStoreFinderService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.Store }, { type: i2.WindowRef }, { type: i2.GlobalMessageService }, { type: i2.RoutingService }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: [PLATFORM_ID]\n                }] }]; } });\n\n/// <reference types=\"@types/googlemaps\" />\nclass GoogleMapRendererService {\n    constructor(config, storeFinderService, scriptLoader) {\n        this.config = config;\n        this.storeFinderService = storeFinderService;\n        this.scriptLoader = scriptLoader;\n        this.googleMap = null;\n    }\n    /**\n     * Renders google map on the given element and draws markers on it.\n     * If map already exists it will use an existing map otherwise it will create one\n     * @param mapElement HTML element inside of which the map will be displayed\n     * @param locations array containign geo data to be displayed on the map\n     * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n     */\n    renderMap(mapElement, locations, selectMarkerHandler) {\n        if (Object.entries(locations[Object.keys(locations)[0]]).length > 0)\n            if (this.googleMap === null) {\n                this.scriptLoader.embedScript({\n                    src: this.config.googleMaps.apiUrl,\n                    params: { key: this.config.googleMaps.apiKey },\n                    attributes: { type: 'text/javascript' },\n                    callback: () => {\n                        this.drawMap(mapElement, locations, selectMarkerHandler);\n                    },\n                });\n            }\n            else {\n                this.drawMap(mapElement, locations, selectMarkerHandler);\n            }\n    }\n    /**\n     * Centers the map to the given point\n     * @param latitute latitude of the new center\n     * @param longitude longitude of the new center\n     */\n    centerMap(latitute, longitude) {\n        this.googleMap.panTo({ lat: latitute, lng: longitude });\n        this.googleMap.setZoom(this.config.googleMaps.selectedMarkerScale);\n    }\n    /**\n     * Defines and returns {@link google.maps.LatLng} representing a point where the map will be centered\n     * @param locations list of locations\n     */\n    defineMapCenter(locations) {\n        return new google.maps.LatLng(this.storeFinderService.getStoreLatitude(locations[0]), this.storeFinderService.getStoreLongitude(locations[0]));\n    }\n    /**\n     * Creates google map inside if the given HTML element centered to the given point\n     * @param mapElement {@link HTMLElement} inside of which the map will be created\n     * @param mapCenter {@link google.maps.LatLng} the point where the map will be centered\n     */\n    initMap(mapElement, mapCenter) {\n        const gestureOption = 'greedy';\n        const mapProp = {\n            center: mapCenter,\n            zoom: this.config.googleMaps.scale,\n            mapTypeId: google.maps.MapTypeId.ROADMAP,\n            gestureHandling: gestureOption,\n        };\n        this.googleMap = new google.maps.Map(mapElement, mapProp);\n    }\n    /**\n     * Erases the current map's markers and create a new one based on the given locations\n     * @param locations array of locations to be displayed on the map\n     * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n     */\n    createMarkers(locations, selectMarkerHandler) {\n        this.markers = [];\n        locations.forEach((element, index) => {\n            const marker = new google.maps.Marker({\n                position: new google.maps.LatLng(this.storeFinderService.getStoreLatitude(element), this.storeFinderService.getStoreLongitude(element)),\n                label: index + 1 + '',\n            });\n            this.markers.push(marker);\n            marker.setMap(this.googleMap);\n            marker.addListener('mouseover', function () {\n                marker.setAnimation(google.maps.Animation.BOUNCE);\n            });\n            marker.addListener('mouseout', function () {\n                marker.setAnimation(null);\n            });\n            if (selectMarkerHandler) {\n                marker.addListener('click', function () {\n                    selectMarkerHandler(index);\n                });\n            }\n        });\n    }\n    /**\n     * Initialize and draw the map\n     * @param mapElement {@link HTMLElement} inside of which the map will be drawn\n     * @param locations array of locations to be displayed on the map\n     * @param selectMarkerHandler function to handle whenever a marker on a map is clicked\n     */\n    drawMap(mapElement, locations, selectMarkerHandler) {\n        this.initMap(mapElement, this.defineMapCenter(locations));\n        this.createMarkers(locations, selectMarkerHandler);\n    }\n}\nGoogleMapRendererService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: GoogleMapRendererService, deps: [{ token: StoreFinderConfig }, { token: StoreFinderService }, { token: i2.ScriptLoader }], target: i0.ɵɵFactoryTarget.Injectable });\nGoogleMapRendererService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: GoogleMapRendererService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: GoogleMapRendererService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: StoreFinderConfig }, { type: StoreFinderService }, { type: i2.ScriptLoader }]; } });\n\nconst defaultStoreFinderConfig = {\n    googleMaps: {\n        apiUrl: 'https://maps.googleapis.com/maps/api/js',\n        apiKey: '',\n        scale: 5,\n        selectedMarkerScale: 17,\n        radius: 50000,\n    },\n};\n\nconst initialState$1 = {\n    findStoresEntities: {},\n    findStoreEntityById: {},\n};\nfunction findStoresReducer(state = initialState$1, action) {\n    switch (action.type) {\n        case FIND_STORES_SUCCESS: {\n            const findStoresEntities = action.payload;\n            return Object.assign(Object.assign({}, state), { findStoresEntities });\n        }\n        case FIND_STORE_BY_ID_SUCCESS: {\n            const findStoreEntityById = action.payload;\n            return Object.assign(Object.assign({}, state), { findStoreEntityById });\n        }\n    }\n    return state;\n}\n\nconst initialState = {\n    viewAllStoresEntities: {},\n};\nfunction viewAllStoresReducer(state = initialState, action) {\n    switch (action.type) {\n        case VIEW_ALL_STORES_SUCCESS: {\n            const viewAllStoresEntities = action.payload;\n            return Object.assign(Object.assign({}, state), { viewAllStoresEntities });\n        }\n    }\n    return state;\n}\n\nfunction getReducers() {\n    return {\n        findStores: StateUtils.loaderReducer(STORE_FINDER_DATA, findStoresReducer),\n        viewAllStores: StateUtils.loaderReducer(STORE_FINDER_DATA, viewAllStoresReducer),\n    };\n}\nconst reducerToken = new InjectionToken('StoreFinderReducers');\nconst reducerProvider = {\n    provide: reducerToken,\n    useFactory: getReducers,\n};\nfunction clearStoreFinderState(reducer) {\n    return function (state, action) {\n        if (action.type === SiteContextActions.LANGUAGE_CHANGE) {\n            state = undefined;\n        }\n        if (action.type === CLEAR_STORE_FINDER_DATA) {\n            state = undefined;\n        }\n        return reducer(state, action);\n    };\n}\nconst metaReducers = [clearStoreFinderState];\n\nclass FindStoresEffect {\n    constructor(actions$, storeFinderConnector) {\n        this.actions$ = actions$;\n        this.storeFinderConnector = storeFinderConnector;\n        this.findStores$ = this.actions$.pipe(ofType(FIND_STORES), map((action) => action.payload), mergeMap((payload) => this.storeFinderConnector\n            .search(payload.queryText, payload.searchConfig, payload.longitudeLatitude, payload.radius)\n            .pipe(map((data) => {\n            if (payload.countryIsoCode) {\n                data.stores = data.stores.filter((store) => store.address.country.isocode === payload.countryIsoCode);\n                data.stores.sort((a, b) => a.name < b.name ? -1 : a.name > b.name ? 1 : 0);\n            }\n            return new FindStoresSuccess(data);\n        }), catchError((error) => of(new FindStoresFail(normalizeHttpError(error)))))));\n        this.findStoreById$ = this.actions$.pipe(ofType(FIND_STORE_BY_ID), map((action) => action.payload), switchMap((payload) => this.storeFinderConnector.get(payload.storeId).pipe(map((data) => new FindStoreByIdSuccess(data)), catchError((error) => of(new FindStoreByIdFail(normalizeHttpError(error)))))));\n    }\n}\nFindStoresEffect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: FindStoresEffect, deps: [{ token: i1$1.Actions }, { token: StoreFinderConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nFindStoresEffect.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: FindStoresEffect });\n__decorate([\n    Effect()\n], FindStoresEffect.prototype, \"findStores$\", void 0);\n__decorate([\n    Effect()\n], FindStoresEffect.prototype, \"findStoreById$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: FindStoresEffect, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: StoreFinderConnector }]; }, propDecorators: { findStores$: [], findStoreById$: [] } });\n\nclass ViewAllStoresEffect {\n    constructor(actions$, storeFinderConnector) {\n        this.actions$ = actions$;\n        this.storeFinderConnector = storeFinderConnector;\n        this.viewAllStores$ = this.actions$.pipe(ofType(VIEW_ALL_STORES, CLEAR_STORE_FINDER_DATA), switchMap(() => {\n            return this.storeFinderConnector.getCounts().pipe(map((data) => {\n                data.sort((a, b) => (a.name < b.name ? -1 : a.name > b.name ? 1 : 0));\n                return new ViewAllStoresSuccess(data);\n            }), catchError((error) => of(new ViewAllStoresFail(normalizeHttpError(error)))));\n        }));\n        this.clearStoreFinderData$ = this.actions$.pipe(ofType(SiteContextActions.LANGUAGE_CHANGE, SiteContextActions.CURRENCY_CHANGE), map(() => {\n            return new ClearStoreFinderData();\n        }));\n    }\n}\nViewAllStoresEffect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ViewAllStoresEffect, deps: [{ token: i1$1.Actions }, { token: StoreFinderConnector }], target: i0.ɵɵFactoryTarget.Injectable });\nViewAllStoresEffect.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ViewAllStoresEffect });\n__decorate([\n    Effect()\n], ViewAllStoresEffect.prototype, \"viewAllStores$\", void 0);\n__decorate([\n    Effect()\n], ViewAllStoresEffect.prototype, \"clearStoreFinderData$\", void 0);\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: ViewAllStoresEffect, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1$1.Actions }, { type: StoreFinderConnector }]; }, propDecorators: { viewAllStores$: [], clearStoreFinderData$: [] } });\n\nconst effects = [FindStoresEffect, ViewAllStoresEffect];\n\nclass StoreFinderStoreModule {\n}\nStoreFinderStoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderStoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nStoreFinderStoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderStoreModule, imports: [CommonModule, i1.StoreFeatureModule, i1$1.EffectsFeatureModule] });\nStoreFinderStoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderStoreModule, providers: [reducerProvider], imports: [[\n            CommonModule,\n            StoreModule.forFeature(STORE_FINDER_FEATURE, reducerToken, {\n                metaReducers,\n            }),\n            EffectsModule.forFeature(effects),\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderStoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        StoreModule.forFeature(STORE_FINDER_FEATURE, reducerToken, {\n                            metaReducers,\n                        }),\n                        EffectsModule.forFeature(effects),\n                    ],\n                    providers: [reducerProvider],\n                }]\n        }] });\n\nclass StoreFinderCoreModule {\n}\nStoreFinderCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nStoreFinderCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderCoreModule, imports: [StoreFinderStoreModule] });\nStoreFinderCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderCoreModule, providers: [\n        provideDefaultConfig(defaultStoreFinderConfig),\n        StoreFinderConnector,\n    ], imports: [[StoreFinderStoreModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: StoreFinderCoreModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [StoreFinderStoreModule],\n                    providers: [\n                        provideDefaultConfig(defaultStoreFinderConfig),\n                        StoreFinderConnector,\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GoogleMapRendererService, STORE_COUNT_NORMALIZER, STORE_FINDER_DATA, STORE_FINDER_FEATURE, STORE_FINDER_SEARCH_PAGE_NORMALIZER, storeFinderGroup_actions as StoreFinderActions, StoreFinderAdapter, StoreFinderConfig, StoreFinderConnector, StoreFinderCoreModule, storeFinderGroup_selectors as StoreFinderSelectors, StoreFinderService };\n//# sourceMappingURL=spartacus-storefinder-core.js.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}