{"ast":null,"code":"import * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i3 from '@spartacus/asm/core';\nimport { CUSTOMER_SEARCH_PAGE_NORMALIZER, AsmAdapter } from '@spartacus/asm/core';\nimport * as i2 from '@spartacus/core';\nimport { InterceptorUtil, USE_CUSTOMER_SUPPORT_AGENT_TOKEN, provideDefaultConfig } from '@spartacus/core';\nimport { CommonModule } from '@angular/common';\nclass OccAsmAdapter {\n  constructor(http, occEndpointsService, converterService, config, baseSiteService) {\n    this.http = http;\n    this.occEndpointsService = occEndpointsService;\n    this.converterService = converterService;\n    this.config = config;\n    this.baseSiteService = baseSiteService;\n    this.baseSiteService.getActive().subscribe(value => this.activeBaseSite = value);\n  }\n  customerSearch(options) {\n    const headers = InterceptorUtil.createHeader(USE_CUSTOMER_SUPPORT_AGENT_TOKEN, true, new HttpHeaders());\n    let params = new HttpParams().set('baseSite', this.activeBaseSite).set('sort', 'byNameAsc');\n    if (typeof options['query'] !== 'undefined') {\n      params = params.set('query', '' + options.query);\n    }\n    if (typeof options['pageSize'] !== 'undefined') {\n      params = params.set('pageSize', '' + options.pageSize);\n    }\n    const url = this.occEndpointsService.buildUrl('asmCustomerSearch', {}, {\n      baseSite: false,\n      prefix: false\n    });\n    return this.http.get(url, {\n      headers,\n      params\n    }).pipe(this.converterService.pipeable(CUSTOMER_SEARCH_PAGE_NORMALIZER));\n  }\n}\nOccAsmAdapter.ɵfac = function OccAsmAdapter_Factory(t) {\n  return new (t || OccAsmAdapter)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.OccEndpointsService), i0.ɵɵinject(i2.ConverterService), i0.ɵɵinject(i3.AsmConfig), i0.ɵɵinject(i2.BaseSiteService));\n};\nOccAsmAdapter.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OccAsmAdapter,\n  factory: OccAsmAdapter.ɵfac\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OccAsmAdapter, [{\n    type: Injectable\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: i2.OccEndpointsService\n    }, {\n      type: i2.ConverterService\n    }, {\n      type: i3.AsmConfig\n    }, {\n      type: i2.BaseSiteService\n    }];\n  }, null);\n})();\nconst defaultOccAsmConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        asmCustomerSearch: '/assistedservicewebservices/customers/search'\n      }\n    }\n  }\n};\nclass AsmOccModule {}\nAsmOccModule.ɵfac = function AsmOccModule_Factory(t) {\n  return new (t || AsmOccModule)();\n};\nAsmOccModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AsmOccModule\n});\nAsmOccModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [provideDefaultConfig(defaultOccAsmConfig), {\n    provide: AsmAdapter,\n    useClass: OccAsmAdapter\n  }],\n  imports: [[CommonModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AsmOccModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule],\n      providers: [provideDefaultConfig(defaultOccAsmConfig), {\n        provide: AsmAdapter,\n        useClass: OccAsmAdapter\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AsmOccModule, OccAsmAdapter };\n//# sourceMappingURL=spartacus-asm-occ.js.map","map":{"version":3,"names":["i1","HttpHeaders","HttpParams","i0","Injectable","NgModule","i3","CUSTOMER_SEARCH_PAGE_NORMALIZER","AsmAdapter","i2","InterceptorUtil","USE_CUSTOMER_SUPPORT_AGENT_TOKEN","provideDefaultConfig","CommonModule","OccAsmAdapter","constructor","http","occEndpointsService","converterService","config","baseSiteService","getActive","subscribe","value","activeBaseSite","customerSearch","options","headers","createHeader","params","set","query","pageSize","url","buildUrl","baseSite","prefix","get","pipe","pipeable","ɵfac","OccAsmAdapter_Factory","t","ɵɵinject","HttpClient","OccEndpointsService","ConverterService","AsmConfig","BaseSiteService","ɵprov","ɵɵdefineInjectable","token","factory","ngDevMode","ɵsetClassMetadata","type","defaultOccAsmConfig","backend","occ","endpoints","asmCustomerSearch","AsmOccModule","AsmOccModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","providers","provide","useClass","imports","args"],"sources":["D:/demo_spartacus/node_modules/@spartacus/asm/fesm2015/spartacus-asm-occ.js"],"sourcesContent":["import * as i1 from '@angular/common/http';\nimport { HttpHeaders, HttpParams } from '@angular/common/http';\nimport * as i0 from '@angular/core';\nimport { Injectable, NgModule } from '@angular/core';\nimport * as i3 from '@spartacus/asm/core';\nimport { CUSTOMER_SEARCH_PAGE_NORMALIZER, AsmAdapter } from '@spartacus/asm/core';\nimport * as i2 from '@spartacus/core';\nimport { InterceptorUtil, USE_CUSTOMER_SUPPORT_AGENT_TOKEN, provideDefaultConfig } from '@spartacus/core';\nimport { CommonModule } from '@angular/common';\n\nclass OccAsmAdapter {\n    constructor(http, occEndpointsService, converterService, config, baseSiteService) {\n        this.http = http;\n        this.occEndpointsService = occEndpointsService;\n        this.converterService = converterService;\n        this.config = config;\n        this.baseSiteService = baseSiteService;\n        this.baseSiteService\n            .getActive()\n            .subscribe((value) => (this.activeBaseSite = value));\n    }\n    customerSearch(options) {\n        const headers = InterceptorUtil.createHeader(USE_CUSTOMER_SUPPORT_AGENT_TOKEN, true, new HttpHeaders());\n        let params = new HttpParams()\n            .set('baseSite', this.activeBaseSite)\n            .set('sort', 'byNameAsc');\n        if (typeof options['query'] !== 'undefined') {\n            params = params.set('query', '' + options.query);\n        }\n        if (typeof options['pageSize'] !== 'undefined') {\n            params = params.set('pageSize', '' + options.pageSize);\n        }\n        const url = this.occEndpointsService.buildUrl('asmCustomerSearch', {}, {\n            baseSite: false,\n            prefix: false,\n        });\n        return this.http\n            .get(url, { headers, params })\n            .pipe(this.converterService.pipeable(CUSTOMER_SEARCH_PAGE_NORMALIZER));\n    }\n}\nOccAsmAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OccAsmAdapter, deps: [{ token: i1.HttpClient }, { token: i2.OccEndpointsService }, { token: i2.ConverterService }, { token: i3.AsmConfig }, { token: i2.BaseSiteService }], target: i0.ɵɵFactoryTarget.Injectable });\nOccAsmAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OccAsmAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: OccAsmAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: i2.OccEndpointsService }, { type: i2.ConverterService }, { type: i3.AsmConfig }, { type: i2.BaseSiteService }]; } });\n\nconst defaultOccAsmConfig = {\n    backend: {\n        occ: {\n            endpoints: {\n                asmCustomerSearch: '/assistedservicewebservices/customers/search',\n            },\n        },\n    },\n};\n\nclass AsmOccModule {\n}\nAsmOccModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AsmOccModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAsmOccModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AsmOccModule, imports: [CommonModule] });\nAsmOccModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AsmOccModule, providers: [\n        provideDefaultConfig(defaultOccAsmConfig),\n        {\n            provide: AsmAdapter,\n            useClass: OccAsmAdapter,\n        },\n    ], imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.0.5\", ngImport: i0, type: AsmOccModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule],\n                    providers: [\n                        provideDefaultConfig(defaultOccAsmConfig),\n                        {\n                            provide: AsmAdapter,\n                            useClass: OccAsmAdapter,\n                        },\n                    ],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AsmOccModule, OccAsmAdapter };\n//# sourceMappingURL=spartacus-asm-occ.js.map\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}