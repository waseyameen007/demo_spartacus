(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@spartacus/storefinder/core'), require('@angular/common'), require('@spartacus/core'), require('@angular/router'), require('@spartacus/storefront'), require('@angular/forms'), require('@ng-bootstrap/ng-bootstrap')) :
    typeof define === 'function' && define.amd ? define('@spartacus/storefinder/components', ['exports', '@angular/core', '@spartacus/storefinder/core', '@angular/common', '@spartacus/core', '@angular/router', '@spartacus/storefront', '@angular/forms', '@ng-bootstrap/ng-bootstrap'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.spartacus = global.spartacus || {}, global.spartacus.storefinder = global.spartacus.storefinder || {}, global.spartacus.storefinder.components = {}), global.ng.core, global.spartacus.storefinder.core, global.ng.common, global.core, global.ng.router, global.storefront, global.ng.forms, global.ngBootstrap));
}(this, (function (exports, i0, i1, i5, i1$1, i2, i3, i3$1, i7) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i5__namespace = /*#__PURE__*/_interopNamespace(i5);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i3__namespace$1 = /*#__PURE__*/_interopNamespace(i3$1);
    var i7__namespace = /*#__PURE__*/_interopNamespace(i7);

    /* eslint-disable @angular-eslint/directive-class-suffix */
    var AbstractStoreItemComponent = /** @class */ (function () {
        function AbstractStoreItemComponent(storeFinderService) {
            this.storeFinderService = storeFinderService;
        }
        AbstractStoreItemComponent.prototype.getDirections = function (location) {
            var google_map_url = 'https://www.google.com/maps/dir/Current+Location/';
            var latitude = this.storeFinderService.getStoreLatitude(location);
            var longitude = this.storeFinderService.getStoreLongitude(location);
            return google_map_url + latitude + ',' + longitude;
        };
        AbstractStoreItemComponent.prototype.getFormattedStoreAddress = function (addressParts) {
            return addressParts.filter(Boolean).join(', ');
        };
        return AbstractStoreItemComponent;
    }());
    AbstractStoreItemComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AbstractStoreItemComponent, deps: [{ token: i1__namespace.StoreFinderService }], target: i0__namespace.ɵɵFactoryTarget.Directive });
    AbstractStoreItemComponent.ɵdir = i0__namespace.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.0.5", type: AbstractStoreItemComponent, inputs: { location: "location" }, ngImport: i0__namespace });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AbstractStoreItemComponent, decorators: [{
                type: i0.Directive
            }], ctorParameters: function () { return [{ type: i1__namespace.StoreFinderService }]; }, propDecorators: { location: [{
                    type: i0.Input
                }] } });

    var ScheduleComponent = /** @class */ (function () {
        function ScheduleComponent() {
        }
        ScheduleComponent.prototype.ngOnInit = function () {
            var _a;
            if (this.location) {
                this.weekDays = (_a = this.location.openingHours) === null || _a === void 0 ? void 0 : _a.weekDayOpeningList;
            }
        };
        return ScheduleComponent;
    }());
    ScheduleComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ScheduleComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    ScheduleComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ScheduleComponent, selector: "cx-schedule", inputs: { location: "location" }, ngImport: i0__namespace, template: "<ng-content></ng-content>\n<div class=\"container cx-store-hours\" *ngIf=\"location.openingHours\">\n  <div *ngFor=\"let day of weekDays\" class=\"row\">\n    <div class=\"cx-days col-4\">{{ day.weekDay }}</div>\n\n    <div *ngIf=\"day.closed\" class=\"cx-hours col-8 closed\">\n      {{ 'storeFinder.closed' | cxTranslate }}\n    </div>\n\n    <div *ngIf=\"!day.closed\" class=\"cx-hours col-8\">\n      {{ day.openingTime?.formattedHour }} -\n      {{ day.closingTime?.formattedHour }}\n    </div>\n  </div>\n</div>\n", directives: [{ type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "cxTranslate": i1__namespace$1.TranslatePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ScheduleComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-schedule',
                        templateUrl: './schedule.component.html',
                    }]
            }], ctorParameters: function () { return []; }, propDecorators: { location: [{
                    type: i0.Input
                }] } });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var StoreFinderListItemComponent = /** @class */ (function (_super) {
        __extends(StoreFinderListItemComponent, _super);
        function StoreFinderListItemComponent(storeFinderService) {
            var _this = _super.call(this, storeFinderService) || this;
            _this.storeFinderService = storeFinderService;
            _this.locationIndex = null;
            _this.storeItemClick = new i0.EventEmitter();
            return _this;
        }
        StoreFinderListItemComponent.prototype.handleStoreItemClick = function () {
            if (this.locationIndex !== null) {
                this.storeItemClick.emit(this.locationIndex);
            }
        };
        StoreFinderListItemComponent.prototype.onKey = function (event) {
            if (event.key === 'Enter') {
                this.handleStoreItemClick();
            }
        };
        return StoreFinderListItemComponent;
    }(AbstractStoreItemComponent));
    StoreFinderListItemComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderListItemComponent, deps: [{ token: i1__namespace.StoreFinderService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    StoreFinderListItemComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: StoreFinderListItemComponent, selector: "cx-store-finder-list-item", inputs: { locationIndex: "locationIndex", listOrderLabel: "listOrderLabel", displayDistance: "displayDistance", useClickEvent: "useClickEvent" }, outputs: { storeItemClick: "storeItemClick" }, usesInheritance: true, ngImport: i0__namespace, template: "<ng-container>\n  <div>\n    <div class=\"cx-store-list-order\">\n      {{ listOrderLabel }}\n    </div>\n    <h2 class=\"cx-store-name\">\n      <button\n        *ngIf=\"useClickEvent\"\n        (click)=\"handleStoreItemClick()\"\n        (keyup)=\"onKey($event)\"\n      >\n        {{ location.displayName || location.name }}\n      </button>\n      <a *ngIf=\"!useClickEvent\" [routerLink]=\"[location.name]\">{{\n        location.displayName || location.name\n      }}</a>\n    </h2>\n    <div class=\"cx-store-address\" *ngIf=\"location.address\">\n      <div class=\"cx-store-address-street\">\n        {{ location.address.line1 }} {{ location.address.line2 }}\n      </div>\n      {{\n        getFormattedStoreAddress([\n          location.address.town,\n          location.address.postalCode,\n          location.address.country.isocode\n        ])\n      }}\n      <div\n        class=\"cx-store-distance\"\n        *ngIf=\"location.formattedDistance && displayDistance\"\n      >\n        {{ location.formattedDistance }}\n      </div>\n    </div>\n    <a\n      href=\"{{ getDirections(location) }}\"\n      target=\"_blank\"\n      class=\"btn btn-sm btn-action btn-block cx-button\"\n      (click)=\"$event.stopPropagation()\"\n      [attr.aria-label]=\"'storeFinder.ariaLabelGetDirections' | cxTranslate\"\n      >{{ 'storeFinder.getDirections' | cxTranslate }}</a\n    >\n  </div>\n</ng-container>\n", directives: [{ type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }], pipes: { "cxTranslate": i1__namespace$1.TranslatePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderListItemComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-store-finder-list-item',
                        templateUrl: './store-finder-list-item.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.StoreFinderService }]; }, propDecorators: { locationIndex: [{
                    type: i0.Input
                }], listOrderLabel: [{
                    type: i0.Input
                }], displayDistance: [{
                    type: i0.Input
                }], useClickEvent: [{
                    type: i0.Input
                }], storeItemClick: [{
                    type: i0.Output
                }] } });

    var StoreFinderGridComponent = /** @class */ (function () {
        function StoreFinderGridComponent(storeFinderService, route) {
            this.storeFinderService = storeFinderService;
            this.route = route;
        }
        StoreFinderGridComponent.prototype.ngOnInit = function () {
            this.isLoading$ = this.storeFinderService.getStoresLoading();
            this.locations$ = this.storeFinderService.getFindStoresEntities();
            this.defaultLocation = {};
            this.findStores();
        };
        StoreFinderGridComponent.prototype.findStores = function () {
            if (this.route.snapshot.params.country) {
                this.storeFinderService.callFindStoresAction(this.route.snapshot.params);
            }
        };
        return StoreFinderGridComponent;
    }());
    StoreFinderGridComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderGridComponent, deps: [{ token: i1__namespace.StoreFinderService }, { token: i2__namespace.ActivatedRoute }], target: i0__namespace.ɵɵFactoryTarget.Component });
    StoreFinderGridComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: StoreFinderGridComponent, selector: "cx-store-finder-grid", ngImport: i0__namespace, template: "<ng-container\n  *ngIf=\"\n    !(isLoading$ | async) && (locations$ | async) as locations;\n    else loading\n  \"\n>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div\n        class=\"col-sm-6 col-md-4 col-lg-3 item\"\n        *ngFor=\"let location of locations?.stores\"\n      >\n        <cx-store-finder-list-item\n          [location]=\"location\"\n        ></cx-store-finder-list-item>\n      </div>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #loading>\n  <div class=\"cx-spinner\"><cx-spinner></cx-spinner></div>\n</ng-template>\n", components: [{ type: StoreFinderListItemComponent, selector: "cx-store-finder-list-item", inputs: ["locationIndex", "listOrderLabel", "displayDistance", "useClickEvent"], outputs: ["storeItemClick"] }, { type: i3__namespace.SpinnerComponent, selector: "cx-spinner" }], directives: [{ type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "async": i5__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderGridComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-store-finder-grid',
                        templateUrl: './store-finder-grid.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.StoreFinderService }, { type: i2__namespace.ActivatedRoute }]; } });

    var StoreFinderSearchComponent = /** @class */ (function () {
        function StoreFinderSearchComponent(routingService) {
            this.routingService = routingService;
            this.searchBox = new i3$1.FormControl();
            this.iconTypes = i3.ICON_TYPE;
        }
        StoreFinderSearchComponent.prototype.findStores = function (address) {
            this.routingService.go(['store-finder/find'], {
                queryParams: {
                    query: address,
                },
            });
        };
        StoreFinderSearchComponent.prototype.viewStoresWithMyLoc = function () {
            this.routingService.go(['store-finder/find'], {
                queryParams: {
                    useMyLocation: true,
                },
            });
        };
        StoreFinderSearchComponent.prototype.onKey = function (event) {
            if (this.searchBox.value &&
                this.searchBox.value.length &&
                event.key === 'Enter') {
                this.findStores(this.searchBox.value);
            }
        };
        return StoreFinderSearchComponent;
    }());
    StoreFinderSearchComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderSearchComponent, deps: [{ token: i1__namespace$1.RoutingService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    StoreFinderSearchComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: StoreFinderSearchComponent, selector: "cx-store-finder-search", ngImport: i0__namespace, template: "<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-md-12 col-lg-7\">\n      <div class=\"form-group search-wrapper\">\n        <input\n          #queryInput\n          [formControl]=\"searchBox\"\n          (keyup)=\"onKey($event)\"\n          type=\"text\"\n          class=\"form-control\"\n          [attr.aria-label]=\"'common.search' | cxTranslate\"\n          placeholder=\"{{ 'storeFinder.searchBox' | cxTranslate }}\"\n        />\n        <cx-icon\n          [type]=\"iconTypes.SEARCH\"\n          [attr.aria-label]=\"'common.search' | cxTranslate\"\n          class=\"search\"\n          (keyup)=\"onKey($event)\"\n          [routerLink]=\"['/store-finder/find']\"\n          [queryParams]=\"{ query: queryInput.value }\"\n          [ngClass]=\"{\n            'disabled-action': !(queryInput.value && queryInput.value.length)\n          }\"\n        ></cx-icon>\n      </div>\n    </div>\n    <div class=\"col-md-12 col-lg-5\">\n      <div class=\"row cx-search-links mb-3\">\n        <div class=\"col-6\">\n          <button\n            (click)=\"viewStoresWithMyLoc()\"\n            class=\"btn btn-primary btn-block\"\n          >\n            {{ 'storeFinder.useMyLocation' | cxTranslate }}\n          </button>\n        </div>\n        <div class=\"col-6\">\n          <button\n            [routerLink]=\"['/store-finder/view-all']\"\n            class=\"btn btn-primary btn-block\"\n          >\n            {{ 'storeFinder.viewAllStores' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i3__namespace.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }], directives: [{ type: i3__namespace$1.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { type: i3__namespace$1.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { type: i3__namespace$1.FormControlDirective, selector: "[formControl]", inputs: ["disabled", "formControl", "ngModel"], outputs: ["ngModelChange"], exportAs: ["ngForm"] }, { type: i2__namespace.RouterLink, selector: ":not(a):not(area)[routerLink]", inputs: ["routerLink", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i5__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], pipes: { "cxTranslate": i1__namespace$1.TranslatePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderSearchComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-store-finder-search',
                        templateUrl: './store-finder-search.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.RoutingService }]; } });

    var StoreFinderHeaderComponent = /** @class */ (function () {
        function StoreFinderHeaderComponent() {
        }
        return StoreFinderHeaderComponent;
    }());
    StoreFinderHeaderComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderHeaderComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    StoreFinderHeaderComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: StoreFinderHeaderComponent, selector: "cx-store-finder-header", ngImport: i0__namespace, template: "<ng-container>\n  <cx-store-finder-search></cx-store-finder-search>\n</ng-container>\n", components: [{ type: StoreFinderSearchComponent, selector: "cx-store-finder-search" }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderHeaderComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-store-finder-header',
                        templateUrl: './store-finder-header.component.html',
                    }]
            }] });

    var StoreFinderMapComponent = /** @class */ (function () {
        function StoreFinderMapComponent(googleMapRendererService) {
            this.googleMapRendererService = googleMapRendererService;
            this.selectedStoreItem = new i0.EventEmitter();
        }
        StoreFinderMapComponent.prototype.ngOnChanges = function (changes) {
            if (changes.locations && this.locations) {
                this.renderMap();
            }
        };
        /**
         * Sets the center of the map to the given location
         * @param latitude latitude of the new center
         * @param longitude longitude of the new center
         */
        StoreFinderMapComponent.prototype.centerMap = function (latitude, longitude) {
            this.googleMapRendererService.centerMap(latitude, longitude);
        };
        StoreFinderMapComponent.prototype.renderMap = function () {
            var _this = this;
            this.googleMapRendererService.renderMap(this.mapElement.nativeElement, this.locations, function (markerIndex) {
                _this.selectStoreItemClickHandle(markerIndex);
            });
        };
        StoreFinderMapComponent.prototype.selectStoreItemClickHandle = function (markerIndex) {
            this.selectedStoreItem.emit(markerIndex);
        };
        return StoreFinderMapComponent;
    }());
    StoreFinderMapComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderMapComponent, deps: [{ token: i1__namespace.GoogleMapRendererService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    StoreFinderMapComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: StoreFinderMapComponent, selector: "cx-store-finder-map", inputs: { locations: "locations" }, outputs: { selectedStoreItem: "selectedStoreItem" }, viewQueries: [{ propertyName: "mapElement", first: true, predicate: ["mapElement"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0__namespace, template: "<div #mapElement class=\"cx-store-map\"></div>\n" });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderMapComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-store-finder-map',
                        templateUrl: './store-finder-map.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.GoogleMapRendererService }]; }, propDecorators: { mapElement: [{
                    type: i0.ViewChild,
                    args: ['mapElement', { static: true }]
                }], locations: [{
                    type: i0.Input
                }], selectedStoreItem: [{
                    type: i0.Output
                }] } });

    var StoreFinderPaginationDetailsComponent = /** @class */ (function () {
        function StoreFinderPaginationDetailsComponent() {
        }
        StoreFinderPaginationDetailsComponent.prototype.getResultsPerPage = function () {
            if (this.pagination.totalResults > this.pagination.pageSize) {
                var firstItem = this.pagination.currentPage * this.pagination.pageSize + 1;
                var resultsPerPage = (this.pagination.currentPage + 1) * this.pagination.pageSize;
                if (resultsPerPage > this.pagination.totalResults) {
                    resultsPerPage = this.pagination.totalResults;
                }
                return firstItem + " - " + resultsPerPage;
            }
            else {
                return "1 - " + this.pagination.totalResults;
            }
        };
        return StoreFinderPaginationDetailsComponent;
    }());
    StoreFinderPaginationDetailsComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderPaginationDetailsComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    StoreFinderPaginationDetailsComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: StoreFinderPaginationDetailsComponent, selector: "cx-store-finder-pagination-details", inputs: { pagination: "pagination" }, ngImport: i0__namespace, template: "<span class=\"cx-pagination-details\">\n  {{ getResultsPerPage() }}\n  {{\n    'storeFinder.fromStoresFound'\n      | cxTranslate: { count: pagination.totalResults }\n  }}\n</span>\n", pipes: { "cxTranslate": i1__namespace$1.TranslatePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderPaginationDetailsComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-store-finder-pagination-details',
                        templateUrl: './store-finder-pagination-details.component.html',
                    }]
            }], ctorParameters: function () { return []; }, propDecorators: { pagination: [{
                    type: i0.Input
                }] } });

    var StoreFinderStoreDescriptionComponent = /** @class */ (function (_super) {
        __extends(StoreFinderStoreDescriptionComponent, _super);
        function StoreFinderStoreDescriptionComponent(storeFinderService) {
            var _this = _super.call(this, storeFinderService) || this;
            _this.storeFinderService = storeFinderService;
            return _this;
        }
        return StoreFinderStoreDescriptionComponent;
    }(AbstractStoreItemComponent));
    StoreFinderStoreDescriptionComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderStoreDescriptionComponent, deps: [{ token: i1__namespace.StoreFinderService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    StoreFinderStoreDescriptionComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: StoreFinderStoreDescriptionComponent, selector: "cx-store-finder-store-description", inputs: { location: "location", disableMap: "disableMap" }, usesInheritance: true, ngImport: i0__namespace, template: "<ng-container *ngIf=\"location\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <article class=\"cx-store col-md-4\">\n        <h2>{{ location.displayName || location.name }}</h2>\n\n        <p *ngIf=\"location.address\" class=\"cx-store-description-address\">\n          {{ location.address.line1 }} {{ location.address.line2 }} <br />\n          {{\n            getFormattedStoreAddress([\n              location.address.town,\n              location.address.postalCode,\n              location.address.country.isocode\n            ])\n          }}\n        </p>\n\n        <section class=\"cx-contact\">\n          <ul class=\"cx-list\">\n            <li class=\"cx-item\">\n              <a\n                class=\"cx-link\"\n                [href]=\"getDirections(location)\"\n                target=\"_blank\"\n                [attr.aria-label]=\"\n                  'storeFinder.ariaLabelGetDirections' | cxTranslate\n                \"\n                >{{ 'storeFinder.getDirections' | cxTranslate }}</a\n              >\n            </li>\n            <li class=\"cx-item\" *ngIf=\"location.address?.phone\">\n              {{ 'storeFinder.call' | cxTranslate }}\n              {{ location.address?.phone }}\n            </li>\n          </ul>\n        </section>\n        <div class=\"cx-schedule\" *ngIf=\"location.openingHours\">\n          <cx-schedule [location]=\"location\">\n            <h3>{{ 'storeFinder.storeHours' | cxTranslate }}</h3>\n          </cx-schedule>\n        </div>\n\n        <div *ngIf=\"(location.features | json) != '{}'\" class=\"cx-features\">\n          <div class=\"row\">\n            <div class=\"col-lg-12\">\n              <h3 class=\"cx-features-header\">\n                {{ 'storeFinder.storeFeatures' | cxTranslate }}\n              </h3>\n            </div>\n          </div>\n\n          <article class=\"row\">\n            <div\n              class=\"col-lg-12 cx-feature-item\"\n              *ngFor=\"let feature of location.features?.entry\"\n            >\n              <div class=\"cx-feature-value\">{{ feature.value }}</div>\n            </div>\n          </article>\n        </div>\n      </article>\n      <article class=\"cx-storeMap col-lg-8\" *ngIf=\"!disableMap\">\n        <cx-store-finder-map [locations]=\"[location]\"></cx-store-finder-map>\n      </article>\n    </div>\n  </div>\n</ng-container>\n", components: [{ type: ScheduleComponent, selector: "cx-schedule", inputs: ["location"] }, { type: StoreFinderMapComponent, selector: "cx-store-finder-map", inputs: ["locations"], outputs: ["selectedStoreItem"] }], directives: [{ type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "cxTranslate": i1__namespace$1.TranslatePipe, "json": i5__namespace.JsonPipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderStoreDescriptionComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-store-finder-store-description',
                        templateUrl: './store-finder-store-description.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.StoreFinderService }]; }, propDecorators: { location: [{
                    type: i0.Input
                }], disableMap: [{
                    type: i0.Input
                }] } });

    var StoreFinderListComponent = /** @class */ (function () {
        function StoreFinderListComponent(storeFinderService, document) {
            this.storeFinderService = storeFinderService;
            this.document = document;
            this.iconTypes = i3.ICON_TYPE;
            this.isDetailsModeVisible = false;
        }
        StoreFinderListComponent.prototype.centerStoreOnMapByIndex = function (index, location) {
            this.showStoreDetails(location);
            this.selectedStoreIndex = index;
            this.selectedStore = location;
            this.storeMap.centerMap(this.storeFinderService.getStoreLatitude(this.locations.stores[index]), this.storeFinderService.getStoreLongitude(this.locations.stores[index]));
        };
        StoreFinderListComponent.prototype.selectStoreItemList = function (index) {
            this.selectedStoreIndex = index;
            var storeListItem = this.document.getElementById('item-' + index);
            storeListItem.scrollIntoView({
                behavior: 'smooth',
                block: 'center',
            });
        };
        StoreFinderListComponent.prototype.showStoreDetails = function (location) {
            this.isDetailsModeVisible = true;
            this.storeDetails = location;
        };
        StoreFinderListComponent.prototype.hideStoreDetails = function () {
            this.isDetailsModeVisible = false;
            this.selectedStoreIndex = undefined;
            this.selectedStore = undefined;
            this.storeMap.renderMap();
        };
        return StoreFinderListComponent;
    }());
    StoreFinderListComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderListComponent, deps: [{ token: i1__namespace.StoreFinderService }, { token: i5.DOCUMENT }], target: i0__namespace.ɵɵFactoryTarget.Component });
    StoreFinderListComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: StoreFinderListComponent, selector: "cx-store-finder-list", inputs: { locations: "locations", useMylocation: "useMylocation" }, viewQueries: [{ propertyName: "storeMap", first: true, predicate: ["storeMap"], descendants: true }], ngImport: i0__namespace, template: "<ng-container *ngIf=\"locations\">\n  <div class=\"container mb-2\">\n    <div class=\"row\" *ngIf=\"locations?.pagination\">\n      <div class=\"col-md-12\">\n        <cx-store-finder-pagination-details\n          [pagination]=\"locations.pagination\"\n        ></cx-store-finder-pagination-details>\n      </div>\n      <div class=\"text-left cx-back-wrapper\">\n        <button\n          class=\"btn btn-block btn-action cx-back\"\n          *ngIf=\"isDetailsModeVisible\"\n          (click)=\"hideStoreDetails()\"\n        >\n          <cx-icon [type]=\"iconTypes.CARET_LEFT\"></cx-icon>\n          {{ 'storeFinder.back' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n    <div *ngIf=\"locations?.stores\" class=\"row cx-columns\">\n      <div class=\"col-md-4 cx-address-col\">\n        <div class=\"cx-store-details\" *ngIf=\"isDetailsModeVisible\">\n          <cx-store-finder-store-description\n            [location]=\"storeDetails\"\n            [disableMap]=\"true\"\n          ></cx-store-finder-store-description>\n        </div>\n        <ol class=\"cx-list\" *ngIf=\"!isDetailsModeVisible\">\n          <li\n            *ngFor=\"let location of locations?.stores; let i = index\"\n            id=\"{{ 'item-' + i }}\"\n            [ngClass]=\"{\n              'cx-selected-item': selectedStoreIndex === i\n            }\"\n            class=\"cx-list-items\"\n          >\n            <cx-store-finder-list-item\n              [location]=\"location\"\n              [locationIndex]=\"i\"\n              [displayDistance]=\"useMylocation\"\n              [useClickEvent]=\"true\"\n              (storeItemClick)=\"centerStoreOnMapByIndex($event, location)\"\n              [listOrderLabel]=\"\n                i +\n                locations.pagination.currentPage *\n                  locations.pagination.pageSize +\n                1\n              \"\n            ></cx-store-finder-list-item>\n          </li>\n        </ol>\n      </div>\n      <div class=\"col-md-8 cx-map-col\">\n        <cx-store-finder-map\n          #storeMap\n          [locations]=\"locations.stores\"\n          (selectedStoreItem)=\"selectStoreItemList($event)\"\n        ></cx-store-finder-map>\n      </div>\n    </div>\n\n    <!-- mobile tabs for column set only -->\n\n    <div *ngIf=\"locations?.stores\" class=\"cx-columns-mobile\">\n      <ul ngbNav #nav=\"ngbNav\">\n        <li ngbNavItem>\n          <a ngbNavLink>\n            {{ 'storeFinder.listView' | cxTranslate }}\n          </a>\n          <ng-template ngbNavContent>\n            <div class=\"cx-address-col\">\n              <div class=\"cx-store-details\" *ngIf=\"isDetailsModeVisible\">\n                <cx-store-finder-store-description\n                  [location]=\"storeDetails\"\n                  [disableMap]=\"true\"\n                ></cx-store-finder-store-description>\n              </div>\n              <ol class=\"cx-list\" *ngIf=\"!isDetailsModeVisible\">\n                <li\n                  *ngFor=\"let location of locations?.stores; let i = index\"\n                  id=\"{{ 'item-' + i }}\"\n                  [ngClass]=\"{\n                    'cx-selected-item': selectedStoreIndex === i\n                  }\"\n                  class=\"cx-list-items\"\n                >\n                  <cx-store-finder-list-item\n                    [location]=\"location\"\n                    [locationIndex]=\"i\"\n                    [displayDistance]=\"useMylocation\"\n                    [useClickEvent]=\"true\"\n                    (storeItemClick)=\"centerStoreOnMapByIndex($event, location)\"\n                    [listOrderLabel]=\"\n                      i +\n                      locations.pagination.currentPage *\n                        locations.pagination.pageSize +\n                      1\n                    \"\n                  ></cx-store-finder-list-item>\n                </li>\n              </ol>\n            </div>\n          </ng-template>\n        </li>\n        <li ngbNavItem>\n          <a ngbNavLink>\n            {{ 'storeFinder.mapView' | cxTranslate }}\n          </a>\n          <ng-template ngbNavContent>\n            <div class=\"cx-map-col\">\n              <cx-store-finder-map\n                #storeMap\n                [locations]=\"selectedStore ? [selectedStore] : locations.stores\"\n                (selectedStoreItem)=\"selectStoreItemList($event)\"\n              ></cx-store-finder-map>\n            </div>\n          </ng-template>\n        </li>\n      </ul>\n      <div [ngbNavOutlet]=\"nav\"></div>\n    </div>\n\n    <!-- mobile tabs end -->\n\n    <div *ngIf=\"!locations?.stores\" class=\"row\">\n      <div class=\"col-md-12 cx-not-found\">\n        {{ 'storeFinder.noStoreFound' | cxTranslate }}\n      </div>\n    </div>\n  </div>\n</ng-container>\n", components: [{ type: StoreFinderPaginationDetailsComponent, selector: "cx-store-finder-pagination-details", inputs: ["pagination"] }, { type: i3__namespace.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { type: StoreFinderStoreDescriptionComponent, selector: "cx-store-finder-store-description", inputs: ["location", "disableMap"] }, { type: StoreFinderListItemComponent, selector: "cx-store-finder-list-item", inputs: ["locationIndex", "listOrderLabel", "displayDistance", "useClickEvent"], outputs: ["storeItemClick"] }, { type: StoreFinderMapComponent, selector: "cx-store-finder-map", inputs: ["locations"], outputs: ["selectedStoreItem"] }, { type: i7__namespace.NgbNavOutlet, selector: "[ngbNavOutlet]", inputs: ["paneRole", "ngbNavOutlet"] }], directives: [{ type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i7__namespace.NgbNav, selector: "[ngbNav]", inputs: ["animation", "destroyOnHide", "orientation", "roles", "keyboard", "activeId"], outputs: ["activeIdChange", "shown", "hidden", "navChange"], exportAs: ["ngbNav"] }, { type: i7__namespace.NgbNavItem, selector: "[ngbNavItem]", inputs: ["disabled", "domId", "destroyOnHide", "ngbNavItem"], outputs: ["shown", "hidden"], exportAs: ["ngbNavItem"] }, { type: i7__namespace.NgbNavLink, selector: "a[ngbNavLink]" }, { type: i7__namespace.NgbNavContent, selector: "ng-template[ngbNavContent]" }], pipes: { "cxTranslate": i1__namespace$1.TranslatePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderListComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-store-finder-list',
                        templateUrl: './store-finder-list.component.html',
                    }]
            }], ctorParameters: function () {
            return [{ type: i1__namespace.StoreFinderService }, { type: undefined, decorators: [{
                            type: i0.Inject,
                            args: [i5.DOCUMENT]
                        }] }];
        }, propDecorators: { locations: [{
                    type: i0.Input
                }], useMylocation: [{
                    type: i0.Input
                }], storeMap: [{
                    type: i0.ViewChild,
                    args: ['storeMap']
                }] } });

    var StoreFinderSearchResultComponent = /** @class */ (function () {
        function StoreFinderSearchResultComponent(storeFinderService, route, config) {
            this.storeFinderService = storeFinderService;
            this.route = route;
            this.config = config;
            this.countryCode = null;
            this.searchConfig = {
                currentPage: 0,
            };
        }
        StoreFinderSearchResultComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.subscription = this.route.queryParams.subscribe(function (params) { return _this.initialize(params); });
        };
        StoreFinderSearchResultComponent.prototype.ngOnDestroy = function () {
            if (this.subscription) {
                this.subscription.unsubscribe();
            }
        };
        StoreFinderSearchResultComponent.prototype.viewPage = function (pageNumber) {
            this.searchConfig = Object.assign(Object.assign({}, this.searchConfig), { currentPage: pageNumber });
            this.storeFinderService.findStoresAction(this.searchQuery.queryText, this.searchConfig, this.geolocation, this.countryCode, this.useMyLocation, this.radius);
        };
        StoreFinderSearchResultComponent.prototype.initialize = function (params) {
            this.searchQuery = this.parseParameters(params);
            this.useMyLocation = params && params.useMyLocation ? true : false;
            this.searchConfig = Object.assign(Object.assign({}, this.searchConfig), { currentPage: 0 });
            this.radius = this.config.googleMaps.radius;
            this.storeFinderService.findStoresAction(this.searchQuery.queryText, this.searchConfig, this.geolocation, this.countryCode, this.useMyLocation, this.radius);
            this.isLoading$ = this.storeFinderService.getStoresLoading();
            this.locations$ = this.storeFinderService.getFindStoresEntities();
        };
        StoreFinderSearchResultComponent.prototype.parseParameters = function (queryParams) {
            var searchQuery;
            if (queryParams.query) {
                searchQuery = { queryText: queryParams.query };
            }
            else {
                searchQuery = { queryText: '' };
            }
            searchQuery.useMyLocation =
                queryParams.useMyLocation != null &&
                    queryParams.useMyLocation.toUpperCase() === 'TRUE';
            return searchQuery;
        };
        return StoreFinderSearchResultComponent;
    }());
    StoreFinderSearchResultComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderSearchResultComponent, deps: [{ token: i1__namespace.StoreFinderService }, { token: i2__namespace.ActivatedRoute }, { token: i1__namespace.StoreFinderConfig }], target: i0__namespace.ɵɵFactoryTarget.Component });
    StoreFinderSearchResultComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: StoreFinderSearchResultComponent, selector: "cx-store-finder-search-result", ngImport: i0__namespace, template: "<div\n  *ngIf=\"\n    !(isLoading$ | async) && (locations$ | async) as locations;\n    else loading\n  \"\n>\n  <div *ngIf=\"locations?.stores.length\">\n    <div class=\"cx-pagination\">\n      <cx-pagination\n        [pagination]=\"locations.pagination\"\n        (viewPageEvent)=\"viewPage($event)\"\n      ></cx-pagination>\n    </div>\n  </div>\n  <cx-store-finder-list\n    *ngIf=\"locations?.stores.length\"\n    [locations]=\"locations\"\n    [useMylocation]=\"useMyLocation\"\n  ></cx-store-finder-list>\n  <div class=\"container\" *ngIf=\"!locations?.stores.length\">\n    <div class=\"row\">\n      <span class=\"cx-no-stores\" role=\"alert\">\n        {{ 'storeFinder.noStoresMessage' | cxTranslate }}\n      </span>\n    </div>\n  </div>\n</div>\n<ng-template #loading>\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n", components: [{ type: i3__namespace.PaginationComponent, selector: "cx-pagination", inputs: ["pageRoute", "queryParam", "defaultPage", "pagination"], outputs: ["viewPageEvent"] }, { type: StoreFinderListComponent, selector: "cx-store-finder-list", inputs: ["locations", "useMylocation"] }, { type: i3__namespace.SpinnerComponent, selector: "cx-spinner" }], directives: [{ type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i5__namespace.AsyncPipe, "cxTranslate": i1__namespace$1.TranslatePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderSearchResultComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-store-finder-search-result',
                        templateUrl: './store-finder-search-result.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.StoreFinderService }, { type: i2__namespace.ActivatedRoute }, { type: i1__namespace.StoreFinderConfig }]; } });

    var StoreFinderStoresCountComponent = /** @class */ (function () {
        function StoreFinderStoresCountComponent(storeFinderService) {
            this.storeFinderService = storeFinderService;
        }
        StoreFinderStoresCountComponent.prototype.ngOnInit = function () {
            this.storeFinderService.viewAllStores();
            this.locations$ = this.storeFinderService.getViewAllStoresEntities();
            this.isLoading$ = this.storeFinderService.getViewAllStoresLoading();
        };
        return StoreFinderStoresCountComponent;
    }());
    StoreFinderStoresCountComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderStoresCountComponent, deps: [{ token: i1__namespace.StoreFinderService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    StoreFinderStoresCountComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: StoreFinderStoresCountComponent, selector: "cx-store-finder-stores-count", ngImport: i0__namespace, template: "<ng-container\n  *ngIf=\"\n    !(isLoading$ | async) && (locations$ | async) as locations;\n    else loading\n  \"\n>\n  <div class=\"cx-count container\">\n    <div class=\"row\" *ngIf=\"locations?.length\">\n      <div\n        *ngFor=\"let country of locations\"\n        class=\"cx-set col-sm-6 col-md-4 col-lg-4 col-xl-3\"\n      >\n        <a [routerLink]=\"['../country', country.isoCode]\" class=\"btn-link\">\n          <h2 class=\"cx-title\">\n            <span\n              [ngClass]=\"\n                country?.storeCountDataList\n                  ? 'country-header'\n                  : 'country-header-link'\n              \"\n              class=\"cx-name\"\n              >{{ country.name }}</span\n            >\n            <span\n              [ngClass]=\"\n                country?.storeCountDataList\n                  ? 'country-header'\n                  : 'country-header-link'\n              \"\n              *ngIf=\"!country?.storeCountDataList\"\n              class=\"cx-country-count\"\n              >({{ country.count }})</span\n            >\n          </h2>\n        </a>\n      </div>\n    </div>\n    <div class=\"row\" *ngIf=\"!locations?.length\">\n      <span class=\"cx-no-stores\" role=\"alert\">\n        {{ 'storeFinder.noStoresMessage' | cxTranslate }}\n      </span>\n    </div>\n  </div>\n</ng-container>\n<ng-template #loading>\n  <div class=\"cx-count-spinner\"><cx-spinner></cx-spinner></div>\n</ng-template>\n", components: [{ type: i3__namespace.SpinnerComponent, selector: "cx-spinner" }], directives: [{ type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i5__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], pipes: { "async": i5__namespace.AsyncPipe, "cxTranslate": i1__namespace$1.TranslatePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderStoresCountComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-store-finder-stores-count',
                        templateUrl: './store-finder-stores-count.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.StoreFinderService }]; } });

    var StoreFinderComponent = /** @class */ (function () {
        function StoreFinderComponent() {
        }
        return StoreFinderComponent;
    }());
    StoreFinderComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderComponent, deps: [], target: i0__namespace.ɵɵFactoryTarget.Component });
    StoreFinderComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: StoreFinderComponent, selector: "cx-store-finder", ngImport: i0__namespace, template: "<ng-container>\n  <div class=\"cx-store-finder-wrapper\">\n    <cx-store-finder-header></cx-store-finder-header>\n    <router-outlet></router-outlet>\n  </div>\n</ng-container>\n", components: [{ type: StoreFinderHeaderComponent, selector: "cx-store-finder-header" }], directives: [{ type: i2__namespace.RouterOutlet, selector: "router-outlet", outputs: ["activate", "deactivate"], exportAs: ["outlet"] }] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-store-finder',
                        templateUrl: './store-finder.component.html',
                    }]
            }] });

    var StoreFinderStoreComponent = /** @class */ (function () {
        function StoreFinderStoreComponent(storeFinderService, route, routingService) {
            this.storeFinderService = storeFinderService;
            this.route = route;
            this.routingService = routingService;
            this.iconTypes = i3.ICON_TYPE;
        }
        StoreFinderStoreComponent.prototype.ngOnInit = function () {
            if (!this.location) {
                this.requestStoresData();
                this.location$ = this.storeFinderService.getFindStoreEntityById();
                this.isLoading$ = this.storeFinderService.getStoresLoading();
            }
        };
        StoreFinderStoreComponent.prototype.requestStoresData = function () {
            this.storeFinderService.viewStoreById(this.route.snapshot.params.store);
        };
        StoreFinderStoreComponent.prototype.goBack = function () {
            this.routingService.go([
                "store-finder/country/" + this.route.snapshot.params.country,
            ]);
        };
        return StoreFinderStoreComponent;
    }());
    StoreFinderStoreComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderStoreComponent, deps: [{ token: i1__namespace.StoreFinderService }, { token: i2__namespace.ActivatedRoute }, { token: i1__namespace$1.RoutingService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    StoreFinderStoreComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: StoreFinderStoreComponent, selector: "cx-store-finder-store", inputs: { location: "location", disableMap: "disableMap" }, ngImport: i0__namespace, template: "<div\n  class=\"container\"\n  *ngIf=\"\n    location || (!(isLoading$ | async) && (location$ | async)) as location;\n    else loading\n  \"\n>\n  <div class=\"row cx-store-actions\">\n    <div class=\"col-md-4 col-sm-6 col-lg-2\">\n      <button class=\"btn btn-block btn-action\" (click)=\"goBack()\">\n        <cx-icon [type]=\"iconTypes.CARET_LEFT\"></cx-icon>\n        {{ 'storeFinder.backToList' | cxTranslate }}\n      </button>\n    </div>\n  </div>\n  <div class=\"row\">\n    <div class=\"col-12 p-0\">\n      <cx-store-finder-store-description\n        [disableMap]=\"disableMap\"\n        [location]=\"location\"\n      ></cx-store-finder-store-description>\n    </div>\n  </div>\n</div>\n<ng-template #loading>\n  <div class=\"cx-spinner\"><cx-spinner></cx-spinner></div>\n</ng-template>\n", components: [{ type: i3__namespace.IconComponent, selector: "cx-icon,[cxIcon]", inputs: ["cxIcon", "type"] }, { type: StoreFinderStoreDescriptionComponent, selector: "cx-store-finder-store-description", inputs: ["location", "disableMap"] }, { type: i3__namespace.SpinnerComponent, selector: "cx-spinner" }], directives: [{ type: i5__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i5__namespace.AsyncPipe, "cxTranslate": i1__namespace$1.TranslatePipe } });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderStoreComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-store-finder-store',
                        templateUrl: './store-finder-store.component.html',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.StoreFinderService }, { type: i2__namespace.ActivatedRoute }, { type: i1__namespace$1.RoutingService }]; }, propDecorators: { location: [{
                    type: i0.Input
                }], disableMap: [{
                    type: i0.Input
                }] } });

    var StoreFinderComponentsModule = /** @class */ (function () {
        function StoreFinderComponentsModule() {
        }
        return StoreFinderComponentsModule;
    }());
    StoreFinderComponentsModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderComponentsModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    StoreFinderComponentsModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderComponentsModule, declarations: [StoreFinderSearchComponent,
            StoreFinderListComponent,
            StoreFinderMapComponent,
            StoreFinderListItemComponent,
            StoreFinderStoresCountComponent,
            StoreFinderGridComponent,
            StoreFinderStoreDescriptionComponent,
            ScheduleComponent,
            StoreFinderHeaderComponent,
            StoreFinderSearchResultComponent,
            StoreFinderComponent,
            StoreFinderPaginationDetailsComponent,
            StoreFinderStoreComponent], imports: [i5.CommonModule,
            i3$1.ReactiveFormsModule,
            i2.RouterModule,
            i3.ListNavigationModule,
            i7.NgbNavModule,
            i3.SpinnerModule,
            i1$1.UrlModule,
            i1.StoreFinderCoreModule,
            i1$1.I18nModule,
            i3.IconModule], exports: [ScheduleComponent,
            StoreFinderComponent,
            StoreFinderGridComponent,
            StoreFinderHeaderComponent,
            StoreFinderListItemComponent,
            StoreFinderMapComponent,
            StoreFinderPaginationDetailsComponent,
            StoreFinderSearchComponent,
            StoreFinderSearchResultComponent,
            StoreFinderListComponent,
            StoreFinderStoreDescriptionComponent,
            StoreFinderStoresCountComponent,
            StoreFinderStoreComponent] });
    StoreFinderComponentsModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderComponentsModule, providers: [
            i1$1.provideDefaultConfig({
                cmsComponents: {
                    StoreFinderComponent: {
                        component: StoreFinderComponent,
                        childRoutes: [
                            {
                                path: 'find',
                                component: StoreFinderSearchResultComponent,
                            },
                            {
                                path: 'view-all',
                                component: StoreFinderStoresCountComponent,
                            },
                            {
                                path: 'country/:country',
                                component: StoreFinderGridComponent,
                            },
                            {
                                path: 'country/:country/region/:region',
                                component: StoreFinderGridComponent,
                            },
                            {
                                path: 'country/:country/region/:region/:store',
                                component: StoreFinderStoreComponent,
                            },
                            {
                                path: 'country/:country/:store',
                                component: StoreFinderStoreComponent,
                            },
                        ],
                    },
                },
            }),
        ], imports: [[
                i5.CommonModule,
                i3$1.ReactiveFormsModule,
                i2.RouterModule,
                i3.ListNavigationModule,
                i7.NgbNavModule,
                i3.SpinnerModule,
                i1$1.UrlModule,
                i1.StoreFinderCoreModule,
                i1$1.I18nModule,
                i3.IconModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderComponentsModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i5.CommonModule,
                            i3$1.ReactiveFormsModule,
                            i2.RouterModule,
                            i3.ListNavigationModule,
                            i7.NgbNavModule,
                            i3.SpinnerModule,
                            i1$1.UrlModule,
                            i1.StoreFinderCoreModule,
                            i1$1.I18nModule,
                            i3.IconModule,
                        ],
                        providers: [
                            i1$1.provideDefaultConfig({
                                cmsComponents: {
                                    StoreFinderComponent: {
                                        component: StoreFinderComponent,
                                        childRoutes: [
                                            {
                                                path: 'find',
                                                component: StoreFinderSearchResultComponent,
                                            },
                                            {
                                                path: 'view-all',
                                                component: StoreFinderStoresCountComponent,
                                            },
                                            {
                                                path: 'country/:country',
                                                component: StoreFinderGridComponent,
                                            },
                                            {
                                                path: 'country/:country/region/:region',
                                                component: StoreFinderGridComponent,
                                            },
                                            {
                                                path: 'country/:country/region/:region/:store',
                                                component: StoreFinderStoreComponent,
                                            },
                                            {
                                                path: 'country/:country/:store',
                                                component: StoreFinderStoreComponent,
                                            },
                                        ],
                                    },
                                },
                            }),
                        ],
                        declarations: [
                            StoreFinderSearchComponent,
                            StoreFinderListComponent,
                            StoreFinderMapComponent,
                            StoreFinderListItemComponent,
                            StoreFinderStoresCountComponent,
                            StoreFinderGridComponent,
                            StoreFinderStoreDescriptionComponent,
                            ScheduleComponent,
                            StoreFinderHeaderComponent,
                            StoreFinderSearchResultComponent,
                            StoreFinderComponent,
                            StoreFinderPaginationDetailsComponent,
                            StoreFinderStoreComponent,
                        ],
                        exports: [
                            ScheduleComponent,
                            StoreFinderComponent,
                            StoreFinderGridComponent,
                            StoreFinderHeaderComponent,
                            StoreFinderListItemComponent,
                            StoreFinderMapComponent,
                            StoreFinderPaginationDetailsComponent,
                            StoreFinderSearchComponent,
                            StoreFinderSearchResultComponent,
                            StoreFinderListComponent,
                            StoreFinderStoreDescriptionComponent,
                            StoreFinderStoresCountComponent,
                            StoreFinderStoreComponent,
                        ],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.AbstractStoreItemComponent = AbstractStoreItemComponent;
    exports.ScheduleComponent = ScheduleComponent;
    exports.StoreFinderComponent = StoreFinderComponent;
    exports.StoreFinderComponentsModule = StoreFinderComponentsModule;
    exports.StoreFinderGridComponent = StoreFinderGridComponent;
    exports.StoreFinderHeaderComponent = StoreFinderHeaderComponent;
    exports.StoreFinderListComponent = StoreFinderListComponent;
    exports.StoreFinderListItemComponent = StoreFinderListItemComponent;
    exports.StoreFinderMapComponent = StoreFinderMapComponent;
    exports.StoreFinderPaginationDetailsComponent = StoreFinderPaginationDetailsComponent;
    exports.StoreFinderSearchComponent = StoreFinderSearchComponent;
    exports.StoreFinderSearchResultComponent = StoreFinderSearchResultComponent;
    exports.StoreFinderStoreComponent = StoreFinderStoreComponent;
    exports.StoreFinderStoreDescriptionComponent = StoreFinderStoreDescriptionComponent;
    exports.StoreFinderStoresCountComponent = StoreFinderStoresCountComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=spartacus-storefinder-components.umd.js.map
