(function (global, factory) {
        typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@spartacus/core'), require('@angular/common'), require('@ngrx/store'), require('rxjs'), require('rxjs/operators'), require('@ngrx/effects')) :
        typeof define === 'function' && define.amd ? define('@spartacus/storefinder/core', ['exports', '@angular/core', '@spartacus/core', '@angular/common', '@ngrx/store', 'rxjs', 'rxjs/operators', '@ngrx/effects'], factory) :
        (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.spartacus = global.spartacus || {}, global.spartacus.storefinder = global.spartacus.storefinder || {}, global.spartacus.storefinder.core = {}), global.ng.core, global.core, global.ng.common, global.store, global.rxjs, global.rxjs.operators, global.effects));
}(this, (function (exports, i0, i2, common, i1, rxjs, operators, i1$1) { 'use strict';

        function _interopNamespace(e) {
                if (e && e.__esModule) return e;
                var n = Object.create(null);
                if (e) {
                        Object.keys(e).forEach(function (k) {
                                if (k !== 'default') {
                                        var d = Object.getOwnPropertyDescriptor(e, k);
                                        Object.defineProperty(n, k, d.get ? d : {
                                                enumerable: true,
                                                get: function () {
                                                        return e[k];
                                                }
                                        });
                                }
                        });
                }
                n['default'] = e;
                return Object.freeze(n);
        }

        var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
        var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
        var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
        var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);

        var StoreFinderConfig = /** @class */ (function () {
            function StoreFinderConfig() {
            }
            return StoreFinderConfig;
        }());
        StoreFinderConfig.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderConfig, deps: [], target: i0__namespace.ɵɵFactoryTarget.Injectable });
        StoreFinderConfig.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderConfig, providedIn: 'root', useExisting: i2.Config });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderConfig, decorators: [{
                    type: i0.Injectable,
                    args: [{
                            providedIn: 'root',
                            useExisting: i2.Config,
                        }]
                }] });

        var StoreFinderAdapter = /** @class */ (function () {
            function StoreFinderAdapter() {
            }
            return StoreFinderAdapter;
        }());

        var StoreFinderConnector = /** @class */ (function () {
            function StoreFinderConnector(adapter) {
                this.adapter = adapter;
            }
            StoreFinderConnector.prototype.search = function (query, searchConfig, longitudeLatitude, radius) {
                return this.adapter.search(query, searchConfig, longitudeLatitude, radius);
            };
            StoreFinderConnector.prototype.getCounts = function () {
                return this.adapter.loadCounts();
            };
            StoreFinderConnector.prototype.get = function (storeId) {
                return this.adapter.load(storeId);
            };
            return StoreFinderConnector;
        }());
        StoreFinderConnector.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderConnector, deps: [{ token: StoreFinderAdapter }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
        StoreFinderConnector.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderConnector, providedIn: 'root' });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderConnector, decorators: [{
                    type: i0.Injectable,
                    args: [{ providedIn: 'root' }]
                }], ctorParameters: function () { return [{ type: StoreFinderAdapter }]; } });

        var STORE_FINDER_SEARCH_PAGE_NORMALIZER = new i0.InjectionToken('StoreFinderSearchPageNormalizer');
        var STORE_COUNT_NORMALIZER = new i0.InjectionToken('StoreCountNormalizer');

        /*! *****************************************************************************
        Copyright (c) Microsoft Corporation.

        Permission to use, copy, modify, and/or distribute this software for any
        purpose with or without fee is hereby granted.

        THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
        REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
        AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
        INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
        LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
        OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
        PERFORMANCE OF THIS SOFTWARE.
        ***************************************************************************** */
        /* global Reflect, Promise */
        var extendStatics = function (d, b) {
            extendStatics = Object.setPrototypeOf ||
                ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
                function (d, b) { for (var p in b)
                    if (Object.prototype.hasOwnProperty.call(b, p))
                        d[p] = b[p]; };
            return extendStatics(d, b);
        };
        function __extends(d, b) {
            if (typeof b !== "function" && b !== null)
                throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
            extendStatics(d, b);
            function __() { this.constructor = d; }
            d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
        }
        var __assign = function () {
            __assign = Object.assign || function __assign(t) {
                for (var s, i = 1, n = arguments.length; i < n; i++) {
                    s = arguments[i];
                    for (var p in s)
                        if (Object.prototype.hasOwnProperty.call(s, p))
                            t[p] = s[p];
                }
                return t;
            };
            return __assign.apply(this, arguments);
        };
        function __rest(s, e) {
            var t = {};
            for (var p in s)
                if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                    t[p] = s[p];
            if (s != null && typeof Object.getOwnPropertySymbols === "function")
                for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                        t[p[i]] = s[p[i]];
                }
            return t;
        }
        function __decorate(decorators, target, key, desc) {
            var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
            if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
                r = Reflect.decorate(decorators, target, key, desc);
            else
                for (var i = decorators.length - 1; i >= 0; i--)
                    if (d = decorators[i])
                        r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
            return c > 3 && r && Object.defineProperty(target, key, r), r;
        }
        function __param(paramIndex, decorator) {
            return function (target, key) { decorator(target, key, paramIndex); };
        }
        function __metadata(metadataKey, metadataValue) {
            if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
                return Reflect.metadata(metadataKey, metadataValue);
        }
        function __awaiter(thisArg, _arguments, P, generator) {
            function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
            return new (P || (P = Promise))(function (resolve, reject) {
                function fulfilled(value) { try {
                    step(generator.next(value));
                }
                catch (e) {
                    reject(e);
                } }
                function rejected(value) { try {
                    step(generator["throw"](value));
                }
                catch (e) {
                    reject(e);
                } }
                function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
                step((generator = generator.apply(thisArg, _arguments || [])).next());
            });
        }
        function __generator(thisArg, body) {
            var _ = { label: 0, sent: function () { if (t[0] & 1)
                    throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
            return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
            function verb(n) { return function (v) { return step([n, v]); }; }
            function step(op) {
                if (f)
                    throw new TypeError("Generator is already executing.");
                while (_)
                    try {
                        if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                            return t;
                        if (y = 0, t)
                            op = [op[0] & 2, t.value];
                        switch (op[0]) {
                            case 0:
                            case 1:
                                t = op;
                                break;
                            case 4:
                                _.label++;
                                return { value: op[1], done: false };
                            case 5:
                                _.label++;
                                y = op[1];
                                op = [0];
                                continue;
                            case 7:
                                op = _.ops.pop();
                                _.trys.pop();
                                continue;
                            default:
                                if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                    _ = 0;
                                    continue;
                                }
                                if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                    _.label = op[1];
                                    break;
                                }
                                if (op[0] === 6 && _.label < t[1]) {
                                    _.label = t[1];
                                    t = op;
                                    break;
                                }
                                if (t && _.label < t[2]) {
                                    _.label = t[2];
                                    _.ops.push(op);
                                    break;
                                }
                                if (t[2])
                                    _.ops.pop();
                                _.trys.pop();
                                continue;
                        }
                        op = body.call(thisArg, _);
                    }
                    catch (e) {
                        op = [6, e];
                        y = 0;
                    }
                    finally {
                        f = t = 0;
                    }
                if (op[0] & 5)
                    throw op[1];
                return { value: op[0] ? op[1] : void 0, done: true };
            }
        }
        var __createBinding = Object.create ? (function (o, m, k, k2) {
            if (k2 === undefined)
                k2 = k;
            Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
        }) : (function (o, m, k, k2) {
            if (k2 === undefined)
                k2 = k;
            o[k2] = m[k];
        });
        function __exportStar(m, o) {
            for (var p in m)
                if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                    __createBinding(o, m, p);
        }
        function __values(o) {
            var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
            if (m)
                return m.call(o);
            if (o && typeof o.length === "number")
                return {
                    next: function () {
                        if (o && i >= o.length)
                            o = void 0;
                        return { value: o && o[i++], done: !o };
                    }
                };
            throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
        }
        function __read(o, n) {
            var m = typeof Symbol === "function" && o[Symbol.iterator];
            if (!m)
                return o;
            var i = m.call(o), r, ar = [], e;
            try {
                while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                    ar.push(r.value);
            }
            catch (error) {
                e = { error: error };
            }
            finally {
                try {
                    if (r && !r.done && (m = i["return"]))
                        m.call(i);
                }
                finally {
                    if (e)
                        throw e.error;
                }
            }
            return ar;
        }
        /** @deprecated */
        function __spread() {
            for (var ar = [], i = 0; i < arguments.length; i++)
                ar = ar.concat(__read(arguments[i]));
            return ar;
        }
        /** @deprecated */
        function __spreadArrays() {
            for (var s = 0, i = 0, il = arguments.length; i < il; i++)
                s += arguments[i].length;
            for (var r = Array(s), k = 0, i = 0; i < il; i++)
                for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                    r[k] = a[j];
            return r;
        }
        function __spreadArray(to, from, pack) {
            if (pack || arguments.length === 2)
                for (var i = 0, l = from.length, ar; i < l; i++) {
                    if (ar || !(i in from)) {
                        if (!ar)
                            ar = Array.prototype.slice.call(from, 0, i);
                        ar[i] = from[i];
                    }
                }
            return to.concat(ar || from);
        }
        function __await(v) {
            return this instanceof __await ? (this.v = v, this) : new __await(v);
        }
        function __asyncGenerator(thisArg, _arguments, generator) {
            if (!Symbol.asyncIterator)
                throw new TypeError("Symbol.asyncIterator is not defined.");
            var g = generator.apply(thisArg, _arguments || []), i, q = [];
            return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
            function verb(n) { if (g[n])
                i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
            function resume(n, v) { try {
                step(g[n](v));
            }
            catch (e) {
                settle(q[0][3], e);
            } }
            function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
            function fulfill(value) { resume("next", value); }
            function reject(value) { resume("throw", value); }
            function settle(f, v) { if (f(v), q.shift(), q.length)
                resume(q[0][0], q[0][1]); }
        }
        function __asyncDelegator(o) {
            var i, p;
            return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
            function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
        }
        function __asyncValues(o) {
            if (!Symbol.asyncIterator)
                throw new TypeError("Symbol.asyncIterator is not defined.");
            var m = o[Symbol.asyncIterator], i;
            return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
            function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
            function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
        }
        function __makeTemplateObject(cooked, raw) {
            if (Object.defineProperty) {
                Object.defineProperty(cooked, "raw", { value: raw });
            }
            else {
                cooked.raw = raw;
            }
            return cooked;
        }
        ;
        var __setModuleDefault = Object.create ? (function (o, v) {
            Object.defineProperty(o, "default", { enumerable: true, value: v });
        }) : function (o, v) {
            o["default"] = v;
        };
        function __importStar(mod) {
            if (mod && mod.__esModule)
                return mod;
            var result = {};
            if (mod != null)
                for (var k in mod)
                    if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                        __createBinding(result, mod, k);
            __setModuleDefault(result, mod);
            return result;
        }
        function __importDefault(mod) {
            return (mod && mod.__esModule) ? mod : { default: mod };
        }
        function __classPrivateFieldGet(receiver, state, kind, f) {
            if (kind === "a" && !f)
                throw new TypeError("Private accessor was defined without a getter");
            if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
                throw new TypeError("Cannot read private member from an object whose class did not declare it");
            return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
        }
        function __classPrivateFieldSet(receiver, state, value, kind, f) {
            if (kind === "m")
                throw new TypeError("Private method is not writable");
            if (kind === "a" && !f)
                throw new TypeError("Private accessor was defined without a setter");
            if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
                throw new TypeError("Cannot write private member to an object whose class did not declare it");
            return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
        }

        var STORE_FINDER_FEATURE = 'stores';
        var STORE_FINDER_DATA = '[StoreFinder] Store Finder Data';

        var FIND_STORES_ON_HOLD = '[StoreFinder] On Hold';
        var FIND_STORES = '[StoreFinder] Find Stores';
        var FIND_STORES_FAIL = '[StoreFinder] Find Stores Fail';
        var FIND_STORES_SUCCESS = '[StoreFinder] Find Stores Success';
        var FIND_STORE_BY_ID = '[StoreFinder] Find a Store by Id';
        var FIND_STORE_BY_ID_FAIL = '[StoreFinder] Find a Store by Id Fail';
        var FIND_STORE_BY_ID_SUCCESS = '[StoreFinder] Find a Store by Id Success';
        var FindStoresOnHold = /** @class */ (function (_super) {
            __extends(FindStoresOnHold, _super);
            function FindStoresOnHold() {
                var _this = _super.call(this, STORE_FINDER_DATA) || this;
                _this.type = FIND_STORES_ON_HOLD;
                return _this;
            }
            return FindStoresOnHold;
        }(i2.StateUtils.LoaderLoadAction));
        var FindStores = /** @class */ (function (_super) {
            __extends(FindStores, _super);
            function FindStores(payload) {
                var _this = _super.call(this, STORE_FINDER_DATA) || this;
                _this.payload = payload;
                _this.type = FIND_STORES;
                return _this;
            }
            return FindStores;
        }(i2.StateUtils.LoaderLoadAction));
        var FindStoresFail = /** @class */ (function (_super) {
            __extends(FindStoresFail, _super);
            function FindStoresFail(payload) {
                var _this = _super.call(this, STORE_FINDER_DATA, payload) || this;
                _this.payload = payload;
                _this.type = FIND_STORES_FAIL;
                return _this;
            }
            return FindStoresFail;
        }(i2.StateUtils.LoaderFailAction));
        var FindStoresSuccess = /** @class */ (function (_super) {
            __extends(FindStoresSuccess, _super);
            function FindStoresSuccess(payload) {
                var _this = _super.call(this, STORE_FINDER_DATA) || this;
                _this.payload = payload;
                _this.type = FIND_STORES_SUCCESS;
                return _this;
            }
            return FindStoresSuccess;
        }(i2.StateUtils.LoaderSuccessAction));
        var FindStoreById = /** @class */ (function (_super) {
            __extends(FindStoreById, _super);
            function FindStoreById(payload) {
                var _this = _super.call(this, STORE_FINDER_DATA) || this;
                _this.payload = payload;
                _this.type = FIND_STORE_BY_ID;
                return _this;
            }
            return FindStoreById;
        }(i2.StateUtils.LoaderLoadAction));
        var FindStoreByIdFail = /** @class */ (function (_super) {
            __extends(FindStoreByIdFail, _super);
            function FindStoreByIdFail(payload) {
                var _this = _super.call(this, STORE_FINDER_DATA, payload) || this;
                _this.payload = payload;
                _this.type = FIND_STORE_BY_ID_FAIL;
                return _this;
            }
            return FindStoreByIdFail;
        }(i2.StateUtils.LoaderFailAction));
        var FindStoreByIdSuccess = /** @class */ (function (_super) {
            __extends(FindStoreByIdSuccess, _super);
            function FindStoreByIdSuccess(payload) {
                var _this = _super.call(this, STORE_FINDER_DATA) || this;
                _this.payload = payload;
                _this.type = FIND_STORE_BY_ID_SUCCESS;
                return _this;
            }
            return FindStoreByIdSuccess;
        }(i2.StateUtils.LoaderSuccessAction));

        var VIEW_ALL_STORES = '[StoreFinder] View All Stores';
        var VIEW_ALL_STORES_FAIL = '[StoreFinder] View All Stores Fail';
        var VIEW_ALL_STORES_SUCCESS = '[StoreFinder] View All Stores Success';
        var CLEAR_STORE_FINDER_DATA = '[StoreFinder] Clear Data';
        var ViewAllStores = /** @class */ (function (_super) {
            __extends(ViewAllStores, _super);
            function ViewAllStores() {
                var _this = _super.call(this, STORE_FINDER_DATA) || this;
                _this.type = VIEW_ALL_STORES;
                return _this;
            }
            return ViewAllStores;
        }(i2.StateUtils.LoaderLoadAction));
        var ViewAllStoresFail = /** @class */ (function (_super) {
            __extends(ViewAllStoresFail, _super);
            function ViewAllStoresFail(payload) {
                var _this = _super.call(this, STORE_FINDER_DATA, payload) || this;
                _this.payload = payload;
                _this.type = VIEW_ALL_STORES_FAIL;
                return _this;
            }
            return ViewAllStoresFail;
        }(i2.StateUtils.LoaderFailAction));
        var ViewAllStoresSuccess = /** @class */ (function (_super) {
            __extends(ViewAllStoresSuccess, _super);
            function ViewAllStoresSuccess(payload) {
                var _this = _super.call(this, STORE_FINDER_DATA) || this;
                _this.payload = payload;
                _this.type = VIEW_ALL_STORES_SUCCESS;
                return _this;
            }
            return ViewAllStoresSuccess;
        }(i2.StateUtils.LoaderSuccessAction));
        var ClearStoreFinderData = /** @class */ (function () {
            function ClearStoreFinderData() {
                this.type = CLEAR_STORE_FINDER_DATA;
            }
            return ClearStoreFinderData;
        }());

        var storeFinderGroup_actions = /*#__PURE__*/Object.freeze({
                __proto__: null,
                FIND_STORES_ON_HOLD: FIND_STORES_ON_HOLD,
                FIND_STORES: FIND_STORES,
                FIND_STORES_FAIL: FIND_STORES_FAIL,
                FIND_STORES_SUCCESS: FIND_STORES_SUCCESS,
                FIND_STORE_BY_ID: FIND_STORE_BY_ID,
                FIND_STORE_BY_ID_FAIL: FIND_STORE_BY_ID_FAIL,
                FIND_STORE_BY_ID_SUCCESS: FIND_STORE_BY_ID_SUCCESS,
                FindStoresOnHold: FindStoresOnHold,
                FindStores: FindStores,
                FindStoresFail: FindStoresFail,
                FindStoresSuccess: FindStoresSuccess,
                FindStoreById: FindStoreById,
                FindStoreByIdFail: FindStoreByIdFail,
                FindStoreByIdSuccess: FindStoreByIdSuccess,
                VIEW_ALL_STORES: VIEW_ALL_STORES,
                VIEW_ALL_STORES_FAIL: VIEW_ALL_STORES_FAIL,
                VIEW_ALL_STORES_SUCCESS: VIEW_ALL_STORES_SUCCESS,
                CLEAR_STORE_FINDER_DATA: CLEAR_STORE_FINDER_DATA,
                ViewAllStores: ViewAllStores,
                ViewAllStoresFail: ViewAllStoresFail,
                ViewAllStoresSuccess: ViewAllStoresSuccess,
                ClearStoreFinderData: ClearStoreFinderData
        });

        var getStoreFinderState = i1.createFeatureSelector(STORE_FINDER_FEATURE);

        var getFindStoresState = i1.createSelector(getStoreFinderState, function (storesState) { return storesState.findStores; });
        var getFindStoresEntities = i1.createSelector(getFindStoresState, function (state) { return i2.StateUtils.loaderValueSelector(state); });
        var getStoresLoading = i1.createSelector(getFindStoresState, function (state) { return i2.StateUtils.loaderLoadingSelector(state); });
        var getStoresSuccess = i1.createSelector(getFindStoresState, function (state) { return i2.StateUtils.loaderSuccessSelector(state); });

        var getViewAllStoresState = i1.createSelector(getStoreFinderState, function (storesState) { return storesState.viewAllStores; });
        var getViewAllStoresEntities = i1.createSelector(getViewAllStoresState, function (state) { return i2.StateUtils.loaderValueSelector(state); });
        var getViewAllStoresLoading = i1.createSelector(getViewAllStoresState, function (state) { return i2.StateUtils.loaderLoadingSelector(state); });

        var storeFinderGroup_selectors = /*#__PURE__*/Object.freeze({
                __proto__: null,
                getFindStoresState: getFindStoresState,
                getFindStoresEntities: getFindStoresEntities,
                getStoresLoading: getStoresLoading,
                getStoresSuccess: getStoresSuccess,
                getViewAllStoresState: getViewAllStoresState,
                getViewAllStoresEntities: getViewAllStoresEntities,
                getViewAllStoresLoading: getViewAllStoresLoading
        });

        var StoreFinderService = /** @class */ (function () {
            function StoreFinderService(store, winRef, globalMessageService, routingService, platformId) {
                this.store = store;
                this.winRef = winRef;
                this.globalMessageService = globalMessageService;
                this.routingService = routingService;
                this.platformId = platformId;
                this.geolocationWatchId = null;
                this.subscription = new rxjs.Subscription();
                this.reloadStoreEntitiesOnContextChange();
            }
            /**
             * Returns boolean observable for store's loading state
             */
            StoreFinderService.prototype.getStoresLoading = function () {
                return this.store.pipe(i1.select(getStoresLoading));
            };
            /**
             * Returns boolean observable for store's success state
             */
            StoreFinderService.prototype.getStoresLoaded = function () {
                return this.store.pipe(i1.select(getStoresSuccess));
            };
            /**
             * Returns observable for store's entities
             */
            StoreFinderService.prototype.getFindStoresEntities = function () {
                return this.store.pipe(i1.select(getFindStoresEntities), operators.map(function (data) { return data.findStoresEntities; }));
            };
            /**
             * Returns observable for a single store by Id
             */
            StoreFinderService.prototype.getFindStoreEntityById = function () {
                return this.store.pipe(i1.select(getFindStoresEntities), operators.map(function (data) { return data.findStoreEntityById; }));
            };
            /**
             * Returns boolean observable for view all store's loading state
             */
            StoreFinderService.prototype.getViewAllStoresLoading = function () {
                return this.store.pipe(i1.select(getViewAllStoresLoading));
            };
            /**
             * Returns observable for view all store's entities
             */
            StoreFinderService.prototype.getViewAllStoresEntities = function () {
                return this.store.pipe(i1.select(getViewAllStoresEntities), operators.map(function (data) { return data.viewAllStoresEntities; }));
            };
            /**
             * Store finding action functionality
             * @param queryText text query
             * @param searchConfig search configuration
             * @param longitudeLatitude longitude and latitude coordinates
             * @param countryIsoCode country ISO code
             * @param useMyLocation current location coordinates
             * @param radius radius of the scope from the center point
             */
            StoreFinderService.prototype.findStoresAction = function (queryText, searchConfig, longitudeLatitude, countryIsoCode, useMyLocation, radius) {
                var _this = this;
                if (useMyLocation && this.winRef.nativeWindow) {
                    this.clearWatchGeolocation(new FindStoresOnHold());
                    this.geolocationWatchId =
                        this.winRef.nativeWindow.navigator.geolocation.watchPosition(function (pos) {
                            var position = {
                                longitude: pos.coords.longitude,
                                latitude: pos.coords.latitude,
                            };
                            _this.clearWatchGeolocation(new FindStores({
                                queryText: queryText,
                                searchConfig: searchConfig,
                                longitudeLatitude: position,
                                countryIsoCode: countryIsoCode,
                                radius: radius,
                            }));
                        }, function () {
                            _this.globalMessageService.add({ key: 'storeFinder.geolocationNotEnabled' }, i2.GlobalMessageType.MSG_TYPE_ERROR);
                            _this.routingService.go(['/store-finder']);
                        });
                }
                else {
                    this.clearWatchGeolocation(new FindStores({
                        queryText: queryText,
                        searchConfig: searchConfig,
                        longitudeLatitude: longitudeLatitude,
                        countryIsoCode: countryIsoCode,
                        radius: radius,
                    }));
                }
            };
            /**
             * View all stores
             */
            StoreFinderService.prototype.viewAllStores = function () {
                this.clearWatchGeolocation(new ViewAllStores());
            };
            /**
             * View all stores by id
             * @param storeId store id
             */
            StoreFinderService.prototype.viewStoreById = function (storeId) {
                this.clearWatchGeolocation(new FindStoreById({ storeId: storeId }));
            };
            StoreFinderService.prototype.clearWatchGeolocation = function (callbackAction) {
                var _a;
                if (this.geolocationWatchId !== null) {
                    (_a = this.winRef.nativeWindow) === null || _a === void 0 ? void 0 : _a.navigator.geolocation.clearWatch(this.geolocationWatchId);
                    this.geolocationWatchId = null;
                }
                this.store.dispatch(callbackAction);
            };
            StoreFinderService.prototype.isEmpty = function (store) {
                return (!store || (typeof store === 'object' && Object.keys(store).length === 0));
            };
            /**
             * Reload store data when store entities are empty because of the context change
             */
            StoreFinderService.prototype.reloadStoreEntitiesOnContextChange = function () {
                var _this = this;
                if (common.isPlatformBrowser(this.platformId) || !this.platformId) {
                    this.subscription = this.getFindStoresEntities()
                        .pipe(operators.filter(function (data) { return _this.isEmpty(data); }), operators.withLatestFrom(this.getStoresLoading(), this.getStoresLoaded(), this.routingService.getParams()))
                        .subscribe(function (_b) {
                        var _c = __read(_b, 4), loading = _c[1], loaded = _c[2], routeParams = _c[3];
                        if (!loading && !loaded) {
                            if (routeParams.country && !routeParams.store) {
                                _this.callFindStoresAction(routeParams);
                            }
                            if (routeParams.store) {
                                _this.viewStoreById(routeParams.store);
                            }
                        }
                    });
                }
            };
            StoreFinderService.prototype.callFindStoresAction = function (routeParams) {
                this.findStoresAction('', {
                    pageSize: -1,
                }, undefined, routeParams.country);
            };
            StoreFinderService.prototype.ngOnDestroy = function () {
                var _a;
                (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();
            };
            /**
             * Returns store latitude
             * @param location store location
             */
            StoreFinderService.prototype.getStoreLatitude = function (location) {
                var _a;
                return (_a = location === null || location === void 0 ? void 0 : location.geoPoint) === null || _a === void 0 ? void 0 : _a.latitude;
            };
            /**
             * Returns store longitude
             * @param location store location
             */
            StoreFinderService.prototype.getStoreLongitude = function (location) {
                var _a;
                return (_a = location === null || location === void 0 ? void 0 : location.geoPoint) === null || _a === void 0 ? void 0 : _a.longitude;
            };
            return StoreFinderService;
        }());
        StoreFinderService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderService, deps: [{ token: i1__namespace.Store }, { token: i2__namespace.WindowRef }, { token: i2__namespace.GlobalMessageService }, { token: i2__namespace.RoutingService }, { token: i0.PLATFORM_ID }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
        StoreFinderService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderService, providedIn: 'root' });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderService, decorators: [{
                    type: i0.Injectable,
                    args: [{
                            providedIn: 'root',
                        }]
                }], ctorParameters: function () {
                return [{ type: i1__namespace.Store }, { type: i2__namespace.WindowRef }, { type: i2__namespace.GlobalMessageService }, { type: i2__namespace.RoutingService }, { type: undefined, decorators: [{
                                type: i0.Inject,
                                args: [i0.PLATFORM_ID]
                            }] }];
            } });

        /// <reference types="@types/googlemaps" />
        var GoogleMapRendererService = /** @class */ (function () {
            function GoogleMapRendererService(config, storeFinderService, scriptLoader) {
                this.config = config;
                this.storeFinderService = storeFinderService;
                this.scriptLoader = scriptLoader;
                this.googleMap = null;
            }
            /**
             * Renders google map on the given element and draws markers on it.
             * If map already exists it will use an existing map otherwise it will create one
             * @param mapElement HTML element inside of which the map will be displayed
             * @param locations array containign geo data to be displayed on the map
             * @param selectMarkerHandler function to handle whenever a marker on a map is clicked
             */
            GoogleMapRendererService.prototype.renderMap = function (mapElement, locations, selectMarkerHandler) {
                var _this = this;
                if (Object.entries(locations[Object.keys(locations)[0]]).length > 0)
                    if (this.googleMap === null) {
                        this.scriptLoader.embedScript({
                            src: this.config.googleMaps.apiUrl,
                            params: { key: this.config.googleMaps.apiKey },
                            attributes: { type: 'text/javascript' },
                            callback: function () {
                                _this.drawMap(mapElement, locations, selectMarkerHandler);
                            },
                        });
                    }
                    else {
                        this.drawMap(mapElement, locations, selectMarkerHandler);
                    }
            };
            /**
             * Centers the map to the given point
             * @param latitute latitude of the new center
             * @param longitude longitude of the new center
             */
            GoogleMapRendererService.prototype.centerMap = function (latitute, longitude) {
                this.googleMap.panTo({ lat: latitute, lng: longitude });
                this.googleMap.setZoom(this.config.googleMaps.selectedMarkerScale);
            };
            /**
             * Defines and returns {@link google.maps.LatLng} representing a point where the map will be centered
             * @param locations list of locations
             */
            GoogleMapRendererService.prototype.defineMapCenter = function (locations) {
                return new google.maps.LatLng(this.storeFinderService.getStoreLatitude(locations[0]), this.storeFinderService.getStoreLongitude(locations[0]));
            };
            /**
             * Creates google map inside if the given HTML element centered to the given point
             * @param mapElement {@link HTMLElement} inside of which the map will be created
             * @param mapCenter {@link google.maps.LatLng} the point where the map will be centered
             */
            GoogleMapRendererService.prototype.initMap = function (mapElement, mapCenter) {
                var gestureOption = 'greedy';
                var mapProp = {
                    center: mapCenter,
                    zoom: this.config.googleMaps.scale,
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                    gestureHandling: gestureOption,
                };
                this.googleMap = new google.maps.Map(mapElement, mapProp);
            };
            /**
             * Erases the current map's markers and create a new one based on the given locations
             * @param locations array of locations to be displayed on the map
             * @param selectMarkerHandler function to handle whenever a marker on a map is clicked
             */
            GoogleMapRendererService.prototype.createMarkers = function (locations, selectMarkerHandler) {
                var _this = this;
                this.markers = [];
                locations.forEach(function (element, index) {
                    var marker = new google.maps.Marker({
                        position: new google.maps.LatLng(_this.storeFinderService.getStoreLatitude(element), _this.storeFinderService.getStoreLongitude(element)),
                        label: index + 1 + '',
                    });
                    _this.markers.push(marker);
                    marker.setMap(_this.googleMap);
                    marker.addListener('mouseover', function () {
                        marker.setAnimation(google.maps.Animation.BOUNCE);
                    });
                    marker.addListener('mouseout', function () {
                        marker.setAnimation(null);
                    });
                    if (selectMarkerHandler) {
                        marker.addListener('click', function () {
                            selectMarkerHandler(index);
                        });
                    }
                });
            };
            /**
             * Initialize and draw the map
             * @param mapElement {@link HTMLElement} inside of which the map will be drawn
             * @param locations array of locations to be displayed on the map
             * @param selectMarkerHandler function to handle whenever a marker on a map is clicked
             */
            GoogleMapRendererService.prototype.drawMap = function (mapElement, locations, selectMarkerHandler) {
                this.initMap(mapElement, this.defineMapCenter(locations));
                this.createMarkers(locations, selectMarkerHandler);
            };
            return GoogleMapRendererService;
        }());
        GoogleMapRendererService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: GoogleMapRendererService, deps: [{ token: StoreFinderConfig }, { token: StoreFinderService }, { token: i2__namespace.ScriptLoader }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
        GoogleMapRendererService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: GoogleMapRendererService, providedIn: 'root' });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: GoogleMapRendererService, decorators: [{
                    type: i0.Injectable,
                    args: [{
                            providedIn: 'root',
                        }]
                }], ctorParameters: function () { return [{ type: StoreFinderConfig }, { type: StoreFinderService }, { type: i2__namespace.ScriptLoader }]; } });

        var defaultStoreFinderConfig = {
            googleMaps: {
                apiUrl: 'https://maps.googleapis.com/maps/api/js',
                apiKey: '',
                scale: 5,
                selectedMarkerScale: 17,
                radius: 50000,
            },
        };

        var initialState$1 = {
            findStoresEntities: {},
            findStoreEntityById: {},
        };
        function findStoresReducer(state, action) {
            if (state === void 0) { state = initialState$1; }
            switch (action.type) {
                case FIND_STORES_SUCCESS: {
                    var findStoresEntities = action.payload;
                    return Object.assign(Object.assign({}, state), { findStoresEntities: findStoresEntities });
                }
                case FIND_STORE_BY_ID_SUCCESS: {
                    var findStoreEntityById = action.payload;
                    return Object.assign(Object.assign({}, state), { findStoreEntityById: findStoreEntityById });
                }
            }
            return state;
        }

        var initialState = {
            viewAllStoresEntities: {},
        };
        function viewAllStoresReducer(state, action) {
            if (state === void 0) { state = initialState; }
            switch (action.type) {
                case VIEW_ALL_STORES_SUCCESS: {
                    var viewAllStoresEntities = action.payload;
                    return Object.assign(Object.assign({}, state), { viewAllStoresEntities: viewAllStoresEntities });
                }
            }
            return state;
        }

        function getReducers() {
            return {
                findStores: i2.StateUtils.loaderReducer(STORE_FINDER_DATA, findStoresReducer),
                viewAllStores: i2.StateUtils.loaderReducer(STORE_FINDER_DATA, viewAllStoresReducer),
            };
        }
        var reducerToken = new i0.InjectionToken('StoreFinderReducers');
        var reducerProvider = {
            provide: reducerToken,
            useFactory: getReducers,
        };
        function clearStoreFinderState(reducer) {
            return function (state, action) {
                if (action.type === i2.SiteContextActions.LANGUAGE_CHANGE) {
                    state = undefined;
                }
                if (action.type === CLEAR_STORE_FINDER_DATA) {
                    state = undefined;
                }
                return reducer(state, action);
            };
        }
        var metaReducers = [clearStoreFinderState];

        var FindStoresEffect = /** @class */ (function () {
            function FindStoresEffect(actions$, storeFinderConnector) {
                var _this = this;
                this.actions$ = actions$;
                this.storeFinderConnector = storeFinderConnector;
                this.findStores$ = this.actions$.pipe(i1$1.ofType(FIND_STORES), operators.map(function (action) { return action.payload; }), operators.mergeMap(function (payload) { return _this.storeFinderConnector
                    .search(payload.queryText, payload.searchConfig, payload.longitudeLatitude, payload.radius)
                    .pipe(operators.map(function (data) {
                    if (payload.countryIsoCode) {
                        data.stores = data.stores.filter(function (store) { return store.address.country.isocode === payload.countryIsoCode; });
                        data.stores.sort(function (a, b) { return a.name < b.name ? -1 : a.name > b.name ? 1 : 0; });
                    }
                    return new FindStoresSuccess(data);
                }), operators.catchError(function (error) { return rxjs.of(new FindStoresFail(i2.normalizeHttpError(error))); })); }));
                this.findStoreById$ = this.actions$.pipe(i1$1.ofType(FIND_STORE_BY_ID), operators.map(function (action) { return action.payload; }), operators.switchMap(function (payload) { return _this.storeFinderConnector.get(payload.storeId).pipe(operators.map(function (data) { return new FindStoreByIdSuccess(data); }), operators.catchError(function (error) { return rxjs.of(new FindStoreByIdFail(i2.normalizeHttpError(error))); })); }));
            }
            return FindStoresEffect;
        }());
        FindStoresEffect.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: FindStoresEffect, deps: [{ token: i1__namespace$1.Actions }, { token: StoreFinderConnector }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
        FindStoresEffect.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: FindStoresEffect });
        __decorate([
            i1$1.Effect()
        ], FindStoresEffect.prototype, "findStores$", void 0);
        __decorate([
            i1$1.Effect()
        ], FindStoresEffect.prototype, "findStoreById$", void 0);
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: FindStoresEffect, decorators: [{
                    type: i0.Injectable
                }], ctorParameters: function () { return [{ type: i1__namespace$1.Actions }, { type: StoreFinderConnector }]; }, propDecorators: { findStores$: [], findStoreById$: [] } });

        var ViewAllStoresEffect = /** @class */ (function () {
            function ViewAllStoresEffect(actions$, storeFinderConnector) {
                var _this = this;
                this.actions$ = actions$;
                this.storeFinderConnector = storeFinderConnector;
                this.viewAllStores$ = this.actions$.pipe(i1$1.ofType(VIEW_ALL_STORES, CLEAR_STORE_FINDER_DATA), operators.switchMap(function () {
                    return _this.storeFinderConnector.getCounts().pipe(operators.map(function (data) {
                        data.sort(function (a, b) { return (a.name < b.name ? -1 : a.name > b.name ? 1 : 0); });
                        return new ViewAllStoresSuccess(data);
                    }), operators.catchError(function (error) { return rxjs.of(new ViewAllStoresFail(i2.normalizeHttpError(error))); }));
                }));
                this.clearStoreFinderData$ = this.actions$.pipe(i1$1.ofType(i2.SiteContextActions.LANGUAGE_CHANGE, i2.SiteContextActions.CURRENCY_CHANGE), operators.map(function () {
                    return new ClearStoreFinderData();
                }));
            }
            return ViewAllStoresEffect;
        }());
        ViewAllStoresEffect.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ViewAllStoresEffect, deps: [{ token: i1__namespace$1.Actions }, { token: StoreFinderConnector }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
        ViewAllStoresEffect.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ViewAllStoresEffect });
        __decorate([
            i1$1.Effect()
        ], ViewAllStoresEffect.prototype, "viewAllStores$", void 0);
        __decorate([
            i1$1.Effect()
        ], ViewAllStoresEffect.prototype, "clearStoreFinderData$", void 0);
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ViewAllStoresEffect, decorators: [{
                    type: i0.Injectable
                }], ctorParameters: function () { return [{ type: i1__namespace$1.Actions }, { type: StoreFinderConnector }]; }, propDecorators: { viewAllStores$: [], clearStoreFinderData$: [] } });

        var effects = [FindStoresEffect, ViewAllStoresEffect];

        var StoreFinderStoreModule = /** @class */ (function () {
            function StoreFinderStoreModule() {
            }
            return StoreFinderStoreModule;
        }());
        StoreFinderStoreModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderStoreModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
        StoreFinderStoreModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderStoreModule, imports: [common.CommonModule, i1__namespace.StoreFeatureModule, i1__namespace$1.EffectsFeatureModule] });
        StoreFinderStoreModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderStoreModule, providers: [reducerProvider], imports: [[
                    common.CommonModule,
                    i1.StoreModule.forFeature(STORE_FINDER_FEATURE, reducerToken, {
                        metaReducers: metaReducers,
                    }),
                    i1$1.EffectsModule.forFeature(effects),
                ]] });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderStoreModule, decorators: [{
                    type: i0.NgModule,
                    args: [{
                            imports: [
                                common.CommonModule,
                                i1.StoreModule.forFeature(STORE_FINDER_FEATURE, reducerToken, {
                                    metaReducers: metaReducers,
                                }),
                                i1$1.EffectsModule.forFeature(effects),
                            ],
                            providers: [reducerProvider],
                        }]
                }] });

        var StoreFinderCoreModule = /** @class */ (function () {
            function StoreFinderCoreModule() {
            }
            return StoreFinderCoreModule;
        }());
        StoreFinderCoreModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderCoreModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
        StoreFinderCoreModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderCoreModule, imports: [StoreFinderStoreModule] });
        StoreFinderCoreModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderCoreModule, providers: [
                i2.provideDefaultConfig(defaultStoreFinderConfig),
                StoreFinderConnector,
            ], imports: [[StoreFinderStoreModule]] });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: StoreFinderCoreModule, decorators: [{
                    type: i0.NgModule,
                    args: [{
                            imports: [StoreFinderStoreModule],
                            providers: [
                                i2.provideDefaultConfig(defaultStoreFinderConfig),
                                StoreFinderConnector,
                            ],
                        }]
                }] });

        /**
         * Generated bundle index. Do not edit.
         */

        exports.GoogleMapRendererService = GoogleMapRendererService;
        exports.STORE_COUNT_NORMALIZER = STORE_COUNT_NORMALIZER;
        exports.STORE_FINDER_DATA = STORE_FINDER_DATA;
        exports.STORE_FINDER_FEATURE = STORE_FINDER_FEATURE;
        exports.STORE_FINDER_SEARCH_PAGE_NORMALIZER = STORE_FINDER_SEARCH_PAGE_NORMALIZER;
        exports.StoreFinderActions = storeFinderGroup_actions;
        exports.StoreFinderAdapter = StoreFinderAdapter;
        exports.StoreFinderConfig = StoreFinderConfig;
        exports.StoreFinderConnector = StoreFinderConnector;
        exports.StoreFinderCoreModule = StoreFinderCoreModule;
        exports.StoreFinderSelectors = storeFinderGroup_selectors;
        exports.StoreFinderService = StoreFinderService;

        Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=spartacus-storefinder-core.umd.js.map
