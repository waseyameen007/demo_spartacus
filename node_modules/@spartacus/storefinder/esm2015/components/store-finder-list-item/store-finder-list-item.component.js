import { Component, EventEmitter, Input, Output } from '@angular/core';
import { AbstractStoreItemComponent } from '../abstract-store-item/abstract-store-item.component';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/storefinder/core";
import * as i2 from "@angular/common";
import * as i3 from "@angular/router";
import * as i4 from "@spartacus/core";
export class StoreFinderListItemComponent extends AbstractStoreItemComponent {
    constructor(storeFinderService) {
        super(storeFinderService);
        this.storeFinderService = storeFinderService;
        this.locationIndex = null;
        this.storeItemClick = new EventEmitter();
    }
    handleStoreItemClick() {
        if (this.locationIndex !== null) {
            this.storeItemClick.emit(this.locationIndex);
        }
    }
    onKey(event) {
        if (event.key === 'Enter') {
            this.handleStoreItemClick();
        }
    }
}
StoreFinderListItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: StoreFinderListItemComponent, deps: [{ token: i1.StoreFinderService }], target: i0.ɵɵFactoryTarget.Component });
StoreFinderListItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: StoreFinderListItemComponent, selector: "cx-store-finder-list-item", inputs: { locationIndex: "locationIndex", listOrderLabel: "listOrderLabel", displayDistance: "displayDistance", useClickEvent: "useClickEvent" }, outputs: { storeItemClick: "storeItemClick" }, usesInheritance: true, ngImport: i0, template: "<ng-container>\n  <div>\n    <div class=\"cx-store-list-order\">\n      {{ listOrderLabel }}\n    </div>\n    <h2 class=\"cx-store-name\">\n      <button\n        *ngIf=\"useClickEvent\"\n        (click)=\"handleStoreItemClick()\"\n        (keyup)=\"onKey($event)\"\n      >\n        {{ location.displayName || location.name }}\n      </button>\n      <a *ngIf=\"!useClickEvent\" [routerLink]=\"[location.name]\">{{\n        location.displayName || location.name\n      }}</a>\n    </h2>\n    <div class=\"cx-store-address\" *ngIf=\"location.address\">\n      <div class=\"cx-store-address-street\">\n        {{ location.address.line1 }} {{ location.address.line2 }}\n      </div>\n      {{\n        getFormattedStoreAddress([\n          location.address.town,\n          location.address.postalCode,\n          location.address.country.isocode\n        ])\n      }}\n      <div\n        class=\"cx-store-distance\"\n        *ngIf=\"location.formattedDistance && displayDistance\"\n      >\n        {{ location.formattedDistance }}\n      </div>\n    </div>\n    <a\n      href=\"{{ getDirections(location) }}\"\n      target=\"_blank\"\n      class=\"btn btn-sm btn-action btn-block cx-button\"\n      (click)=\"$event.stopPropagation()\"\n      [attr.aria-label]=\"'storeFinder.ariaLabelGetDirections' | cxTranslate\"\n      >{{ 'storeFinder.getDirections' | cxTranslate }}</a\n    >\n  </div>\n</ng-container>\n", directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }], pipes: { "cxTranslate": i4.TranslatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: StoreFinderListItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-store-finder-list-item',
                    templateUrl: './store-finder-list-item.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.StoreFinderService }]; }, propDecorators: { locationIndex: [{
                type: Input
            }], listOrderLabel: [{
                type: Input
            }], displayDistance: [{
                type: Input
            }], useClickEvent: [{
                type: Input
            }], storeItemClick: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RvcmUtZmluZGVyLWxpc3QtaXRlbS5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvc3RvcmVmaW5kZXIvY29tcG9uZW50cy9zdG9yZS1maW5kZXItbGlzdC1pdGVtL3N0b3JlLWZpbmRlci1saXN0LWl0ZW0uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3N0b3JlZmluZGVyL2NvbXBvbmVudHMvc3RvcmUtZmluZGVyLWxpc3QtaXRlbS9zdG9yZS1maW5kZXItbGlzdC1pdGVtLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFdkUsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sc0RBQXNELENBQUM7Ozs7OztBQU1sRyxNQUFNLE9BQU8sNEJBQTZCLFNBQVEsMEJBQTBCO0lBWTFFLFlBQXNCLGtCQUFzQztRQUMxRCxLQUFLLENBQUMsa0JBQWtCLENBQUMsQ0FBQztRQUROLHVCQUFrQixHQUFsQixrQkFBa0IsQ0FBb0I7UUFWNUQsa0JBQWEsR0FBa0IsSUFBSSxDQUFDO1FBUXBDLG1CQUFjLEdBQXlCLElBQUksWUFBWSxFQUFFLENBQUM7SUFJMUQsQ0FBQztJQUVELG9CQUFvQjtRQUNsQixJQUFJLElBQUksQ0FBQyxhQUFhLEtBQUssSUFBSSxFQUFFO1lBQy9CLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztTQUM5QztJQUNILENBQUM7SUFFRCxLQUFLLENBQUMsS0FBb0I7UUFDeEIsSUFBSSxLQUFLLENBQUMsR0FBRyxLQUFLLE9BQU8sRUFBRTtZQUN6QixJQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztTQUM3QjtJQUNILENBQUM7O3lIQTFCVSw0QkFBNEI7NkdBQTVCLDRCQUE0Qix5UkNSekMsdzRDQTZDQTsyRkRyQ2EsNEJBQTRCO2tCQUp4QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSwyQkFBMkI7b0JBQ3JDLFdBQVcsRUFBRSx5Q0FBeUM7aUJBQ3ZEO3lHQUdDLGFBQWE7c0JBRFosS0FBSztnQkFHTixjQUFjO3NCQURiLEtBQUs7Z0JBR04sZUFBZTtzQkFEZCxLQUFLO2dCQUdOLGFBQWE7c0JBRFosS0FBSztnQkFHTixjQUFjO3NCQURiLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEV2ZW50RW1pdHRlciwgSW5wdXQsIE91dHB1dCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3RvcmVGaW5kZXJTZXJ2aWNlIH0gZnJvbSAnQHNwYXJ0YWN1cy9zdG9yZWZpbmRlci9jb3JlJztcbmltcG9ydCB7IEFic3RyYWN0U3RvcmVJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi4vYWJzdHJhY3Qtc3RvcmUtaXRlbS9hYnN0cmFjdC1zdG9yZS1pdGVtLmNvbXBvbmVudCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2N4LXN0b3JlLWZpbmRlci1saXN0LWl0ZW0nLFxuICB0ZW1wbGF0ZVVybDogJy4vc3RvcmUtZmluZGVyLWxpc3QtaXRlbS5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIFN0b3JlRmluZGVyTGlzdEl0ZW1Db21wb25lbnQgZXh0ZW5kcyBBYnN0cmFjdFN0b3JlSXRlbUNvbXBvbmVudCB7XG4gIEBJbnB1dCgpXG4gIGxvY2F0aW9uSW5kZXg6IG51bWJlciB8IG51bGwgPSBudWxsO1xuICBASW5wdXQoKVxuICBsaXN0T3JkZXJMYWJlbDogYW55O1xuICBASW5wdXQoKVxuICBkaXNwbGF5RGlzdGFuY2U6IGJvb2xlYW47XG4gIEBJbnB1dCgpXG4gIHVzZUNsaWNrRXZlbnQ6IGJvb2xlYW47XG4gIEBPdXRwdXQoKVxuICBzdG9yZUl0ZW1DbGljazogRXZlbnRFbWl0dGVyPG51bWJlcj4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHN0b3JlRmluZGVyU2VydmljZTogU3RvcmVGaW5kZXJTZXJ2aWNlKSB7XG4gICAgc3VwZXIoc3RvcmVGaW5kZXJTZXJ2aWNlKTtcbiAgfVxuXG4gIGhhbmRsZVN0b3JlSXRlbUNsaWNrKCkge1xuICAgIGlmICh0aGlzLmxvY2F0aW9uSW5kZXggIT09IG51bGwpIHtcbiAgICAgIHRoaXMuc3RvcmVJdGVtQ2xpY2suZW1pdCh0aGlzLmxvY2F0aW9uSW5kZXgpO1xuICAgIH1cbiAgfVxuXG4gIG9uS2V5KGV2ZW50OiBLZXlib2FyZEV2ZW50KSB7XG4gICAgaWYgKGV2ZW50LmtleSA9PT0gJ0VudGVyJykge1xuICAgICAgdGhpcy5oYW5kbGVTdG9yZUl0ZW1DbGljaygpO1xuICAgIH1cbiAgfVxufVxuIiwiPG5nLWNvbnRhaW5lcj5cbiAgPGRpdj5cbiAgICA8ZGl2IGNsYXNzPVwiY3gtc3RvcmUtbGlzdC1vcmRlclwiPlxuICAgICAge3sgbGlzdE9yZGVyTGFiZWwgfX1cbiAgICA8L2Rpdj5cbiAgICA8aDIgY2xhc3M9XCJjeC1zdG9yZS1uYW1lXCI+XG4gICAgICA8YnV0dG9uXG4gICAgICAgICpuZ0lmPVwidXNlQ2xpY2tFdmVudFwiXG4gICAgICAgIChjbGljayk9XCJoYW5kbGVTdG9yZUl0ZW1DbGljaygpXCJcbiAgICAgICAgKGtleXVwKT1cIm9uS2V5KCRldmVudClcIlxuICAgICAgPlxuICAgICAgICB7eyBsb2NhdGlvbi5kaXNwbGF5TmFtZSB8fCBsb2NhdGlvbi5uYW1lIH19XG4gICAgICA8L2J1dHRvbj5cbiAgICAgIDxhICpuZ0lmPVwiIXVzZUNsaWNrRXZlbnRcIiBbcm91dGVyTGlua109XCJbbG9jYXRpb24ubmFtZV1cIj57e1xuICAgICAgICBsb2NhdGlvbi5kaXNwbGF5TmFtZSB8fCBsb2NhdGlvbi5uYW1lXG4gICAgICB9fTwvYT5cbiAgICA8L2gyPlxuICAgIDxkaXYgY2xhc3M9XCJjeC1zdG9yZS1hZGRyZXNzXCIgKm5nSWY9XCJsb2NhdGlvbi5hZGRyZXNzXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwiY3gtc3RvcmUtYWRkcmVzcy1zdHJlZXRcIj5cbiAgICAgICAge3sgbG9jYXRpb24uYWRkcmVzcy5saW5lMSB9fSB7eyBsb2NhdGlvbi5hZGRyZXNzLmxpbmUyIH19XG4gICAgICA8L2Rpdj5cbiAgICAgIHt7XG4gICAgICAgIGdldEZvcm1hdHRlZFN0b3JlQWRkcmVzcyhbXG4gICAgICAgICAgbG9jYXRpb24uYWRkcmVzcy50b3duLFxuICAgICAgICAgIGxvY2F0aW9uLmFkZHJlc3MucG9zdGFsQ29kZSxcbiAgICAgICAgICBsb2NhdGlvbi5hZGRyZXNzLmNvdW50cnkuaXNvY29kZVxuICAgICAgICBdKVxuICAgICAgfX1cbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3M9XCJjeC1zdG9yZS1kaXN0YW5jZVwiXG4gICAgICAgICpuZ0lmPVwibG9jYXRpb24uZm9ybWF0dGVkRGlzdGFuY2UgJiYgZGlzcGxheURpc3RhbmNlXCJcbiAgICAgID5cbiAgICAgICAge3sgbG9jYXRpb24uZm9ybWF0dGVkRGlzdGFuY2UgfX1cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICAgIDxhXG4gICAgICBocmVmPVwie3sgZ2V0RGlyZWN0aW9ucyhsb2NhdGlvbikgfX1cIlxuICAgICAgdGFyZ2V0PVwiX2JsYW5rXCJcbiAgICAgIGNsYXNzPVwiYnRuIGJ0bi1zbSBidG4tYWN0aW9uIGJ0bi1ibG9jayBjeC1idXR0b25cIlxuICAgICAgKGNsaWNrKT1cIiRldmVudC5zdG9wUHJvcGFnYXRpb24oKVwiXG4gICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cIidzdG9yZUZpbmRlci5hcmlhTGFiZWxHZXREaXJlY3Rpb25zJyB8IGN4VHJhbnNsYXRlXCJcbiAgICAgID57eyAnc3RvcmVGaW5kZXIuZ2V0RGlyZWN0aW9ucycgfCBjeFRyYW5zbGF0ZSB9fTwvYVxuICAgID5cbiAgPC9kaXY+XG48L25nLWNvbnRhaW5lcj5cbiJdfQ==