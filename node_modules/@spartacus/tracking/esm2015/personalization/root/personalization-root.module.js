import { NgModule } from '@angular/core';
import { provideDefaultConfig, provideDefaultConfigFactory, } from '@spartacus/core';
import { defaultPersonalizationConfig } from './config/default-personalization-config';
import { PERSONALIZATION_FEATURE } from './feature-name';
import { interceptors } from './http-interceptors/index';
import * as i0 from "@angular/core";
// TODO: Inline this factory when we start releasing Ivy compiled libraries
export function defaultPersonalizationComponentsConfig() {
    const config = {
        featureModules: {
            [PERSONALIZATION_FEATURE]: {
                cmsComponents: ['PersonalizationScriptComponent'],
            },
        },
    };
    return config;
}
export class PersonalizationRootModule {
}
PersonalizationRootModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: PersonalizationRootModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
PersonalizationRootModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: PersonalizationRootModule });
PersonalizationRootModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: PersonalizationRootModule, providers: [
        ...interceptors,
        provideDefaultConfig(defaultPersonalizationConfig),
        provideDefaultConfigFactory(defaultPersonalizationComponentsConfig),
    ] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: PersonalizationRootModule, decorators: [{
            type: NgModule,
            args: [{
                    providers: [
                        ...interceptors,
                        provideDefaultConfig(defaultPersonalizationConfig),
                        provideDefaultConfigFactory(defaultPersonalizationComponentsConfig),
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyc29uYWxpemF0aW9uLXJvb3QubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3RyYWNraW5nL3BlcnNvbmFsaXphdGlvbi9yb290L3BlcnNvbmFsaXphdGlvbi1yb290Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFFTCxvQkFBb0IsRUFDcEIsMkJBQTJCLEdBQzVCLE1BQU0saUJBQWlCLENBQUM7QUFDekIsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDdkYsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDekQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLDJCQUEyQixDQUFDOztBQUV6RCwyRUFBMkU7QUFDM0UsTUFBTSxVQUFVLHNDQUFzQztJQUNwRCxNQUFNLE1BQU0sR0FBYztRQUN4QixjQUFjLEVBQUU7WUFDZCxDQUFDLHVCQUF1QixDQUFDLEVBQUU7Z0JBQ3pCLGFBQWEsRUFBRSxDQUFDLGdDQUFnQyxDQUFDO2FBQ2xEO1NBQ0Y7S0FDRixDQUFDO0lBRUYsT0FBTyxNQUFNLENBQUM7QUFDaEIsQ0FBQztBQVNELE1BQU0sT0FBTyx5QkFBeUI7O3NIQUF6Qix5QkFBeUI7dUhBQXpCLHlCQUF5Qjt1SEFBekIseUJBQXlCLGFBTnpCO1FBQ1QsR0FBRyxZQUFZO1FBQ2Ysb0JBQW9CLENBQUMsNEJBQTRCLENBQUM7UUFDbEQsMkJBQTJCLENBQUMsc0NBQXNDLENBQUM7S0FDcEU7MkZBRVUseUJBQXlCO2tCQVByQyxRQUFRO21CQUFDO29CQUNSLFNBQVMsRUFBRTt3QkFDVCxHQUFHLFlBQVk7d0JBQ2Ysb0JBQW9CLENBQUMsNEJBQTRCLENBQUM7d0JBQ2xELDJCQUEyQixDQUFDLHNDQUFzQyxDQUFDO3FCQUNwRTtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDbXNDb25maWcsXG4gIHByb3ZpZGVEZWZhdWx0Q29uZmlnLFxuICBwcm92aWRlRGVmYXVsdENvbmZpZ0ZhY3RvcnksXG59IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQgeyBkZWZhdWx0UGVyc29uYWxpemF0aW9uQ29uZmlnIH0gZnJvbSAnLi9jb25maWcvZGVmYXVsdC1wZXJzb25hbGl6YXRpb24tY29uZmlnJztcbmltcG9ydCB7IFBFUlNPTkFMSVpBVElPTl9GRUFUVVJFIH0gZnJvbSAnLi9mZWF0dXJlLW5hbWUnO1xuaW1wb3J0IHsgaW50ZXJjZXB0b3JzIH0gZnJvbSAnLi9odHRwLWludGVyY2VwdG9ycy9pbmRleCc7XG5cbi8vIFRPRE86IElubGluZSB0aGlzIGZhY3Rvcnkgd2hlbiB3ZSBzdGFydCByZWxlYXNpbmcgSXZ5IGNvbXBpbGVkIGxpYnJhcmllc1xuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRQZXJzb25hbGl6YXRpb25Db21wb25lbnRzQ29uZmlnKCk6IENtc0NvbmZpZyB7XG4gIGNvbnN0IGNvbmZpZzogQ21zQ29uZmlnID0ge1xuICAgIGZlYXR1cmVNb2R1bGVzOiB7XG4gICAgICBbUEVSU09OQUxJWkFUSU9OX0ZFQVRVUkVdOiB7XG4gICAgICAgIGNtc0NvbXBvbmVudHM6IFsnUGVyc29uYWxpemF0aW9uU2NyaXB0Q29tcG9uZW50J10sXG4gICAgICB9LFxuICAgIH0sXG4gIH07XG5cbiAgcmV0dXJuIGNvbmZpZztcbn1cblxuQE5nTW9kdWxlKHtcbiAgcHJvdmlkZXJzOiBbXG4gICAgLi4uaW50ZXJjZXB0b3JzLFxuICAgIHByb3ZpZGVEZWZhdWx0Q29uZmlnKGRlZmF1bHRQZXJzb25hbGl6YXRpb25Db25maWcpLFxuICAgIHByb3ZpZGVEZWZhdWx0Q29uZmlnRmFjdG9yeShkZWZhdWx0UGVyc29uYWxpemF0aW9uQ29tcG9uZW50c0NvbmZpZyksXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIFBlcnNvbmFsaXphdGlvblJvb3RNb2R1bGUge31cbiJdfQ==