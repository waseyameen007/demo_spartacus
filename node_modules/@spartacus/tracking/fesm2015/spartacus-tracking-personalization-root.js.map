{"version":3,"file":"spartacus-tracking-personalization-root.js","sources":["../../../feature-libs/tracking/personalization/root/config/personalization-config.ts","../../../feature-libs/tracking/personalization/root/feature-name.ts","../../../feature-libs/tracking/personalization/root/config/default-personalization-config.ts","../../../feature-libs/tracking/personalization/root/http-interceptors/occ-personalization-id.interceptor.ts","../../../feature-libs/tracking/personalization/root/http-interceptors/occ-personalization-time.interceptor.ts","../../../feature-libs/tracking/personalization/root/http-interceptors/index.ts","../../../feature-libs/tracking/personalization/root/personalization-root.module.ts","../../../feature-libs/tracking/personalization/root/spartacus-tracking-personalization-root.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class PersonalizationConfig {\n  personalization?: {\n    enabled?: boolean;\n    httpHeaderName?: {\n      id: string;\n      timestamp: string;\n    };\n    context?: {\n      slotPosition: string;\n      componentId: string;\n    };\n  };\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends PersonalizationConfig {}\n}\n","export const PERSONALIZATION_FEATURE = 'personalization';\n","import { PersonalizationConfig } from './personalization-config';\n\nexport const defaultPersonalizationConfig: PersonalizationConfig = {\n  personalization: {\n    enabled: false,\n    httpHeaderName: {\n      id: 'Occ-Personalization-Id',\n      timestamp: 'Occ-Personalization-Time',\n    },\n    context: {\n      slotPosition: 'PlaceholderContentSlot',\n      componentId: 'PersonalizationScriptComponent',\n    },\n  },\n};\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable, isDevMode } from '@angular/core';\nimport { OccEndpointsService, WindowRef } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { PersonalizationConfig } from '../config/personalization-config';\n\nconst PERSONALIZATION_ID_KEY = 'personalization-id';\n\n@Injectable({ providedIn: 'root' })\nexport class OccPersonalizationIdInterceptor implements HttpInterceptor {\n  private personalizationId?: string | null;\n  private requestHeader?: string;\n  private enabled = false;\n\n  constructor(\n    private config: PersonalizationConfig,\n    private occEndpoints: OccEndpointsService,\n    private winRef: WindowRef\n  ) {\n    if (this.winRef.isBrowser()) {\n      this.enabled =\n        (this.winRef.localStorage && this.config.personalization?.enabled) ||\n        false;\n\n      if (this.enabled) {\n        if (!this.config.personalization?.httpHeaderName && isDevMode()) {\n          console.warn(\n            `There is no httpHeaderName configured in Personalization`\n          );\n        }\n        this.requestHeader =\n          this.config.personalization?.httpHeaderName?.id.toLowerCase();\n        this.personalizationId = this.winRef.localStorage?.getItem(\n          PERSONALIZATION_ID_KEY\n        );\n      } else if (this.winRef.localStorage?.getItem(PERSONALIZATION_ID_KEY)) {\n        this.winRef.localStorage.removeItem(PERSONALIZATION_ID_KEY);\n      }\n    }\n  }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (!this.enabled) {\n      return next.handle(request);\n    }\n\n    if (\n      this.requestHeader &&\n      this.personalizationId &&\n      request.url.includes(this.occEndpoints.getBaseUrl())\n    ) {\n      request = request.clone({\n        setHeaders: {\n          [this.requestHeader]: this.personalizationId,\n        },\n      });\n    }\n\n    return next.handle(request).pipe(\n      tap((event) => {\n        if (event instanceof HttpResponse) {\n          if (\n            this.requestHeader &&\n            event.headers.keys().includes(this.requestHeader)\n          ) {\n            const receivedId = event.headers.get(this.requestHeader);\n            if (this.personalizationId !== receivedId) {\n              this.personalizationId = receivedId;\n              if (this.personalizationId) {\n                this.winRef.localStorage?.setItem(\n                  PERSONALIZATION_ID_KEY,\n                  this.personalizationId\n                );\n              }\n            }\n          }\n        }\n      })\n    );\n  }\n}\n","import {\n  HttpEvent,\n  HttpHandler,\n  HttpInterceptor,\n  HttpRequest,\n  HttpResponse,\n} from '@angular/common/http';\nimport { Injectable, isDevMode } from '@angular/core';\nimport { OccEndpointsService, WindowRef } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { PersonalizationConfig } from '../config/personalization-config';\n\nconst PERSONALIZATION_TIME_KEY = 'personalization-time';\n\n@Injectable({ providedIn: 'root' })\nexport class OccPersonalizationTimeInterceptor implements HttpInterceptor {\n  private timestamp?: string | null;\n  private requestHeader?: string;\n  private enabled = false;\n\n  constructor(\n    private config: PersonalizationConfig,\n    private occEndpoints: OccEndpointsService,\n    private winRef: WindowRef\n  ) {\n    if (this.winRef.isBrowser()) {\n      this.enabled =\n        (this.winRef.localStorage && this.config.personalization?.enabled) ||\n        false;\n\n      if (this.enabled) {\n        if (!this.config.personalization?.httpHeaderName && isDevMode()) {\n          console.warn(\n            `There is no httpHeaderName configured in Personalization`\n          );\n        }\n        this.requestHeader =\n          this.config.personalization?.httpHeaderName?.timestamp.toLowerCase();\n        this.timestamp = this.winRef.localStorage?.getItem(\n          PERSONALIZATION_TIME_KEY\n        );\n      } else if (this.winRef.localStorage?.getItem(PERSONALIZATION_TIME_KEY)) {\n        this.winRef.localStorage.removeItem(PERSONALIZATION_TIME_KEY);\n      }\n    }\n  }\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    if (!this.enabled) {\n      return next.handle(request);\n    }\n\n    if (\n      this.requestHeader &&\n      this.timestamp &&\n      request.url.includes(this.occEndpoints.getBaseUrl())\n    ) {\n      request = request.clone({\n        setHeaders: {\n          [this.requestHeader]: this.timestamp,\n        },\n      });\n    }\n\n    return next.handle(request).pipe(\n      tap((event) => {\n        if (event instanceof HttpResponse) {\n          if (\n            this.requestHeader &&\n            event.headers.keys().includes(this.requestHeader)\n          ) {\n            const receivedTimestamp = event.headers.get(this.requestHeader);\n            if (this.timestamp !== receivedTimestamp) {\n              this.timestamp = receivedTimestamp;\n              if (this.timestamp) {\n                this.winRef.localStorage?.setItem(\n                  PERSONALIZATION_TIME_KEY,\n                  this.timestamp\n                );\n              }\n            }\n          }\n        }\n      })\n    );\n  }\n}\n","import { Provider } from '@angular/core';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\n\nimport { OccPersonalizationIdInterceptor } from './occ-personalization-id.interceptor';\nimport { OccPersonalizationTimeInterceptor } from './occ-personalization-time.interceptor';\n\nexport const interceptors: Provider[] = [\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: OccPersonalizationIdInterceptor,\n    multi: true,\n  },\n  {\n    provide: HTTP_INTERCEPTORS,\n    useExisting: OccPersonalizationTimeInterceptor,\n    multi: true,\n  },\n];\n","import { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  provideDefaultConfig,\n  provideDefaultConfigFactory,\n} from '@spartacus/core';\nimport { defaultPersonalizationConfig } from './config/default-personalization-config';\nimport { PERSONALIZATION_FEATURE } from './feature-name';\nimport { interceptors } from './http-interceptors/index';\n\n// TODO: Inline this factory when we start releasing Ivy compiled libraries\nexport function defaultPersonalizationComponentsConfig(): CmsConfig {\n  const config: CmsConfig = {\n    featureModules: {\n      [PERSONALIZATION_FEATURE]: {\n        cmsComponents: ['PersonalizationScriptComponent'],\n      },\n    },\n  };\n\n  return config;\n}\n\n@NgModule({\n  providers: [\n    ...interceptors,\n    provideDefaultConfig(defaultPersonalizationConfig),\n    provideDefaultConfigFactory(defaultPersonalizationComponentsConfig),\n  ],\n})\nexport class PersonalizationRootModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}