import { Pipe } from '@angular/core';
import * as i0 from "@angular/core";
export class FormatTimerPipe {
    transform(totalSeconds) {
        if (totalSeconds < 0) {
            totalSeconds = 0;
        }
        const minutes = Math.floor(totalSeconds / 60);
        const seconds = totalSeconds % 60;
        let zeroPaddedMinutes;
        if (minutes < 10) {
            zeroPaddedMinutes = ('00' + minutes).slice(-2);
        }
        else {
            zeroPaddedMinutes = minutes + '';
        }
        const zeroPaddedSeconds = ('00' + seconds).slice(-2);
        return `${zeroPaddedMinutes}:${zeroPaddedSeconds}`;
    }
}
FormatTimerPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: FormatTimerPipe, deps: [], target: i0.ɵɵFactoryTarget.Pipe });
FormatTimerPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: FormatTimerPipe, name: "formatTimer" });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: FormatTimerPipe, decorators: [{
            type: Pipe,
            args: [{
                    name: 'formatTimer',
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybWF0LXRpbWVyLnBpcGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvYXNtL2NvbXBvbmVudHMvYXNtLXNlc3Npb24tdGltZXIvZm9ybWF0LXRpbWVyLnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLElBQUksRUFBaUIsTUFBTSxlQUFlLENBQUM7O0FBS3BELE1BQU0sT0FBTyxlQUFlO0lBQzFCLFNBQVMsQ0FBQyxZQUFvQjtRQUM1QixJQUFJLFlBQVksR0FBRyxDQUFDLEVBQUU7WUFDcEIsWUFBWSxHQUFHLENBQUMsQ0FBQztTQUNsQjtRQUNELE1BQU0sT0FBTyxHQUFXLElBQUksQ0FBQyxLQUFLLENBQUMsWUFBWSxHQUFHLEVBQUUsQ0FBQyxDQUFDO1FBQ3RELE1BQU0sT0FBTyxHQUFXLFlBQVksR0FBRyxFQUFFLENBQUM7UUFDMUMsSUFBSSxpQkFBeUIsQ0FBQztRQUM5QixJQUFJLE9BQU8sR0FBRyxFQUFFLEVBQUU7WUFDaEIsaUJBQWlCLEdBQUcsQ0FBQyxJQUFJLEdBQUcsT0FBTyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7U0FDaEQ7YUFBTTtZQUNMLGlCQUFpQixHQUFHLE9BQU8sR0FBRyxFQUFFLENBQUM7U0FDbEM7UUFDRCxNQUFNLGlCQUFpQixHQUFXLENBQUMsSUFBSSxHQUFHLE9BQU8sQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQzdELE9BQU8sR0FBRyxpQkFBaUIsSUFBSSxpQkFBaUIsRUFBRSxDQUFDO0lBQ3JELENBQUM7OzRHQWZVLGVBQWU7MEdBQWYsZUFBZTsyRkFBZixlQUFlO2tCQUgzQixJQUFJO21CQUFDO29CQUNKLElBQUksRUFBRSxhQUFhO2lCQUNwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBpcGUsIFBpcGVUcmFuc2Zvcm0gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQFBpcGUoe1xuICBuYW1lOiAnZm9ybWF0VGltZXInLFxufSlcbmV4cG9ydCBjbGFzcyBGb3JtYXRUaW1lclBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcbiAgdHJhbnNmb3JtKHRvdGFsU2Vjb25kczogbnVtYmVyKTogc3RyaW5nIHtcbiAgICBpZiAodG90YWxTZWNvbmRzIDwgMCkge1xuICAgICAgdG90YWxTZWNvbmRzID0gMDtcbiAgICB9XG4gICAgY29uc3QgbWludXRlczogbnVtYmVyID0gTWF0aC5mbG9vcih0b3RhbFNlY29uZHMgLyA2MCk7XG4gICAgY29uc3Qgc2Vjb25kczogbnVtYmVyID0gdG90YWxTZWNvbmRzICUgNjA7XG4gICAgbGV0IHplcm9QYWRkZWRNaW51dGVzOiBzdHJpbmc7XG4gICAgaWYgKG1pbnV0ZXMgPCAxMCkge1xuICAgICAgemVyb1BhZGRlZE1pbnV0ZXMgPSAoJzAwJyArIG1pbnV0ZXMpLnNsaWNlKC0yKTtcbiAgICB9IGVsc2Uge1xuICAgICAgemVyb1BhZGRlZE1pbnV0ZXMgPSBtaW51dGVzICsgJyc7XG4gICAgfVxuICAgIGNvbnN0IHplcm9QYWRkZWRTZWNvbmRzOiBzdHJpbmcgPSAoJzAwJyArIHNlY29uZHMpLnNsaWNlKC0yKTtcbiAgICByZXR1cm4gYCR7emVyb1BhZGRlZE1pbnV0ZXN9OiR7emVyb1BhZGRlZFNlY29uZHN9YDtcbiAgfVxufVxuIl19