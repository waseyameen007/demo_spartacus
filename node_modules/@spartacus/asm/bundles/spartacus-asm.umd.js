(function (global, factory) {
        typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@spartacus/asm/components'), require('@spartacus/asm/core'), require('@spartacus/asm/occ')) :
        typeof define === 'function' && define.amd ? define('@spartacus/asm', ['exports', '@angular/core', '@spartacus/asm/components', '@spartacus/asm/core', '@spartacus/asm/occ'], factory) :
        (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.spartacus = global.spartacus || {}, global.spartacus.asm = {}), global.ng.core, global.spartacus.asm.components, global.spartacus.asm.core, global.spartacus.asm.occ));
}(this, (function (exports, i0, components, core, occ) { 'use strict';

        function _interopNamespace(e) {
                if (e && e.__esModule) return e;
                var n = Object.create(null);
                if (e) {
                        Object.keys(e).forEach(function (k) {
                                if (k !== 'default') {
                                        var d = Object.getOwnPropertyDescriptor(e, k);
                                        Object.defineProperty(n, k, d.get ? d : {
                                                enumerable: true,
                                                get: function () {
                                                        return e[k];
                                                }
                                        });
                                }
                        });
                }
                n['default'] = e;
                return Object.freeze(n);
        }

        var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

        var AsmModule = /** @class */ (function () {
            function AsmModule() {
            }
            return AsmModule;
        }());
        AsmModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
        AsmModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmModule, imports: [components.AsmComponentsModule, core.AsmCoreModule, occ.AsmOccModule] });
        AsmModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmModule, imports: [[components.AsmComponentsModule, core.AsmCoreModule, occ.AsmOccModule]] });
        i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmModule, decorators: [{
                    type: i0.NgModule,
                    args: [{
                            imports: [components.AsmComponentsModule, core.AsmCoreModule, occ.AsmOccModule],
                        }]
                }] });

        /*
         * Public API Surface of asm
         */

        /**
         * Generated bundle index. Do not edit.
         */

        exports.AsmModule = AsmModule;

        Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=spartacus-asm.umd.js.map
