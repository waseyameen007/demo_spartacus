(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common/http'), require('@angular/core'), require('@spartacus/asm/core'), require('@spartacus/core'), require('@angular/common')) :
    typeof define === 'function' && define.amd ? define('@spartacus/asm/occ', ['exports', '@angular/common/http', '@angular/core', '@spartacus/asm/core', '@spartacus/core', '@angular/common'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.spartacus = global.spartacus || {}, global.spartacus.asm = global.spartacus.asm || {}, global.spartacus.asm.occ = {}), global.ng.common.http, global.ng.core, global.spartacus.asm.core, global.core, global.ng.common));
}(this, (function (exports, i1, i0, i3, i2, common) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);

    var OccAsmAdapter = /** @class */ (function () {
        function OccAsmAdapter(http, occEndpointsService, converterService, config, baseSiteService) {
            var _this = this;
            this.http = http;
            this.occEndpointsService = occEndpointsService;
            this.converterService = converterService;
            this.config = config;
            this.baseSiteService = baseSiteService;
            this.baseSiteService
                .getActive()
                .subscribe(function (value) { return (_this.activeBaseSite = value); });
        }
        OccAsmAdapter.prototype.customerSearch = function (options) {
            var headers = i2.InterceptorUtil.createHeader(i2.USE_CUSTOMER_SUPPORT_AGENT_TOKEN, true, new i1.HttpHeaders());
            var params = new i1.HttpParams()
                .set('baseSite', this.activeBaseSite)
                .set('sort', 'byNameAsc');
            if (typeof options['query'] !== 'undefined') {
                params = params.set('query', '' + options.query);
            }
            if (typeof options['pageSize'] !== 'undefined') {
                params = params.set('pageSize', '' + options.pageSize);
            }
            var url = this.occEndpointsService.buildUrl('asmCustomerSearch', {}, {
                baseSite: false,
                prefix: false,
            });
            return this.http
                .get(url, { headers: headers, params: params })
                .pipe(this.converterService.pipeable(i3.CUSTOMER_SEARCH_PAGE_NORMALIZER));
        };
        return OccAsmAdapter;
    }());
    OccAsmAdapter.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccAsmAdapter, deps: [{ token: i1__namespace.HttpClient }, { token: i2__namespace.OccEndpointsService }, { token: i2__namespace.ConverterService }, { token: i3__namespace.AsmConfig }, { token: i2__namespace.BaseSiteService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OccAsmAdapter.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccAsmAdapter });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OccAsmAdapter, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace.HttpClient }, { type: i2__namespace.OccEndpointsService }, { type: i2__namespace.ConverterService }, { type: i3__namespace.AsmConfig }, { type: i2__namespace.BaseSiteService }]; } });

    var defaultOccAsmConfig = {
        backend: {
            occ: {
                endpoints: {
                    asmCustomerSearch: '/assistedservicewebservices/customers/search',
                },
            },
        },
    };

    var AsmOccModule = /** @class */ (function () {
        function AsmOccModule() {
        }
        return AsmOccModule;
    }());
    AsmOccModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmOccModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AsmOccModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmOccModule, imports: [common.CommonModule] });
    AsmOccModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmOccModule, providers: [
            i2.provideDefaultConfig(defaultOccAsmConfig),
            {
                provide: i3.AsmAdapter,
                useClass: OccAsmAdapter,
            },
        ], imports: [[common.CommonModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmOccModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [common.CommonModule],
                        providers: [
                            i2.provideDefaultConfig(defaultOccAsmConfig),
                            {
                                provide: i3.AsmAdapter,
                                useClass: OccAsmAdapter,
                            },
                        ],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.AsmOccModule = AsmOccModule;
    exports.OccAsmAdapter = OccAsmAdapter;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=spartacus-asm-occ.umd.js.map
