(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/common'), require('@angular/core'), require('@spartacus/core'), require('@ngrx/store'), require('rxjs'), require('rxjs/operators'), require('@ngrx/effects'), require('@spartacus/asm/root')) :
    typeof define === 'function' && define.amd ? define('@spartacus/asm/core', ['exports', '@angular/common', '@angular/core', '@spartacus/core', '@ngrx/store', 'rxjs', 'rxjs/operators', '@ngrx/effects', '@spartacus/asm/root'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.spartacus = global.spartacus || {}, global.spartacus.asm = global.spartacus.asm || {}, global.spartacus.asm.core = {}), global.ng.common, global.ng.core, global.core, global.store, global.rxjs, global.rxjs.operators, global.effects, global.spartacus.asm.root));
}(this, (function (exports, common, i0, i1, i1$2, rxjs, operators, i1$1, i3) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1);
    var i1__namespace$2 = /*#__PURE__*/_interopNamespace(i1$2);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1$1);
    var i3__namespace = /*#__PURE__*/_interopNamespace(i3);

    var defaultAsmConfig = {
        asm: {
            agentSessionTimer: {
                startingDelayInSeconds: 600,
            },
            customerSearch: {
                maxResults: 20,
            },
        },
    };

    var AsmAdapter = /** @class */ (function () {
        function AsmAdapter() {
        }
        return AsmAdapter;
    }());

    var AsmConnector = /** @class */ (function () {
        function AsmConnector(asmAdapter) {
            this.asmAdapter = asmAdapter;
        }
        AsmConnector.prototype.customerSearch = function (options) {
            return this.asmAdapter.customerSearch(options);
        };
        return AsmConnector;
    }());
    AsmConnector.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmConnector, deps: [{ token: AsmAdapter }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    AsmConnector.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmConnector, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmConnector, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], ctorParameters: function () { return [{ type: AsmAdapter }]; } });

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var ASM_UI_UPDATE = '[Asm] UI Update';
    var AsmUiUpdate = /** @class */ (function () {
        function AsmUiUpdate(payload) {
            this.payload = payload;
            this.type = ASM_UI_UPDATE;
        }
        return AsmUiUpdate;
    }());

    var ASM_FEATURE = 'asm';
    var CUSTOMER_SEARCH_DATA = '[asm] Customer search data';

    var CUSTOMER_SEARCH = '[Asm] Customer Search';
    var CUSTOMER_SEARCH_FAIL = '[Asm] Customer Search Fail';
    var CUSTOMER_SEARCH_SUCCESS = '[Asm] Customer Search Success';
    var CUSTOMER_SEARCH_RESET = '[Asm] Customer Search Reset';
    var CustomerSearch = /** @class */ (function (_super) {
        __extends(CustomerSearch, _super);
        function CustomerSearch(payload) {
            var _this = _super.call(this, CUSTOMER_SEARCH_DATA) || this;
            _this.payload = payload;
            _this.type = CUSTOMER_SEARCH;
            return _this;
        }
        return CustomerSearch;
    }(i1.StateUtils.LoaderLoadAction));
    var CustomerSearchFail = /** @class */ (function (_super) {
        __extends(CustomerSearchFail, _super);
        function CustomerSearchFail(payload) {
            var _this = _super.call(this, CUSTOMER_SEARCH_DATA) || this;
            _this.payload = payload;
            _this.type = CUSTOMER_SEARCH_FAIL;
            return _this;
        }
        return CustomerSearchFail;
    }(i1.StateUtils.LoaderFailAction));
    var CustomerSearchSuccess = /** @class */ (function (_super) {
        __extends(CustomerSearchSuccess, _super);
        function CustomerSearchSuccess(payload) {
            var _this = _super.call(this, CUSTOMER_SEARCH_DATA) || this;
            _this.payload = payload;
            _this.type = CUSTOMER_SEARCH_SUCCESS;
            return _this;
        }
        return CustomerSearchSuccess;
    }(i1.StateUtils.LoaderSuccessAction));
    var CustomerSearchReset = /** @class */ (function (_super) {
        __extends(CustomerSearchReset, _super);
        function CustomerSearchReset() {
            var _this = _super.call(this, CUSTOMER_SEARCH_DATA) || this;
            _this.type = CUSTOMER_SEARCH_RESET;
            return _this;
        }
        return CustomerSearchReset;
    }(i1.StateUtils.LoaderResetAction));

    var LOGOUT_CUSTOMER_SUPPORT_AGENT = '[Auth] Logout Customer Support Agent';
    /**
     * Action dispatched after customer support agent logout. Used to clear store data (ui, search results)
     */
    var LogoutCustomerSupportAgent = /** @class */ (function () {
        function LogoutCustomerSupportAgent() {
            this.type = LOGOUT_CUSTOMER_SUPPORT_AGENT;
        }
        return LogoutCustomerSupportAgent;
    }());

    var customerGroup_actions = /*#__PURE__*/Object.freeze({
        __proto__: null,
        ASM_UI_UPDATE: ASM_UI_UPDATE,
        AsmUiUpdate: AsmUiUpdate,
        CUSTOMER_SEARCH: CUSTOMER_SEARCH,
        CUSTOMER_SEARCH_FAIL: CUSTOMER_SEARCH_FAIL,
        CUSTOMER_SEARCH_SUCCESS: CUSTOMER_SEARCH_SUCCESS,
        CUSTOMER_SEARCH_RESET: CUSTOMER_SEARCH_RESET,
        CustomerSearch: CustomerSearch,
        CustomerSearchFail: CustomerSearchFail,
        CustomerSearchSuccess: CustomerSearchSuccess,
        CustomerSearchReset: CustomerSearchReset,
        LOGOUT_CUSTOMER_SUPPORT_AGENT: LOGOUT_CUSTOMER_SUPPORT_AGENT,
        LogoutCustomerSupportAgent: LogoutCustomerSupportAgent
    });

    var CustomerEffects = /** @class */ (function () {
        function CustomerEffects(actions$, asmConnector) {
            var _this = this;
            this.actions$ = actions$;
            this.asmConnector = asmConnector;
            this.customerSearch$ = this.actions$.pipe(i1$1.ofType(CUSTOMER_SEARCH), operators.map(function (action) { return action.payload; }), operators.switchMap(function (options) { return _this.asmConnector.customerSearch(options).pipe(operators.map(function (customerSearchResults) {
                return new CustomerSearchSuccess(customerSearchResults);
            }), operators.catchError(function (error) { return rxjs.of(new CustomerSearchFail(i1.normalizeHttpError(error))); })); }));
        }
        return CustomerEffects;
    }());
    CustomerEffects.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: CustomerEffects, deps: [{ token: i1__namespace.Actions }, { token: AsmConnector }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    CustomerEffects.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: CustomerEffects });
    __decorate([
        i1$1.Effect()
    ], CustomerEffects.prototype, "customerSearch$", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: CustomerEffects, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace.Actions }, { type: AsmConnector }]; }, propDecorators: { customerSearch$: [] } });

    var effects = [CustomerEffects];

    var initialState = { collapsed: false };
    function reducer(state, action) {
        if (state === void 0) { state = initialState; }
        switch (action.type) {
            case ASM_UI_UPDATE: {
                return Object.assign(Object.assign({}, state), action.payload);
            }
            default: {
                return state;
            }
        }
    }

    function getReducers() {
        return {
            customerSearchResult: i1.StateUtils.loaderReducer(CUSTOMER_SEARCH_DATA),
            asmUi: reducer,
        };
    }
    var reducerToken = new i0.InjectionToken('AsmReducers');
    var reducerProvider = {
        provide: reducerToken,
        useFactory: getReducers,
    };
    function clearCustomerSupportAgentAsmState(reducer) {
        return function (state, action) {
            if (action.type === LOGOUT_CUSTOMER_SUPPORT_AGENT) {
                state = Object.assign(Object.assign({}, state), { customerSearchResult: {} });
            }
            return reducer(state, action);
        };
    }
    var metaReducers = [
        clearCustomerSupportAgentAsmState,
    ];

    var getAsmState = i1$2.createFeatureSelector(ASM_FEATURE);

    var getAsmUi = i1$2.createSelector(getAsmState, function (state) { return state.asmUi; });

    var getCustomerSearchResultsLoaderState = i1$2.createSelector(getAsmState, function (state) { return state.customerSearchResult; });
    var getCustomerSearchResults = i1$2.createSelector(getCustomerSearchResultsLoaderState, function (state) { return i1.StateUtils.loaderValueSelector(state); });
    var getCustomerSearchResultsLoading = i1$2.createSelector(getCustomerSearchResultsLoaderState, function (state) { return i1.StateUtils.loaderLoadingSelector(state); });

    var asmGroup_selectors = /*#__PURE__*/Object.freeze({
        __proto__: null,
        getAsmUi: getAsmUi,
        getCustomerSearchResultsLoaderState: getCustomerSearchResultsLoaderState,
        getCustomerSearchResults: getCustomerSearchResults,
        getCustomerSearchResultsLoading: getCustomerSearchResultsLoading,
        getAsmState: getAsmState
    });

    /**
     * Responsible for storing ASM state in the browser storage.
     * Uses `StatePersistenceService` mechanism.
     */
    var AsmStatePersistenceService = /** @class */ (function () {
        function AsmStatePersistenceService(statePersistenceService, store, authStorageService) {
            this.statePersistenceService = statePersistenceService;
            this.store = store;
            this.authStorageService = authStorageService;
            this.subscription = new rxjs.Subscription();
            /**
             * Identifier used for storage key.
             */
            this.key = 'asm';
        }
        /**
         * Initializes the synchronization between state and browser storage.
         */
        AsmStatePersistenceService.prototype.initSync = function () {
            var _this = this;
            this.subscription.add(this.statePersistenceService.syncWithStorage({
                key: this.key,
                state$: this.getAsmState(),
                onRead: function (state) { return _this.onRead(state); },
            }));
        };
        /**
         * Gets and transforms state from different sources into the form that should
         * be saved in storage.
         */
        AsmStatePersistenceService.prototype.getAsmState = function () {
            return rxjs.combineLatest([
                this.store.pipe(
                // Since getAsmState() may be called while the module is lazy loded
                // The asm state slice may not exist yet in the first store emissions.
                operators.filter(function (store) { return !!store.asm; }), i1$2.select(getAsmUi)),
                rxjs.of(this.authStorageService.getEmulatedUserToken()),
                this.authStorageService.getTokenTarget(),
            ]).pipe(operators.map(function (_a) {
                var _b = __read(_a, 3), ui = _b[0], emulatedUserToken = _b[1], tokenTarget = _b[2];
                var emulatedToken = emulatedUserToken;
                if (emulatedToken) {
                    emulatedToken = Object.assign({}, emulatedUserToken);
                    // To minimize risk of user account hijacking we don't persist emulated user refresh_token
                    delete emulatedToken.refresh_token;
                }
                return {
                    ui: ui,
                    emulatedUserToken: emulatedToken,
                    tokenTarget: tokenTarget,
                };
            }));
        };
        /**
         * Function called on each browser storage read.
         * Used to update state from browser -> state.
         */
        AsmStatePersistenceService.prototype.onRead = function (state) {
            if (state) {
                if (state.ui) {
                    this.store.dispatch(new AsmUiUpdate(state.ui));
                }
                if (state.emulatedUserToken) {
                    this.authStorageService.setEmulatedUserToken(state.emulatedUserToken);
                }
                if (state.tokenTarget) {
                    this.authStorageService.setTokenTarget(state.tokenTarget);
                }
            }
        };
        AsmStatePersistenceService.prototype.ngOnDestroy = function () {
            this.subscription.unsubscribe();
        };
        return AsmStatePersistenceService;
    }());
    AsmStatePersistenceService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmStatePersistenceService, deps: [{ token: i1__namespace$1.StatePersistenceService }, { token: i1__namespace$2.Store }, { token: i3__namespace.AsmAuthStorageService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    AsmStatePersistenceService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmStatePersistenceService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmStatePersistenceService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.StatePersistenceService }, { type: i1__namespace$2.Store }, { type: i3__namespace.AsmAuthStorageService }]; } });

    var AsmStoreModule = /** @class */ (function () {
        function AsmStoreModule() {
        }
        return AsmStoreModule;
    }());
    AsmStoreModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmStoreModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AsmStoreModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmStoreModule, imports: [common.CommonModule,
            i1.StateModule, i1__namespace$2.StoreFeatureModule, i1__namespace.EffectsFeatureModule] });
    AsmStoreModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmStoreModule, providers: [reducerProvider], imports: [[
                common.CommonModule,
                i1.StateModule,
                i1$2.StoreModule.forFeature(ASM_FEATURE, reducerToken, { metaReducers: metaReducers }),
                i1$1.EffectsModule.forFeature(effects),
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmStoreModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            common.CommonModule,
                            i1.StateModule,
                            i1$2.StoreModule.forFeature(ASM_FEATURE, reducerToken, { metaReducers: metaReducers }),
                            i1$1.EffectsModule.forFeature(effects),
                        ],
                        providers: [reducerProvider],
                    }]
            }] });

    function asmStatePersistenceFactory(asmStatePersistenceService) {
        var result = function () { return asmStatePersistenceService.initSync(); };
        return result;
    }
    var AsmCoreModule = /** @class */ (function () {
        function AsmCoreModule() {
        }
        return AsmCoreModule;
    }());
    AsmCoreModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmCoreModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    AsmCoreModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmCoreModule, imports: [common.CommonModule, AsmStoreModule] });
    AsmCoreModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmCoreModule, providers: [
            i1.provideDefaultConfig(defaultAsmConfig),
            AsmConnector,
            {
                provide: i1.MODULE_INITIALIZER,
                useFactory: asmStatePersistenceFactory,
                deps: [AsmStatePersistenceService],
                multi: true,
            },
        ], imports: [[common.CommonModule, AsmStoreModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmCoreModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [common.CommonModule, AsmStoreModule],
                        providers: [
                            i1.provideDefaultConfig(defaultAsmConfig),
                            AsmConnector,
                            {
                                provide: i1.MODULE_INITIALIZER,
                                useFactory: asmStatePersistenceFactory,
                                deps: [AsmStatePersistenceService],
                                multi: true,
                            },
                        ],
                    }]
            }] });

    var AsmConfig = /** @class */ (function (_super) {
        __extends(AsmConfig, _super);
        function AsmConfig() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        return AsmConfig;
    }(i1.OccConfig));
    AsmConfig.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmConfig, deps: null, target: i0__namespace.ɵɵFactoryTarget.Injectable });
    AsmConfig.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmConfig, providedIn: 'root', useExisting: i1.Config });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmConfig, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                        useExisting: i1.Config,
                    }]
            }] });

    var CUSTOMER_SEARCH_PAGE_NORMALIZER = new i0.InjectionToken('CustomerSearchPageNormalizer');

    var AsmService = /** @class */ (function () {
        function AsmService(store) {
            this.store = store;
        }
        /**
         * Search for customers
         * @param options
         */
        AsmService.prototype.customerSearch = function (options) {
            this.store.dispatch(new CustomerSearch(options));
        };
        /**
         * Reset the customer search result data to the initial state.
         */
        AsmService.prototype.customerSearchReset = function () {
            this.store.dispatch(new CustomerSearchReset());
        };
        /**
         * Returns the customer search result data.
         */
        AsmService.prototype.getCustomerSearchResults = function () {
            return this.store.pipe(i1$2.select(getCustomerSearchResults));
        };
        /**
         * Returns the customer search result loading status.
         */
        AsmService.prototype.getCustomerSearchResultsLoading = function () {
            return this.store.pipe(i1$2.select(getCustomerSearchResultsLoading));
        };
        /**
         * Updates the state of the ASM UI
         */
        AsmService.prototype.updateAsmUiState = function (asmUi) {
            this.store.dispatch(new AsmUiUpdate(asmUi));
        };
        /**
         * Get the state of the ASM UI
         */
        AsmService.prototype.getAsmUiState = function () {
            return this.store.pipe(i1$2.select(getAsmUi));
        };
        return AsmService;
    }());
    AsmService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmService, deps: [{ token: i1__namespace$2.Store }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    AsmService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: AsmService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$2.Store }]; } });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ASM_FEATURE = ASM_FEATURE;
    exports.AsmActions = customerGroup_actions;
    exports.AsmAdapter = AsmAdapter;
    exports.AsmConfig = AsmConfig;
    exports.AsmConnector = AsmConnector;
    exports.AsmCoreModule = AsmCoreModule;
    exports.AsmSelectors = asmGroup_selectors;
    exports.AsmService = AsmService;
    exports.AsmStatePersistenceService = AsmStatePersistenceService;
    exports.CUSTOMER_SEARCH_DATA = CUSTOMER_SEARCH_DATA;
    exports.CUSTOMER_SEARCH_PAGE_NORMALIZER = CUSTOMER_SEARCH_PAGE_NORMALIZER;
    exports.asmStatePersistenceFactory = asmStatePersistenceFactory;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=spartacus-asm-core.umd.js.map
