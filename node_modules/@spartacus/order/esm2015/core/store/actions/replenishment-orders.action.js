import { StateUtils } from '@spartacus/core';
import { REPLENISHMENT_ORDERS } from '../order-state';
export const LOAD_USER_REPLENISHMENT_ORDERS = '[Order] Load User Replenishment Orders';
export const LOAD_USER_REPLENISHMENT_ORDERS_FAIL = '[Order] Load User Replenishment Orders Fail';
export const LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS = '[Order] Load User Replenishment Orders Success';
export const CLEAR_USER_REPLENISHMENT_ORDERS = '[Order] Clear User Replenishment Orders';
export class LoadUserReplenishmentOrders extends StateUtils.LoaderLoadAction {
    constructor(payload) {
        super(REPLENISHMENT_ORDERS);
        this.payload = payload;
        this.type = LOAD_USER_REPLENISHMENT_ORDERS;
    }
}
export class LoadUserReplenishmentOrdersFail extends StateUtils.LoaderFailAction {
    constructor(payload) {
        super(REPLENISHMENT_ORDERS, payload);
        this.payload = payload;
        this.type = LOAD_USER_REPLENISHMENT_ORDERS_FAIL;
    }
}
export class LoadUserReplenishmentOrdersSuccess extends StateUtils.LoaderSuccessAction {
    constructor(payload) {
        super(REPLENISHMENT_ORDERS);
        this.payload = payload;
        this.type = LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS;
    }
}
export class ClearUserReplenishmentOrders extends StateUtils.LoaderResetAction {
    constructor() {
        super(REPLENISHMENT_ORDERS);
        this.type = CLEAR_USER_REPLENISHMENT_ORDERS;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwbGVuaXNobWVudC1vcmRlcnMuYWN0aW9uLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZGVyL2NvcmUvc3RvcmUvYWN0aW9ucy9yZXBsZW5pc2htZW50LW9yZGVycy5hY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUEwQixVQUFVLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUV0RCxNQUFNLENBQUMsTUFBTSw4QkFBOEIsR0FDekMsd0NBQXdDLENBQUM7QUFDM0MsTUFBTSxDQUFDLE1BQU0sbUNBQW1DLEdBQzlDLDZDQUE2QyxDQUFDO0FBQ2hELE1BQU0sQ0FBQyxNQUFNLHNDQUFzQyxHQUNqRCxnREFBZ0QsQ0FBQztBQUNuRCxNQUFNLENBQUMsTUFBTSwrQkFBK0IsR0FDMUMseUNBQXlDLENBQUM7QUFFNUMsTUFBTSxPQUFPLDJCQUE0QixTQUFRLFVBQVUsQ0FBQyxnQkFBZ0I7SUFFMUUsWUFDUyxPQUtOO1FBRUQsS0FBSyxDQUFDLG9CQUFvQixDQUFDLENBQUM7UUFQckIsWUFBTyxHQUFQLE9BQU8sQ0FLYjtRQVBNLFNBQUksR0FBRyw4QkFBOEIsQ0FBQztJQVUvQyxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sK0JBQWdDLFNBQVEsVUFBVSxDQUFDLGdCQUFnQjtJQUU5RSxZQUFtQixPQUFZO1FBQzdCLEtBQUssQ0FBQyxvQkFBb0IsRUFBRSxPQUFPLENBQUMsQ0FBQztRQURwQixZQUFPLEdBQVAsT0FBTyxDQUFLO1FBRHRCLFNBQUksR0FBRyxtQ0FBbUMsQ0FBQztJQUdwRCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sa0NBQW1DLFNBQVEsVUFBVSxDQUFDLG1CQUFtQjtJQUVwRixZQUFtQixPQUErQjtRQUNoRCxLQUFLLENBQUMsb0JBQW9CLENBQUMsQ0FBQztRQURYLFlBQU8sR0FBUCxPQUFPLENBQXdCO1FBRHpDLFNBQUksR0FBRyxzQ0FBc0MsQ0FBQztJQUd2RCxDQUFDO0NBQ0Y7QUFFRCxNQUFNLE9BQU8sNEJBQTZCLFNBQVEsVUFBVSxDQUFDLGlCQUFpQjtJQUU1RTtRQUNFLEtBQUssQ0FBQyxvQkFBb0IsQ0FBQyxDQUFDO1FBRnJCLFNBQUksR0FBRywrQkFBK0IsQ0FBQztJQUdoRCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXBsZW5pc2htZW50T3JkZXJMaXN0LCBTdGF0ZVV0aWxzIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IFJFUExFTklTSE1FTlRfT1JERVJTIH0gZnJvbSAnLi4vb3JkZXItc3RhdGUnO1xuXG5leHBvcnQgY29uc3QgTE9BRF9VU0VSX1JFUExFTklTSE1FTlRfT1JERVJTID1cbiAgJ1tPcmRlcl0gTG9hZCBVc2VyIFJlcGxlbmlzaG1lbnQgT3JkZXJzJztcbmV4cG9ydCBjb25zdCBMT0FEX1VTRVJfUkVQTEVOSVNITUVOVF9PUkRFUlNfRkFJTCA9XG4gICdbT3JkZXJdIExvYWQgVXNlciBSZXBsZW5pc2htZW50IE9yZGVycyBGYWlsJztcbmV4cG9ydCBjb25zdCBMT0FEX1VTRVJfUkVQTEVOSVNITUVOVF9PUkRFUlNfU1VDQ0VTUyA9XG4gICdbT3JkZXJdIExvYWQgVXNlciBSZXBsZW5pc2htZW50IE9yZGVycyBTdWNjZXNzJztcbmV4cG9ydCBjb25zdCBDTEVBUl9VU0VSX1JFUExFTklTSE1FTlRfT1JERVJTID1cbiAgJ1tPcmRlcl0gQ2xlYXIgVXNlciBSZXBsZW5pc2htZW50IE9yZGVycyc7XG5cbmV4cG9ydCBjbGFzcyBMb2FkVXNlclJlcGxlbmlzaG1lbnRPcmRlcnMgZXh0ZW5kcyBTdGF0ZVV0aWxzLkxvYWRlckxvYWRBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gTE9BRF9VU0VSX1JFUExFTklTSE1FTlRfT1JERVJTO1xuICBjb25zdHJ1Y3RvcihcbiAgICBwdWJsaWMgcGF5bG9hZDoge1xuICAgICAgdXNlcklkOiBzdHJpbmc7XG4gICAgICBwYWdlU2l6ZT86IG51bWJlcjtcbiAgICAgIGN1cnJlbnRQYWdlPzogbnVtYmVyO1xuICAgICAgc29ydD86IHN0cmluZztcbiAgICB9XG4gICkge1xuICAgIHN1cGVyKFJFUExFTklTSE1FTlRfT1JERVJTKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTG9hZFVzZXJSZXBsZW5pc2htZW50T3JkZXJzRmFpbCBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyRmFpbEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBMT0FEX1VTRVJfUkVQTEVOSVNITUVOVF9PUkRFUlNfRkFJTDtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge1xuICAgIHN1cGVyKFJFUExFTklTSE1FTlRfT1JERVJTLCBwYXlsb2FkKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgTG9hZFVzZXJSZXBsZW5pc2htZW50T3JkZXJzU3VjY2VzcyBleHRlbmRzIFN0YXRlVXRpbHMuTG9hZGVyU3VjY2Vzc0FjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBMT0FEX1VTRVJfUkVQTEVOSVNITUVOVF9PUkRFUlNfU1VDQ0VTUztcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IFJlcGxlbmlzaG1lbnRPcmRlckxpc3QpIHtcbiAgICBzdXBlcihSRVBMRU5JU0hNRU5UX09SREVSUyk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIENsZWFyVXNlclJlcGxlbmlzaG1lbnRPcmRlcnMgZXh0ZW5kcyBTdGF0ZVV0aWxzLkxvYWRlclJlc2V0QWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IENMRUFSX1VTRVJfUkVQTEVOSVNITUVOVF9PUkRFUlM7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHN1cGVyKFJFUExFTklTSE1FTlRfT1JERVJTKTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBVc2VyUmVwbGVuaXNobWVudE9yZGVyc0FjdGlvbiA9XG4gIHwgTG9hZFVzZXJSZXBsZW5pc2htZW50T3JkZXJzXG4gIHwgTG9hZFVzZXJSZXBsZW5pc2htZW50T3JkZXJzRmFpbFxuICB8IExvYWRVc2VyUmVwbGVuaXNobWVudE9yZGVyc1N1Y2Nlc3NcbiAgfCBDbGVhclVzZXJSZXBsZW5pc2htZW50T3JkZXJzO1xuIl19