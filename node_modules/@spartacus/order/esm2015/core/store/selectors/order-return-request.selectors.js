import { createSelector } from '@ngrx/store';
import { StateUtils } from '@spartacus/core';
import { getOrderState } from './feature.selector';
export const getOrderReturnRequestState = createSelector(getOrderState, (state) => state.orderReturn);
export const getOrderReturnRequest = createSelector(getOrderReturnRequestState, (state) => StateUtils.loaderValueSelector(state));
export const getOrderReturnRequestLoading = createSelector(getOrderReturnRequestState, (state) => StateUtils.loaderLoadingSelector(state));
export const getOrderReturnRequestSuccess = createSelector(getOrderReturnRequestState, (state) => StateUtils.loaderSuccessSelector(state) &&
    !StateUtils.loaderLoadingSelector(state));
export const getOrderReturnRequestListState = createSelector(getOrderState, (state) => state.orderReturnList);
export const getOrderReturnRequestList = createSelector(getOrderReturnRequestListState, (state) => StateUtils.loaderValueSelector(state));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItcmV0dXJuLXJlcXVlc3Quc2VsZWN0b3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZGVyL2NvcmUvc3RvcmUvc2VsZWN0b3JzL29yZGVyLXJldHVybi1yZXF1ZXN0LnNlbGVjdG9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFvQixNQUFNLGFBQWEsQ0FBQztBQUMvRCxPQUFPLEVBQW9DLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBRS9FLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUVuRCxNQUFNLENBQUMsTUFBTSwwQkFBMEIsR0FHbkMsY0FBYyxDQUFDLGFBQWEsRUFBRSxDQUFDLEtBQWlCLEVBQUUsRUFBRSxDQUFDLEtBQUssQ0FBQyxXQUFXLENBQUMsQ0FBQztBQUU1RSxNQUFNLENBQUMsTUFBTSxxQkFBcUIsR0FHOUIsY0FBYyxDQUNoQiwwQkFBMEIsRUFDMUIsQ0FBQyxLQUE0QyxFQUFFLEVBQUUsQ0FDL0MsVUFBVSxDQUFDLG1CQUFtQixDQUFDLEtBQUssQ0FBQyxDQUN4QyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBR3JDLGNBQWMsQ0FDaEIsMEJBQTBCLEVBQzFCLENBQUMsS0FBNEMsRUFBRSxFQUFFLENBQy9DLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FDMUMsQ0FBQztBQUVGLE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUdyQyxjQUFjLENBQ2hCLDBCQUEwQixFQUMxQixDQUFDLEtBQTRDLEVBQUUsRUFBRSxDQUMvQyxVQUFVLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDO0lBQ3ZDLENBQUMsVUFBVSxDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUMzQyxDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sOEJBQThCLEdBR3ZDLGNBQWMsQ0FBQyxhQUFhLEVBQUUsQ0FBQyxLQUFpQixFQUFFLEVBQUUsQ0FBQyxLQUFLLENBQUMsZUFBZSxDQUFDLENBQUM7QUFFaEYsTUFBTSxDQUFDLE1BQU0seUJBQXlCLEdBR2xDLGNBQWMsQ0FDaEIsOEJBQThCLEVBQzlCLENBQUMsS0FBZ0QsRUFBRSxFQUFFLENBQ25ELFVBQVUsQ0FBQyxtQkFBbUIsQ0FBQyxLQUFLLENBQUMsQ0FDeEMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yLCBNZW1vaXplZFNlbGVjdG9yIH0gZnJvbSAnQG5ncngvc3RvcmUnO1xuaW1wb3J0IHsgUmV0dXJuUmVxdWVzdCwgUmV0dXJuUmVxdWVzdExpc3QsIFN0YXRlVXRpbHMgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgT3JkZXJTdGF0ZSwgU3RhdGVXaXRoT3JkZXIgfSBmcm9tICcuLi9vcmRlci1zdGF0ZSc7XG5pbXBvcnQgeyBnZXRPcmRlclN0YXRlIH0gZnJvbSAnLi9mZWF0dXJlLnNlbGVjdG9yJztcblxuZXhwb3J0IGNvbnN0IGdldE9yZGVyUmV0dXJuUmVxdWVzdFN0YXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhPcmRlcixcbiAgU3RhdGVVdGlscy5Mb2FkZXJTdGF0ZTxSZXR1cm5SZXF1ZXN0PlxuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldE9yZGVyU3RhdGUsIChzdGF0ZTogT3JkZXJTdGF0ZSkgPT4gc3RhdGUub3JkZXJSZXR1cm4pO1xuXG5leHBvcnQgY29uc3QgZ2V0T3JkZXJSZXR1cm5SZXF1ZXN0OiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhPcmRlcixcbiAgUmV0dXJuUmVxdWVzdFxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxuICBnZXRPcmRlclJldHVyblJlcXVlc3RTdGF0ZSxcbiAgKHN0YXRlOiBTdGF0ZVV0aWxzLkxvYWRlclN0YXRlPFJldHVyblJlcXVlc3Q+KSA9PlxuICAgIFN0YXRlVXRpbHMubG9hZGVyVmFsdWVTZWxlY3RvcihzdGF0ZSlcbik7XG5cbmV4cG9ydCBjb25zdCBnZXRPcmRlclJldHVyblJlcXVlc3RMb2FkaW5nOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhPcmRlcixcbiAgYm9vbGVhblxuPiA9IGNyZWF0ZVNlbGVjdG9yKFxuICBnZXRPcmRlclJldHVyblJlcXVlc3RTdGF0ZSxcbiAgKHN0YXRlOiBTdGF0ZVV0aWxzLkxvYWRlclN0YXRlPFJldHVyblJlcXVlc3Q+KSA9PlxuICAgIFN0YXRlVXRpbHMubG9hZGVyTG9hZGluZ1NlbGVjdG9yKHN0YXRlKVxuKTtcblxuZXhwb3J0IGNvbnN0IGdldE9yZGVyUmV0dXJuUmVxdWVzdFN1Y2Nlc3M6IE1lbW9pemVkU2VsZWN0b3I8XG4gIFN0YXRlV2l0aE9yZGVyLFxuICBib29sZWFuXG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldE9yZGVyUmV0dXJuUmVxdWVzdFN0YXRlLFxuICAoc3RhdGU6IFN0YXRlVXRpbHMuTG9hZGVyU3RhdGU8UmV0dXJuUmVxdWVzdD4pID0+XG4gICAgU3RhdGVVdGlscy5sb2FkZXJTdWNjZXNzU2VsZWN0b3Ioc3RhdGUpICYmXG4gICAgIVN0YXRlVXRpbHMubG9hZGVyTG9hZGluZ1NlbGVjdG9yKHN0YXRlKVxuKTtcblxuZXhwb3J0IGNvbnN0IGdldE9yZGVyUmV0dXJuUmVxdWVzdExpc3RTdGF0ZTogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoT3JkZXIsXG4gIFN0YXRlVXRpbHMuTG9hZGVyU3RhdGU8UmV0dXJuUmVxdWVzdExpc3Q+XG4+ID0gY3JlYXRlU2VsZWN0b3IoZ2V0T3JkZXJTdGF0ZSwgKHN0YXRlOiBPcmRlclN0YXRlKSA9PiBzdGF0ZS5vcmRlclJldHVybkxpc3QpO1xuXG5leHBvcnQgY29uc3QgZ2V0T3JkZXJSZXR1cm5SZXF1ZXN0TGlzdDogTWVtb2l6ZWRTZWxlY3RvcjxcbiAgU3RhdGVXaXRoT3JkZXIsXG4gIFJldHVyblJlcXVlc3RMaXN0XG4+ID0gY3JlYXRlU2VsZWN0b3IoXG4gIGdldE9yZGVyUmV0dXJuUmVxdWVzdExpc3RTdGF0ZSxcbiAgKHN0YXRlOiBTdGF0ZVV0aWxzLkxvYWRlclN0YXRlPFJldHVyblJlcXVlc3RMaXN0PikgPT5cbiAgICBTdGF0ZVV0aWxzLmxvYWRlclZhbHVlU2VsZWN0b3Ioc3RhdGUpXG4pO1xuIl19