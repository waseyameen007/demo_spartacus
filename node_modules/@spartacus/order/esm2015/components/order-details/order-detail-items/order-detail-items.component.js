import { Component } from '@angular/core';
import { PromotionLocation } from '@spartacus/core';
import { map } from 'rxjs/operators';
import { cancelledValues, completedValues, } from './order-consigned-entries/order-consigned-entries.model';
import * as i0 from "@angular/core";
import * as i1 from "../order-details.service";
import * as i2 from "@spartacus/storefront";
import * as i3 from "./order-consigned-entries/order-consigned-entries.component";
import * as i4 from "@angular/common";
import * as i5 from "@spartacus/core";
export class OrderDetailItemsComponent {
    constructor(orderDetailsService) {
        this.orderDetailsService = orderDetailsService;
        this.promotionLocation = PromotionLocation.Order;
        this.order$ = this.orderDetailsService.getOrderDetails();
    }
    ngOnInit() {
        this.others$ = this.getOtherStatus(...completedValues, ...cancelledValues);
        this.completed$ = this.getExactStatus(completedValues);
        this.cancel$ = this.getExactStatus(cancelledValues);
    }
    getExactStatus(consignmentStatus) {
        return this.order$.pipe(map((order) => {
            var _a;
            if (Boolean(order.consignments)) {
                return (_a = order.consignments) === null || _a === void 0 ? void 0 : _a.filter((consignment) => consignment.status &&
                    consignmentStatus.includes(consignment.status));
            }
        }));
    }
    getOtherStatus(...consignmentStatus) {
        return this.order$.pipe(map((order) => {
            var _a;
            if (Boolean(order.consignments)) {
                return (_a = order.consignments) === null || _a === void 0 ? void 0 : _a.filter((consignment) => consignment.status &&
                    !consignmentStatus.includes(consignment.status));
            }
        }));
    }
}
OrderDetailItemsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: OrderDetailItemsComponent, deps: [{ token: i1.OrderDetailsService }], target: i0.ɵɵFactoryTarget.Component });
OrderDetailItemsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: OrderDetailItemsComponent, selector: "cx-order-details-items", ngImport: i0, template: "<ng-container *ngIf=\"order$ | async as order\">\n  <ng-container\n    *ngIf=\"\n      order.consignments?.length ||\n      order.unconsignedEntries?.length ||\n      order.replenishmentOrderCode\n    \"\n  >\n    <cx-promotions\n      [promotions]=\"order.appliedOrderPromotions || []\"\n    ></cx-promotions>\n  </ng-container>\n\n  <!-- consigned entries -->\n  <ng-container *ngIf=\"order.consignments?.length\">\n    <cx-order-consigned-entries\n      *ngIf=\"others$ | async as others\"\n      [order]=\"order\"\n      [consignments]=\"others\"\n    ></cx-order-consigned-entries>\n\n    <cx-order-consigned-entries\n      *ngIf=\"completed$ | async as completed\"\n      [order]=\"order\"\n      [consignments]=\"completed\"\n    ></cx-order-consigned-entries>\n\n    <cx-order-consigned-entries\n      *ngIf=\"cancel$ | async as cancel\"\n      [order]=\"order\"\n      [consignments]=\"cancel\"\n    ></cx-order-consigned-entries>\n  </ng-container>\n\n  <!-- unconsigned entries OR any entries -->\n  <ng-container\n    *ngIf=\"\n      order?.unconsignedEntries?.length ||\n      (order?.entries && order?.replenishmentOrderCode)\n    \"\n  >\n    <div class=\"cx-list row\">\n      <div *ngIf=\"order?.statusDisplay\" class=\"cx-list-header col-12\">\n        <div class=\"cx-list-status\">\n          {{\n            'orderDetails.statusDisplay_' + order?.statusDisplay | cxTranslate\n          }}\n        </div>\n      </div>\n      <div class=\"cx-list-item col-12\">\n        <cx-cart-item-list\n          [items]=\"\n            order?.unconsignedEntries ? order.unconsignedEntries : order.entries\n          \"\n          [readonly]=\"true\"\n          [promotionLocation]=\"promotionLocation\"\n        ></cx-cart-item-list>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n", components: [{ type: i2.PromotionsComponent, selector: "cx-promotions", inputs: ["promotions"] }, { type: i3.OrderConsignedEntriesComponent, selector: "cx-order-consigned-entries", inputs: ["consignments", "order"] }, { type: i2.CartItemListComponent, selector: "cx-cart-item-list", inputs: ["readonly", "hasHeader", "options", "cartId", "items", "promotionLocation", "cartIsLoading"] }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i4.AsyncPipe, "cxTranslate": i5.TranslatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: OrderDetailItemsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-order-details-items',
                    templateUrl: './order-detail-items.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.OrderDetailsService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItZGV0YWlsLWl0ZW1zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmRlci9jb21wb25lbnRzL29yZGVyLWRldGFpbHMvb3JkZXItZGV0YWlsLWl0ZW1zL29yZGVyLWRldGFpbC1pdGVtcy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvb3JkZXIvY29tcG9uZW50cy9vcmRlci1kZXRhaWxzL29yZGVyLWRldGFpbC1pdGVtcy9vcmRlci1kZXRhaWwtaXRlbXMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQXNCLGlCQUFpQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFeEUsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXJDLE9BQU8sRUFDTCxlQUFlLEVBQ2YsZUFBZSxHQUNoQixNQUFNLHlEQUF5RCxDQUFDOzs7Ozs7O0FBTWpFLE1BQU0sT0FBTyx5QkFBeUI7SUFDcEMsWUFBc0IsbUJBQXdDO1FBQXhDLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFFOUQsc0JBQWlCLEdBQXNCLGlCQUFpQixDQUFDLEtBQUssQ0FBQztRQUMvRCxXQUFNLEdBQXNCLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxlQUFlLEVBQUUsQ0FBQztJQUhOLENBQUM7SUFRbEUsUUFBUTtRQUNOLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLGVBQWUsRUFBRSxHQUFHLGVBQWUsQ0FBQyxDQUFDO1FBQzNFLElBQUksQ0FBQyxVQUFVLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxlQUFlLENBQUMsQ0FBQztRQUN2RCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxjQUFjLENBQUMsZUFBZSxDQUFDLENBQUM7SUFDdEQsQ0FBQztJQUVPLGNBQWMsQ0FDcEIsaUJBQTJCO1FBRTNCLE9BQU8sSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQ3JCLEdBQUcsQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFOztZQUNaLElBQUksT0FBTyxDQUFDLEtBQUssQ0FBQyxZQUFZLENBQUMsRUFBRTtnQkFDL0IsT0FBTyxNQUFBLEtBQUssQ0FBQyxZQUFZLDBDQUFFLE1BQU0sQ0FDL0IsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUNkLFdBQVcsQ0FBQyxNQUFNO29CQUNsQixpQkFBaUIsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUNqRCxDQUFDO2FBQ0g7UUFDSCxDQUFDLENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQztJQUVPLGNBQWMsQ0FDcEIsR0FBRyxpQkFBMkI7UUFFOUIsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FDckIsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7O1lBQ1osSUFBSSxPQUFPLENBQUMsS0FBSyxDQUFDLFlBQVksQ0FBQyxFQUFFO2dCQUMvQixPQUFPLE1BQUEsS0FBSyxDQUFDLFlBQVksMENBQUUsTUFBTSxDQUMvQixDQUFDLFdBQVcsRUFBRSxFQUFFLENBQ2QsV0FBVyxDQUFDLE1BQU07b0JBQ2xCLENBQUMsaUJBQWlCLENBQUMsUUFBUSxDQUFDLFdBQVcsQ0FBQyxNQUFNLENBQUMsQ0FDbEQsQ0FBQzthQUNIO1FBQ0gsQ0FBQyxDQUFDLENBQ0gsQ0FBQztJQUNKLENBQUM7O3NIQTdDVSx5QkFBeUI7MEdBQXpCLHlCQUF5Qiw4RENkdEMsaXhEQTZEQTsyRkQvQ2EseUJBQXlCO2tCQUpyQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx3QkFBd0I7b0JBQ2xDLFdBQVcsRUFBRSxxQ0FBcUM7aUJBQ25EIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IENvbnNpZ25tZW50LCBPcmRlciwgUHJvbW90aW9uTG9jYXRpb24gfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgbWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuaW1wb3J0IHsgT3JkZXJEZXRhaWxzU2VydmljZSB9IGZyb20gJy4uL29yZGVyLWRldGFpbHMuc2VydmljZSc7XG5pbXBvcnQge1xuICBjYW5jZWxsZWRWYWx1ZXMsXG4gIGNvbXBsZXRlZFZhbHVlcyxcbn0gZnJvbSAnLi9vcmRlci1jb25zaWduZWQtZW50cmllcy9vcmRlci1jb25zaWduZWQtZW50cmllcy5tb2RlbCc7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogJ2N4LW9yZGVyLWRldGFpbHMtaXRlbXMnLFxuICB0ZW1wbGF0ZVVybDogJy4vb3JkZXItZGV0YWlsLWl0ZW1zLmNvbXBvbmVudC5odG1sJyxcbn0pXG5leHBvcnQgY2xhc3MgT3JkZXJEZXRhaWxJdGVtc0NvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBvcmRlckRldGFpbHNTZXJ2aWNlOiBPcmRlckRldGFpbHNTZXJ2aWNlKSB7fVxuXG4gIHByb21vdGlvbkxvY2F0aW9uOiBQcm9tb3Rpb25Mb2NhdGlvbiA9IFByb21vdGlvbkxvY2F0aW9uLk9yZGVyO1xuICBvcmRlciQ6IE9ic2VydmFibGU8T3JkZXI+ID0gdGhpcy5vcmRlckRldGFpbHNTZXJ2aWNlLmdldE9yZGVyRGV0YWlscygpO1xuICBvdGhlcnMkOiBPYnNlcnZhYmxlPENvbnNpZ25tZW50W10gfCB1bmRlZmluZWQ+O1xuICBjb21wbGV0ZWQkOiBPYnNlcnZhYmxlPENvbnNpZ25tZW50W10gfCB1bmRlZmluZWQ+O1xuICBjYW5jZWwkOiBPYnNlcnZhYmxlPENvbnNpZ25tZW50W10gfCB1bmRlZmluZWQ+O1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMub3RoZXJzJCA9IHRoaXMuZ2V0T3RoZXJTdGF0dXMoLi4uY29tcGxldGVkVmFsdWVzLCAuLi5jYW5jZWxsZWRWYWx1ZXMpO1xuICAgIHRoaXMuY29tcGxldGVkJCA9IHRoaXMuZ2V0RXhhY3RTdGF0dXMoY29tcGxldGVkVmFsdWVzKTtcbiAgICB0aGlzLmNhbmNlbCQgPSB0aGlzLmdldEV4YWN0U3RhdHVzKGNhbmNlbGxlZFZhbHVlcyk7XG4gIH1cblxuICBwcml2YXRlIGdldEV4YWN0U3RhdHVzKFxuICAgIGNvbnNpZ25tZW50U3RhdHVzOiBzdHJpbmdbXVxuICApOiBPYnNlcnZhYmxlPENvbnNpZ25tZW50W10gfCB1bmRlZmluZWQ+IHtcbiAgICByZXR1cm4gdGhpcy5vcmRlciQucGlwZShcbiAgICAgIG1hcCgob3JkZXIpID0+IHtcbiAgICAgICAgaWYgKEJvb2xlYW4ob3JkZXIuY29uc2lnbm1lbnRzKSkge1xuICAgICAgICAgIHJldHVybiBvcmRlci5jb25zaWdubWVudHM/LmZpbHRlcihcbiAgICAgICAgICAgIChjb25zaWdubWVudCkgPT5cbiAgICAgICAgICAgICAgY29uc2lnbm1lbnQuc3RhdHVzICYmXG4gICAgICAgICAgICAgIGNvbnNpZ25tZW50U3RhdHVzLmluY2x1ZGVzKGNvbnNpZ25tZW50LnN0YXR1cylcbiAgICAgICAgICApO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICk7XG4gIH1cblxuICBwcml2YXRlIGdldE90aGVyU3RhdHVzKFxuICAgIC4uLmNvbnNpZ25tZW50U3RhdHVzOiBzdHJpbmdbXVxuICApOiBPYnNlcnZhYmxlPENvbnNpZ25tZW50W10gfCB1bmRlZmluZWQ+IHtcbiAgICByZXR1cm4gdGhpcy5vcmRlciQucGlwZShcbiAgICAgIG1hcCgob3JkZXIpID0+IHtcbiAgICAgICAgaWYgKEJvb2xlYW4ob3JkZXIuY29uc2lnbm1lbnRzKSkge1xuICAgICAgICAgIHJldHVybiBvcmRlci5jb25zaWdubWVudHM/LmZpbHRlcihcbiAgICAgICAgICAgIChjb25zaWdubWVudCkgPT5cbiAgICAgICAgICAgICAgY29uc2lnbm1lbnQuc3RhdHVzICYmXG4gICAgICAgICAgICAgICFjb25zaWdubWVudFN0YXR1cy5pbmNsdWRlcyhjb25zaWdubWVudC5zdGF0dXMpXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICApO1xuICB9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwib3JkZXIkIHwgYXN5bmMgYXMgb3JkZXJcIj5cbiAgPG5nLWNvbnRhaW5lclxuICAgICpuZ0lmPVwiXG4gICAgICBvcmRlci5jb25zaWdubWVudHM/Lmxlbmd0aCB8fFxuICAgICAgb3JkZXIudW5jb25zaWduZWRFbnRyaWVzPy5sZW5ndGggfHxcbiAgICAgIG9yZGVyLnJlcGxlbmlzaG1lbnRPcmRlckNvZGVcbiAgICBcIlxuICA+XG4gICAgPGN4LXByb21vdGlvbnNcbiAgICAgIFtwcm9tb3Rpb25zXT1cIm9yZGVyLmFwcGxpZWRPcmRlclByb21vdGlvbnMgfHwgW11cIlxuICAgID48L2N4LXByb21vdGlvbnM+XG4gIDwvbmctY29udGFpbmVyPlxuXG4gIDwhLS0gY29uc2lnbmVkIGVudHJpZXMgLS0+XG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCJvcmRlci5jb25zaWdubWVudHM/Lmxlbmd0aFwiPlxuICAgIDxjeC1vcmRlci1jb25zaWduZWQtZW50cmllc1xuICAgICAgKm5nSWY9XCJvdGhlcnMkIHwgYXN5bmMgYXMgb3RoZXJzXCJcbiAgICAgIFtvcmRlcl09XCJvcmRlclwiXG4gICAgICBbY29uc2lnbm1lbnRzXT1cIm90aGVyc1wiXG4gICAgPjwvY3gtb3JkZXItY29uc2lnbmVkLWVudHJpZXM+XG5cbiAgICA8Y3gtb3JkZXItY29uc2lnbmVkLWVudHJpZXNcbiAgICAgICpuZ0lmPVwiY29tcGxldGVkJCB8IGFzeW5jIGFzIGNvbXBsZXRlZFwiXG4gICAgICBbb3JkZXJdPVwib3JkZXJcIlxuICAgICAgW2NvbnNpZ25tZW50c109XCJjb21wbGV0ZWRcIlxuICAgID48L2N4LW9yZGVyLWNvbnNpZ25lZC1lbnRyaWVzPlxuXG4gICAgPGN4LW9yZGVyLWNvbnNpZ25lZC1lbnRyaWVzXG4gICAgICAqbmdJZj1cImNhbmNlbCQgfCBhc3luYyBhcyBjYW5jZWxcIlxuICAgICAgW29yZGVyXT1cIm9yZGVyXCJcbiAgICAgIFtjb25zaWdubWVudHNdPVwiY2FuY2VsXCJcbiAgICA+PC9jeC1vcmRlci1jb25zaWduZWQtZW50cmllcz5cbiAgPC9uZy1jb250YWluZXI+XG5cbiAgPCEtLSB1bmNvbnNpZ25lZCBlbnRyaWVzIE9SIGFueSBlbnRyaWVzIC0tPlxuICA8bmctY29udGFpbmVyXG4gICAgKm5nSWY9XCJcbiAgICAgIG9yZGVyPy51bmNvbnNpZ25lZEVudHJpZXM/Lmxlbmd0aCB8fFxuICAgICAgKG9yZGVyPy5lbnRyaWVzICYmIG9yZGVyPy5yZXBsZW5pc2htZW50T3JkZXJDb2RlKVxuICAgIFwiXG4gID5cbiAgICA8ZGl2IGNsYXNzPVwiY3gtbGlzdCByb3dcIj5cbiAgICAgIDxkaXYgKm5nSWY9XCJvcmRlcj8uc3RhdHVzRGlzcGxheVwiIGNsYXNzPVwiY3gtbGlzdC1oZWFkZXIgY29sLTEyXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjeC1saXN0LXN0YXR1c1wiPlxuICAgICAgICAgIHt7XG4gICAgICAgICAgICAnb3JkZXJEZXRhaWxzLnN0YXR1c0Rpc3BsYXlfJyArIG9yZGVyPy5zdGF0dXNEaXNwbGF5IHwgY3hUcmFuc2xhdGVcbiAgICAgICAgICB9fVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImN4LWxpc3QtaXRlbSBjb2wtMTJcIj5cbiAgICAgICAgPGN4LWNhcnQtaXRlbS1saXN0XG4gICAgICAgICAgW2l0ZW1zXT1cIlxuICAgICAgICAgICAgb3JkZXI/LnVuY29uc2lnbmVkRW50cmllcyA/IG9yZGVyLnVuY29uc2lnbmVkRW50cmllcyA6IG9yZGVyLmVudHJpZXNcbiAgICAgICAgICBcIlxuICAgICAgICAgIFtyZWFkb25seV09XCJ0cnVlXCJcbiAgICAgICAgICBbcHJvbW90aW9uTG9jYXRpb25dPVwicHJvbW90aW9uTG9jYXRpb25cIlxuICAgICAgICA+PC9jeC1jYXJ0LWl0ZW0tbGlzdD5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L25nLWNvbnRhaW5lcj5cbjwvbmctY29udGFpbmVyPlxuIl19