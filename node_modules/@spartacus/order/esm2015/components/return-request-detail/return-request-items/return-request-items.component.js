import { ChangeDetectionStrategy, Component } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "../return-request.service";
import * as i2 from "@spartacus/storefront";
import * as i3 from "@angular/common";
import * as i4 from "@spartacus/core";
export class ReturnRequestItemsComponent {
    constructor(returnRequestService) {
        this.returnRequestService = returnRequestService;
        this.returnRequest$ = this.returnRequestService.getReturnRequest();
    }
}
ReturnRequestItemsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ReturnRequestItemsComponent, deps: [{ token: i1.ReturnRequestService }], target: i0.ɵɵFactoryTarget.Component });
ReturnRequestItemsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ReturnRequestItemsComponent, selector: "cx-return-request-items", ngImport: i0, template: "<ng-container *ngIf=\"returnRequest$ | async as returnRequest\">\n  <div class=\"d-none d-md-block d-lg-block d-xl-block\">\n    <div class=\"cx-item-list-header row\">\n      <div class=\"cx-item-list-desc col-md-5 col-lg-5 col-xl-6\">\n        {{ 'returnRequest.item' | cxTranslate }}\n      </div>\n      <div class=\"cx-item-list-price col-md-2 col-lg-2 col-xl-2\">\n        {{ 'returnRequest.itemPrice' | cxTranslate }}\n      </div>\n      <div class=\"cx-item-list-qty col-md-3 col-lg-3 col-xl-2\">\n        {{ 'returnRequest.returnQty' | cxTranslate }}\n      </div>\n      <div class=\"cx-item-list-total col-md-2 col-lg-2 col-xl-2\">\n        {{ 'returnRequest.total' | cxTranslate }}\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"cx-item-list-row\"\n    *ngFor=\"let returnEntry of returnRequest.returnEntries; let i = index\"\n  >\n    <div class=\"cx-item-list-items\">\n      <div class=\"row\">\n        <!-- Item Image -->\n        <div class=\"col-2 cx-image-container\">\n          <cx-media\n            [container]=\"returnEntry.orderEntry?.product.images?.PRIMARY\"\n            format=\"thumbnail\"\n          ></cx-media>\n        </div>\n        <!-- Item Information -->\n        <div class=\"cx-info col-10\">\n          <div class=\"cx-info-container row\">\n            <!-- Item Description -->\n            <div class=\"col-md-3 col-lg-4 col-xl-5\">\n              <div *ngIf=\"returnEntry.orderEntry?.product.name\" class=\"cx-name\">\n                {{ returnEntry.orderEntry?.product.name }}\n              </div>\n              <div *ngIf=\"returnEntry.orderEntry?.product.code\" class=\"cx-code\">\n                {{ 'cartItems.id' | cxTranslate }}\n                {{ returnEntry.orderEntry?.product.code }}\n              </div>\n              <!-- Variants -->\n              <div\n                *ngFor=\"\n                  let variant of (returnEntry.orderEntry?.product\n                    .baseOptions)[0]?.selected?.variantOptionQualifiers\n                \"\n                class=\"cx-property\"\n              >\n                <div class=\"cx-label\" *ngIf=\"variant.name\">\n                  {{ variant.name }}:\n                </div>\n                <div class=\"cx-value\" *ngIf=\"variant.value\">\n                  {{ variant.value }}\n                </div>\n              </div>\n            </div>\n            <!-- Item Price -->\n            <div\n              *ngIf=\"returnEntry.orderEntry?.basePrice\"\n              class=\"cx-price col-md-3 col-lg-2 col-xl-2\"\n            >\n              <div class=\"cx-label d-block d-md-none d-lg-none d-xl-none\">\n                {{ 'returnRequest.itemPrice' | cxTranslate }}\n              </div>\n              <div class=\"cx-value\">\n                {{ returnEntry.orderEntry?.basePrice?.formattedValue }}\n              </div>\n            </div>\n            <!-- return Quantity -->\n            <div class=\"cx-quantity col-md-3 col-lg-3 col-xl-3\">\n              <div class=\"cx-label d-block d-md-none d-lg-none d-xl-none\">\n                {{ 'returnRequest.returnQty' | cxTranslate }}\n              </div>\n              <div class=\"cx-value\">\n                {{ returnEntry.expectedQuantity }}\n              </div>\n            </div>\n            <!-- Total Price -->\n            <div class=\"cx-total col-md-3 col-lg-3 col-xl-2\">\n              <div class=\"cx-label d-block d-md-none d-lg-none d-xl-none\">\n                {{ 'returnRequest.total' | cxTranslate }}\n              </div>\n              <div class=\"cx-value\">\n                {{ returnEntry.refundAmount?.formattedValue }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n", components: [{ type: i2.MediaComponent, selector: "cx-media", inputs: ["container", "format", "alt", "role", "loading"], outputs: ["loaded"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "async": i3.AsyncPipe, "cxTranslate": i4.TranslatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ReturnRequestItemsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-return-request-items',
                    templateUrl: './return-request-items.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.ReturnRequestService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmV0dXJuLXJlcXVlc3QtaXRlbXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL29yZGVyL2NvbXBvbmVudHMvcmV0dXJuLXJlcXVlc3QtZGV0YWlsL3JldHVybi1yZXF1ZXN0LWl0ZW1zL3JldHVybi1yZXF1ZXN0LWl0ZW1zLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9vcmRlci9jb21wb25lbnRzL3JldHVybi1yZXF1ZXN0LWRldGFpbC9yZXR1cm4tcmVxdWVzdC1pdGVtcy9yZXR1cm4tcmVxdWVzdC1pdGVtcy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7Ozs7QUFVbkUsTUFBTSxPQUFPLDJCQUEyQjtJQUN0QyxZQUFzQixvQkFBMEM7UUFBMUMseUJBQW9CLEdBQXBCLG9CQUFvQixDQUFzQjtRQUVoRSxtQkFBYyxHQUNaLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDO0lBSG9CLENBQUM7O3dIQUR6RCwyQkFBMkI7NEdBQTNCLDJCQUEyQiwrRENWeEMsaXNIQStGQTsyRkRyRmEsMkJBQTJCO2tCQUx2QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx5QkFBeUI7b0JBQ25DLFdBQVcsRUFBRSx1Q0FBdUM7b0JBQ3BELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFJldHVyblJlcXVlc3QgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgUmV0dXJuUmVxdWVzdFNlcnZpY2UgfSBmcm9tICcuLi9yZXR1cm4tcmVxdWVzdC5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3gtcmV0dXJuLXJlcXVlc3QtaXRlbXMnLFxuICB0ZW1wbGF0ZVVybDogJy4vcmV0dXJuLXJlcXVlc3QtaXRlbXMuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgUmV0dXJuUmVxdWVzdEl0ZW1zQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIHJldHVyblJlcXVlc3RTZXJ2aWNlOiBSZXR1cm5SZXF1ZXN0U2VydmljZSkge31cblxuICByZXR1cm5SZXF1ZXN0JDogT2JzZXJ2YWJsZTxSZXR1cm5SZXF1ZXN0PiA9XG4gICAgdGhpcy5yZXR1cm5SZXF1ZXN0U2VydmljZS5nZXRSZXR1cm5SZXF1ZXN0KCk7XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwicmV0dXJuUmVxdWVzdCQgfCBhc3luYyBhcyByZXR1cm5SZXF1ZXN0XCI+XG4gIDxkaXYgY2xhc3M9XCJkLW5vbmUgZC1tZC1ibG9jayBkLWxnLWJsb2NrIGQteGwtYmxvY2tcIj5cbiAgICA8ZGl2IGNsYXNzPVwiY3gtaXRlbS1saXN0LWhlYWRlciByb3dcIj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjeC1pdGVtLWxpc3QtZGVzYyBjb2wtbWQtNSBjb2wtbGctNSBjb2wteGwtNlwiPlxuICAgICAgICB7eyAncmV0dXJuUmVxdWVzdC5pdGVtJyB8IGN4VHJhbnNsYXRlIH19XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjeC1pdGVtLWxpc3QtcHJpY2UgY29sLW1kLTIgY29sLWxnLTIgY29sLXhsLTJcIj5cbiAgICAgICAge3sgJ3JldHVyblJlcXVlc3QuaXRlbVByaWNlJyB8IGN4VHJhbnNsYXRlIH19XG4gICAgICA8L2Rpdj5cbiAgICAgIDxkaXYgY2xhc3M9XCJjeC1pdGVtLWxpc3QtcXR5IGNvbC1tZC0zIGNvbC1sZy0zIGNvbC14bC0yXCI+XG4gICAgICAgIHt7ICdyZXR1cm5SZXF1ZXN0LnJldHVyblF0eScgfCBjeFRyYW5zbGF0ZSB9fVxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzPVwiY3gtaXRlbS1saXN0LXRvdGFsIGNvbC1tZC0yIGNvbC1sZy0yIGNvbC14bC0yXCI+XG4gICAgICAgIHt7ICdyZXR1cm5SZXF1ZXN0LnRvdGFsJyB8IGN4VHJhbnNsYXRlIH19XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgPC9kaXY+XG5cbiAgPGRpdlxuICAgIGNsYXNzPVwiY3gtaXRlbS1saXN0LXJvd1wiXG4gICAgKm5nRm9yPVwibGV0IHJldHVybkVudHJ5IG9mIHJldHVyblJlcXVlc3QucmV0dXJuRW50cmllczsgbGV0IGkgPSBpbmRleFwiXG4gID5cbiAgICA8ZGl2IGNsYXNzPVwiY3gtaXRlbS1saXN0LWl0ZW1zXCI+XG4gICAgICA8ZGl2IGNsYXNzPVwicm93XCI+XG4gICAgICAgIDwhLS0gSXRlbSBJbWFnZSAtLT5cbiAgICAgICAgPGRpdiBjbGFzcz1cImNvbC0yIGN4LWltYWdlLWNvbnRhaW5lclwiPlxuICAgICAgICAgIDxjeC1tZWRpYVxuICAgICAgICAgICAgW2NvbnRhaW5lcl09XCJyZXR1cm5FbnRyeS5vcmRlckVudHJ5Py5wcm9kdWN0LmltYWdlcz8uUFJJTUFSWVwiXG4gICAgICAgICAgICBmb3JtYXQ9XCJ0aHVtYm5haWxcIlxuICAgICAgICAgID48L2N4LW1lZGlhPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPCEtLSBJdGVtIEluZm9ybWF0aW9uIC0tPlxuICAgICAgICA8ZGl2IGNsYXNzPVwiY3gtaW5mbyBjb2wtMTBcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiY3gtaW5mby1jb250YWluZXIgcm93XCI+XG4gICAgICAgICAgICA8IS0tIEl0ZW0gRGVzY3JpcHRpb24gLS0+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLW1kLTMgY29sLWxnLTQgY29sLXhsLTVcIj5cbiAgICAgICAgICAgICAgPGRpdiAqbmdJZj1cInJldHVybkVudHJ5Lm9yZGVyRW50cnk/LnByb2R1Y3QubmFtZVwiIGNsYXNzPVwiY3gtbmFtZVwiPlxuICAgICAgICAgICAgICAgIHt7IHJldHVybkVudHJ5Lm9yZGVyRW50cnk/LnByb2R1Y3QubmFtZSB9fVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiAqbmdJZj1cInJldHVybkVudHJ5Lm9yZGVyRW50cnk/LnByb2R1Y3QuY29kZVwiIGNsYXNzPVwiY3gtY29kZVwiPlxuICAgICAgICAgICAgICAgIHt7ICdjYXJ0SXRlbXMuaWQnIHwgY3hUcmFuc2xhdGUgfX1cbiAgICAgICAgICAgICAgICB7eyByZXR1cm5FbnRyeS5vcmRlckVudHJ5Py5wcm9kdWN0LmNvZGUgfX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwhLS0gVmFyaWFudHMgLS0+XG4gICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAqbmdGb3I9XCJcbiAgICAgICAgICAgICAgICAgIGxldCB2YXJpYW50IG9mIChyZXR1cm5FbnRyeS5vcmRlckVudHJ5Py5wcm9kdWN0XG4gICAgICAgICAgICAgICAgICAgIC5iYXNlT3B0aW9ucylbMF0/LnNlbGVjdGVkPy52YXJpYW50T3B0aW9uUXVhbGlmaWVyc1xuICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgY2xhc3M9XCJjeC1wcm9wZXJ0eVwiXG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY3gtbGFiZWxcIiAqbmdJZj1cInZhcmlhbnQubmFtZVwiPlxuICAgICAgICAgICAgICAgICAge3sgdmFyaWFudC5uYW1lIH19OlxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjeC12YWx1ZVwiICpuZ0lmPVwidmFyaWFudC52YWx1ZVwiPlxuICAgICAgICAgICAgICAgICAge3sgdmFyaWFudC52YWx1ZSB9fVxuICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPCEtLSBJdGVtIFByaWNlIC0tPlxuICAgICAgICAgICAgPGRpdlxuICAgICAgICAgICAgICAqbmdJZj1cInJldHVybkVudHJ5Lm9yZGVyRW50cnk/LmJhc2VQcmljZVwiXG4gICAgICAgICAgICAgIGNsYXNzPVwiY3gtcHJpY2UgY29sLW1kLTMgY29sLWxnLTIgY29sLXhsLTJcIlxuICAgICAgICAgICAgPlxuICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY3gtbGFiZWwgZC1ibG9jayBkLW1kLW5vbmUgZC1sZy1ub25lIGQteGwtbm9uZVwiPlxuICAgICAgICAgICAgICAgIHt7ICdyZXR1cm5SZXF1ZXN0Lml0ZW1QcmljZScgfCBjeFRyYW5zbGF0ZSB9fVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImN4LXZhbHVlXCI+XG4gICAgICAgICAgICAgICAge3sgcmV0dXJuRW50cnkub3JkZXJFbnRyeT8uYmFzZVByaWNlPy5mb3JtYXR0ZWRWYWx1ZSB9fVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgPCEtLSByZXR1cm4gUXVhbnRpdHkgLS0+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY3gtcXVhbnRpdHkgY29sLW1kLTMgY29sLWxnLTMgY29sLXhsLTNcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImN4LWxhYmVsIGQtYmxvY2sgZC1tZC1ub25lIGQtbGctbm9uZSBkLXhsLW5vbmVcIj5cbiAgICAgICAgICAgICAgICB7eyAncmV0dXJuUmVxdWVzdC5yZXR1cm5RdHknIHwgY3hUcmFuc2xhdGUgfX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjeC12YWx1ZVwiPlxuICAgICAgICAgICAgICAgIHt7IHJldHVybkVudHJ5LmV4cGVjdGVkUXVhbnRpdHkgfX1cbiAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwhLS0gVG90YWwgUHJpY2UgLS0+XG4gICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY3gtdG90YWwgY29sLW1kLTMgY29sLWxnLTMgY29sLXhsLTJcIj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImN4LWxhYmVsIGQtYmxvY2sgZC1tZC1ub25lIGQtbGctbm9uZSBkLXhsLW5vbmVcIj5cbiAgICAgICAgICAgICAgICB7eyAncmV0dXJuUmVxdWVzdC50b3RhbCcgfCBjeFRyYW5zbGF0ZSB9fVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImN4LXZhbHVlXCI+XG4gICAgICAgICAgICAgICAge3sgcmV0dXJuRW50cnkucmVmdW5kQW1vdW50Py5mb3JtYXR0ZWRWYWx1ZSB9fVxuICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L2Rpdj5cbjwvbmctY29udGFpbmVyPlxuIl19