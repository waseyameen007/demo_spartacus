(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@ngrx/store'), require('@spartacus/core'), require('rxjs/operators'), require('@spartacus/order/root'), require('@ngrx/effects'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@spartacus/order/core', ['exports', '@angular/core', '@ngrx/store', '@spartacus/core', 'rxjs/operators', '@spartacus/order/root', '@ngrx/effects', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.spartacus = global.spartacus || {}, global.spartacus.order = global.spartacus.order || {}, global.spartacus.order.core = {}), global.ng.core, global.store, global.core, global.rxjs.operators, global.spartacus.order.root, global.effects, global.rxjs));
}(this, (function (exports, i0, i1, i2, operators, root, i1$1, rxjs) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);

    var ORDER_HISTORY_NORMALIZER = new i0.InjectionToken('OrderHistoryNormalizer');
    var CONSIGNMENT_TRACKING_NORMALIZER = new i0.InjectionToken('ConsignmentTrackingNormalizer');
    var ORDER_RETURN_REQUEST_NORMALIZER = new i0.InjectionToken('OrderReturnRequestNormalizer');
    var ORDER_RETURN_REQUEST_INPUT_SERIALIZER = new i0.InjectionToken('OrderReturnRequestInputSerializer');
    var ORDER_RETURNS_NORMALIZER = new i0.InjectionToken('OrderReturnsNormalizer');
    var REPLENISHMENT_ORDER_HISTORY_NORMALIZER = new i0.InjectionToken('ReplenishmentOrderHistoryNormalizer');

    var OrderAdapter = /** @class */ (function () {
        function OrderAdapter() {
        }
        return OrderAdapter;
    }());

    var OrderConnector = /** @class */ (function () {
        function OrderConnector(adapter) {
            this.adapter = adapter;
        }
        OrderConnector.prototype.get = function (userId, orderCode) {
            return this.adapter.load(userId, orderCode);
        };
        OrderConnector.prototype.getHistory = function (userId, pageSize, currentPage, sort) {
            return this.adapter.loadHistory(userId, pageSize, currentPage, sort);
        };
        OrderConnector.prototype.getConsignmentTracking = function (orderCode, consignmentCode, userId) {
            return this.adapter.getConsignmentTracking(orderCode, consignmentCode, userId);
        };
        OrderConnector.prototype.cancel = function (userId, orderCode, cancelRequestInput) {
            return this.adapter.cancel(userId, orderCode, cancelRequestInput);
        };
        OrderConnector.prototype.return = function (userId, returnRequestInput) {
            return this.adapter.createReturnRequest(userId, returnRequestInput);
        };
        OrderConnector.prototype.getReturnRequestDetail = function (userId, returnRequestCode) {
            return this.adapter.loadReturnRequestDetail(userId, returnRequestCode);
        };
        OrderConnector.prototype.getReturnRequestList = function (userId, pageSize, currentPage, sort) {
            return this.adapter.loadReturnRequestList(userId, pageSize, currentPage, sort);
        };
        OrderConnector.prototype.cancelReturnRequest = function (userId, returnRequestCode, returnRequestModification) {
            return this.adapter.cancelReturnRequest(userId, returnRequestCode, returnRequestModification);
        };
        return OrderConnector;
    }());
    OrderConnector.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderConnector, deps: [{ token: OrderAdapter }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OrderConnector.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderConnector });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderConnector, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: OrderAdapter }]; } });

    var ReplenishmentOrderAdapter = /** @class */ (function () {
        function ReplenishmentOrderAdapter() {
        }
        return ReplenishmentOrderAdapter;
    }());

    var ReplenishmentOrderConnector = /** @class */ (function () {
        function ReplenishmentOrderConnector(adapter) {
            this.adapter = adapter;
        }
        ReplenishmentOrderConnector.prototype.load = function (userId, replenishmentOrderCode) {
            return this.adapter.load(userId, replenishmentOrderCode);
        };
        ReplenishmentOrderConnector.prototype.loadReplenishmentDetailsHistory = function (userId, replenishmentOrderCode, pageSize, currentPage, sort) {
            return this.adapter.loadReplenishmentDetailsHistory(userId, replenishmentOrderCode, pageSize, currentPage, sort);
        };
        ReplenishmentOrderConnector.prototype.cancelReplenishmentOrder = function (userId, replenishmentOrderCode) {
            return this.adapter.cancelReplenishmentOrder(userId, replenishmentOrderCode);
        };
        ReplenishmentOrderConnector.prototype.loadHistory = function (userId, pageSize, currentPage, sort) {
            return this.adapter.loadHistory(userId, pageSize, currentPage, sort);
        };
        return ReplenishmentOrderConnector;
    }());
    ReplenishmentOrderConnector.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ReplenishmentOrderConnector, deps: [{ token: ReplenishmentOrderAdapter }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ReplenishmentOrderConnector.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ReplenishmentOrderConnector });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ReplenishmentOrderConnector, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: ReplenishmentOrderAdapter }]; } });

    var LOAD_CONSIGNMENT_TRACKING = '[Order] Load Consignment Tracking';
    var LOAD_CONSIGNMENT_TRACKING_FAIL = '[Order] Load Consignment Tracking Fail';
    var LOAD_CONSIGNMENT_TRACKING_SUCCESS = '[Order] Load Consignment Tracking Success';
    var CLEAR_CONSIGNMENT_TRACKING = '[Order] Clear Consignment Tracking';
    var LoadConsignmentTracking = /** @class */ (function () {
        function LoadConsignmentTracking(payload) {
            this.payload = payload;
            this.type = LOAD_CONSIGNMENT_TRACKING;
        }
        return LoadConsignmentTracking;
    }());
    var LoadConsignmentTrackingFail = /** @class */ (function () {
        function LoadConsignmentTrackingFail(payload) {
            this.payload = payload;
            this.type = LOAD_CONSIGNMENT_TRACKING_FAIL;
        }
        return LoadConsignmentTrackingFail;
    }());
    var LoadConsignmentTrackingSuccess = /** @class */ (function () {
        function LoadConsignmentTrackingSuccess(payload) {
            this.payload = payload;
            this.type = LOAD_CONSIGNMENT_TRACKING_SUCCESS;
        }
        return LoadConsignmentTrackingSuccess;
    }());
    var ClearConsignmentTracking = /** @class */ (function () {
        function ClearConsignmentTracking() {
            this.type = CLEAR_CONSIGNMENT_TRACKING;
        }
        return ClearConsignmentTracking;
    }());

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var ORDER_FEATURE = 'order';
    var CANCEL_ORDER_PROCESS_ID = 'cancelOrder';
    var CANCEL_RETURN_PROCESS_ID = 'cancelReturn';
    var CANCEL_REPLENISHMENT_ORDER_PROCESS_ID = 'cancelReplenishmentOrder';
    var ORDERS = '[Order] User Orders';
    var RETURN_REQUESTS = '[Order] Order Return Requests';
    var RETURN_REQUEST_DETAILS = '[Order] Return Request Details';
    var ORDER_DETAILS = '[Order] User Order Details';
    var REPLENISHMENT_ORDERS = '[Order] User Replenishment Orders';
    var REPLENISHMENT_ORDER_DETAILS = '[Order] User Replenishment Order Details';

    var LOAD_ORDER_DETAILS = '[Order] Load Order Details';
    var LOAD_ORDER_DETAILS_FAIL = '[Order] Load Order Details Fail';
    var LOAD_ORDER_DETAILS_SUCCESS = '[Order] Load Order Details Success';
    var CLEAR_ORDER_DETAILS = '[Order] Clear Order Details';
    var CANCEL_ORDER = '[Order] Cancel Order';
    var CANCEL_ORDER_FAIL = '[Order] Cancel Order Fail';
    var CANCEL_ORDER_SUCCESS = '[Order] Cancel Order Success';
    var RESET_CANCEL_ORDER_PROCESS = '[Order] Reset Cancel Order Process';
    var LoadOrderDetails = /** @class */ (function (_super) {
        __extends(LoadOrderDetails, _super);
        function LoadOrderDetails(payload) {
            var _this = _super.call(this, ORDER_DETAILS) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_DETAILS;
            return _this;
        }
        return LoadOrderDetails;
    }(i2.StateUtils.LoaderLoadAction));
    var LoadOrderDetailsFail = /** @class */ (function (_super) {
        __extends(LoadOrderDetailsFail, _super);
        function LoadOrderDetailsFail(payload) {
            var _this = _super.call(this, ORDER_DETAILS, payload) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_DETAILS_FAIL;
            return _this;
        }
        return LoadOrderDetailsFail;
    }(i2.StateUtils.LoaderFailAction));
    var LoadOrderDetailsSuccess = /** @class */ (function (_super) {
        __extends(LoadOrderDetailsSuccess, _super);
        function LoadOrderDetailsSuccess(payload) {
            var _this = _super.call(this, ORDER_DETAILS) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_DETAILS_SUCCESS;
            return _this;
        }
        return LoadOrderDetailsSuccess;
    }(i2.StateUtils.LoaderSuccessAction));
    var ClearOrderDetails = /** @class */ (function (_super) {
        __extends(ClearOrderDetails, _super);
        function ClearOrderDetails() {
            var _this = _super.call(this, ORDER_DETAILS) || this;
            _this.type = CLEAR_ORDER_DETAILS;
            return _this;
        }
        return ClearOrderDetails;
    }(i2.StateUtils.LoaderResetAction));
    var CancelOrder = /** @class */ (function (_super) {
        __extends(CancelOrder, _super);
        function CancelOrder(payload) {
            var _this = _super.call(this, i2.PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID) || this;
            _this.payload = payload;
            _this.type = CANCEL_ORDER;
            return _this;
        }
        return CancelOrder;
    }(i2.StateUtils.EntityLoadAction));
    var CancelOrderFail = /** @class */ (function (_super) {
        __extends(CancelOrderFail, _super);
        function CancelOrderFail(payload) {
            var _this = _super.call(this, i2.PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID, payload) || this;
            _this.payload = payload;
            _this.type = CANCEL_ORDER_FAIL;
            return _this;
        }
        return CancelOrderFail;
    }(i2.StateUtils.EntityFailAction));
    var CancelOrderSuccess = /** @class */ (function (_super) {
        __extends(CancelOrderSuccess, _super);
        function CancelOrderSuccess() {
            var _this = _super.call(this, i2.PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID) || this;
            _this.type = CANCEL_ORDER_SUCCESS;
            return _this;
        }
        return CancelOrderSuccess;
    }(i2.StateUtils.EntitySuccessAction));
    var ResetCancelOrderProcess = /** @class */ (function (_super) {
        __extends(ResetCancelOrderProcess, _super);
        function ResetCancelOrderProcess() {
            var _this = _super.call(this, i2.PROCESS_FEATURE, CANCEL_ORDER_PROCESS_ID) || this;
            _this.type = RESET_CANCEL_ORDER_PROCESS;
            return _this;
        }
        return ResetCancelOrderProcess;
    }(i2.StateUtils.EntityLoaderResetAction));

    var CREATE_ORDER_RETURN_REQUEST = '[Order] Create Order Return Request';
    var CREATE_ORDER_RETURN_REQUEST_FAIL = '[Order] Create Order Return Request Fail';
    var CREATE_ORDER_RETURN_REQUEST_SUCCESS = '[Order] Create Order Return Request Success';
    var LOAD_ORDER_RETURN_REQUEST = '[Order] Load Order Return Request details';
    var LOAD_ORDER_RETURN_REQUEST_FAIL = '[Order] Load Order Return Request details Fail';
    var LOAD_ORDER_RETURN_REQUEST_SUCCESS = '[Order] Load Order Return Request details Success';
    var CANCEL_ORDER_RETURN_REQUEST = '[Order] Cancel Order Return Request';
    var CANCEL_ORDER_RETURN_REQUEST_FAIL = '[Order] Cancel Order Return Request Fail';
    var CANCEL_ORDER_RETURN_REQUEST_SUCCESS = '[Order] Cancel Order Return Request Success';
    var LOAD_ORDER_RETURN_REQUEST_LIST = '[Order] Load User Order Return Request List';
    var LOAD_ORDER_RETURN_REQUEST_LIST_FAIL = '[Order] Load User Order Return Request List Fail';
    var LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS = '[Order] Load User Order Return Request List Success';
    var CLEAR_ORDER_RETURN_REQUEST = '[Order] Clear Order Return Request Details';
    var CLEAR_ORDER_RETURN_REQUEST_LIST = '[Order] Clear Order Return Request List';
    var RESET_CANCEL_RETURN_PROCESS = '[Order] Reset Cancel Return Request Process';
    var CreateOrderReturnRequest = /** @class */ (function (_super) {
        __extends(CreateOrderReturnRequest, _super);
        function CreateOrderReturnRequest(payload) {
            var _this = _super.call(this, RETURN_REQUEST_DETAILS) || this;
            _this.payload = payload;
            _this.type = CREATE_ORDER_RETURN_REQUEST;
            return _this;
        }
        return CreateOrderReturnRequest;
    }(i2.StateUtils.LoaderLoadAction));
    var CreateOrderReturnRequestFail = /** @class */ (function (_super) {
        __extends(CreateOrderReturnRequestFail, _super);
        function CreateOrderReturnRequestFail(payload) {
            var _this = _super.call(this, RETURN_REQUEST_DETAILS, payload) || this;
            _this.payload = payload;
            _this.type = CREATE_ORDER_RETURN_REQUEST_FAIL;
            return _this;
        }
        return CreateOrderReturnRequestFail;
    }(i2.StateUtils.LoaderFailAction));
    var CreateOrderReturnRequestSuccess = /** @class */ (function (_super) {
        __extends(CreateOrderReturnRequestSuccess, _super);
        function CreateOrderReturnRequestSuccess(payload) {
            var _this = _super.call(this, RETURN_REQUEST_DETAILS) || this;
            _this.payload = payload;
            _this.type = CREATE_ORDER_RETURN_REQUEST_SUCCESS;
            return _this;
        }
        return CreateOrderReturnRequestSuccess;
    }(i2.StateUtils.LoaderSuccessAction));
    var LoadOrderReturnRequest = /** @class */ (function (_super) {
        __extends(LoadOrderReturnRequest, _super);
        function LoadOrderReturnRequest(payload) {
            var _this = _super.call(this, RETURN_REQUEST_DETAILS) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_RETURN_REQUEST;
            return _this;
        }
        return LoadOrderReturnRequest;
    }(i2.StateUtils.LoaderLoadAction));
    var LoadOrderReturnRequestFail = /** @class */ (function (_super) {
        __extends(LoadOrderReturnRequestFail, _super);
        function LoadOrderReturnRequestFail(payload) {
            var _this = _super.call(this, RETURN_REQUEST_DETAILS, payload) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_RETURN_REQUEST_FAIL;
            return _this;
        }
        return LoadOrderReturnRequestFail;
    }(i2.StateUtils.LoaderFailAction));
    var LoadOrderReturnRequestSuccess = /** @class */ (function (_super) {
        __extends(LoadOrderReturnRequestSuccess, _super);
        function LoadOrderReturnRequestSuccess(payload) {
            var _this = _super.call(this, RETURN_REQUEST_DETAILS) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_RETURN_REQUEST_SUCCESS;
            return _this;
        }
        return LoadOrderReturnRequestSuccess;
    }(i2.StateUtils.LoaderSuccessAction));
    var CancelOrderReturnRequest = /** @class */ (function (_super) {
        __extends(CancelOrderReturnRequest, _super);
        function CancelOrderReturnRequest(payload) {
            var _this = _super.call(this, i2.PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID) || this;
            _this.payload = payload;
            _this.type = CANCEL_ORDER_RETURN_REQUEST;
            return _this;
        }
        return CancelOrderReturnRequest;
    }(i2.StateUtils.EntityLoadAction));
    var CancelOrderReturnRequestFail = /** @class */ (function (_super) {
        __extends(CancelOrderReturnRequestFail, _super);
        function CancelOrderReturnRequestFail(payload) {
            var _this = _super.call(this, i2.PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID, payload) || this;
            _this.payload = payload;
            _this.type = CANCEL_ORDER_RETURN_REQUEST_FAIL;
            return _this;
        }
        return CancelOrderReturnRequestFail;
    }(i2.StateUtils.EntityFailAction));
    var CancelOrderReturnRequestSuccess = /** @class */ (function (_super) {
        __extends(CancelOrderReturnRequestSuccess, _super);
        function CancelOrderReturnRequestSuccess() {
            var _this = _super.call(this, i2.PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID) || this;
            _this.type = CANCEL_ORDER_RETURN_REQUEST_SUCCESS;
            return _this;
        }
        return CancelOrderReturnRequestSuccess;
    }(i2.StateUtils.EntitySuccessAction));
    var LoadOrderReturnRequestList = /** @class */ (function (_super) {
        __extends(LoadOrderReturnRequestList, _super);
        function LoadOrderReturnRequestList(payload) {
            var _this = _super.call(this, RETURN_REQUESTS) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_RETURN_REQUEST_LIST;
            return _this;
        }
        return LoadOrderReturnRequestList;
    }(i2.StateUtils.LoaderLoadAction));
    var LoadOrderReturnRequestListFail = /** @class */ (function (_super) {
        __extends(LoadOrderReturnRequestListFail, _super);
        function LoadOrderReturnRequestListFail(payload) {
            var _this = _super.call(this, RETURN_REQUESTS, payload) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_RETURN_REQUEST_LIST_FAIL;
            return _this;
        }
        return LoadOrderReturnRequestListFail;
    }(i2.StateUtils.LoaderFailAction));
    var LoadOrderReturnRequestListSuccess = /** @class */ (function (_super) {
        __extends(LoadOrderReturnRequestListSuccess, _super);
        function LoadOrderReturnRequestListSuccess(payload) {
            var _this = _super.call(this, RETURN_REQUESTS) || this;
            _this.payload = payload;
            _this.type = LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS;
            return _this;
        }
        return LoadOrderReturnRequestListSuccess;
    }(i2.StateUtils.LoaderSuccessAction));
    var ClearOrderReturnRequest = /** @class */ (function (_super) {
        __extends(ClearOrderReturnRequest, _super);
        function ClearOrderReturnRequest() {
            var _this = _super.call(this, RETURN_REQUEST_DETAILS) || this;
            _this.type = CLEAR_ORDER_RETURN_REQUEST;
            return _this;
        }
        return ClearOrderReturnRequest;
    }(i2.StateUtils.LoaderResetAction));
    var ClearOrderReturnRequestList = /** @class */ (function (_super) {
        __extends(ClearOrderReturnRequestList, _super);
        function ClearOrderReturnRequestList() {
            var _this = _super.call(this, RETURN_REQUESTS) || this;
            _this.type = CLEAR_ORDER_RETURN_REQUEST_LIST;
            return _this;
        }
        return ClearOrderReturnRequestList;
    }(i2.StateUtils.LoaderResetAction));
    var ResetCancelReturnProcess = /** @class */ (function (_super) {
        __extends(ResetCancelReturnProcess, _super);
        function ResetCancelReturnProcess() {
            var _this = _super.call(this, i2.PROCESS_FEATURE, CANCEL_RETURN_PROCESS_ID) || this;
            _this.type = RESET_CANCEL_RETURN_PROCESS;
            return _this;
        }
        return ResetCancelReturnProcess;
    }(i2.StateUtils.EntityLoaderResetAction));

    var LOAD_USER_ORDERS = '[Order] Load User Orders';
    var LOAD_USER_ORDERS_FAIL = '[Order] Load User Orders Fail';
    var LOAD_USER_ORDERS_SUCCESS = '[Order] Load User Orders Success';
    var CLEAR_USER_ORDERS = '[Order] Clear User Orders';
    var LoadUserOrders = /** @class */ (function (_super) {
        __extends(LoadUserOrders, _super);
        function LoadUserOrders(payload) {
            var _this = _super.call(this, ORDERS) || this;
            _this.payload = payload;
            _this.type = LOAD_USER_ORDERS;
            return _this;
        }
        return LoadUserOrders;
    }(i2.StateUtils.LoaderLoadAction));
    var LoadUserOrdersFail = /** @class */ (function (_super) {
        __extends(LoadUserOrdersFail, _super);
        function LoadUserOrdersFail(payload) {
            var _this = _super.call(this, ORDERS, payload) || this;
            _this.payload = payload;
            _this.type = LOAD_USER_ORDERS_FAIL;
            return _this;
        }
        return LoadUserOrdersFail;
    }(i2.StateUtils.LoaderFailAction));
    var LoadUserOrdersSuccess = /** @class */ (function (_super) {
        __extends(LoadUserOrdersSuccess, _super);
        function LoadUserOrdersSuccess(payload) {
            var _this = _super.call(this, ORDERS) || this;
            _this.payload = payload;
            _this.type = LOAD_USER_ORDERS_SUCCESS;
            return _this;
        }
        return LoadUserOrdersSuccess;
    }(i2.StateUtils.LoaderSuccessAction));
    var ClearUserOrders = /** @class */ (function (_super) {
        __extends(ClearUserOrders, _super);
        function ClearUserOrders() {
            var _this = _super.call(this, ORDERS) || this;
            _this.type = CLEAR_USER_ORDERS;
            return _this;
        }
        return ClearUserOrders;
    }(i2.StateUtils.LoaderResetAction));

    var LOAD_REPLENISHMENT_ORDER_DETAILS = '[Order] Load Replenishment Order Details';
    var LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS = '[Order] Load Replenishment Order Details Success';
    var LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL = '[Order] Load Replenishment Order Details Fail';
    var ClEAR_REPLENISHMENT_ORDER_DETAILS = '[Order] Clear Replenishment Order Details';
    var CANCEL_REPLENISHMENT_ORDER = '[Order] Cancel Replenishment Order';
    var CANCEL_REPLENISHMENT_ORDER_SUCCESS = '[Order] Cancel Replenishment Order Success';
    var CANCEL_REPLENISHMENT_ORDER_FAIL = '[Order] Cancel Replenishment Order Fail';
    var CLEAR_CANCEL_REPLENISHMENT_ORDER = '[Order] Clear Cancel Replenishment Order';
    var LoadReplenishmentOrderDetails = /** @class */ (function (_super) {
        __extends(LoadReplenishmentOrderDetails, _super);
        function LoadReplenishmentOrderDetails(payload) {
            var _this = _super.call(this, REPLENISHMENT_ORDER_DETAILS) || this;
            _this.payload = payload;
            _this.type = LOAD_REPLENISHMENT_ORDER_DETAILS;
            return _this;
        }
        return LoadReplenishmentOrderDetails;
    }(i2.StateUtils.LoaderLoadAction));
    var LoadReplenishmentOrderDetailsSuccess = /** @class */ (function (_super) {
        __extends(LoadReplenishmentOrderDetailsSuccess, _super);
        function LoadReplenishmentOrderDetailsSuccess(payload) {
            var _this = _super.call(this, REPLENISHMENT_ORDER_DETAILS) || this;
            _this.payload = payload;
            _this.type = LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS;
            return _this;
        }
        return LoadReplenishmentOrderDetailsSuccess;
    }(i2.StateUtils.LoaderSuccessAction));
    var LoadReplenishmentOrderDetailsFail = /** @class */ (function (_super) {
        __extends(LoadReplenishmentOrderDetailsFail, _super);
        function LoadReplenishmentOrderDetailsFail(payload) {
            var _this = _super.call(this, REPLENISHMENT_ORDER_DETAILS, payload) || this;
            _this.payload = payload;
            _this.type = LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL;
            return _this;
        }
        return LoadReplenishmentOrderDetailsFail;
    }(i2.StateUtils.LoaderFailAction));
    var ClearReplenishmentOrderDetails = /** @class */ (function (_super) {
        __extends(ClearReplenishmentOrderDetails, _super);
        function ClearReplenishmentOrderDetails() {
            var _this = _super.call(this, REPLENISHMENT_ORDER_DETAILS) || this;
            _this.type = ClEAR_REPLENISHMENT_ORDER_DETAILS;
            return _this;
        }
        return ClearReplenishmentOrderDetails;
    }(i2.StateUtils.LoaderResetAction));
    var CancelReplenishmentOrder = /** @class */ (function (_super) {
        __extends(CancelReplenishmentOrder, _super);
        function CancelReplenishmentOrder(payload) {
            var _this = _super.call(this, i2.PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID) || this;
            _this.payload = payload;
            _this.type = CANCEL_REPLENISHMENT_ORDER;
            return _this;
        }
        return CancelReplenishmentOrder;
    }(i2.StateUtils.EntityLoadAction));
    var CancelReplenishmentOrderSuccess = /** @class */ (function (_super) {
        __extends(CancelReplenishmentOrderSuccess, _super);
        function CancelReplenishmentOrderSuccess(payload) {
            var _this = _super.call(this, i2.PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID) || this;
            _this.payload = payload;
            _this.type = CANCEL_REPLENISHMENT_ORDER_SUCCESS;
            return _this;
        }
        return CancelReplenishmentOrderSuccess;
    }(i2.StateUtils.EntitySuccessAction));
    var CancelReplenishmentOrderFail = /** @class */ (function (_super) {
        __extends(CancelReplenishmentOrderFail, _super);
        function CancelReplenishmentOrderFail(payload) {
            var _this = _super.call(this, i2.PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID, payload) || this;
            _this.payload = payload;
            _this.type = CANCEL_REPLENISHMENT_ORDER_FAIL;
            return _this;
        }
        return CancelReplenishmentOrderFail;
    }(i2.StateUtils.EntityFailAction));
    var ClearCancelReplenishmentOrder = /** @class */ (function (_super) {
        __extends(ClearCancelReplenishmentOrder, _super);
        function ClearCancelReplenishmentOrder() {
            var _this = _super.call(this, i2.PROCESS_FEATURE, CANCEL_REPLENISHMENT_ORDER_PROCESS_ID) || this;
            _this.type = CLEAR_CANCEL_REPLENISHMENT_ORDER;
            return _this;
        }
        return ClearCancelReplenishmentOrder;
    }(i2.StateUtils.EntityLoaderResetAction));

    var LOAD_USER_REPLENISHMENT_ORDERS = '[Order] Load User Replenishment Orders';
    var LOAD_USER_REPLENISHMENT_ORDERS_FAIL = '[Order] Load User Replenishment Orders Fail';
    var LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS = '[Order] Load User Replenishment Orders Success';
    var CLEAR_USER_REPLENISHMENT_ORDERS = '[Order] Clear User Replenishment Orders';
    var LoadUserReplenishmentOrders = /** @class */ (function (_super) {
        __extends(LoadUserReplenishmentOrders, _super);
        function LoadUserReplenishmentOrders(payload) {
            var _this = _super.call(this, REPLENISHMENT_ORDERS) || this;
            _this.payload = payload;
            _this.type = LOAD_USER_REPLENISHMENT_ORDERS;
            return _this;
        }
        return LoadUserReplenishmentOrders;
    }(i2.StateUtils.LoaderLoadAction));
    var LoadUserReplenishmentOrdersFail = /** @class */ (function (_super) {
        __extends(LoadUserReplenishmentOrdersFail, _super);
        function LoadUserReplenishmentOrdersFail(payload) {
            var _this = _super.call(this, REPLENISHMENT_ORDERS, payload) || this;
            _this.payload = payload;
            _this.type = LOAD_USER_REPLENISHMENT_ORDERS_FAIL;
            return _this;
        }
        return LoadUserReplenishmentOrdersFail;
    }(i2.StateUtils.LoaderFailAction));
    var LoadUserReplenishmentOrdersSuccess = /** @class */ (function (_super) {
        __extends(LoadUserReplenishmentOrdersSuccess, _super);
        function LoadUserReplenishmentOrdersSuccess(payload) {
            var _this = _super.call(this, REPLENISHMENT_ORDERS) || this;
            _this.payload = payload;
            _this.type = LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS;
            return _this;
        }
        return LoadUserReplenishmentOrdersSuccess;
    }(i2.StateUtils.LoaderSuccessAction));
    var ClearUserReplenishmentOrders = /** @class */ (function (_super) {
        __extends(ClearUserReplenishmentOrders, _super);
        function ClearUserReplenishmentOrders() {
            var _this = _super.call(this, REPLENISHMENT_ORDERS) || this;
            _this.type = CLEAR_USER_REPLENISHMENT_ORDERS;
            return _this;
        }
        return ClearUserReplenishmentOrders;
    }(i2.StateUtils.LoaderResetAction));

    var orderGroup_actions = /*#__PURE__*/Object.freeze({
        __proto__: null,
        LOAD_CONSIGNMENT_TRACKING: LOAD_CONSIGNMENT_TRACKING,
        LOAD_CONSIGNMENT_TRACKING_FAIL: LOAD_CONSIGNMENT_TRACKING_FAIL,
        LOAD_CONSIGNMENT_TRACKING_SUCCESS: LOAD_CONSIGNMENT_TRACKING_SUCCESS,
        CLEAR_CONSIGNMENT_TRACKING: CLEAR_CONSIGNMENT_TRACKING,
        LoadConsignmentTracking: LoadConsignmentTracking,
        LoadConsignmentTrackingFail: LoadConsignmentTrackingFail,
        LoadConsignmentTrackingSuccess: LoadConsignmentTrackingSuccess,
        ClearConsignmentTracking: ClearConsignmentTracking,
        LOAD_ORDER_DETAILS: LOAD_ORDER_DETAILS,
        LOAD_ORDER_DETAILS_FAIL: LOAD_ORDER_DETAILS_FAIL,
        LOAD_ORDER_DETAILS_SUCCESS: LOAD_ORDER_DETAILS_SUCCESS,
        CLEAR_ORDER_DETAILS: CLEAR_ORDER_DETAILS,
        CANCEL_ORDER: CANCEL_ORDER,
        CANCEL_ORDER_FAIL: CANCEL_ORDER_FAIL,
        CANCEL_ORDER_SUCCESS: CANCEL_ORDER_SUCCESS,
        RESET_CANCEL_ORDER_PROCESS: RESET_CANCEL_ORDER_PROCESS,
        LoadOrderDetails: LoadOrderDetails,
        LoadOrderDetailsFail: LoadOrderDetailsFail,
        LoadOrderDetailsSuccess: LoadOrderDetailsSuccess,
        ClearOrderDetails: ClearOrderDetails,
        CancelOrder: CancelOrder,
        CancelOrderFail: CancelOrderFail,
        CancelOrderSuccess: CancelOrderSuccess,
        ResetCancelOrderProcess: ResetCancelOrderProcess,
        CREATE_ORDER_RETURN_REQUEST: CREATE_ORDER_RETURN_REQUEST,
        CREATE_ORDER_RETURN_REQUEST_FAIL: CREATE_ORDER_RETURN_REQUEST_FAIL,
        CREATE_ORDER_RETURN_REQUEST_SUCCESS: CREATE_ORDER_RETURN_REQUEST_SUCCESS,
        LOAD_ORDER_RETURN_REQUEST: LOAD_ORDER_RETURN_REQUEST,
        LOAD_ORDER_RETURN_REQUEST_FAIL: LOAD_ORDER_RETURN_REQUEST_FAIL,
        LOAD_ORDER_RETURN_REQUEST_SUCCESS: LOAD_ORDER_RETURN_REQUEST_SUCCESS,
        CANCEL_ORDER_RETURN_REQUEST: CANCEL_ORDER_RETURN_REQUEST,
        CANCEL_ORDER_RETURN_REQUEST_FAIL: CANCEL_ORDER_RETURN_REQUEST_FAIL,
        CANCEL_ORDER_RETURN_REQUEST_SUCCESS: CANCEL_ORDER_RETURN_REQUEST_SUCCESS,
        LOAD_ORDER_RETURN_REQUEST_LIST: LOAD_ORDER_RETURN_REQUEST_LIST,
        LOAD_ORDER_RETURN_REQUEST_LIST_FAIL: LOAD_ORDER_RETURN_REQUEST_LIST_FAIL,
        LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS: LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS,
        CLEAR_ORDER_RETURN_REQUEST: CLEAR_ORDER_RETURN_REQUEST,
        CLEAR_ORDER_RETURN_REQUEST_LIST: CLEAR_ORDER_RETURN_REQUEST_LIST,
        RESET_CANCEL_RETURN_PROCESS: RESET_CANCEL_RETURN_PROCESS,
        CreateOrderReturnRequest: CreateOrderReturnRequest,
        CreateOrderReturnRequestFail: CreateOrderReturnRequestFail,
        CreateOrderReturnRequestSuccess: CreateOrderReturnRequestSuccess,
        LoadOrderReturnRequest: LoadOrderReturnRequest,
        LoadOrderReturnRequestFail: LoadOrderReturnRequestFail,
        LoadOrderReturnRequestSuccess: LoadOrderReturnRequestSuccess,
        CancelOrderReturnRequest: CancelOrderReturnRequest,
        CancelOrderReturnRequestFail: CancelOrderReturnRequestFail,
        CancelOrderReturnRequestSuccess: CancelOrderReturnRequestSuccess,
        LoadOrderReturnRequestList: LoadOrderReturnRequestList,
        LoadOrderReturnRequestListFail: LoadOrderReturnRequestListFail,
        LoadOrderReturnRequestListSuccess: LoadOrderReturnRequestListSuccess,
        ClearOrderReturnRequest: ClearOrderReturnRequest,
        ClearOrderReturnRequestList: ClearOrderReturnRequestList,
        ResetCancelReturnProcess: ResetCancelReturnProcess,
        LOAD_USER_ORDERS: LOAD_USER_ORDERS,
        LOAD_USER_ORDERS_FAIL: LOAD_USER_ORDERS_FAIL,
        LOAD_USER_ORDERS_SUCCESS: LOAD_USER_ORDERS_SUCCESS,
        CLEAR_USER_ORDERS: CLEAR_USER_ORDERS,
        LoadUserOrders: LoadUserOrders,
        LoadUserOrdersFail: LoadUserOrdersFail,
        LoadUserOrdersSuccess: LoadUserOrdersSuccess,
        ClearUserOrders: ClearUserOrders,
        LOAD_REPLENISHMENT_ORDER_DETAILS: LOAD_REPLENISHMENT_ORDER_DETAILS,
        LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS: LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS,
        LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL: LOAD_REPLENISHMENT_ORDER_DETAILS_FAIL,
        ClEAR_REPLENISHMENT_ORDER_DETAILS: ClEAR_REPLENISHMENT_ORDER_DETAILS,
        CANCEL_REPLENISHMENT_ORDER: CANCEL_REPLENISHMENT_ORDER,
        CANCEL_REPLENISHMENT_ORDER_SUCCESS: CANCEL_REPLENISHMENT_ORDER_SUCCESS,
        CANCEL_REPLENISHMENT_ORDER_FAIL: CANCEL_REPLENISHMENT_ORDER_FAIL,
        CLEAR_CANCEL_REPLENISHMENT_ORDER: CLEAR_CANCEL_REPLENISHMENT_ORDER,
        LoadReplenishmentOrderDetails: LoadReplenishmentOrderDetails,
        LoadReplenishmentOrderDetailsSuccess: LoadReplenishmentOrderDetailsSuccess,
        LoadReplenishmentOrderDetailsFail: LoadReplenishmentOrderDetailsFail,
        ClearReplenishmentOrderDetails: ClearReplenishmentOrderDetails,
        CancelReplenishmentOrder: CancelReplenishmentOrder,
        CancelReplenishmentOrderSuccess: CancelReplenishmentOrderSuccess,
        CancelReplenishmentOrderFail: CancelReplenishmentOrderFail,
        ClearCancelReplenishmentOrder: ClearCancelReplenishmentOrder,
        LOAD_USER_REPLENISHMENT_ORDERS: LOAD_USER_REPLENISHMENT_ORDERS,
        LOAD_USER_REPLENISHMENT_ORDERS_FAIL: LOAD_USER_REPLENISHMENT_ORDERS_FAIL,
        LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS: LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS,
        CLEAR_USER_REPLENISHMENT_ORDERS: CLEAR_USER_REPLENISHMENT_ORDERS,
        LoadUserReplenishmentOrders: LoadUserReplenishmentOrders,
        LoadUserReplenishmentOrdersFail: LoadUserReplenishmentOrdersFail,
        LoadUserReplenishmentOrdersSuccess: LoadUserReplenishmentOrdersSuccess,
        ClearUserReplenishmentOrders: ClearUserReplenishmentOrders
    });

    var getOrderState = i1.createFeatureSelector(ORDER_FEATURE);

    var getConsignmentTrackingState = i1.createSelector(getOrderState, function (state) { return state.consignmentTracking; });
    var getConsignmentTracking = i1.createSelector(getConsignmentTrackingState, function (state) { return state.tracking; });

    var getOrderDetailState = i1.createSelector(getOrderState, function (state) { return state.orderDetail; });
    var getOrderDetails = i1.createSelector(getOrderDetailState, function (state) { return i2.StateUtils.loaderValueSelector(state); });

    var getOrderReturnRequestState = i1.createSelector(getOrderState, function (state) { return state.orderReturn; });
    var getOrderReturnRequest = i1.createSelector(getOrderReturnRequestState, function (state) { return i2.StateUtils.loaderValueSelector(state); });
    var getOrderReturnRequestLoading = i1.createSelector(getOrderReturnRequestState, function (state) { return i2.StateUtils.loaderLoadingSelector(state); });
    var getOrderReturnRequestSuccess = i1.createSelector(getOrderReturnRequestState, function (state) { return i2.StateUtils.loaderSuccessSelector(state) &&
        !i2.StateUtils.loaderLoadingSelector(state); });
    var getOrderReturnRequestListState = i1.createSelector(getOrderState, function (state) { return state.orderReturnList; });
    var getOrderReturnRequestList = i1.createSelector(getOrderReturnRequestListState, function (state) { return i2.StateUtils.loaderValueSelector(state); });

    var getOrdersState = i1.createSelector(getOrderState, function (state) { return state.orders; });
    var getOrdersLoaded = i1.createSelector(getOrdersState, function (state) { return i2.StateUtils.loaderSuccessSelector(state); });
    var getOrders = i1.createSelector(getOrdersState, function (state) { return i2.StateUtils.loaderValueSelector(state); });

    var getReplenishmentOrderState = i1.createSelector(getOrderState, function (state) { return state.replenishmentOrder; });
    var getReplenishmentOrderDetailsValue = i1.createSelector(getReplenishmentOrderState, function (state) { return i2.StateUtils.loaderValueSelector(state); });
    var getReplenishmentOrderDetailsLoading = i1.createSelector(getReplenishmentOrderState, function (state) { return i2.StateUtils.loaderLoadingSelector(state); });
    var getReplenishmentOrderDetailsSuccess = i1.createSelector(getReplenishmentOrderState, function (state) { return i2.StateUtils.loaderSuccessSelector(state); });
    var getReplenishmentOrderDetailsError = i1.createSelector(getReplenishmentOrderState, function (state) { return i2.StateUtils.loaderErrorSelector(state); });

    var getReplenishmentOrdersState = i1.createSelector(getOrderState, function (state) { return state.replenishmentOrders; });
    var getReplenishmentOrders = i1.createSelector(getReplenishmentOrdersState, function (state) { return i2.StateUtils.loaderValueSelector(state); });
    var getReplenishmentOrdersLoading = i1.createSelector(getReplenishmentOrdersState, function (state) { return i2.StateUtils.loaderLoadingSelector(state); });
    var getReplenishmentOrdersError = i1.createSelector(getReplenishmentOrdersState, function (state) { return i2.StateUtils.loaderErrorSelector(state); });
    var getReplenishmentOrdersSuccess = i1.createSelector(getReplenishmentOrdersState, function (state) { return i2.StateUtils.loaderSuccessSelector(state); });

    var orderGroup_selectors = /*#__PURE__*/Object.freeze({
        __proto__: null,
        getConsignmentTrackingState: getConsignmentTrackingState,
        getConsignmentTracking: getConsignmentTracking,
        getOrderState: getOrderState,
        getOrderDetailState: getOrderDetailState,
        getOrderDetails: getOrderDetails,
        getOrderReturnRequestState: getOrderReturnRequestState,
        getOrderReturnRequest: getOrderReturnRequest,
        getOrderReturnRequestLoading: getOrderReturnRequestLoading,
        getOrderReturnRequestSuccess: getOrderReturnRequestSuccess,
        getOrderReturnRequestListState: getOrderReturnRequestListState,
        getOrderReturnRequestList: getOrderReturnRequestList,
        getOrdersState: getOrdersState,
        getOrdersLoaded: getOrdersLoaded,
        getOrders: getOrders,
        getReplenishmentOrderState: getReplenishmentOrderState,
        getReplenishmentOrderDetailsValue: getReplenishmentOrderDetailsValue,
        getReplenishmentOrderDetailsLoading: getReplenishmentOrderDetailsLoading,
        getReplenishmentOrderDetailsSuccess: getReplenishmentOrderDetailsSuccess,
        getReplenishmentOrderDetailsError: getReplenishmentOrderDetailsError,
        getReplenishmentOrdersState: getReplenishmentOrdersState,
        getReplenishmentOrders: getReplenishmentOrders,
        getReplenishmentOrdersLoading: getReplenishmentOrdersLoading,
        getReplenishmentOrdersError: getReplenishmentOrdersError,
        getReplenishmentOrdersSuccess: getReplenishmentOrdersSuccess
    });

    var OrderReturnRequestService = /** @class */ (function () {
        function OrderReturnRequestService(store, processStateStore, userIdService) {
            this.store = store;
            this.processStateStore = processStateStore;
            this.userIdService = userIdService;
        }
        /**
         * Create order return request
         * @param orderCode an order code
         * @param returnRequestInput order return request entry input
         */
        OrderReturnRequestService.prototype.createOrderReturnRequest = function (returnRequestInput) {
            var _this = this;
            this.userIdService.takeUserId().subscribe(function (userId) {
                _this.store.dispatch(new CreateOrderReturnRequest({
                    userId: userId,
                    returnRequestInput: returnRequestInput,
                }));
            });
        };
        /**
         * Return an order return request
         */
        OrderReturnRequestService.prototype.getOrderReturnRequest = function () {
            return this.store.pipe(i1.select(getOrderReturnRequest));
        };
        /**
         * Gets order return request list
         */
        OrderReturnRequestService.prototype.getOrderReturnRequestList = function (pageSize) {
            var _this = this;
            return this.store.pipe(i1.select(getOrderReturnRequestListState), operators.tap(function (returnListState) {
                var attemptedLoad = returnListState.loading ||
                    returnListState.success ||
                    returnListState.error;
                if (!attemptedLoad) {
                    _this.loadOrderReturnRequestList(pageSize);
                }
            }), operators.map(function (returnListState) { return returnListState.value; }));
        };
        /**
         * Loads order return request detail
         * @param returnRequestCode
         */
        OrderReturnRequestService.prototype.loadOrderReturnRequestDetail = function (returnRequestCode) {
            var _this = this;
            this.userIdService.takeUserId().subscribe(function (userId) {
                _this.store.dispatch(new LoadOrderReturnRequest({
                    userId: userId,
                    returnRequestCode: returnRequestCode,
                }));
            });
        };
        /**
         * Loads order return request list
         * @param pageSize page size
         * @param currentPage current page
         * @param sort sort
         */
        OrderReturnRequestService.prototype.loadOrderReturnRequestList = function (pageSize, currentPage, sort) {
            var _this = this;
            this.userIdService.takeUserId(true).subscribe(function (userId) {
                _this.store.dispatch(new LoadOrderReturnRequestList({
                    userId: userId,
                    pageSize: pageSize,
                    currentPage: currentPage,
                    sort: sort,
                }));
            }, function () {
                // TODO: for future releases, refactor this part to thrown errors
            });
        };
        /**
         * Cleaning order return request list
         */
        OrderReturnRequestService.prototype.clearOrderReturnRequestList = function () {
            this.store.dispatch(new ClearOrderReturnRequestList());
        };
        /**
         * Get the order return request loading flag
         */
        OrderReturnRequestService.prototype.getReturnRequestLoading = function () {
            return this.store.pipe(i1.select(getOrderReturnRequestLoading));
        };
        /**
         * Get the order return request success flag
         */
        OrderReturnRequestService.prototype.getReturnRequestSuccess = function () {
            return this.store.pipe(i1.select(getOrderReturnRequestSuccess));
        };
        /**
         * Cleaning order return request details
         */
        OrderReturnRequestService.prototype.clearOrderReturnRequestDetail = function () {
            this.store.dispatch(new ClearOrderReturnRequest());
        };
        /*
         * Cancel order return request
         */
        OrderReturnRequestService.prototype.cancelOrderReturnRequest = function (returnRequestCode, returnRequestModification) {
            var _this = this;
            this.userIdService.takeUserId().subscribe(function (userId) {
                _this.store.dispatch(new CancelOrderReturnRequest({
                    userId: userId,
                    returnRequestCode: returnRequestCode,
                    returnRequestModification: returnRequestModification,
                }));
            });
        };
        /**
         * Returns the cancel return request loading flag
         */
        OrderReturnRequestService.prototype.getCancelReturnRequestLoading = function () {
            return this.processStateStore.pipe(i1.select(i2.ProcessSelectors.getProcessLoadingFactory(CANCEL_RETURN_PROCESS_ID)));
        };
        /**
         * Returns the cancel return request success flag
         */
        OrderReturnRequestService.prototype.getCancelReturnRequestSuccess = function () {
            return this.processStateStore.pipe(i1.select(i2.ProcessSelectors.getProcessSuccessFactory(CANCEL_RETURN_PROCESS_ID)));
        };
        /**
         * Resets the cancel return request process flags
         */
        OrderReturnRequestService.prototype.resetCancelReturnRequestProcessState = function () {
            return this.store.dispatch(new ResetCancelReturnProcess());
        };
        return OrderReturnRequestService;
    }());
    OrderReturnRequestService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderReturnRequestService, deps: [{ token: i1__namespace.Store }, { token: i1__namespace.Store }, { token: i2__namespace.UserIdService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OrderReturnRequestService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderReturnRequestService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderReturnRequestService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace.Store }, { type: i1__namespace.Store }, { type: i2__namespace.UserIdService }]; } });

    var OrderService = /** @class */ (function () {
        function OrderService(store, processStateStore, userIdService, routingService) {
            this.store = store;
            this.processStateStore = processStateStore;
            this.userIdService = userIdService;
            this.routingService = routingService;
        }
        /**
         * Returns an order's detail
         */
        OrderService.prototype.getOrderDetails = function () {
            return this.store.pipe(i1.select(getOrderDetails));
        };
        /**
         * Retrieves order's details
         *
         * @param orderCode an order code
         */
        OrderService.prototype.loadOrderDetails = function (orderCode) {
            var _this = this;
            this.userIdService.takeUserId().subscribe(function (userId) {
                _this.store.dispatch(new LoadOrderDetails({
                    userId: userId,
                    orderCode: orderCode,
                }));
            });
        };
        /**
         * Clears order's details
         */
        OrderService.prototype.clearOrderDetails = function () {
            this.store.dispatch(new ClearOrderDetails());
        };
        /**
         * Returns order history list
         */
        OrderService.prototype.getOrderHistoryList = function (pageSize) {
            var _this = this;
            return this.store.pipe(i1.select(getOrdersState), operators.tap(function (orderListState) {
                var attemptedLoad = orderListState.loading ||
                    orderListState.success ||
                    orderListState.error;
                if (!attemptedLoad) {
                    _this.loadOrderList(pageSize);
                }
            }), operators.map(function (orderListState) { return orderListState.value; }));
        };
        /**
         * Returns a loaded flag for order history list
         */
        OrderService.prototype.getOrderHistoryListLoaded = function () {
            return this.store.pipe(i1.select(getOrdersLoaded));
        };
        /**
         * Retrieves an order list
         * @param pageSize page size
         * @param currentPage current page
         * @param sort sort
         */
        OrderService.prototype.loadOrderList = function (pageSize, currentPage, sort) {
            var _this = this;
            this.userIdService.takeUserId(true).subscribe(function (userId) {
                var replenishmentOrderCode;
                _this.routingService
                    .getRouterState()
                    .pipe(operators.take(1))
                    .subscribe(function (data) {
                    var _a, _b;
                    replenishmentOrderCode =
                        (_b = (_a = data === null || data === void 0 ? void 0 : data.state) === null || _a === void 0 ? void 0 : _a.params) === null || _b === void 0 ? void 0 : _b.replenishmentOrderCode;
                })
                    .unsubscribe();
                _this.store.dispatch(new LoadUserOrders({
                    userId: userId,
                    pageSize: pageSize,
                    currentPage: currentPage,
                    sort: sort,
                    replenishmentOrderCode: replenishmentOrderCode,
                }));
            }, function () {
                // TODO: for future releases, refactor this part to thrown errors
            });
        };
        /**
         * Cleaning order list
         */
        OrderService.prototype.clearOrderList = function () {
            this.store.dispatch(new ClearUserOrders());
        };
        /**
         *  Returns a consignment tracking detail
         */
        OrderService.prototype.getConsignmentTracking = function () {
            return this.store.pipe(i1.select(getConsignmentTracking));
        };
        /**
         * Retrieves consignment tracking details
         * @param orderCode an order code
         * @param consignmentCode a consignment code
         */
        OrderService.prototype.loadConsignmentTracking = function (orderCode, consignmentCode) {
            var _this = this;
            this.userIdService.takeUserId().subscribe(function (userId) {
                _this.store.dispatch(new LoadConsignmentTracking({
                    userId: userId,
                    orderCode: orderCode,
                    consignmentCode: consignmentCode,
                }));
            });
        };
        /**
         * Cleaning consignment tracking
         */
        OrderService.prototype.clearConsignmentTracking = function () {
            this.store.dispatch(new ClearConsignmentTracking());
        };
        /*
         * Cancel an order
         */
        OrderService.prototype.cancelOrder = function (orderCode, cancelRequestInput) {
            var _this = this;
            this.userIdService.takeUserId().subscribe(function (userId) {
                _this.store.dispatch(new CancelOrder({
                    userId: userId,
                    orderCode: orderCode,
                    cancelRequestInput: cancelRequestInput,
                }));
            });
        };
        /**
         * Returns the cancel order loading flag
         */
        OrderService.prototype.getCancelOrderLoading = function () {
            return this.processStateStore.pipe(i1.select(i2.ProcessSelectors.getProcessLoadingFactory(CANCEL_ORDER_PROCESS_ID)));
        };
        /**
         * Returns the cancel order success flag
         */
        OrderService.prototype.getCancelOrderSuccess = function () {
            return this.processStateStore.pipe(i1.select(i2.ProcessSelectors.getProcessSuccessFactory(CANCEL_ORDER_PROCESS_ID)));
        };
        /**
         * Resets the cancel order process flags
         */
        OrderService.prototype.resetCancelOrderProcessState = function () {
            return this.store.dispatch(new ResetCancelOrderProcess());
        };
        return OrderService;
    }());
    OrderService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderService, deps: [{ token: i1__namespace.Store }, { token: i1__namespace.Store }, { token: i2__namespace.UserIdService }, { token: i2__namespace.RoutingService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OrderService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace.Store }, { type: i1__namespace.Store }, { type: i2__namespace.UserIdService }, { type: i2__namespace.RoutingService }]; } });

    var ReplenishmentOrderService = /** @class */ (function () {
        function ReplenishmentOrderService(store, processStateStore, userIdService) {
            this.store = store;
            this.processStateStore = processStateStore;
            this.userIdService = userIdService;
        }
        /**
         * Returns replenishment order details for a given 'current' user
         *
         * @param replenishmentOrderCode a replenishment order code
         */
        ReplenishmentOrderService.prototype.loadReplenishmentOrderDetails = function (replenishmentOrderCode) {
            var _this = this;
            this.userIdService.takeUserId(true).subscribe(function (userId) {
                _this.store.dispatch(new LoadReplenishmentOrderDetails({
                    userId: userId,
                    replenishmentOrderCode: replenishmentOrderCode,
                }));
            }, function () {
                // TODO: for future releases, refactor this part to thrown errors
            });
        };
        /**
         * Returns a replenishment order details
         */
        ReplenishmentOrderService.prototype.getReplenishmentOrderDetails = function () {
            return this.store.pipe(i1.select(getReplenishmentOrderDetailsValue));
        };
        /**
         * Returns a replenishment order details loading flag
         */
        ReplenishmentOrderService.prototype.getReplenishmentOrderDetailsLoading = function () {
            return this.store.pipe(i1.select(getReplenishmentOrderDetailsLoading));
        };
        /**
         * Returns a replenishment order details success flag
         */
        ReplenishmentOrderService.prototype.getReplenishmentOrderDetailsSuccess = function () {
            return this.store.pipe(i1.select(getReplenishmentOrderDetailsSuccess));
        };
        /**
         * Returns a replenishment order details error flag
         */
        ReplenishmentOrderService.prototype.getReplenishmentOrderDetailsError = function () {
            return this.store.pipe(i1.select(getReplenishmentOrderDetailsError));
        };
        /**
         * Clears the replenishment orders details state
         */
        ReplenishmentOrderService.prototype.clearReplenishmentOrderDetails = function () {
            this.store.dispatch(new ClearReplenishmentOrderDetails());
        };
        /**
         * Cancels a specific replenishment order for a given 'current' user
         *
         * @param replenishmentOrderCode a replenishment order code
         */
        ReplenishmentOrderService.prototype.cancelReplenishmentOrder = function (replenishmentOrderCode) {
            var _this = this;
            this.userIdService.takeUserId(true).subscribe(function (userId) {
                _this.store.dispatch(new CancelReplenishmentOrder({
                    userId: userId,
                    replenishmentOrderCode: replenishmentOrderCode,
                }));
            }, function () {
                // TODO: for future releases, refactor this part to thrown errors
            });
        };
        /**
         * Returns the cancel replenishment order loading flag
         */
        ReplenishmentOrderService.prototype.getCancelReplenishmentOrderLoading = function () {
            return this.processStateStore.pipe(i1.select(i2.ProcessSelectors.getProcessLoadingFactory(CANCEL_REPLENISHMENT_ORDER_PROCESS_ID)));
        };
        /**
         * Returns the cancel replenishment order success flag
         */
        ReplenishmentOrderService.prototype.getCancelReplenishmentOrderSuccess = function () {
            return this.processStateStore.pipe(i1.select(i2.ProcessSelectors.getProcessSuccessFactory(CANCEL_REPLENISHMENT_ORDER_PROCESS_ID)));
        };
        /**
         * Returns the cancel replenishment order error flag
         */
        ReplenishmentOrderService.prototype.getCancelReplenishmentOrderError = function () {
            return this.processStateStore.pipe(i1.select(i2.ProcessSelectors.getProcessErrorFactory(CANCEL_REPLENISHMENT_ORDER_PROCESS_ID)));
        };
        /**
         * Clears the cancel replenishment order processing state
         */
        ReplenishmentOrderService.prototype.clearCancelReplenishmentOrderProcessState = function () {
            this.store.dispatch(new ClearCancelReplenishmentOrder());
        };
        /**
         * Returns replenishment order history list
         */
        ReplenishmentOrderService.prototype.getReplenishmentOrderHistoryList = function (pageSize) {
            var _this = this;
            return this.store.pipe(i1.select(getReplenishmentOrdersState), operators.tap(function (replenishmentOrderListState) {
                var attemptedLoad = replenishmentOrderListState.loading ||
                    replenishmentOrderListState.success ||
                    replenishmentOrderListState.error;
                if (!attemptedLoad) {
                    _this.loadReplenishmentOrderList(pageSize);
                }
            }), operators.map(function (replenishmentOrderListState) { return replenishmentOrderListState.value; }));
        };
        /**
         * Returns a loading flag for replenishment order history list
         */
        ReplenishmentOrderService.prototype.getReplenishmentOrderHistoryListLoading = function () {
            return this.store.pipe(i1.select(getReplenishmentOrdersLoading));
        };
        /**
         * Returns a error flag for replenishment order history list
         */
        ReplenishmentOrderService.prototype.getReplenishmentOrderHistoryListError = function () {
            return this.store.pipe(i1.select(getReplenishmentOrdersError));
        };
        /**
         * Returns a success flag for replenishment order history list
         */
        ReplenishmentOrderService.prototype.getReplenishmentOrderHistoryListSuccess = function () {
            return this.store.pipe(i1.select(getReplenishmentOrdersSuccess));
        };
        /**
         * Retrieves a replenishment order list
         * @param pageSize page size
         * @param currentPage current page
         * @param sort sort
         */
        ReplenishmentOrderService.prototype.loadReplenishmentOrderList = function (pageSize, currentPage, sort) {
            var _this = this;
            this.userIdService.takeUserId(true).subscribe(function (userId) {
                _this.store.dispatch(new LoadUserReplenishmentOrders({
                    userId: userId,
                    pageSize: pageSize,
                    currentPage: currentPage,
                    sort: sort,
                }));
            }, function () {
                // TODO: for future releases, refactor this part to thrown errors
            });
        };
        /**
         * Cleaning replenishment order list
         */
        ReplenishmentOrderService.prototype.clearReplenishmentOrderList = function () {
            this.store.dispatch(new ClearUserReplenishmentOrders());
        };
        return ReplenishmentOrderService;
    }());
    ReplenishmentOrderService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ReplenishmentOrderService, deps: [{ token: i1__namespace.Store }, { token: i1__namespace.Store }, { token: i2__namespace.UserIdService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ReplenishmentOrderService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ReplenishmentOrderService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ReplenishmentOrderService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace.Store }, { type: i1__namespace.Store }, { type: i2__namespace.UserIdService }]; } });

    var facadeProviders = [
        OrderReturnRequestService,
        {
            provide: root.OrderReturnRequestFacade,
            useExisting: OrderReturnRequestService,
        },
        OrderService,
        {
            provide: root.OrderFacade,
            useExisting: OrderService,
        },
        ReplenishmentOrderService,
        {
            provide: root.ReplenishmentOrderFacade,
            useExisting: ReplenishmentOrderService,
        },
    ];

    var ConsignmentTrackingEffects = /** @class */ (function () {
        function ConsignmentTrackingEffects(actions$, orderConnector) {
            var _this = this;
            this.actions$ = actions$;
            this.orderConnector = orderConnector;
            this.loadConsignmentTracking$ = this.actions$.pipe(i1$1.ofType(LOAD_CONSIGNMENT_TRACKING), operators.map(function (action) { return action.payload; }), operators.switchMap(function (payload) {
                return _this.orderConnector
                    .getConsignmentTracking(payload.orderCode, payload.consignmentCode, payload.userId)
                    .pipe(operators.map(function (tracking) { return new LoadConsignmentTrackingSuccess(tracking); }), operators.catchError(function (error) { return rxjs.of(new LoadConsignmentTrackingFail(i2.normalizeHttpError(error))); }));
            }));
        }
        return ConsignmentTrackingEffects;
    }());
    ConsignmentTrackingEffects.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ConsignmentTrackingEffects, deps: [{ token: i1__namespace$1.Actions }, { token: OrderConnector }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ConsignmentTrackingEffects.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ConsignmentTrackingEffects });
    __decorate([
        i1$1.Effect()
    ], ConsignmentTrackingEffects.prototype, "loadConsignmentTracking$", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ConsignmentTrackingEffects, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$1.Actions }, { type: OrderConnector }]; }, propDecorators: { loadConsignmentTracking$: [] } });

    var OrderDetailsEffect = /** @class */ (function () {
        function OrderDetailsEffect(actions$, orderConnector, globalMessageService) {
            var _this = this;
            this.actions$ = actions$;
            this.orderConnector = orderConnector;
            this.globalMessageService = globalMessageService;
            this.loadOrderDetails$ = this.actions$.pipe(i1$1.ofType(LOAD_ORDER_DETAILS), operators.map(function (action) { return action.payload; }), operators.switchMap(function (payload) {
                return _this.orderConnector.get(payload.userId, payload.orderCode).pipe(operators.map(function (order) {
                    return new LoadOrderDetailsSuccess(order);
                }), operators.catchError(function (error) { return rxjs.of(new LoadOrderDetailsFail(i2.normalizeHttpError(error))); }));
            }));
            this.cancelOrder$ = this.actions$.pipe(i1$1.ofType(CANCEL_ORDER), operators.map(function (action) { return action.payload; }), operators.switchMap(function (payload) {
                return _this.orderConnector
                    .cancel(payload.userId, payload.orderCode, payload.cancelRequestInput)
                    .pipe(operators.map(function () { return new CancelOrderSuccess(); }), operators.catchError(function (error) {
                    var _a;
                    (_a = error.error) === null || _a === void 0 ? void 0 : _a.errors.forEach(function (err) { return _this.globalMessageService.add(err.message, i2.GlobalMessageType.MSG_TYPE_ERROR); });
                    return rxjs.of(new CancelOrderFail(i2.normalizeHttpError(error)));
                }));
            }));
        }
        return OrderDetailsEffect;
    }());
    OrderDetailsEffect.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderDetailsEffect, deps: [{ token: i1__namespace$1.Actions }, { token: OrderConnector }, { token: i2__namespace.GlobalMessageService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OrderDetailsEffect.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderDetailsEffect });
    __decorate([
        i1$1.Effect()
    ], OrderDetailsEffect.prototype, "loadOrderDetails$", void 0);
    __decorate([
        i1$1.Effect()
    ], OrderDetailsEffect.prototype, "cancelOrder$", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderDetailsEffect, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$1.Actions }, { type: OrderConnector }, { type: i2__namespace.GlobalMessageService }]; }, propDecorators: { loadOrderDetails$: [], cancelOrder$: [] } });

    var OrderReturnRequestEffect = /** @class */ (function () {
        function OrderReturnRequestEffect(actions$, orderConnector) {
            var _this = this;
            this.actions$ = actions$;
            this.orderConnector = orderConnector;
            this.createReturnRequest$ = this.actions$.pipe(i1$1.ofType(CREATE_ORDER_RETURN_REQUEST), operators.map(function (action) { return action.payload; }), operators.switchMap(function (payload) {
                return _this.orderConnector
                    .return(payload.userId, payload.returnRequestInput)
                    .pipe(operators.map(function (returnRequest) { return new CreateOrderReturnRequestSuccess(returnRequest); }), operators.catchError(function (error) { return rxjs.of(new CreateOrderReturnRequestFail(i2.normalizeHttpError(error))); }));
            }));
            this.loadReturnRequest$ = this.actions$.pipe(i1$1.ofType(LOAD_ORDER_RETURN_REQUEST), operators.map(function (action) { return action.payload; }), operators.switchMap(function (payload) {
                return _this.orderConnector
                    .getReturnRequestDetail(payload.userId, payload.returnRequestCode)
                    .pipe(operators.map(function (returnRequest) { return new LoadOrderReturnRequestSuccess(returnRequest); }), operators.catchError(function (error) { return rxjs.of(new LoadOrderReturnRequestFail(i2.normalizeHttpError(error))); }));
            }));
            this.cancelReturnRequest$ = this.actions$.pipe(i1$1.ofType(CANCEL_ORDER_RETURN_REQUEST), operators.map(function (action) { return action.payload; }), operators.switchMap(function (payload) {
                return _this.orderConnector
                    .cancelReturnRequest(payload.userId, payload.returnRequestCode, payload.returnRequestModification)
                    .pipe(operators.map(function () { return new CancelOrderReturnRequestSuccess(); }), operators.catchError(function (error) { return rxjs.of(new CancelOrderReturnRequestFail(i2.normalizeHttpError(error))); }));
            }));
            this.loadReturnRequestList$ = this.actions$.pipe(i1$1.ofType(LOAD_ORDER_RETURN_REQUEST_LIST), operators.map(function (action) { return action.payload; }), operators.switchMap(function (payload) {
                return _this.orderConnector
                    .getReturnRequestList(payload.userId, payload.pageSize, payload.currentPage, payload.sort)
                    .pipe(operators.map(function (returnRequestList) { return new LoadOrderReturnRequestListSuccess(returnRequestList); }), operators.catchError(function (error) { return rxjs.of(new LoadOrderReturnRequestListFail(i2.normalizeHttpError(error))); }));
            }));
        }
        return OrderReturnRequestEffect;
    }());
    OrderReturnRequestEffect.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderReturnRequestEffect, deps: [{ token: i1__namespace$1.Actions }, { token: OrderConnector }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OrderReturnRequestEffect.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderReturnRequestEffect });
    __decorate([
        i1$1.Effect()
    ], OrderReturnRequestEffect.prototype, "createReturnRequest$", void 0);
    __decorate([
        i1$1.Effect()
    ], OrderReturnRequestEffect.prototype, "loadReturnRequest$", void 0);
    __decorate([
        i1$1.Effect()
    ], OrderReturnRequestEffect.prototype, "cancelReturnRequest$", void 0);
    __decorate([
        i1$1.Effect()
    ], OrderReturnRequestEffect.prototype, "loadReturnRequestList$", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderReturnRequestEffect, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$1.Actions }, { type: OrderConnector }]; }, propDecorators: { createReturnRequest$: [], loadReturnRequest$: [], cancelReturnRequest$: [], loadReturnRequestList$: [] } });

    var OrdersEffect = /** @class */ (function () {
        function OrdersEffect(actions$, orderConnector, replenishmentOrderConnector) {
            var _this = this;
            this.actions$ = actions$;
            this.orderConnector = orderConnector;
            this.replenishmentOrderConnector = replenishmentOrderConnector;
            this.loadUserOrders$ = this.actions$.pipe(i1$1.ofType(LOAD_USER_ORDERS), operators.map(function (action) { return action.payload; }), operators.switchMap(function (payload) {
                var _a;
                return (Boolean(payload.replenishmentOrderCode)
                    ? _this.replenishmentOrderConnector.loadReplenishmentDetailsHistory(payload.userId, (_a = payload.replenishmentOrderCode) !== null && _a !== void 0 ? _a : '', payload.pageSize, payload.currentPage, payload.sort)
                    : _this.orderConnector.getHistory(payload.userId, payload.pageSize, payload.currentPage, payload.sort)).pipe(operators.map(function (orders) {
                    return new LoadUserOrdersSuccess(orders);
                }), operators.catchError(function (error) { return rxjs.of(new LoadUserOrdersFail(i2.normalizeHttpError(error))); }));
            }));
            this.resetUserOrders$ = this.actions$.pipe(i1$1.ofType(i2.SiteContextActions.LANGUAGE_CHANGE), operators.map(function () {
                return new ClearUserOrders();
            }));
        }
        return OrdersEffect;
    }());
    OrdersEffect.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrdersEffect, deps: [{ token: i1__namespace$1.Actions }, { token: OrderConnector }, { token: ReplenishmentOrderConnector }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    OrdersEffect.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrdersEffect });
    __decorate([
        i1$1.Effect()
    ], OrdersEffect.prototype, "loadUserOrders$", void 0);
    __decorate([
        i1$1.Effect()
    ], OrdersEffect.prototype, "resetUserOrders$", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrdersEffect, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$1.Actions }, { type: OrderConnector }, { type: ReplenishmentOrderConnector }]; }, propDecorators: { loadUserOrders$: [], resetUserOrders$: [] } });

    var ReplenishmentOrderDetailsEffect = /** @class */ (function () {
        function ReplenishmentOrderDetailsEffect(actions$, replenishmentOrderConnector, globalMessageService) {
            var _this = this;
            this.actions$ = actions$;
            this.replenishmentOrderConnector = replenishmentOrderConnector;
            this.globalMessageService = globalMessageService;
            this.loadReplenishmentOrderDetails$ = this.actions$.pipe(i1$1.ofType(LOAD_REPLENISHMENT_ORDER_DETAILS), operators.map(function (action) { return action.payload; }), operators.switchMap(function (payload) {
                return _this.replenishmentOrderConnector
                    .load(payload.userId, payload.replenishmentOrderCode)
                    .pipe(operators.map(function (replenishmentOrder) {
                    return new LoadReplenishmentOrderDetailsSuccess(replenishmentOrder);
                }), operators.catchError(function (error) { return rxjs.of(new LoadReplenishmentOrderDetailsFail(i2.normalizeHttpError(error))); }));
            }));
            this.cancelReplenishmentOrder$ = this.actions$.pipe(i1$1.ofType(CANCEL_REPLENISHMENT_ORDER), operators.map(function (action) { return action.payload; }), operators.switchMap(function (payload) {
                return _this.replenishmentOrderConnector
                    .cancelReplenishmentOrder(payload.userId, payload.replenishmentOrderCode)
                    .pipe(operators.map(function (replenishmentOrder) { return new CancelReplenishmentOrderSuccess(replenishmentOrder); }), operators.catchError(function (error) {
                    var _a;
                    (_a = error === null || error === void 0 ? void 0 : error.error) === null || _a === void 0 ? void 0 : _a.errors.forEach(function (err) { return _this.globalMessageService.add(err.message, i2.GlobalMessageType.MSG_TYPE_ERROR); });
                    return rxjs.of(new CancelReplenishmentOrderFail(i2.normalizeHttpError(error)));
                }));
            }));
        }
        return ReplenishmentOrderDetailsEffect;
    }());
    ReplenishmentOrderDetailsEffect.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ReplenishmentOrderDetailsEffect, deps: [{ token: i1__namespace$1.Actions }, { token: ReplenishmentOrderConnector }, { token: i2__namespace.GlobalMessageService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ReplenishmentOrderDetailsEffect.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ReplenishmentOrderDetailsEffect });
    __decorate([
        i1$1.Effect()
    ], ReplenishmentOrderDetailsEffect.prototype, "loadReplenishmentOrderDetails$", void 0);
    __decorate([
        i1$1.Effect()
    ], ReplenishmentOrderDetailsEffect.prototype, "cancelReplenishmentOrder$", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ReplenishmentOrderDetailsEffect, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$1.Actions }, { type: ReplenishmentOrderConnector }, { type: i2__namespace.GlobalMessageService }]; }, propDecorators: { loadReplenishmentOrderDetails$: [], cancelReplenishmentOrder$: [] } });

    var ReplenishmentOrdersEffect = /** @class */ (function () {
        function ReplenishmentOrdersEffect(actions$, replenishmentOrderConnector) {
            var _this = this;
            this.actions$ = actions$;
            this.replenishmentOrderConnector = replenishmentOrderConnector;
            this.loadUserReplenishmentOrders$ = this.actions$.pipe(i1$1.ofType(LOAD_USER_REPLENISHMENT_ORDERS), operators.map(function (action) { return action.payload; }), operators.switchMap(function (payload) {
                return _this.replenishmentOrderConnector
                    .loadHistory(payload.userId, payload.pageSize, payload.currentPage, payload.sort)
                    .pipe(operators.map(function (orders) {
                    return new LoadUserReplenishmentOrdersSuccess(orders);
                }), operators.catchError(function (error) { return rxjs.of(new LoadUserReplenishmentOrdersFail(i2.normalizeHttpError(error))); }));
            }));
        }
        return ReplenishmentOrdersEffect;
    }());
    ReplenishmentOrdersEffect.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ReplenishmentOrdersEffect, deps: [{ token: i1__namespace$1.Actions }, { token: ReplenishmentOrderConnector }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ReplenishmentOrdersEffect.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ReplenishmentOrdersEffect });
    __decorate([
        i1$1.Effect()
    ], ReplenishmentOrdersEffect.prototype, "loadUserReplenishmentOrders$", void 0);
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ReplenishmentOrdersEffect, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace$1.Actions }, { type: ReplenishmentOrderConnector }]; }, propDecorators: { loadUserReplenishmentOrders$: [] } });

    var effects = [
        OrdersEffect,
        OrderDetailsEffect,
        ConsignmentTrackingEffects,
        OrderReturnRequestEffect,
        ReplenishmentOrderDetailsEffect,
        ReplenishmentOrdersEffect,
    ];

    var initialState$5 = { tracking: {} };
    function reducer$5(state, action) {
        if (state === void 0) { state = initialState$5; }
        switch (action.type) {
            case LOAD_CONSIGNMENT_TRACKING_SUCCESS: {
                var tracking = action.payload;
                return {
                    tracking: tracking,
                };
            }
            case CLEAR_CONSIGNMENT_TRACKING: {
                return initialState$5;
            }
        }
        return state;
    }

    var initialState$4 = {};
    function reducer$4(state, action) {
        if (state === void 0) { state = initialState$4; }
        switch (action.type) {
            case LOAD_ORDER_DETAILS_SUCCESS: {
                var order = action.payload;
                return order;
            }
        }
        return state;
    }

    var initialState$3 = {
        returnRequests: [],
        pagination: {},
        sorts: [],
    };
    function reducer$3(state, action) {
        if (state === void 0) { state = initialState$3; }
        switch (action.type) {
            case LOAD_ORDER_RETURN_REQUEST_LIST_SUCCESS: {
                return action.payload ? action.payload : initialState$3;
            }
        }
        return state;
    }

    var initialState$2 = {
        orders: [],
        pagination: {},
        sorts: [],
    };
    function reducer$2(state, action) {
        if (state === void 0) { state = initialState$2; }
        switch (action.type) {
            case LOAD_USER_ORDERS_SUCCESS: {
                return action.payload ? action.payload : initialState$2;
            }
            case LOAD_USER_ORDERS_FAIL: {
                return initialState$2;
            }
        }
        return state;
    }

    var initialState$1 = {};
    function reducer$1(state, action) {
        if (state === void 0) { state = initialState$1; }
        switch (action.type) {
            case LOAD_REPLENISHMENT_ORDER_DETAILS_SUCCESS:
            case CANCEL_REPLENISHMENT_ORDER_SUCCESS: {
                return action.payload ? action.payload : initialState$1;
            }
            default: {
                return state;
            }
        }
    }

    var initialState = {
        replenishmentOrders: [],
        pagination: {},
        sorts: [],
    };
    function reducer(state, action) {
        if (state === void 0) { state = initialState; }
        var _a;
        switch (action.type) {
            case LOAD_USER_REPLENISHMENT_ORDERS_SUCCESS: {
                return action.payload ? action.payload : initialState;
            }
            case CANCEL_REPLENISHMENT_ORDER_SUCCESS: {
                var cancelledReplenishmentOrder_1 = action.payload;
                var userReplenishmentOrders = __spreadArray([], __read(((_a = state.replenishmentOrders) !== null && _a !== void 0 ? _a : [])));
                var index = userReplenishmentOrders.findIndex(function (replenishmentOrder) { return replenishmentOrder.replenishmentOrderCode ===
                    cancelledReplenishmentOrder_1.replenishmentOrderCode; });
                if (index === -1) {
                    return initialState;
                }
                else {
                    userReplenishmentOrders[index] = Object.assign({}, cancelledReplenishmentOrder_1);
                }
                return Object.assign(Object.assign({}, state), { replenishmentOrders: userReplenishmentOrders });
            }
        }
        return state;
    }

    function getReducers() {
        return {
            orders: i2.StateUtils.loaderReducer(ORDERS, reducer$2),
            orderDetail: i2.StateUtils.loaderReducer(ORDER_DETAILS, reducer$4),
            replenishmentOrders: i2.StateUtils.loaderReducer(REPLENISHMENT_ORDERS, reducer),
            orderReturn: i2.StateUtils.loaderReducer(RETURN_REQUEST_DETAILS),
            orderReturnList: i2.StateUtils.loaderReducer(RETURN_REQUESTS, reducer$3),
            consignmentTracking: reducer$5,
            replenishmentOrder: i2.StateUtils.loaderReducer(REPLENISHMENT_ORDER_DETAILS, reducer$1),
        };
    }
    var reducerToken = new i0.InjectionToken('OrderReducers');
    var reducerProvider = {
        provide: reducerToken,
        useFactory: getReducers,
    };

    var OrderStoreModule = /** @class */ (function () {
        function OrderStoreModule() {
        }
        return OrderStoreModule;
    }());
    OrderStoreModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderStoreModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    OrderStoreModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderStoreModule, imports: [i1__namespace$1.EffectsFeatureModule, i1__namespace.StoreFeatureModule] });
    OrderStoreModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderStoreModule, providers: [reducerProvider], imports: [[
                i1$1.EffectsModule.forFeature(effects),
                i1.StoreModule.forFeature(ORDER_FEATURE, reducerToken),
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderStoreModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i1$1.EffectsModule.forFeature(effects),
                            i1.StoreModule.forFeature(ORDER_FEATURE, reducerToken),
                        ],
                        providers: [reducerProvider],
                    }]
            }] });

    var OrderCoreModule = /** @class */ (function () {
        function OrderCoreModule() {
        }
        return OrderCoreModule;
    }());
    OrderCoreModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderCoreModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    OrderCoreModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderCoreModule, imports: [OrderStoreModule] });
    OrderCoreModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderCoreModule, providers: __spreadArray([OrderConnector, ReplenishmentOrderConnector], __read(facadeProviders)), imports: [[OrderStoreModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: OrderCoreModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [OrderStoreModule],
                        providers: __spreadArray([OrderConnector, ReplenishmentOrderConnector], __read(facadeProviders)),
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.CANCEL_ORDER_PROCESS_ID = CANCEL_ORDER_PROCESS_ID;
    exports.CANCEL_REPLENISHMENT_ORDER_PROCESS_ID = CANCEL_REPLENISHMENT_ORDER_PROCESS_ID;
    exports.CANCEL_RETURN_PROCESS_ID = CANCEL_RETURN_PROCESS_ID;
    exports.CONSIGNMENT_TRACKING_NORMALIZER = CONSIGNMENT_TRACKING_NORMALIZER;
    exports.ORDERS = ORDERS;
    exports.ORDER_DETAILS = ORDER_DETAILS;
    exports.ORDER_FEATURE = ORDER_FEATURE;
    exports.ORDER_HISTORY_NORMALIZER = ORDER_HISTORY_NORMALIZER;
    exports.ORDER_RETURNS_NORMALIZER = ORDER_RETURNS_NORMALIZER;
    exports.ORDER_RETURN_REQUEST_INPUT_SERIALIZER = ORDER_RETURN_REQUEST_INPUT_SERIALIZER;
    exports.ORDER_RETURN_REQUEST_NORMALIZER = ORDER_RETURN_REQUEST_NORMALIZER;
    exports.OrderActions = orderGroup_actions;
    exports.OrderAdapter = OrderAdapter;
    exports.OrderConnector = OrderConnector;
    exports.OrderCoreModule = OrderCoreModule;
    exports.OrderReturnRequestService = OrderReturnRequestService;
    exports.OrderSelectors = orderGroup_selectors;
    exports.OrderService = OrderService;
    exports.REPLENISHMENT_ORDERS = REPLENISHMENT_ORDERS;
    exports.REPLENISHMENT_ORDER_DETAILS = REPLENISHMENT_ORDER_DETAILS;
    exports.REPLENISHMENT_ORDER_HISTORY_NORMALIZER = REPLENISHMENT_ORDER_HISTORY_NORMALIZER;
    exports.RETURN_REQUESTS = RETURN_REQUESTS;
    exports.RETURN_REQUEST_DETAILS = RETURN_REQUEST_DETAILS;
    exports.ReplenishmentOrderAdapter = ReplenishmentOrderAdapter;
    exports.ReplenishmentOrderConnector = ReplenishmentOrderConnector;
    exports.ReplenishmentOrderService = ReplenishmentOrderService;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=spartacus-order-core.umd.js.map
