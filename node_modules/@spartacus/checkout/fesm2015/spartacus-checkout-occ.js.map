{"version":3,"file":"spartacus-checkout-occ.js","sources":["../../../feature-libs/checkout/occ/adapters/converters/occ-replenishment-order-form-serializer.ts","../../../feature-libs/checkout/occ/adapters/occ-checkout-cost-center.adapter.ts","../../../feature-libs/checkout/occ/adapters/occ-checkout-delivery.adapter.ts","../../../feature-libs/checkout/occ/adapters/occ-checkout-payment-type.adapter.ts","../../../feature-libs/checkout/occ/adapters/occ-checkout-payment.adapter.ts","../../../feature-libs/checkout/occ/adapters/occ-checkout-replenishment-order.adapter.ts","../../../feature-libs/checkout/occ/adapters/occ-checkout.adapter.ts","../../../feature-libs/checkout/occ/config/default-occ-checkout-config.ts","../../../feature-libs/checkout/occ/checkout-occ.module.ts","../../../feature-libs/checkout/occ/spartacus-checkout-occ.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Converter,\n  Occ,\n  ScheduleReplenishmentForm,\n  TimeUtils,\n} from '@spartacus/core';\n\n@Injectable()\nexport class OccReplenishmentOrderFormSerializer\n  implements\n    Converter<Occ.ScheduleReplenishmentForm, ScheduleReplenishmentForm>\n{\n  convert(\n    source: Occ.ScheduleReplenishmentForm,\n    target?: ScheduleReplenishmentForm\n  ): ScheduleReplenishmentForm {\n    if (target === undefined) {\n      target = { ...(source as any) } as ScheduleReplenishmentForm;\n    }\n\n    if (source.replenishmentStartDate) {\n      target.replenishmentStartDate = this.convertDate(\n        source.replenishmentStartDate\n      );\n    }\n\n    return target;\n  }\n\n  /**\n   * Adds the current timestamp (including timezone offset) to a date string in the format YYYY-mm-dd\n   * @Example\n   * Converts 2021-10-15 to 2021-10-15T15:38:05-05:00\n   */\n  private convertDate(date: string): string {\n    const localTime = new Date().toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hourCycle: 'h23',\n    });\n    return `${date}T${localTime}:00${TimeUtils.getLocalTimezoneOffset()}`;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CheckoutCostCenterAdapter } from '@spartacus/checkout/core';\nimport {\n  Cart,\n  CART_NORMALIZER,\n  ConverterService,\n  OccEndpointsService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class OccCheckoutCostCenterAdapter implements CheckoutCostCenterAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  setCostCenter(\n    userId: string,\n    cartId: string,\n    costCenterId: string\n  ): Observable<Cart> {\n    return this.http\n      .put(this.getSetCartCostCenterEndpoint(userId, cartId, costCenterId), {})\n      .pipe(this.converter.pipeable(CART_NORMALIZER));\n  }\n\n  protected getSetCartCostCenterEndpoint(\n    userId: string,\n    cartId: string,\n    costCenterId: string\n  ): string {\n    return this.occEndpoints.buildUrl('setCartCostCenter', {\n      urlParams: { userId, cartId },\n      queryParams: { costCenterId },\n    });\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  CheckoutDeliveryAdapter,\n  DELIVERY_MODE_NORMALIZER,\n} from '@spartacus/checkout/core';\nimport {\n  Address,\n  ADDRESS_NORMALIZER,\n  ADDRESS_SERIALIZER,\n  ConverterService,\n  DeliveryMode,\n  Occ,\n  OccEndpointsService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\n\n@Injectable()\nexport class OccCheckoutDeliveryAdapter implements CheckoutDeliveryAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  protected getCreateDeliveryAddressEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('createDeliveryAddress', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  protected getSetDeliveryAddressEndpoint(\n    userId: string,\n    cartId: string,\n    addressId?: string\n  ): string {\n    return this.occEndpoints.buildUrl('setDeliveryAddress', {\n      urlParams: { userId, cartId },\n      queryParams: { addressId },\n    });\n  }\n\n  protected getDeliveryModeEndpoint(userId: string, cartId: string): string {\n    return this.occEndpoints.buildUrl('deliveryMode', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  protected getSetDeliveryModeEndpoint(\n    userId: string,\n    cartId: string,\n    deliveryModeId?: string\n  ): string {\n    return this.occEndpoints.buildUrl('setDeliveryMode', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n      queryParams: { deliveryModeId },\n    });\n  }\n\n  protected getDeliveryModesEndpoint(userId: string, cartId: string): string {\n    return this.occEndpoints.buildUrl('deliveryModes', {\n      urlParams: { userId, cartId },\n    });\n  }\n\n  public createAddress(\n    userId: string,\n    cartId: string,\n    address: Address\n  ): Observable<Address> {\n    address = this.converter.convert(address, ADDRESS_SERIALIZER);\n\n    return this.http\n      .post<Occ.Address>(\n        this.getCreateDeliveryAddressEndpoint(userId, cartId),\n        address,\n        {\n          headers: new HttpHeaders().set('Content-Type', 'application/json'),\n        }\n      )\n      .pipe(this.converter.pipeable(ADDRESS_NORMALIZER));\n  }\n\n  public setAddress(\n    userId: string,\n    cartId: string,\n    addressId: string\n  ): Observable<any> {\n    return this.http.put(\n      this.getSetDeliveryAddressEndpoint(userId, cartId, addressId),\n      {}\n    );\n  }\n\n  public setMode(\n    userId: string,\n    cartId: string,\n    deliveryModeId: string\n  ): Observable<any> {\n    return this.http.put(\n      this.getSetDeliveryModeEndpoint(userId, cartId, deliveryModeId),\n      {}\n    );\n  }\n\n  public getMode(userId: string, cartId: string): Observable<any> {\n    return this.http\n      .get(this.getDeliveryModeEndpoint(userId, cartId))\n      .pipe(this.converter.pipeable(DELIVERY_MODE_NORMALIZER));\n  }\n\n  public getSupportedModes(\n    userId: string,\n    cartId: string\n  ): Observable<DeliveryMode[]> {\n    return this.http\n      .get<Occ.DeliveryModeList>(this.getDeliveryModesEndpoint(userId, cartId))\n      .pipe(\n        pluck('deliveryModes'),\n        map((modes) => modes ?? []),\n        this.converter.pipeableMany(DELIVERY_MODE_NORMALIZER)\n      );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  PaymentTypeAdapter,\n  PAYMENT_TYPE_NORMALIZER,\n} from '@spartacus/checkout/core';\nimport {\n  Cart,\n  CART_NORMALIZER,\n  ConverterService,\n  Occ,\n  OccEndpointsService,\n  PaymentType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class OccCheckoutPaymentTypeAdapter implements PaymentTypeAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  loadPaymentTypes(): Observable<PaymentType[]> {\n    return this.http\n      .get<Occ.PaymentTypeList>(this.getPaymentTypesEndpoint())\n      .pipe(\n        map((paymentTypeList) => paymentTypeList.paymentTypes ?? []),\n        this.converter.pipeableMany(PAYMENT_TYPE_NORMALIZER)\n      );\n  }\n\n  setPaymentType(\n    userId: string,\n    cartId: string,\n    paymentType: string,\n    purchaseOrderNumber?: string\n  ): Observable<Cart> {\n    return this.http\n      .put(\n        this.getSetCartPaymentTypeEndpoint(\n          userId,\n          cartId,\n          paymentType,\n          purchaseOrderNumber\n        ),\n        {}\n      )\n      .pipe(this.converter.pipeable(CART_NORMALIZER));\n  }\n\n  protected getPaymentTypesEndpoint(): string {\n    return this.occEndpoints.buildUrl('paymentTypes');\n  }\n\n  protected getSetCartPaymentTypeEndpoint(\n    userId: string,\n    cartId: string,\n    paymentType: string,\n    purchaseOrderNumber?: string\n  ): string {\n    const queryParams = purchaseOrderNumber\n      ? { paymentType, purchaseOrderNumber }\n      : { paymentType };\n    return this.occEndpoints.buildUrl('setCartPaymentType', {\n      urlParams: { userId, cartId },\n      queryParams,\n    });\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  CARD_TYPE_NORMALIZER,\n  CheckoutPaymentAdapter,\n  PAYMENT_DETAILS_SERIALIZER,\n} from '@spartacus/checkout/core';\nimport {\n  CardType,\n  ConverterService,\n  HttpParamsURIEncoder,\n  Occ,\n  OccEndpointsService,\n  PaymentDetails,\n  PAYMENT_DETAILS_NORMALIZER,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\n\n@Injectable()\nexport class OccCheckoutPaymentAdapter implements CheckoutPaymentAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {\n    if (typeof DOMParser !== 'undefined') {\n      this.domparser = new DOMParser();\n    }\n  }\n\n  private domparser: DOMParser;\n\n  protected getSetPaymentDetailsEndpoint(\n    userId: string,\n    cartId: string,\n    paymentDetailsId: string\n  ): string {\n    return this.occEndpoints.buildUrl('setCartPaymentDetails', {\n      urlParams: { userId, cartId },\n      queryParams: { paymentDetailsId },\n    });\n  }\n\n  protected getPaymentProviderSubInfoEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('paymentProviderSubInfo', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  protected getCreatePaymentDetailsEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('createPaymentDetails', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  protected getCardTypesEndpoint(): string {\n    return this.occEndpoints.buildUrl('cardTypes');\n  }\n\n  public create(\n    userId: string,\n    cartId: string,\n    paymentDetails: PaymentDetails\n  ): Observable<PaymentDetails> {\n    paymentDetails = this.converter.convert(\n      paymentDetails,\n      PAYMENT_DETAILS_SERIALIZER\n    );\n    return this.getProviderSubInfo(userId, cartId).pipe(\n      map((data) => {\n        const labelsMap = this.convertToMap(data.mappingLabels.entry) as {\n          [key: string]: string;\n        };\n        return {\n          url: data.postUrl,\n          parameters: this.getParamsForPaymentProvider(\n            paymentDetails,\n            data.parameters.entry,\n            labelsMap\n          ),\n          mappingLabels: labelsMap,\n        };\n      }),\n      mergeMap((sub) => {\n        // create a subscription directly with payment provider\n        return this.createSubWithProvider(sub.url, sub.parameters).pipe(\n          map((response) => this.extractPaymentDetailsFromHtml(response)),\n          mergeMap((fromPaymentProvider) => {\n            fromPaymentProvider['defaultPayment'] =\n              paymentDetails.defaultPayment ?? false;\n            fromPaymentProvider['savePaymentInfo'] = true;\n            return this.createDetailsWithParameters(\n              userId,\n              cartId,\n              fromPaymentProvider\n            ).pipe(this.converter.pipeable(PAYMENT_DETAILS_NORMALIZER));\n          })\n        );\n      })\n    );\n  }\n\n  public set(\n    userId: string,\n    cartId: string,\n    paymentDetailsId: string\n  ): Observable<any> {\n    return this.http.put(\n      this.getSetPaymentDetailsEndpoint(userId, cartId, paymentDetailsId),\n      {}\n    );\n  }\n\n  loadCardTypes(): Observable<CardType[]> {\n    return this.http.get<Occ.CardTypeList>(this.getCardTypesEndpoint()).pipe(\n      map((cardTypeList) => cardTypeList.cardTypes ?? []),\n      this.converter.pipeableMany(CARD_TYPE_NORMALIZER)\n    );\n  }\n\n  protected getProviderSubInfo(\n    userId: string,\n    cartId: string\n  ): Observable<any> {\n    return this.http.get(\n      this.getPaymentProviderSubInfoEndpoint(userId, cartId)\n    );\n  }\n\n  protected createSubWithProvider(\n    postUrl: string,\n    parameters: any\n  ): Observable<any> {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Accept: 'text/html',\n    });\n    let httpParams = new HttpParams({ encoder: new HttpParamsURIEncoder() });\n    Object.keys(parameters).forEach((key) => {\n      httpParams = httpParams.append(key, parameters[key]);\n    });\n\n    return this.http.post(postUrl, httpParams, {\n      headers,\n      responseType: 'text',\n    });\n  }\n\n  protected createDetailsWithParameters(\n    userId: string,\n    cartId: string,\n    parameters: any\n  ): Observable<PaymentDetails> {\n    let httpParams = new HttpParams({ encoder: new HttpParamsURIEncoder() });\n    Object.keys(parameters).forEach((key) => {\n      httpParams = httpParams.append(key, parameters[key]);\n    });\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n\n    return this.http.post<PaymentDetails>(\n      this.getCreatePaymentDetailsEndpoint(userId, cartId),\n      httpParams,\n      { headers }\n    );\n  }\n\n  private getParamsForPaymentProvider(\n    paymentDetails: PaymentDetails,\n    parameters: { key: string; value: string }[],\n    mappingLabels: { [key: string]: string }\n  ) {\n    const params = this.convertToMap(parameters);\n    params[mappingLabels['hybris_account_holder_name']] =\n      paymentDetails.accountHolderName;\n    params[mappingLabels['hybris_card_type']] = paymentDetails.cardType?.code;\n    params[mappingLabels['hybris_card_number']] = paymentDetails.cardNumber;\n    if (mappingLabels['hybris_combined_expiry_date'] === 'true') {\n      params[mappingLabels['hybris_card_expiry_date']] =\n        paymentDetails.expiryMonth +\n        mappingLabels['hybris_separator_expiry_date'] +\n        paymentDetails.expiryYear;\n    } else {\n      params[mappingLabels['hybris_card_expiration_month']] =\n        paymentDetails.expiryMonth;\n      params[mappingLabels['hybris_card_expiration_year']] =\n        paymentDetails.expiryYear;\n    }\n    params[mappingLabels['hybris_card_cvn']] = paymentDetails.cvn;\n\n    // billing address\n    params[mappingLabels['hybris_billTo_country']] =\n      paymentDetails.billingAddress?.country?.isocode;\n    params[mappingLabels['hybris_billTo_firstname']] =\n      paymentDetails.billingAddress?.firstName;\n    params[mappingLabels['hybris_billTo_lastname']] =\n      paymentDetails.billingAddress?.lastName;\n    params[mappingLabels['hybris_billTo_street1']] =\n      paymentDetails.billingAddress?.line1 +\n      ' ' +\n      paymentDetails.billingAddress?.line2;\n    params[mappingLabels['hybris_billTo_city']] =\n      paymentDetails.billingAddress?.town;\n    if (paymentDetails.billingAddress?.region) {\n      params[mappingLabels['hybris_billTo_region']] =\n        paymentDetails.billingAddress.region.isocodeShort;\n    } else {\n      params[mappingLabels['hybris_billTo_region']] = '';\n    }\n    params[mappingLabels['hybris_billTo_postalcode']] =\n      paymentDetails.billingAddress?.postalCode;\n    return params;\n  }\n\n  private extractPaymentDetailsFromHtml(html: string): {\n    [key: string]: string | boolean;\n  } {\n    const domdoc = this.domparser.parseFromString(html, 'text/xml');\n    const responseForm = domdoc.getElementsByTagName('form')[0];\n    const inputs = responseForm.getElementsByTagName('input');\n\n    const values: { [key: string]: string | boolean } = {};\n    for (let i = 0; inputs[i]; i++) {\n      const input = inputs[i];\n      const name = input.getAttribute('name');\n      const value = input.getAttribute('value');\n      if (name && name !== '{}' && value && value !== '') {\n        values[name] = value;\n      }\n    }\n\n    return values;\n  }\n\n  private convertToMap(paramList: { key: string; value: string }[]): {\n    [key: string]: string | undefined;\n  } {\n    return paramList.reduce(function (\n      result: { [key: string]: string | undefined },\n      item\n    ) {\n      const key = item.key;\n      result[key] = item.value;\n      return result;\n    },\n    {});\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  CheckoutReplenishmentOrderAdapter,\n  REPLENISHMENT_ORDER_FORM_SERIALIZER,\n} from '@spartacus/checkout/core';\nimport {\n  ConverterService,\n  OccEndpointsService,\n  ReplenishmentOrder,\n  REPLENISHMENT_ORDER_NORMALIZER,\n  ScheduleReplenishmentForm,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class OccCheckoutReplenishmentOrderAdapter\n  implements CheckoutReplenishmentOrderAdapter\n{\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  protected getScheduleReplenishmentOrderEndpoint(\n    userId: string,\n    cartId: string,\n    termsChecked: string\n  ) {\n    return this.occEndpoints.buildUrl('scheduleReplenishmentOrder', {\n      urlParams: {\n        userId,\n      },\n      queryParams: { cartId, termsChecked },\n    });\n  }\n\n  scheduleReplenishmentOrder(\n    cartId: string,\n    scheduleReplenishmentForm: ScheduleReplenishmentForm,\n    termsChecked: boolean,\n    userId: string\n  ): Observable<ReplenishmentOrder> {\n    scheduleReplenishmentForm = this.converter.convert(\n      scheduleReplenishmentForm,\n      REPLENISHMENT_ORDER_FORM_SERIALIZER\n    );\n\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n    return this.http\n      .post(\n        this.getScheduleReplenishmentOrderEndpoint(\n          userId,\n          cartId,\n          termsChecked.toString()\n        ),\n        scheduleReplenishmentForm,\n        { headers }\n      )\n      .pipe(this.converter.pipeable(REPLENISHMENT_ORDER_NORMALIZER));\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CheckoutAdapter, CheckoutDetails } from '@spartacus/checkout/core';\nimport {\n  ConverterService,\n  InterceptorUtil,\n  Occ,\n  OccEndpointsService,\n  OCC_USER_ID_ANONYMOUS,\n  Order,\n  ORDER_NORMALIZER,\n  USE_CLIENT_TOKEN,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class OccCheckoutAdapter implements CheckoutAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  protected getPlaceOrderEndpoint(\n    userId: string,\n    cartId: string,\n    termsChecked: string\n  ): string {\n    return this.occEndpoints.buildUrl('placeOrder', {\n      urlParams: { userId },\n      queryParams: { cartId, termsChecked },\n    });\n  }\n\n  protected getRemoveDeliveryAddressEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('removeDeliveryAddress', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  protected getClearDeliveryModeEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('clearDeliveryMode', {\n      urlParams: { userId, cartId },\n    });\n  }\n\n  protected getLoadCheckoutDetailsEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('loadCheckoutDetails', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  public placeOrder(\n    userId: string,\n    cartId: string,\n    termsChecked: boolean\n  ): Observable<Order> {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n\n    if (userId === OCC_USER_ID_ANONYMOUS) {\n      headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    }\n\n    return this.http\n      .post<Occ.Order>(\n        this.getPlaceOrderEndpoint(userId, cartId, termsChecked.toString()),\n        {},\n        { headers }\n      )\n      .pipe(this.converter.pipeable(ORDER_NORMALIZER));\n  }\n\n  loadCheckoutDetails(\n    userId: string,\n    cartId: string\n  ): Observable<CheckoutDetails> {\n    return this.http.get<CheckoutDetails>(\n      this.getLoadCheckoutDetailsEndpoint(userId, cartId)\n    );\n  }\n\n  clearCheckoutDeliveryAddress(\n    userId: string,\n    cartId: string\n  ): Observable<any> {\n    return this.http.delete<any>(\n      this.getRemoveDeliveryAddressEndpoint(userId, cartId)\n    );\n  }\n\n  clearCheckoutDeliveryMode(userId: string, cartId: string): Observable<any> {\n    return this.http.delete<any>(\n      this.getClearDeliveryModeEndpoint(userId, cartId)\n    );\n  }\n}\n","import { OccConfig } from '@spartacus/core';\n\nexport const defaultOccCheckoutConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        /* eslint-disable max-len */\n        setDeliveryAddress:\n          'users/${userId}/carts/${cartId}/addresses/delivery',\n        placeOrder: 'users/${userId}/orders?fields=FULL',\n        cardTypes: 'cardtypes',\n        paymentTypes: 'paymenttypes',\n        createDeliveryAddress:\n          'users/${userId}/carts/${cartId}/addresses/delivery',\n        removeDeliveryAddress:\n          'users/${userId}/carts/${cartId}/addresses/delivery',\n        deliveryMode: 'users/${userId}/carts/${cartId}/deliverymode',\n        setDeliveryMode: 'users/${userId}/carts/${cartId}/deliverymode',\n        clearDeliveryMode: 'users/${userId}/carts/${cartId}/deliverymode',\n        deliveryModes: 'users/${userId}/carts/${cartId}/deliverymodes',\n        setCartCostCenter:\n          'users/${userId}/carts/${cartId}/costcenter?fields=DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue, value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user',\n        setCartPaymentType:\n          'users/${userId}/carts/${cartId}/paymenttype?fields=DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue, value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user',\n        setCartPaymentDetails: 'users/${userId}/carts/${cartId}/paymentdetails',\n        paymentProviderSubInfo:\n          'users/${userId}/carts/${cartId}/payment/sop/request?responseUrl=sampleUrl',\n        createPaymentDetails:\n          'users/${userId}/carts/${cartId}/payment/sop/response',\n        loadCheckoutDetails:\n          'users/${userId}/carts/${cartId}?fields=deliveryAddress(FULL),deliveryMode,paymentInfo(FULL)',\n        /* eslint-enable */\n      },\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CheckoutAdapter,\n  CheckoutCostCenterAdapter,\n  CheckoutDeliveryAdapter,\n  CheckoutPaymentAdapter,\n  CheckoutReplenishmentOrderAdapter,\n  PaymentTypeAdapter,\n  REPLENISHMENT_ORDER_FORM_SERIALIZER,\n} from '@spartacus/checkout/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { OccReplenishmentOrderFormSerializer } from './adapters/converters/index';\nimport { OccCheckoutCostCenterAdapter } from './adapters/occ-checkout-cost-center.adapter';\nimport { OccCheckoutDeliveryAdapter } from './adapters/occ-checkout-delivery.adapter';\nimport { OccCheckoutPaymentTypeAdapter } from './adapters/occ-checkout-payment-type.adapter';\nimport { OccCheckoutPaymentAdapter } from './adapters/occ-checkout-payment.adapter';\nimport { OccCheckoutReplenishmentOrderAdapter } from './adapters/occ-checkout-replenishment-order.adapter';\nimport { OccCheckoutAdapter } from './adapters/occ-checkout.adapter';\nimport { defaultOccCheckoutConfig } from './config/default-occ-checkout-config';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultOccCheckoutConfig),\n    OccReplenishmentOrderFormSerializer,\n    {\n      provide: CheckoutAdapter,\n      useClass: OccCheckoutAdapter,\n    },\n    {\n      provide: CheckoutDeliveryAdapter,\n      useClass: OccCheckoutDeliveryAdapter,\n    },\n    {\n      provide: CheckoutPaymentAdapter,\n      useClass: OccCheckoutPaymentAdapter,\n    },\n    {\n      provide: PaymentTypeAdapter,\n      useClass: OccCheckoutPaymentTypeAdapter,\n    },\n    {\n      provide: CheckoutCostCenterAdapter,\n      useClass: OccCheckoutCostCenterAdapter,\n    },\n    {\n      provide: CheckoutReplenishmentOrderAdapter,\n      useClass: OccCheckoutReplenishmentOrderAdapter,\n    },\n    {\n      provide: REPLENISHMENT_ORDER_FORM_SERIALIZER,\n      useExisting: OccReplenishmentOrderFormSerializer,\n      multi: true,\n    },\n  ],\n})\nexport class CheckoutOccModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}