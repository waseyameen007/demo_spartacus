{"version":3,"file":"spartacus-checkout-occ.umd.js","sources":["../../../feature-libs/checkout/occ/adapters/converters/occ-replenishment-order-form-serializer.ts","../../../feature-libs/checkout/occ/adapters/occ-checkout-cost-center.adapter.ts","../../../feature-libs/checkout/occ/adapters/occ-checkout-delivery.adapter.ts","../../../feature-libs/checkout/occ/adapters/occ-checkout-payment-type.adapter.ts","../../../feature-libs/checkout/occ/adapters/occ-checkout-payment.adapter.ts","../../../feature-libs/checkout/occ/adapters/occ-checkout-replenishment-order.adapter.ts","../../../feature-libs/checkout/occ/adapters/occ-checkout.adapter.ts","../../../feature-libs/checkout/occ/config/default-occ-checkout-config.ts","../../../feature-libs/checkout/occ/checkout-occ.module.ts","../../../feature-libs/checkout/occ/spartacus-checkout-occ.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  Converter,\n  Occ,\n  ScheduleReplenishmentForm,\n  TimeUtils,\n} from '@spartacus/core';\n\n@Injectable()\nexport class OccReplenishmentOrderFormSerializer\n  implements\n    Converter<Occ.ScheduleReplenishmentForm, ScheduleReplenishmentForm>\n{\n  convert(\n    source: Occ.ScheduleReplenishmentForm,\n    target?: ScheduleReplenishmentForm\n  ): ScheduleReplenishmentForm {\n    if (target === undefined) {\n      target = { ...(source as any) } as ScheduleReplenishmentForm;\n    }\n\n    if (source.replenishmentStartDate) {\n      target.replenishmentStartDate = this.convertDate(\n        source.replenishmentStartDate\n      );\n    }\n\n    return target;\n  }\n\n  /**\n   * Adds the current timestamp (including timezone offset) to a date string in the format YYYY-mm-dd\n   * @Example\n   * Converts 2021-10-15 to 2021-10-15T15:38:05-05:00\n   */\n  private convertDate(date: string): string {\n    const localTime = new Date().toLocaleTimeString([], {\n      hour: '2-digit',\n      minute: '2-digit',\n      hourCycle: 'h23',\n    });\n    return `${date}T${localTime}:00${TimeUtils.getLocalTimezoneOffset()}`;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CheckoutCostCenterAdapter } from '@spartacus/checkout/core';\nimport {\n  Cart,\n  CART_NORMALIZER,\n  ConverterService,\n  OccEndpointsService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class OccCheckoutCostCenterAdapter implements CheckoutCostCenterAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  setCostCenter(\n    userId: string,\n    cartId: string,\n    costCenterId: string\n  ): Observable<Cart> {\n    return this.http\n      .put(this.getSetCartCostCenterEndpoint(userId, cartId, costCenterId), {})\n      .pipe(this.converter.pipeable(CART_NORMALIZER));\n  }\n\n  protected getSetCartCostCenterEndpoint(\n    userId: string,\n    cartId: string,\n    costCenterId: string\n  ): string {\n    return this.occEndpoints.buildUrl('setCartCostCenter', {\n      urlParams: { userId, cartId },\n      queryParams: { costCenterId },\n    });\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  CheckoutDeliveryAdapter,\n  DELIVERY_MODE_NORMALIZER,\n} from '@spartacus/checkout/core';\nimport {\n  Address,\n  ADDRESS_NORMALIZER,\n  ADDRESS_SERIALIZER,\n  ConverterService,\n  DeliveryMode,\n  Occ,\n  OccEndpointsService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, pluck } from 'rxjs/operators';\n\n@Injectable()\nexport class OccCheckoutDeliveryAdapter implements CheckoutDeliveryAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  protected getCreateDeliveryAddressEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('createDeliveryAddress', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  protected getSetDeliveryAddressEndpoint(\n    userId: string,\n    cartId: string,\n    addressId?: string\n  ): string {\n    return this.occEndpoints.buildUrl('setDeliveryAddress', {\n      urlParams: { userId, cartId },\n      queryParams: { addressId },\n    });\n  }\n\n  protected getDeliveryModeEndpoint(userId: string, cartId: string): string {\n    return this.occEndpoints.buildUrl('deliveryMode', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  protected getSetDeliveryModeEndpoint(\n    userId: string,\n    cartId: string,\n    deliveryModeId?: string\n  ): string {\n    return this.occEndpoints.buildUrl('setDeliveryMode', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n      queryParams: { deliveryModeId },\n    });\n  }\n\n  protected getDeliveryModesEndpoint(userId: string, cartId: string): string {\n    return this.occEndpoints.buildUrl('deliveryModes', {\n      urlParams: { userId, cartId },\n    });\n  }\n\n  public createAddress(\n    userId: string,\n    cartId: string,\n    address: Address\n  ): Observable<Address> {\n    address = this.converter.convert(address, ADDRESS_SERIALIZER);\n\n    return this.http\n      .post<Occ.Address>(\n        this.getCreateDeliveryAddressEndpoint(userId, cartId),\n        address,\n        {\n          headers: new HttpHeaders().set('Content-Type', 'application/json'),\n        }\n      )\n      .pipe(this.converter.pipeable(ADDRESS_NORMALIZER));\n  }\n\n  public setAddress(\n    userId: string,\n    cartId: string,\n    addressId: string\n  ): Observable<any> {\n    return this.http.put(\n      this.getSetDeliveryAddressEndpoint(userId, cartId, addressId),\n      {}\n    );\n  }\n\n  public setMode(\n    userId: string,\n    cartId: string,\n    deliveryModeId: string\n  ): Observable<any> {\n    return this.http.put(\n      this.getSetDeliveryModeEndpoint(userId, cartId, deliveryModeId),\n      {}\n    );\n  }\n\n  public getMode(userId: string, cartId: string): Observable<any> {\n    return this.http\n      .get(this.getDeliveryModeEndpoint(userId, cartId))\n      .pipe(this.converter.pipeable(DELIVERY_MODE_NORMALIZER));\n  }\n\n  public getSupportedModes(\n    userId: string,\n    cartId: string\n  ): Observable<DeliveryMode[]> {\n    return this.http\n      .get<Occ.DeliveryModeList>(this.getDeliveryModesEndpoint(userId, cartId))\n      .pipe(\n        pluck('deliveryModes'),\n        map((modes) => modes ?? []),\n        this.converter.pipeableMany(DELIVERY_MODE_NORMALIZER)\n      );\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  PaymentTypeAdapter,\n  PAYMENT_TYPE_NORMALIZER,\n} from '@spartacus/checkout/core';\nimport {\n  Cart,\n  CART_NORMALIZER,\n  ConverterService,\n  Occ,\n  OccEndpointsService,\n  PaymentType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable()\nexport class OccCheckoutPaymentTypeAdapter implements PaymentTypeAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  loadPaymentTypes(): Observable<PaymentType[]> {\n    return this.http\n      .get<Occ.PaymentTypeList>(this.getPaymentTypesEndpoint())\n      .pipe(\n        map((paymentTypeList) => paymentTypeList.paymentTypes ?? []),\n        this.converter.pipeableMany(PAYMENT_TYPE_NORMALIZER)\n      );\n  }\n\n  setPaymentType(\n    userId: string,\n    cartId: string,\n    paymentType: string,\n    purchaseOrderNumber?: string\n  ): Observable<Cart> {\n    return this.http\n      .put(\n        this.getSetCartPaymentTypeEndpoint(\n          userId,\n          cartId,\n          paymentType,\n          purchaseOrderNumber\n        ),\n        {}\n      )\n      .pipe(this.converter.pipeable(CART_NORMALIZER));\n  }\n\n  protected getPaymentTypesEndpoint(): string {\n    return this.occEndpoints.buildUrl('paymentTypes');\n  }\n\n  protected getSetCartPaymentTypeEndpoint(\n    userId: string,\n    cartId: string,\n    paymentType: string,\n    purchaseOrderNumber?: string\n  ): string {\n    const queryParams = purchaseOrderNumber\n      ? { paymentType, purchaseOrderNumber }\n      : { paymentType };\n    return this.occEndpoints.buildUrl('setCartPaymentType', {\n      urlParams: { userId, cartId },\n      queryParams,\n    });\n  }\n}\n","import { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  CARD_TYPE_NORMALIZER,\n  CheckoutPaymentAdapter,\n  PAYMENT_DETAILS_SERIALIZER,\n} from '@spartacus/checkout/core';\nimport {\n  CardType,\n  ConverterService,\n  HttpParamsURIEncoder,\n  Occ,\n  OccEndpointsService,\n  PaymentDetails,\n  PAYMENT_DETAILS_NORMALIZER,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\n\n@Injectable()\nexport class OccCheckoutPaymentAdapter implements CheckoutPaymentAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {\n    if (typeof DOMParser !== 'undefined') {\n      this.domparser = new DOMParser();\n    }\n  }\n\n  private domparser: DOMParser;\n\n  protected getSetPaymentDetailsEndpoint(\n    userId: string,\n    cartId: string,\n    paymentDetailsId: string\n  ): string {\n    return this.occEndpoints.buildUrl('setCartPaymentDetails', {\n      urlParams: { userId, cartId },\n      queryParams: { paymentDetailsId },\n    });\n  }\n\n  protected getPaymentProviderSubInfoEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('paymentProviderSubInfo', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  protected getCreatePaymentDetailsEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('createPaymentDetails', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  protected getCardTypesEndpoint(): string {\n    return this.occEndpoints.buildUrl('cardTypes');\n  }\n\n  public create(\n    userId: string,\n    cartId: string,\n    paymentDetails: PaymentDetails\n  ): Observable<PaymentDetails> {\n    paymentDetails = this.converter.convert(\n      paymentDetails,\n      PAYMENT_DETAILS_SERIALIZER\n    );\n    return this.getProviderSubInfo(userId, cartId).pipe(\n      map((data) => {\n        const labelsMap = this.convertToMap(data.mappingLabels.entry) as {\n          [key: string]: string;\n        };\n        return {\n          url: data.postUrl,\n          parameters: this.getParamsForPaymentProvider(\n            paymentDetails,\n            data.parameters.entry,\n            labelsMap\n          ),\n          mappingLabels: labelsMap,\n        };\n      }),\n      mergeMap((sub) => {\n        // create a subscription directly with payment provider\n        return this.createSubWithProvider(sub.url, sub.parameters).pipe(\n          map((response) => this.extractPaymentDetailsFromHtml(response)),\n          mergeMap((fromPaymentProvider) => {\n            fromPaymentProvider['defaultPayment'] =\n              paymentDetails.defaultPayment ?? false;\n            fromPaymentProvider['savePaymentInfo'] = true;\n            return this.createDetailsWithParameters(\n              userId,\n              cartId,\n              fromPaymentProvider\n            ).pipe(this.converter.pipeable(PAYMENT_DETAILS_NORMALIZER));\n          })\n        );\n      })\n    );\n  }\n\n  public set(\n    userId: string,\n    cartId: string,\n    paymentDetailsId: string\n  ): Observable<any> {\n    return this.http.put(\n      this.getSetPaymentDetailsEndpoint(userId, cartId, paymentDetailsId),\n      {}\n    );\n  }\n\n  loadCardTypes(): Observable<CardType[]> {\n    return this.http.get<Occ.CardTypeList>(this.getCardTypesEndpoint()).pipe(\n      map((cardTypeList) => cardTypeList.cardTypes ?? []),\n      this.converter.pipeableMany(CARD_TYPE_NORMALIZER)\n    );\n  }\n\n  protected getProviderSubInfo(\n    userId: string,\n    cartId: string\n  ): Observable<any> {\n    return this.http.get(\n      this.getPaymentProviderSubInfoEndpoint(userId, cartId)\n    );\n  }\n\n  protected createSubWithProvider(\n    postUrl: string,\n    parameters: any\n  ): Observable<any> {\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n      Accept: 'text/html',\n    });\n    let httpParams = new HttpParams({ encoder: new HttpParamsURIEncoder() });\n    Object.keys(parameters).forEach((key) => {\n      httpParams = httpParams.append(key, parameters[key]);\n    });\n\n    return this.http.post(postUrl, httpParams, {\n      headers,\n      responseType: 'text',\n    });\n  }\n\n  protected createDetailsWithParameters(\n    userId: string,\n    cartId: string,\n    parameters: any\n  ): Observable<PaymentDetails> {\n    let httpParams = new HttpParams({ encoder: new HttpParamsURIEncoder() });\n    Object.keys(parameters).forEach((key) => {\n      httpParams = httpParams.append(key, parameters[key]);\n    });\n\n    const headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n\n    return this.http.post<PaymentDetails>(\n      this.getCreatePaymentDetailsEndpoint(userId, cartId),\n      httpParams,\n      { headers }\n    );\n  }\n\n  private getParamsForPaymentProvider(\n    paymentDetails: PaymentDetails,\n    parameters: { key: string; value: string }[],\n    mappingLabels: { [key: string]: string }\n  ) {\n    const params = this.convertToMap(parameters);\n    params[mappingLabels['hybris_account_holder_name']] =\n      paymentDetails.accountHolderName;\n    params[mappingLabels['hybris_card_type']] = paymentDetails.cardType?.code;\n    params[mappingLabels['hybris_card_number']] = paymentDetails.cardNumber;\n    if (mappingLabels['hybris_combined_expiry_date'] === 'true') {\n      params[mappingLabels['hybris_card_expiry_date']] =\n        paymentDetails.expiryMonth +\n        mappingLabels['hybris_separator_expiry_date'] +\n        paymentDetails.expiryYear;\n    } else {\n      params[mappingLabels['hybris_card_expiration_month']] =\n        paymentDetails.expiryMonth;\n      params[mappingLabels['hybris_card_expiration_year']] =\n        paymentDetails.expiryYear;\n    }\n    params[mappingLabels['hybris_card_cvn']] = paymentDetails.cvn;\n\n    // billing address\n    params[mappingLabels['hybris_billTo_country']] =\n      paymentDetails.billingAddress?.country?.isocode;\n    params[mappingLabels['hybris_billTo_firstname']] =\n      paymentDetails.billingAddress?.firstName;\n    params[mappingLabels['hybris_billTo_lastname']] =\n      paymentDetails.billingAddress?.lastName;\n    params[mappingLabels['hybris_billTo_street1']] =\n      paymentDetails.billingAddress?.line1 +\n      ' ' +\n      paymentDetails.billingAddress?.line2;\n    params[mappingLabels['hybris_billTo_city']] =\n      paymentDetails.billingAddress?.town;\n    if (paymentDetails.billingAddress?.region) {\n      params[mappingLabels['hybris_billTo_region']] =\n        paymentDetails.billingAddress.region.isocodeShort;\n    } else {\n      params[mappingLabels['hybris_billTo_region']] = '';\n    }\n    params[mappingLabels['hybris_billTo_postalcode']] =\n      paymentDetails.billingAddress?.postalCode;\n    return params;\n  }\n\n  private extractPaymentDetailsFromHtml(html: string): {\n    [key: string]: string | boolean;\n  } {\n    const domdoc = this.domparser.parseFromString(html, 'text/xml');\n    const responseForm = domdoc.getElementsByTagName('form')[0];\n    const inputs = responseForm.getElementsByTagName('input');\n\n    const values: { [key: string]: string | boolean } = {};\n    for (let i = 0; inputs[i]; i++) {\n      const input = inputs[i];\n      const name = input.getAttribute('name');\n      const value = input.getAttribute('value');\n      if (name && name !== '{}' && value && value !== '') {\n        values[name] = value;\n      }\n    }\n\n    return values;\n  }\n\n  private convertToMap(paramList: { key: string; value: string }[]): {\n    [key: string]: string | undefined;\n  } {\n    return paramList.reduce(function (\n      result: { [key: string]: string | undefined },\n      item\n    ) {\n      const key = item.key;\n      result[key] = item.value;\n      return result;\n    },\n    {});\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport {\n  CheckoutReplenishmentOrderAdapter,\n  REPLENISHMENT_ORDER_FORM_SERIALIZER,\n} from '@spartacus/checkout/core';\nimport {\n  ConverterService,\n  OccEndpointsService,\n  ReplenishmentOrder,\n  REPLENISHMENT_ORDER_NORMALIZER,\n  ScheduleReplenishmentForm,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class OccCheckoutReplenishmentOrderAdapter\n  implements CheckoutReplenishmentOrderAdapter\n{\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  protected getScheduleReplenishmentOrderEndpoint(\n    userId: string,\n    cartId: string,\n    termsChecked: string\n  ) {\n    return this.occEndpoints.buildUrl('scheduleReplenishmentOrder', {\n      urlParams: {\n        userId,\n      },\n      queryParams: { cartId, termsChecked },\n    });\n  }\n\n  scheduleReplenishmentOrder(\n    cartId: string,\n    scheduleReplenishmentForm: ScheduleReplenishmentForm,\n    termsChecked: boolean,\n    userId: string\n  ): Observable<ReplenishmentOrder> {\n    scheduleReplenishmentForm = this.converter.convert(\n      scheduleReplenishmentForm,\n      REPLENISHMENT_ORDER_FORM_SERIALIZER\n    );\n\n    const headers = new HttpHeaders().set('Content-Type', 'application/json');\n\n    return this.http\n      .post(\n        this.getScheduleReplenishmentOrderEndpoint(\n          userId,\n          cartId,\n          termsChecked.toString()\n        ),\n        scheduleReplenishmentForm,\n        { headers }\n      )\n      .pipe(this.converter.pipeable(REPLENISHMENT_ORDER_NORMALIZER));\n  }\n}\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CheckoutAdapter, CheckoutDetails } from '@spartacus/checkout/core';\nimport {\n  ConverterService,\n  InterceptorUtil,\n  Occ,\n  OccEndpointsService,\n  OCC_USER_ID_ANONYMOUS,\n  Order,\n  ORDER_NORMALIZER,\n  USE_CLIENT_TOKEN,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class OccCheckoutAdapter implements CheckoutAdapter {\n  constructor(\n    protected http: HttpClient,\n    protected occEndpoints: OccEndpointsService,\n    protected converter: ConverterService\n  ) {}\n\n  protected getPlaceOrderEndpoint(\n    userId: string,\n    cartId: string,\n    termsChecked: string\n  ): string {\n    return this.occEndpoints.buildUrl('placeOrder', {\n      urlParams: { userId },\n      queryParams: { cartId, termsChecked },\n    });\n  }\n\n  protected getRemoveDeliveryAddressEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('removeDeliveryAddress', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  protected getClearDeliveryModeEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('clearDeliveryMode', {\n      urlParams: { userId, cartId },\n    });\n  }\n\n  protected getLoadCheckoutDetailsEndpoint(\n    userId: string,\n    cartId: string\n  ): string {\n    return this.occEndpoints.buildUrl('loadCheckoutDetails', {\n      urlParams: {\n        userId,\n        cartId,\n      },\n    });\n  }\n\n  public placeOrder(\n    userId: string,\n    cartId: string,\n    termsChecked: boolean\n  ): Observable<Order> {\n    let headers = new HttpHeaders({\n      'Content-Type': 'application/x-www-form-urlencoded',\n    });\n\n    if (userId === OCC_USER_ID_ANONYMOUS) {\n      headers = InterceptorUtil.createHeader(USE_CLIENT_TOKEN, true, headers);\n    }\n\n    return this.http\n      .post<Occ.Order>(\n        this.getPlaceOrderEndpoint(userId, cartId, termsChecked.toString()),\n        {},\n        { headers }\n      )\n      .pipe(this.converter.pipeable(ORDER_NORMALIZER));\n  }\n\n  loadCheckoutDetails(\n    userId: string,\n    cartId: string\n  ): Observable<CheckoutDetails> {\n    return this.http.get<CheckoutDetails>(\n      this.getLoadCheckoutDetailsEndpoint(userId, cartId)\n    );\n  }\n\n  clearCheckoutDeliveryAddress(\n    userId: string,\n    cartId: string\n  ): Observable<any> {\n    return this.http.delete<any>(\n      this.getRemoveDeliveryAddressEndpoint(userId, cartId)\n    );\n  }\n\n  clearCheckoutDeliveryMode(userId: string, cartId: string): Observable<any> {\n    return this.http.delete<any>(\n      this.getClearDeliveryModeEndpoint(userId, cartId)\n    );\n  }\n}\n","import { OccConfig } from '@spartacus/core';\n\nexport const defaultOccCheckoutConfig: OccConfig = {\n  backend: {\n    occ: {\n      endpoints: {\n        /* eslint-disable max-len */\n        setDeliveryAddress:\n          'users/${userId}/carts/${cartId}/addresses/delivery',\n        placeOrder: 'users/${userId}/orders?fields=FULL',\n        cardTypes: 'cardtypes',\n        paymentTypes: 'paymenttypes',\n        createDeliveryAddress:\n          'users/${userId}/carts/${cartId}/addresses/delivery',\n        removeDeliveryAddress:\n          'users/${userId}/carts/${cartId}/addresses/delivery',\n        deliveryMode: 'users/${userId}/carts/${cartId}/deliverymode',\n        setDeliveryMode: 'users/${userId}/carts/${cartId}/deliverymode',\n        clearDeliveryMode: 'users/${userId}/carts/${cartId}/deliverymode',\n        deliveryModes: 'users/${userId}/carts/${cartId}/deliverymodes',\n        setCartCostCenter:\n          'users/${userId}/carts/${cartId}/costcenter?fields=DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue, value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user',\n        setCartPaymentType:\n          'users/${userId}/carts/${cartId}/paymenttype?fields=DEFAULT,potentialProductPromotions,appliedProductPromotions,potentialOrderPromotions,appliedOrderPromotions,entries(totalPrice(formattedValue),product(images(FULL),stock(FULL)),basePrice(formattedValue,value),updateable),totalPrice(formattedValue),totalItems,totalPriceWithTax(formattedValue),totalDiscounts(value,formattedValue),subTotal(formattedValue),deliveryItemsQuantity,deliveryCost(formattedValue),totalTax(formattedValue, value),pickupItemsQuantity,net,appliedVouchers,productDiscounts(formattedValue),user',\n        setCartPaymentDetails: 'users/${userId}/carts/${cartId}/paymentdetails',\n        paymentProviderSubInfo:\n          'users/${userId}/carts/${cartId}/payment/sop/request?responseUrl=sampleUrl',\n        createPaymentDetails:\n          'users/${userId}/carts/${cartId}/payment/sop/response',\n        loadCheckoutDetails:\n          'users/${userId}/carts/${cartId}?fields=deliveryAddress(FULL),deliveryMode,paymentInfo(FULL)',\n        /* eslint-enable */\n      },\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CheckoutAdapter,\n  CheckoutCostCenterAdapter,\n  CheckoutDeliveryAdapter,\n  CheckoutPaymentAdapter,\n  CheckoutReplenishmentOrderAdapter,\n  PaymentTypeAdapter,\n  REPLENISHMENT_ORDER_FORM_SERIALIZER,\n} from '@spartacus/checkout/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { OccReplenishmentOrderFormSerializer } from './adapters/converters/index';\nimport { OccCheckoutCostCenterAdapter } from './adapters/occ-checkout-cost-center.adapter';\nimport { OccCheckoutDeliveryAdapter } from './adapters/occ-checkout-delivery.adapter';\nimport { OccCheckoutPaymentTypeAdapter } from './adapters/occ-checkout-payment-type.adapter';\nimport { OccCheckoutPaymentAdapter } from './adapters/occ-checkout-payment.adapter';\nimport { OccCheckoutReplenishmentOrderAdapter } from './adapters/occ-checkout-replenishment-order.adapter';\nimport { OccCheckoutAdapter } from './adapters/occ-checkout.adapter';\nimport { defaultOccCheckoutConfig } from './config/default-occ-checkout-config';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultOccCheckoutConfig),\n    OccReplenishmentOrderFormSerializer,\n    {\n      provide: CheckoutAdapter,\n      useClass: OccCheckoutAdapter,\n    },\n    {\n      provide: CheckoutDeliveryAdapter,\n      useClass: OccCheckoutDeliveryAdapter,\n    },\n    {\n      provide: CheckoutPaymentAdapter,\n      useClass: OccCheckoutPaymentAdapter,\n    },\n    {\n      provide: PaymentTypeAdapter,\n      useClass: OccCheckoutPaymentTypeAdapter,\n    },\n    {\n      provide: CheckoutCostCenterAdapter,\n      useClass: OccCheckoutCostCenterAdapter,\n    },\n    {\n      provide: CheckoutReplenishmentOrderAdapter,\n      useClass: OccCheckoutReplenishmentOrderAdapter,\n    },\n    {\n      provide: REPLENISHMENT_ORDER_FORM_SERIALIZER,\n      useExisting: OccReplenishmentOrderFormSerializer,\n      multi: true,\n    },\n  ],\n})\nexport class CheckoutOccModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["TimeUtils","Injectable","CART_NORMALIZER","ADDRESS_SERIALIZER","HttpHeaders","ADDRESS_NORMALIZER","DELIVERY_MODE_NORMALIZER","pluck","map","PAYMENT_TYPE_NORMALIZER","PAYMENT_DETAILS_SERIALIZER","mergeMap","PAYMENT_DETAILS_NORMALIZER","CARD_TYPE_NORMALIZER","HttpParams","HttpParamsURIEncoder","REPLENISHMENT_ORDER_FORM_SERIALIZER","REPLENISHMENT_ORDER_NORMALIZER","OCC_USER_ID_ANONYMOUS","InterceptorUtil","USE_CLIENT_TOKEN","ORDER_NORMALIZER","CommonModule","provideDefaultConfig","CheckoutAdapter","CheckoutDeliveryAdapter","CheckoutPaymentAdapter","PaymentTypeAdapter","CheckoutCostCenterAdapter","CheckoutReplenishmentOrderAdapter","NgModule"],"mappings":"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"}