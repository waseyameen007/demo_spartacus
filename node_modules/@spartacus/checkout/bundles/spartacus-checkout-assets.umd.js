(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define('@spartacus/checkout/assets', ['exports'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.spartacus = global.spartacus || {}, global.spartacus.checkout = global.spartacus.checkout || {}, global.spartacus.checkout.assets = {})));
}(this, (function (exports) { 'use strict';

    var checkout = {
        checkoutAddress: {
            shippingAddress: 'Shipping Address',
            selectYourShippingAddress: 'Select your Shipping Address',
            defaultShippingAddress: 'Default Shipping Address',
            addNewAddress: 'Add New Address',
            shipToThisAddress: 'Ship to this address',
        },
        checkoutOrderConfirmation: {
            confirmationOfOrder: 'Confirmation of Order:',
            thankYou: 'Thank you for your order!',
            invoiceHasBeenSentByEmail: 'An invoice has been sent by email. You should receive it soon.',
            orderItems: 'Order Items',
            orderPlacedSuccessfully: 'Order placed successfully',
            createAccount: 'Create an account?',
            createAccountForNext: 'Create an account for <{{email}}> for a faster checkout on your next visit.',
        },
        checkoutReview: {
            review: 'Review',
            orderItems: 'Order Items',
            autoReplenishOrder: 'Auto Replenish Order',
            confirmThatRead: 'I am confirming that I have read and agreed with the',
            placeOrder: 'Place Order',
            scheduleReplenishmentOrder: 'Schedule Replenishment Order',
            orderType_PLACE_ORDER: 'None (one time order only)',
            orderType_SCHEDULE_REPLENISHMENT_ORDER: 'Replenish Order',
            termsAndConditions: 'Terms & Conditions',
            editShippingAddress: 'Edit shipping address',
            editShippingAddressDetails: 'Edit shipping address details, opens Shipping Address page',
            editPaymentDetails: 'Edit payment details, opens Payment Details page',
            editPaymentType: 'Edit payment method, opens Method of Payment page',
            editDeliveryMode: 'Edit delivery mode, opens Delivery Mode page',
            poNumber: 'Purchase Order Number',
            every: 'Every',
            startOn: 'Start on',
            dayOfMonth: 'On day',
            repeatOnDays: 'Repeat on the following days',
            recurrencePeriodType_DAILY: 'Day(s)',
            recurrencePeriodType_WEEKLY: 'Week(s)',
            recurrencePeriodType_MONTHLY: 'Month',
        },
        checkoutShipping: {
            shippingMethod: 'Shipping Method',
            standardDelivery: 'Standard Delivery',
            premiumDelivery: 'Premium Delivery',
        },
        checkout: {
            backToCart: 'Back to cart',
            invalid: {
                accountType: 'Your account does not allow you to checkout here.',
            },
        },
        checkoutPO: {
            noPoNumber: 'None',
            poNumber: 'Purchase order number (optional)',
            costCenter: 'Cost Center',
            placeholder: 'Enter P.O',
            availableLabel: "Shipping addresses available to you depend on the cost center's unit",
        },
        checkoutProgress: {
            methodOfPayment: 'Method of Payment',
            shippingAddress: 'Shipping Address',
            deliveryMode: 'Delivery Mode',
            paymentDetails: 'Payment Details',
            reviewOrder: 'Review Order',
        },
    };

    var en = {
        checkout: checkout,
    };

    var checkoutTranslations = {
        en: en,
    };
    var checkoutTranslationChunksConfig = {
        checkout: [
            'checkout',
            'checkoutAddress',
            'checkoutOrderConfirmation',
            'checkoutReview',
            'checkoutShipping',
            'checkoutProgress',
            'checkoutPO',
        ],
    };

    /**
     * Generated bundle index. Do not edit.
     */

    exports.checkoutTranslationChunksConfig = checkoutTranslationChunksConfig;
    exports.checkoutTranslations = checkoutTranslations;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=spartacus-checkout-assets.umd.js.map
