{"version":3,"file":"spartacus-checkout-components.umd.js","sources":["../../../feature-libs/checkout/components/guards/not-checkout-auth.guard.ts","../../../feature-libs/checkout/components/components/checkout-login/checkout-login.component.ts","../../../feature-libs/checkout/components/components/checkout-login/checkout-login.component.html","../../../feature-libs/checkout/components/components/checkout-login/checkout-login.module.ts","../../../node_modules/tslib/tslib.es6.js","../../../feature-libs/checkout/components/guards/cart-not-empty.guard.ts","../../../feature-libs/checkout/components/services/checkout-config.service.ts","../../../feature-libs/checkout/components/guards/checkout-auth.guard.ts","../../../feature-libs/checkout/components/services/checkout-details.service.ts","../../../feature-libs/checkout/components/services/express-checkout.service.ts","../../../feature-libs/checkout/components/services/checkout-step.service.ts","../../../feature-libs/checkout/components/guards/checkout.guard.ts","../../../feature-libs/checkout/components/components/checkout-orchestrator/checkout-orchestrator.component.ts","../../../feature-libs/checkout/components/components/checkout-orchestrator/checkout-orchestrator.module.ts","../../../feature-libs/checkout/components/components/checkout-order-summary/checkout-order-summary.component.ts","../../../feature-libs/checkout/components/components/checkout-order-summary/checkout-order-summary.component.html","../../../feature-libs/checkout/components/components/checkout-order-summary/checkout-order-summary.module.ts","../../../feature-libs/checkout/components/guards/checkout-steps-set.guard.ts","../../../feature-libs/checkout/components/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component.ts","../../../feature-libs/checkout/components/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.component.html","../../../feature-libs/checkout/components/components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module.ts","../../../feature-libs/checkout/components/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component.ts","../../../feature-libs/checkout/components/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.component.html","../../../feature-libs/checkout/components/components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module.ts","../../../feature-libs/checkout/components/components/checkout-progress/multiline-titles.pipe.ts","../../../feature-libs/checkout/components/components/checkout-progress/checkout-progress.component.ts","../../../feature-libs/checkout/components/components/checkout-progress/checkout-progress.component.html","../../../feature-libs/checkout/components/components/checkout-progress/checkout-progress.module.ts","../../../feature-libs/checkout/components/components/cost-center/cost-center.component.ts","../../../feature-libs/checkout/components/components/cost-center/cost-center.component.html","../../../feature-libs/checkout/components/components/cost-center/cost-center.module.ts","../../../feature-libs/checkout/components/components/delivery-mode/delivery-mode.component.ts","../../../feature-libs/checkout/components/components/delivery-mode/delivery-mode.component.html","../../../feature-libs/checkout/components/components/delivery-mode/delivery-mode.module.ts","../../../feature-libs/checkout/components/components/payment-method/payment-form/payment-form.component.ts","../../../feature-libs/checkout/components/components/payment-method/payment-form/payment-form.component.html","../../../feature-libs/checkout/components/components/payment-method/payment-form/payment-form.module.ts","../../../feature-libs/checkout/components/components/payment-method/payment-method.component.ts","../../../feature-libs/checkout/components/components/payment-method/payment-method.component.html","../../../feature-libs/checkout/components/components/payment-method/payment-method.module.ts","../../../feature-libs/checkout/components/components/payment-type/payment-type.component.ts","../../../feature-libs/checkout/components/components/payment-type/payment-type.component.html","../../../feature-libs/checkout/components/components/payment-type/payment-type.module.ts","../../../feature-libs/checkout/components/components/place-order/default-place-order-spinner-layout.config.ts","../../../feature-libs/checkout/components/services/checkout-replenishment-form-service.ts","../../../feature-libs/checkout/components/components/place-order/place-order.component.ts","../../../feature-libs/checkout/components/components/place-order/place-order.component.html","../../../feature-libs/checkout/components/components/place-order/place-order.module.ts","../../../feature-libs/checkout/components/components/review-submit/review-submit.component.ts","../../../feature-libs/checkout/components/components/review-submit/review-submit.component.html","../../../feature-libs/checkout/components/components/review-submit/review-submit.module.ts","../../../feature-libs/checkout/components/components/schedule-replenishment-order/schedule-replenishment-order.component.ts","../../../feature-libs/checkout/components/components/schedule-replenishment-order/schedule-replenishment-order.component.html","../../../feature-libs/checkout/components/components/schedule-replenishment-order/schedule-replenishment-order.module.ts","../../../feature-libs/checkout/components/components/shipping-address/shipping-address.component.ts","../../../feature-libs/checkout/components/components/shipping-address/shipping-address.component.html","../../../feature-libs/checkout/components/components/shipping-address/shipping-address.module.ts","../../../feature-libs/checkout/components/order-confirmation/components/guest-register-form/guest-register-form.component.ts","../../../feature-libs/checkout/components/order-confirmation/components/guest-register-form/guest-register-form.component.html","../../../feature-libs/checkout/components/order-confirmation/components/order-confirmation-items/order-confirmation-items.component.ts","../../../feature-libs/checkout/components/order-confirmation/components/order-confirmation-items/order-confirmation-items.component.html","../../../feature-libs/checkout/components/order-confirmation/components/order-confirmation-overview/order-confirmation-overview.component.ts","../../../feature-libs/checkout/components/order-confirmation/components/order-confirmation-overview/order-confirmation-overview.component.html","../../../feature-libs/checkout/components/order-confirmation/components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component.ts","../../../feature-libs/checkout/components/order-confirmation/components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component.html","../../../feature-libs/checkout/components/order-confirmation/components/order-confirmation-totals/order-confirmation-totals.component.ts","../../../feature-libs/checkout/components/order-confirmation/components/order-confirmation-totals/order-confirmation-totals.component.html","../../../feature-libs/checkout/components/order-confirmation/guards/order-confirmation.guard.ts","../../../feature-libs/checkout/components/order-confirmation/order-confirmation.module.ts","../../../feature-libs/checkout/components/order-confirmation/replenishment-order-confirmation.module.ts","../../../feature-libs/checkout/components/checkout-components.module.ts","../../../feature-libs/checkout/components/spartacus-checkout-components.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport {\n  ActiveCartService,\n  AuthService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NotCheckoutAuthGuard implements CanActivate {\n  constructor(\n    protected authService: AuthService,\n    protected activeCartService: ActiveCartService,\n    protected semanticPathService: SemanticPathService,\n    protected router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.authService.isUserLoggedIn().pipe(\n      map((isLoggedIn) => {\n        if (isLoggedIn) {\n          return this.router.parseUrl(this.semanticPathService.get('home'));\n        } else if (this.activeCartService.isGuestCart()) {\n          return this.router.parseUrl(this.semanticPathService.get('cart'));\n        }\n        return !isLoggedIn;\n      })\n    );\n  }\n}\n","import { Component, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActiveCartService, AuthRedirectService } from '@spartacus/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-checkout-login',\n  templateUrl: './checkout-login.component.html',\n})\nexport class CheckoutLoginComponent implements OnDestroy {\n  checkoutLoginForm: FormGroup = this.formBuilder.group(\n    {\n      email: ['', [Validators.required, CustomFormValidators.emailValidator]],\n      emailConfirmation: ['', [Validators.required]],\n    },\n    {\n      validators: CustomFormValidators.emailsMustMatch(\n        'email',\n        'emailConfirmation'\n      ),\n    }\n  );\n  sub: Subscription;\n\n  constructor(\n    protected formBuilder: FormBuilder,\n    protected authRedirectService: AuthRedirectService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  onSubmit() {\n    if (this.checkoutLoginForm.valid) {\n      const email = this.checkoutLoginForm.get('email')?.value;\n      this.activeCartService.addEmail(email);\n\n      if (!this.sub) {\n        this.sub = this.activeCartService.getAssignedUser().subscribe(() => {\n          if (this.activeCartService.isGuestCart()) {\n            this.authRedirectService.redirect();\n          }\n        });\n      }\n    } else {\n      this.checkoutLoginForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n}\n","<form (ngSubmit)=\"onSubmit()\" [formGroup]=\"checkoutLoginForm\">\n  <div class=\"form-group\">\n    <label>\n      <span class=\"label-content\">{{\n        'checkoutLogin.emailAddress.label' | cxTranslate\n      }}</span>\n      <input\n        aria-required=\"true\"\n        type=\"email\"\n        name=\"email\"\n        class=\"form-control\"\n        formControlName=\"email\"\n        placeholder=\"{{\n          'checkoutLogin.emailAddress.placeholder' | cxTranslate\n        }}\"\n      />\n      <cx-form-errors\n        aria-live=\"assertive\"\n        aria-atomic=\"true\"\n        [control]=\"checkoutLoginForm.get('email')\"\n      ></cx-form-errors>\n    </label>\n  </div>\n\n  <div class=\"form-group\">\n    <label>\n      <span class=\"label-content\">{{\n        'checkoutLogin.confirmEmail.label' | cxTranslate\n      }}</span>\n      <input\n        aria-required=\"true\"\n        type=\"email\"\n        name=\"emailConfirmation\"\n        class=\"form-control\"\n        formControlName=\"emailConfirmation\"\n        placeholder=\"{{\n          'checkoutLogin.confirmEmail.placeholder' | cxTranslate\n        }}\"\n      />\n      <cx-form-errors\n        aria-live=\"assertive\"\n        aria-atomic=\"true\"\n        [control]=\"checkoutLoginForm.get('emailConfirmation')\"\n      ></cx-form-errors>\n    </label>\n  </div>\n\n  <button type=\"submit\" class=\"btn btn-block btn-primary\">\n    {{ 'checkoutLogin.continue' | cxTranslate }}\n  </button>\n</form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { NotCheckoutAuthGuard } from '../../guards/not-checkout-auth.guard';\nimport { CheckoutLoginComponent } from './checkout-login.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        GuestCheckoutLoginComponent: {\n          component: CheckoutLoginComponent,\n          guards: [NotCheckoutAuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutLoginComponent],\n  exports: [CheckoutLoginComponent],\n})\nexport class CheckoutLoginModule {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { ActiveCartService, Cart, SemanticPathService } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartNotEmptyGuard implements CanActivate {\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected semanticPathService: SemanticPathService,\n    protected router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return combineLatest([\n      this.activeCartService.getActive(),\n      this.activeCartService.isStable(),\n    ]).pipe(\n      filter(([_, loaded]) => loaded),\n      map(([cart]) => {\n        if (this.isEmpty(cart)) {\n          return this.router.parseUrl(this.semanticPathService.get('home'));\n        }\n        return true;\n      })\n    );\n  }\n\n  private isEmpty(cart: Cart): boolean {\n    return cart && !cart.totalItems;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CheckoutConfig,\n  DeliveryModePreferences,\n} from '@spartacus/checkout/root';\nimport { DeliveryMode } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutConfigService {\n  private express: boolean = this.checkoutConfig.checkout?.express ?? false;\n  private guest: boolean = this.checkoutConfig.checkout?.guest ?? false;\n  private defaultDeliveryMode: Array<DeliveryModePreferences | string> =\n    this.checkoutConfig.checkout?.defaultDeliveryMode || [];\n\n  constructor(private checkoutConfig: CheckoutConfig) {}\n\n  protected compareDeliveryCost(\n    deliveryMode1: DeliveryMode,\n    deliveryMode2: DeliveryMode\n  ): number {\n    if (\n      deliveryMode1.deliveryCost?.value &&\n      deliveryMode2.deliveryCost?.value\n    ) {\n      if (deliveryMode1.deliveryCost.value > deliveryMode2.deliveryCost.value) {\n        return 1;\n      } else if (\n        deliveryMode1.deliveryCost.value < deliveryMode2.deliveryCost.value\n      ) {\n        return -1;\n      }\n    }\n    return 0;\n  }\n\n  protected findMatchingDeliveryMode(\n    deliveryModes: DeliveryMode[],\n    index = 0\n  ): string | undefined {\n    switch (this.defaultDeliveryMode[index]) {\n      case DeliveryModePreferences.FREE:\n        if (deliveryModes[0].deliveryCost?.value === 0) {\n          return deliveryModes[0].code;\n        }\n        break;\n      case DeliveryModePreferences.LEAST_EXPENSIVE:\n        const leastExpensiveFound = deliveryModes.find(\n          (deliveryMode) => deliveryMode.deliveryCost?.value !== 0\n        );\n        if (leastExpensiveFound) {\n          return leastExpensiveFound.code;\n        }\n        break;\n      case DeliveryModePreferences.MOST_EXPENSIVE:\n        return deliveryModes[deliveryModes.length - 1].code;\n      default:\n        const codeFound = deliveryModes.find(\n          (deliveryMode) =>\n            deliveryMode.code === this.defaultDeliveryMode[index]\n        );\n        if (codeFound) {\n          return codeFound.code;\n        }\n    }\n    const lastMode = this.defaultDeliveryMode.length - 1 <= index;\n    return lastMode\n      ? deliveryModes[0].code\n      : this.findMatchingDeliveryMode(deliveryModes, index + 1);\n  }\n\n  getPreferredDeliveryMode(deliveryModes: DeliveryMode[]): string | undefined {\n    deliveryModes.sort(this.compareDeliveryCost);\n    return this.findMatchingDeliveryMode(deliveryModes);\n  }\n\n  isExpressCheckout(): boolean {\n    return this.express;\n  }\n\n  isGuestCheckout(): boolean {\n    return this.guest;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport {\n  ActiveCartService,\n  AuthRedirectService,\n  AuthService,\n  B2BUser,\n  B2BUserRole,\n  GlobalMessageService,\n  GlobalMessageType,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { User, UserAccountFacade } from '@spartacus/user/account/root';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutAuthGuard implements CanActivate {\n  constructor(\n    protected authService: AuthService,\n    protected authRedirectService: AuthRedirectService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected activeCartService: ActiveCartService,\n    protected semanticPathService: SemanticPathService,\n    protected router: Router,\n    protected userService: UserAccountFacade,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return combineLatest([\n      this.authService.isUserLoggedIn(),\n      this.activeCartService.getAssignedUser(),\n      this.userService.get(),\n      this.activeCartService.isStable(),\n    ]).pipe(\n      filter(([, , _user, isStable]) => isStable),\n      // if the user is authenticated and we have their data, OR if the user is anonymous\n      filter(([isLoggedIn, , user]) => (!!user && isLoggedIn) || !isLoggedIn),\n      map(([isLoggedIn, cartUser, user]) => {\n        if (!isLoggedIn) {\n          return this.handleAnonymousUser(cartUser);\n        } else if (user && 'roles' in user) {\n          return this.handleUserRole(user);\n        }\n        return isLoggedIn;\n      })\n    );\n  }\n\n  protected handleAnonymousUser(cartUser?: User): boolean | UrlTree {\n    if (this.activeCartService.isGuestCart()) {\n      return !!cartUser;\n    }\n    this.authRedirectService.saveCurrentNavigationUrl();\n    if (this.checkoutConfigService.isGuestCheckout()) {\n      return this.router.createUrlTree(\n        [this.semanticPathService.get('login')],\n        { queryParams: { forced: true } }\n      );\n    } else {\n      return this.router.parseUrl(this.semanticPathService.get('login'));\n    }\n  }\n\n  protected handleUserRole(user: User): boolean | UrlTree {\n    const roles = (<B2BUser>user).roles;\n    if (roles?.includes(B2BUserRole.CUSTOMER)) {\n      return true;\n    }\n    this.globalMessageService.add(\n      { key: 'checkout.invalid.accountType' },\n      GlobalMessageType.MSG_TYPE_WARNING\n    );\n    return this.router.parseUrl(this.semanticPathService.get('home'));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CheckoutDeliveryFacade,\n  CheckoutFacade,\n  CheckoutPaymentFacade,\n} from '@spartacus/checkout/root';\nimport {\n  ActiveCartService,\n  Address,\n  EMAIL_PATTERN,\n  OCC_USER_ID_ANONYMOUS,\n  OCC_USER_ID_GUEST,\n  PaymentDetails,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport {\n  filter,\n  map,\n  shareReplay,\n  skipWhile,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutDetailsService {\n  cartId$: Observable<string>;\n  getCheckoutDetailsLoaded$: Observable<boolean>;\n\n  constructor(\n    protected checkoutService: CheckoutFacade,\n    protected checkoutDeliveryService: CheckoutDeliveryFacade,\n    protected checkoutPaymentService: CheckoutPaymentFacade,\n    protected activeCartService: ActiveCartService\n  ) {\n    this.cartId$ = combineLatest([\n      this.activeCartService.getActive(),\n      this.activeCartService.isStable(),\n    ]).pipe(\n      filter(([, isStable]) => isStable),\n      map(([cartData]) => {\n        const cartUser = cartData.user;\n\n        if (\n          cartUser &&\n          (cartUser.uid === OCC_USER_ID_ANONYMOUS ||\n            cartUser.uid === OCC_USER_ID_GUEST ||\n            !!cartUser.uid?.split('|').slice(1).join('|').match(EMAIL_PATTERN))\n        ) {\n          return cartData.guid as string;\n        }\n        return cartData.code as string;\n      }),\n      filter((cartId) => !!cartId)\n    );\n\n    this.getCheckoutDetailsLoaded$ = this.cartId$.pipe(\n      tap((cartId) => this.checkoutService.loadCheckoutDetails(cartId)),\n      shareReplay(1),\n      switchMap(() => this.checkoutService.getCheckoutDetailsLoaded()),\n      skipWhile((loaded) => !loaded)\n    );\n  }\n\n  getDeliveryAddress(): Observable<Address> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutDeliveryService.getDeliveryAddress())\n    );\n  }\n\n  getSelectedDeliveryModeCode(): Observable<string> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() =>\n        this.checkoutDeliveryService.getSelectedDeliveryModeCode()\n      )\n    );\n  }\n\n  getPaymentDetails(): Observable<PaymentDetails> {\n    return this.getCheckoutDetailsLoaded$.pipe(\n      switchMap(() => this.checkoutPaymentService.getPaymentDetails())\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  CheckoutDeliveryFacade,\n  CheckoutPaymentFacade,\n  ClearCheckoutFacade,\n} from '@spartacus/checkout/root';\nimport {\n  Address,\n  DeliveryMode,\n  PaymentDetails,\n  StateUtils,\n  UserAddressService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutDetailsService } from './checkout-details.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExpressCheckoutService {\n  private shippingAddressSet$: Observable<boolean>;\n  private deliveryModeSet$: Observable<boolean>;\n  private paymentMethodSet$: Observable<boolean>;\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected userPaymentService: UserPaymentService,\n    protected checkoutDeliveryService: CheckoutDeliveryFacade,\n    protected checkoutPaymentService: CheckoutPaymentFacade,\n    protected checkoutDetailsService: CheckoutDetailsService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected clearCheckoutService: ClearCheckoutFacade\n  ) {\n    this.setShippingAddress();\n    this.setDeliveryMode();\n    this.setPaymentMethod();\n  }\n\n  protected setShippingAddress() {\n    this.shippingAddressSet$ = combineLatest([\n      this.userAddressService.getAddresses(),\n      this.userAddressService.getAddressesLoadedSuccess(),\n      this.checkoutDeliveryService.getSetDeliveryAddressProcess(),\n    ]).pipe(\n      debounceTime(0),\n      tap(\n        ([, addressesLoadedSuccess]: [\n          Address[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          if (!addressesLoadedSuccess) {\n            this.userAddressService.loadAddresses();\n          }\n        }\n      ),\n      filter(\n        ([, addressesLoadedSuccess]: [\n          Address[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => addressesLoadedSuccess\n      ),\n      switchMap(\n        ([addresses, , setDeliveryAddressProcess]: [\n          Address[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          const defaultAddress =\n            addresses.find((address) => address.defaultAddress) || addresses[0];\n          if (defaultAddress && Object.keys(defaultAddress).length) {\n            if (\n              !(\n                setDeliveryAddressProcess.success ||\n                setDeliveryAddressProcess.error ||\n                setDeliveryAddressProcess.loading\n              )\n            ) {\n              this.checkoutDeliveryService.setDeliveryAddress(defaultAddress);\n            }\n            return of(setDeliveryAddressProcess).pipe(\n              filter(\n                (\n                  setDeliveryAddressProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  return (\n                    ((setDeliveryAddressProcessState.success ||\n                      setDeliveryAddressProcessState.error) &&\n                      !setDeliveryAddressProcessState.loading) ??\n                    false\n                  );\n                }\n              ),\n              switchMap(\n                (\n                  setDeliveryAddressProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  if (setDeliveryAddressProcessState.success) {\n                    return this.checkoutDetailsService.getDeliveryAddress();\n                  }\n                  return of(false);\n                }\n              ),\n              map((data) => Boolean(data && Object.keys(data).length))\n            );\n          }\n          return of(false);\n        }\n      ),\n      distinctUntilChanged()\n    );\n  }\n\n  protected setPaymentMethod() {\n    this.paymentMethodSet$ = combineLatest([\n      this.deliveryModeSet$,\n      this.userPaymentService.getPaymentMethods(),\n      this.userPaymentService.getPaymentMethodsLoadedSuccess(),\n      this.checkoutPaymentService.getSetPaymentDetailsResultProcess(),\n    ]).pipe(\n      debounceTime(0),\n      tap(\n        ([, , paymentMethodsLoadedSuccess]: [\n          boolean,\n          PaymentDetails[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          if (!paymentMethodsLoadedSuccess) {\n            this.userPaymentService.loadPaymentMethods();\n          }\n        }\n      ),\n      filter(\n        ([, , success]: [\n          boolean,\n          PaymentDetails[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => success\n      ),\n      switchMap(\n        ([deliveryModeSet, payments, , setPaymentDetailsProcess]: [\n          boolean,\n          PaymentDetails[],\n          boolean,\n          StateUtils.LoaderState<void>\n        ]) => {\n          if (!deliveryModeSet) {\n            return of(false);\n          }\n\n          const defaultPayment =\n            payments.find((address) => address.defaultPayment) || payments[0];\n          if (defaultPayment && Object.keys(defaultPayment).length) {\n            if (\n              !(\n                setPaymentDetailsProcess.success ||\n                setPaymentDetailsProcess.error ||\n                setPaymentDetailsProcess.loading\n              )\n            ) {\n              this.checkoutPaymentService.setPaymentDetails(defaultPayment);\n            }\n            return of(setPaymentDetailsProcess).pipe(\n              filter(\n                (\n                  setPaymentDetailsProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  return (\n                    ((setPaymentDetailsProcessState.success ||\n                      setPaymentDetailsProcessState.error) &&\n                      !setPaymentDetailsProcessState.loading) ??\n                    false\n                  );\n                }\n              ),\n              switchMap(\n                (\n                  setPaymentDetailsProcessState: StateUtils.LoaderState<void>\n                ) => {\n                  if (setPaymentDetailsProcessState.success) {\n                    return this.checkoutDetailsService.getPaymentDetails();\n                  }\n                  return of(false);\n                }\n              ),\n              map((data) => Boolean(data && Object.keys(data).length))\n            );\n          }\n          return of(false);\n        }\n      )\n    );\n  }\n\n  protected setDeliveryMode() {\n    this.deliveryModeSet$ = combineLatest([\n      this.shippingAddressSet$,\n      this.checkoutDeliveryService.getSupportedDeliveryModes(),\n      this.checkoutDeliveryService.getSetDeliveryModeProcess(),\n      this.checkoutDeliveryService.getLoadSupportedDeliveryModeProcess(),\n    ]).pipe(\n      debounceTime(0),\n      switchMap(\n        ([\n          addressSet,\n          supportedDeliveryModes,\n          setDeliveryModeStatusFlag,\n          loadSupportedDeliveryModeStatus,\n        ]: [\n          boolean,\n          DeliveryMode[],\n          StateUtils.LoaderState<void>,\n          StateUtils.LoaderState<void>\n        ]) => {\n          if (addressSet) {\n            return of([\n              supportedDeliveryModes,\n              setDeliveryModeStatusFlag,\n              loadSupportedDeliveryModeStatus,\n            ]).pipe(\n              filter(\n                ([, , supportedDeliveryModeStatus]: any) =>\n                  supportedDeliveryModeStatus.success ?? false\n              ),\n              switchMap(\n                ([deliveryModes, setDeliveryModeStatus, ,]: [\n                  DeliveryMode[],\n                  StateUtils.LoaderState<void>,\n                  StateUtils.LoaderState<void>\n                ]) => {\n                  if (Boolean(deliveryModes.length)) {\n                    const preferredDeliveryMode =\n                      this.checkoutConfigService.getPreferredDeliveryMode(\n                        deliveryModes\n                      );\n                    return of([\n                      preferredDeliveryMode,\n                      setDeliveryModeStatus,\n                    ]).pipe(\n                      tap(([deliveryMode, deliveryModeLoadingStatus]: any) => {\n                        if (\n                          deliveryMode &&\n                          !(\n                            deliveryModeLoadingStatus.success ||\n                            deliveryModeLoadingStatus.error ||\n                            deliveryModeLoadingStatus.loading\n                          )\n                        ) {\n                          this.checkoutDeliveryService.setDeliveryMode(\n                            deliveryMode\n                          );\n                        }\n                      }),\n                      filter(\n                        ([, deliveryModeLoadingStatus]: [\n                          string,\n                          StateUtils.LoaderState<void>\n                        ]) => {\n                          return (\n                            ((deliveryModeLoadingStatus.success ||\n                              deliveryModeLoadingStatus.error) &&\n                              !deliveryModeLoadingStatus.loading) ??\n                            false\n                          );\n                        }\n                      ),\n                      switchMap(\n                        ([, deliveryModeLoadingStatus]: [\n                          string,\n                          StateUtils.LoaderState<void>\n                        ]) => {\n                          if (deliveryModeLoadingStatus.success) {\n                            return this.checkoutDetailsService.getSelectedDeliveryModeCode();\n                          }\n                          return of(false);\n                        }\n                      ),\n                      map((data) => Boolean(data))\n                    );\n                  }\n                  return of(false);\n                }\n              )\n            );\n          } else {\n            return of(false);\n          }\n        }\n      ),\n      distinctUntilChanged()\n    );\n  }\n\n  public trySetDefaultCheckoutDetails(): Observable<boolean> {\n    this.clearCheckoutService.resetCheckoutProcesses();\n\n    return this.paymentMethodSet$.pipe(\n      map((paymentMethodSet) => Boolean(paymentMethodSet))\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  CheckoutConfig,\n  CheckoutStep,\n  CheckoutStepType,\n} from '@spartacus/checkout/root';\nimport { RoutingConfigService, RoutingService } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutStepService {\n  // initial enabled steps\n  allSteps: CheckoutStep[];\n\n  readonly steps$: BehaviorSubject<CheckoutStep[]> = new BehaviorSubject<\n    CheckoutStep[]\n  >([]);\n\n  readonly activeStepIndex$: Observable<number> = this.routingService\n    .getRouterState()\n    .pipe(\n      switchMap((router) => {\n        const activeStepUrl = router.state.context.id;\n        return this.steps$.pipe(\n          map((steps) => {\n            let activeIndex: number = 0;\n            steps.forEach((step, index) => {\n              const routeUrl = `/${\n                this.routingConfigService.getRouteConfig(step.routeName)\n                  .paths?.[0]\n              }`;\n              if (routeUrl === activeStepUrl) {\n                activeIndex = index;\n              }\n            });\n            return activeIndex;\n          })\n        );\n      })\n    );\n\n  constructor(\n    protected routingService: RoutingService,\n    protected checkoutConfig: CheckoutConfig,\n    protected routingConfigService: RoutingConfigService\n  ) {\n    this.resetSteps();\n  }\n\n  back(activatedRoute: ActivatedRoute): void {\n    const previousUrl = this.getPreviousCheckoutStepUrl(activatedRoute);\n    this.routingService.go(previousUrl === null ? 'cart' : previousUrl);\n  }\n\n  next(activatedRoute: ActivatedRoute): void {\n    const nextUrl = this.getNextCheckoutStepUrl(activatedRoute);\n    this.routingService.go(nextUrl);\n  }\n\n  goToStepWithIndex(stepIndex: number): void {\n    this.routingService.go(\n      this.getStepUrlFromStepRoute(this.allSteps[stepIndex].routeName)\n    );\n  }\n\n  getBackBntText(activatedRoute: ActivatedRoute): string {\n    if (this.getPreviousCheckoutStepUrl(activatedRoute) === null) {\n      return 'checkout.backToCart';\n    }\n    return 'common.back';\n  }\n\n  resetSteps(): void {\n    this.allSteps = (this.checkoutConfig.checkout?.steps ?? [])\n      .filter((step) => !step.disabled)\n      .map((x) => Object.assign({}, x));\n    this.steps$.next(this.allSteps);\n  }\n\n  disableEnableStep(\n    currentStepType: CheckoutStepType,\n    disabled: boolean\n  ): void {\n    const currentStep = this.allSteps.find((step) =>\n      step.type.includes(currentStepType)\n    );\n    if (currentStep && currentStep.disabled !== disabled) {\n      currentStep.disabled = disabled;\n      this.steps$.next(this.allSteps.filter((step) => !step.disabled));\n    }\n  }\n\n  getCheckoutStep(currentStepType: CheckoutStepType): CheckoutStep | undefined {\n    const index = this.getCheckoutStepIndex('type', currentStepType);\n    if (index !== null) {\n      return this.allSteps[index];\n    }\n  }\n\n  getCheckoutStepRoute(currentStepType: CheckoutStepType): string | undefined {\n    return this.getCheckoutStep(currentStepType)?.routeName;\n  }\n\n  getFirstCheckoutStepRoute(): string {\n    return this.allSteps[0].routeName;\n  }\n\n  getNextCheckoutStepUrl(activatedRoute: ActivatedRoute): string | null {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    if (stepIndex !== null && stepIndex >= 0) {\n      let i = 1;\n      while (\n        this.allSteps[stepIndex + i] &&\n        this.allSteps[stepIndex + i].disabled\n      ) {\n        i++;\n      }\n      const nextStep = this.allSteps[stepIndex + i];\n      if (nextStep) {\n        return this.getStepUrlFromStepRoute(nextStep.routeName);\n      }\n    }\n    return null;\n  }\n\n  getPreviousCheckoutStepUrl(activatedRoute: ActivatedRoute): string | null {\n    const stepIndex = this.getCurrentStepIndex(activatedRoute);\n\n    if (stepIndex !== null && stepIndex >= 0) {\n      let i = 1;\n      while (\n        this.allSteps[stepIndex - i] &&\n        this.allSteps[stepIndex - i].disabled\n      ) {\n        i++;\n      }\n      const previousStep = this.allSteps[stepIndex - i];\n      if (previousStep) {\n        return this.getStepUrlFromStepRoute(previousStep.routeName);\n      }\n    }\n    return null;\n  }\n\n  getCurrentStepIndex(activatedRoute: ActivatedRoute): number | null {\n    const currentStepUrl = this.getStepUrlFromActivatedRoute(activatedRoute);\n\n    const stepIndex = this.allSteps.findIndex(\n      (step) =>\n        currentStepUrl === `/${this.getStepUrlFromStepRoute(step.routeName)}`\n    );\n    return stepIndex === -1 ? null : stepIndex;\n  }\n\n  private getStepUrlFromActivatedRoute(\n    activatedRoute: ActivatedRoute\n  ): string | null {\n    return activatedRoute &&\n      activatedRoute.snapshot &&\n      activatedRoute.snapshot.url\n      ? `/${activatedRoute.snapshot.url.join('/')}`\n      : null;\n  }\n\n  private getStepUrlFromStepRoute(stepRoute: string): string | null {\n    return (\n      this.routingConfigService.getRouteConfig(stepRoute).paths?.[0] ?? null\n    );\n  }\n\n  private getCheckoutStepIndex(key: string, value: any): number | null {\n    return key && value\n      ? this.allSteps.findIndex((step: CheckoutStep) => {\n          const propertyVal = step[key as keyof CheckoutStep];\n          return propertyVal instanceof Array\n            ? propertyVal.includes(value)\n            : propertyVal === value;\n        })\n      : null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { CheckoutStepType } from '@spartacus/checkout/root';\nimport { ActiveCartService, RoutingConfigService } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { CheckoutConfigService } from '../services/checkout-config.service';\nimport { CheckoutStepService } from '../services/checkout-step.service';\nimport { ExpressCheckoutService } from '../services/express-checkout.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutGuard implements CanActivate {\n  private readonly firstStep$: Observable<UrlTree>;\n\n  constructor(\n    protected router: Router,\n    protected routingConfigService: RoutingConfigService,\n    protected checkoutConfigService: CheckoutConfigService,\n    protected expressCheckoutService: ExpressCheckoutService,\n    protected activeCartService: ActiveCartService,\n    protected checkoutStepService: CheckoutStepService\n  ) {\n    this.firstStep$ = of(\n      this.router.parseUrl(\n        this.routingConfigService.getRouteConfig(\n          this.checkoutStepService.getFirstCheckoutStepRoute()\n        ).paths?.[0] as string\n      )\n    );\n  }\n\n  canActivate(): Observable<boolean | UrlTree> {\n    if (\n      this.checkoutConfigService.isExpressCheckout() &&\n      !this.activeCartService.isGuestCart()\n    ) {\n      return this.expressCheckoutService.trySetDefaultCheckoutDetails().pipe(\n        switchMap((expressCheckoutPossible: boolean) => {\n          const reviewOrderRoute =\n            this.checkoutStepService.getCheckoutStepRoute(\n              CheckoutStepType.REVIEW_ORDER\n            );\n          return expressCheckoutPossible && reviewOrderRoute\n            ? of(\n                this.router.parseUrl(\n                  this.routingConfigService.getRouteConfig(reviewOrderRoute)\n                    .paths?.[0] as string\n                )\n              )\n            : this.firstStep$;\n        })\n      );\n    }\n    return this.firstStep$;\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'cx-checkout-orchestrator',\n  template: '',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrchestratorComponent {\n  constructor() {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CheckoutGuard } from '../../guards/checkout.guard';\nimport { CheckoutOrchestratorComponent } from './checkout-orchestrator.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrchestrator: {\n          component: CheckoutOrchestratorComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutOrchestratorComponent],\n  exports: [CheckoutOrchestratorComponent],\n})\nexport class CheckoutOrchestratorModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActiveCartService, Cart } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n@Component({\n  selector: 'cx-checkout-order-summary',\n  templateUrl: './checkout-order-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutOrderSummaryComponent {\n  cart$: Observable<Cart>;\n\n  constructor(protected activeCartService: ActiveCartService) {\n    this.cart$ = this.activeCartService.getActive();\n  }\n}\n","<cx-order-summary [cart]=\"cart$ | async\"></cx-order-summary>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CartSharedModule } from '@spartacus/storefront';\nimport { CheckoutOrderSummaryComponent } from './checkout-order-summary.component';\n\n@NgModule({\n  imports: [CommonModule, CartSharedModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutOrderSummary: {\n          component: CheckoutOrderSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutOrderSummaryComponent],\n  exports: [CheckoutOrderSummaryComponent],\n})\nexport class CheckoutOrderSummaryModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport {\n  CheckoutCostCenterFacade,\n  CheckoutStep,\n  CheckoutStepType,\n  PaymentTypeFacade,\n} from '@spartacus/checkout/root';\nimport { RoutingConfigService } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { CheckoutDetailsService } from '../services/checkout-details.service';\nimport { CheckoutStepService } from '../services/checkout-step.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutStepsSetGuard implements CanActivate {\n  constructor(\n    protected paymentTypeService: PaymentTypeFacade,\n    protected checkoutStepService: CheckoutStepService,\n    protected checkoutDetailsService: CheckoutDetailsService,\n    protected routingConfigService: RoutingConfigService,\n    protected checkoutCostCenterService: CheckoutCostCenterFacade,\n    protected router: Router\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    _: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    let currentIndex = -1;\n    const currentRouteUrl = '/' + route.url.join('/');\n\n    // check whether the previous step is set\n    return combineLatest([\n      this.checkoutStepService.steps$,\n      this.paymentTypeService.isAccountPayment(),\n    ]).pipe(\n      tap(([, isAccount]) => {\n        this.checkoutStepService.disableEnableStep(\n          CheckoutStepType.PAYMENT_DETAILS,\n          isAccount\n        );\n      }),\n      take(1),\n      switchMap(([steps, isAccount]) => {\n        currentIndex = steps.findIndex((step) => {\n          const stepRouteUrl = `/${\n            this.routingConfigService.getRouteConfig(step.routeName).paths?.[0]\n          }`;\n          return stepRouteUrl === currentRouteUrl;\n        });\n        // get current step\n        let currentStep;\n        if (currentIndex >= 0) {\n          currentStep = steps[currentIndex];\n        }\n        if (Boolean(currentStep)) {\n          return this.isStepSet(steps[currentIndex - 1], isAccount);\n        } else {\n          if (isDevMode()) {\n            console.warn(\n              `Missing step with route '${currentRouteUrl}' in checkout configuration or this step is disabled.`\n            );\n          }\n          return of(this.getUrl('checkout'));\n        }\n      })\n    );\n  }\n\n  protected isStepSet(\n    step: CheckoutStep,\n    isAccountPayment: boolean\n  ): Observable<boolean | UrlTree> {\n    if (step && !step.disabled) {\n      switch (step.type[0]) {\n        case CheckoutStepType.PAYMENT_TYPE: {\n          return this.isPaymentTypeSet(step);\n        }\n        case CheckoutStepType.SHIPPING_ADDRESS: {\n          return this.isShippingAddressAndCostCenterSet(step, isAccountPayment);\n        }\n        case CheckoutStepType.DELIVERY_MODE: {\n          return this.isDeliveryModeSet(step);\n        }\n        case CheckoutStepType.PAYMENT_DETAILS: {\n          return this.isPaymentDetailsSet(step);\n        }\n        case CheckoutStepType.REVIEW_ORDER: {\n          break;\n        }\n      }\n    }\n    return of(true);\n  }\n\n  protected isPaymentTypeSet(\n    step: CheckoutStep\n  ): Observable<boolean | UrlTree> {\n    return this.paymentTypeService.getSelectedPaymentType().pipe(\n      map((paymentType) => {\n        if (Boolean(paymentType)) {\n          return true;\n        } else {\n          return this.getUrl(step.routeName);\n        }\n      })\n    );\n  }\n\n  protected isShippingAddressAndCostCenterSet(\n    step: CheckoutStep,\n    isAccountPayment: boolean\n  ): Observable<boolean | UrlTree> {\n    return combineLatest([\n      this.checkoutDetailsService.getDeliveryAddress(),\n      this.checkoutCostCenterService.getCostCenter(),\n    ]).pipe(\n      map(([deliveryAddress, costCenter]) => {\n        if (isAccountPayment) {\n          if (\n            deliveryAddress &&\n            Object.keys(deliveryAddress).length &&\n            Boolean(costCenter)\n          ) {\n            return true;\n          } else {\n            return this.getUrl(step.routeName);\n          }\n        } else {\n          if (\n            deliveryAddress &&\n            Object.keys(deliveryAddress).length &&\n            costCenter === undefined\n          ) {\n            return true;\n          } else {\n            return this.getUrl(step.routeName);\n          }\n        }\n      })\n    );\n  }\n\n  protected isDeliveryModeSet(\n    step: CheckoutStep\n  ): Observable<boolean | UrlTree> {\n    return this.checkoutDetailsService\n      .getSelectedDeliveryModeCode()\n      .pipe(\n        map((mode: string) =>\n          mode && mode.length ? true : this.getUrl(step.routeName)\n        )\n      );\n  }\n\n  protected isPaymentDetailsSet(\n    step: CheckoutStep\n  ): Observable<boolean | UrlTree> {\n    return this.checkoutDetailsService\n      .getPaymentDetails()\n      .pipe(\n        map((paymentDetails) =>\n          paymentDetails && Object.keys(paymentDetails).length !== 0\n            ? true\n            : this.getUrl(step.routeName)\n        )\n      );\n  }\n\n  private getUrl(routeName: string): UrlTree {\n    return this.router.parseUrl(\n      this.routingConfigService.getRouteConfig(routeName).paths?.[0] as string\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CheckoutStep } from '@spartacus/checkout/root';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutStepService } from '../../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-bottom',\n  templateUrl: './checkout-progress-mobile-bottom.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressMobileBottomComponent {\n  private _steps$: BehaviorSubject<CheckoutStep[]> =\n    this.checkoutStepService.steps$;\n\n  constructor(protected checkoutStepService: CheckoutStepService) {}\n\n  activeStepIndex: number;\n  activeStepIndex$: Observable<number> =\n    this.checkoutStepService.activeStepIndex$.pipe(\n      tap((index) => (this.activeStepIndex = index))\n    );\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this._steps$.asObservable();\n  }\n}\n","<div *ngIf=\"(activeStepIndex$ | async) !== undefined\">\n  <div class=\"cx-media\">\n    <div *ngFor=\"let step of steps$ | async; let i = index\">\n      <div class=\"cx-list-media\" *ngIf=\"i > activeStepIndex\">\n        <div>{{ i + 1 }}. {{ step.name | cxTranslate }}</div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\nimport { CheckoutStepsSetGuard } from '../../../guards/checkout-steps-set.guard';\nimport { CheckoutProgressMobileBottomComponent } from './checkout-progress-mobile-bottom.component';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileBottom: {\n          component: CheckoutProgressMobileBottomComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutStepsSetGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileBottomComponent],\n  exports: [CheckoutProgressMobileBottomComponent],\n})\nexport class CheckoutProgressMobileBottomModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { CheckoutStep } from '@spartacus/checkout/root';\nimport { ActiveCartService, Cart } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutStepService } from '../../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-checkout-progress-mobile-top',\n  templateUrl: './checkout-progress-mobile-top.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressMobileTopComponent implements OnInit {\n  private _steps$: BehaviorSubject<CheckoutStep[]> =\n    this.checkoutStepService.steps$;\n\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected checkoutStepService: CheckoutStepService\n  ) {}\n\n  cart$: Observable<Cart>;\n\n  activeStepIndex: number;\n  activeStepIndex$: Observable<number> =\n    this.checkoutStepService.activeStepIndex$.pipe(\n      tap((index) => (this.activeStepIndex = index))\n    );\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this._steps$.asObservable();\n  }\n\n  ngOnInit(): void {\n    this.cart$ = this.activeCartService.getActive();\n  }\n}\n","<div *ngIf=\"(activeStepIndex$ | async) !== undefined\">\n  <div *ngIf=\"cart$ | async as cart\">\n    <div class=\"cx-media\">\n      <div class=\"cx-list-media\" *ngIf=\"cart?.totalItems && cart?.subTotal\">\n        {{ 'cartItems.cartTotal' | cxTranslate: { count: cart.totalItems } }}:\n        {{ cart.subTotal.formattedValue }}\n      </div>\n      <div *ngFor=\"let step of steps$ | async; let i = index\">\n        <div class=\"cx-list-media\" *ngIf=\"i < activeStepIndex\">\n          <div>{{ i + 1 }}. {{ step.name | cxTranslate }}</div>\n          <button\n            class=\"btn btn-link\"\n            [routerLink]=\"{ cxRoute: step.routeName } | cxUrl\"\n          >\n            {{ 'common.edit' | cxTranslate }}\n          </button>\n        </div>\n        <div class=\"cx-list-media is-active\" *ngIf=\"i === activeStepIndex\">\n          <div>{{ i + 1 }}. {{ step.name | cxTranslate }}</div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../../guards/checkout-auth.guard';\nimport { CheckoutStepsSetGuard } from '../../../guards/checkout-steps-set.guard';\nimport { CheckoutProgressMobileTopComponent } from './checkout-progress-mobile-top.component';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgressMobileTop: {\n          component: CheckoutProgressMobileTopComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutStepsSetGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CheckoutProgressMobileTopComponent],\n  exports: [CheckoutProgressMobileTopComponent],\n})\nexport class CheckoutProgressMobileTopModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'cxMultiLine',\n})\nexport class MultiLinePipe implements PipeTransform {\n  transform(value: string): string {\n    const lastIndex = value.lastIndexOf(' ');\n\n    if (lastIndex === -1) return value;\n\n    return (\n      value.substring(0, lastIndex) +\n      '<br />' +\n      value.substring(lastIndex, value.length).trim()\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CheckoutStep } from '@spartacus/checkout/root';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-checkout-progress',\n  templateUrl: './checkout-progress.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckoutProgressComponent {\n  private _steps$: BehaviorSubject<CheckoutStep[]> =\n    this.checkoutStepService.steps$;\n\n  constructor(protected checkoutStepService: CheckoutStepService) {}\n\n  activeStepIndex: number;\n  activeStepIndex$: Observable<number> =\n    this.checkoutStepService.activeStepIndex$.pipe(\n      tap((index) => (this.activeStepIndex = index))\n    );\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this._steps$.asObservable();\n  }\n\n  getTabIndex(stepIndex: number): number {\n    return !this.isActive(stepIndex) && !this.isDisabled(stepIndex) ? 0 : -1;\n  }\n\n  isActive(index: number): boolean {\n    return index === this.activeStepIndex;\n  }\n\n  isDisabled(index: number): boolean {\n    return index > this.activeStepIndex;\n  }\n}\n","<section *ngIf=\"(activeStepIndex$ | async) !== undefined\">\n  <div class=\"cx-nav d-none d-lg-block d-xl-block\">\n    <ul class=\"cx-list\">\n      <ng-container *ngFor=\"let step of steps$ | async; let i = index\">\n        <li\n          class=\"cx-item\"\n          [class.active]=\"isActive(i)\"\n          [class.disabled]=\"isDisabled(i)\"\n        >\n          <a\n            [routerLink]=\"{ cxRoute: step.routeName } | cxUrl\"\n            class=\"cx-link\"\n            [class.active]=\"isActive(i)\"\n            [class.disabled]=\"isDisabled(i)\"\n            [tabindex]=\"getTabIndex(i)\"\n            [innerHTML]=\"step.name | cxTranslate | cxMultiLine\"\n          >\n          </a>\n        </li>\n      </ng-container>\n    </ul>\n  </div>\n</section>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CheckoutStepsSetGuard } from '../../guards/checkout-steps-set.guard';\nimport { CheckoutProgressComponent } from './checkout-progress.component';\nimport { MultiLinePipe } from './multiline-titles.pipe';\n\n@NgModule({\n  imports: [CommonModule, UrlModule, I18nModule, RouterModule],\n  declarations: [CheckoutProgressComponent, MultiLinePipe],\n  exports: [CheckoutProgressComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutProgress: {\n          component: CheckoutProgressComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CheckoutStepsSetGuard],\n        },\n      },\n    }),\n  ],\n})\nexport class CheckoutProgressModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CheckoutCostCenterFacade,\n  PaymentTypeFacade,\n} from '@spartacus/checkout/root';\nimport { CostCenter, UserCostCenterService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap, withLatestFrom } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cost-center',\n  templateUrl: 'cost-center.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CostCenterComponent {\n  costCenterId: string | undefined;\n\n  constructor(\n    protected userCostCenterService: UserCostCenterService,\n    protected checkoutCostCenterService: CheckoutCostCenterFacade,\n    protected paymentTypeService: PaymentTypeFacade\n  ) {}\n\n  get isAccountPayment$(): Observable<boolean> {\n    return this.paymentTypeService.isAccountPayment();\n  }\n\n  get costCenters$(): Observable<CostCenter[]> {\n    return this.userCostCenterService.getActiveCostCenters().pipe(\n      withLatestFrom(this.checkoutCostCenterService.getCostCenter()),\n      filter(([costCenters]) => Boolean(costCenters)),\n      tap(([costCenters, cartCostCenter]) => {\n        if (!Boolean(cartCostCenter)) {\n          this.setCostCenter(costCenters[0].code as string);\n        } else {\n          this.costCenterId = cartCostCenter;\n        }\n      }),\n      map(([costCenters]) => costCenters)\n    );\n  }\n\n  setCostCenter(selectCostCenter: string): void {\n    this.costCenterId = selectCostCenter;\n    this.checkoutCostCenterService.setCostCenter(this.costCenterId);\n  }\n}\n","<ng-container *ngIf=\"isAccountPayment$ | async\">\n  <div class=\"row\">\n    <div class=\"col-md-12 col-xl-10\">\n      <ng-container *ngIf=\"costCenters$ | async as costCenters\">\n        <div *ngIf=\"costCenters.length !== 0\">\n          <label>\n            <span class=\"label-content required\">{{\n              'checkoutPO.costCenter' | cxTranslate\n            }}</span>\n            <select (change)=\"setCostCenter($event.target.value)\">\n              <option\n                *ngFor=\"let costCenter of costCenters\"\n                value=\"{{ costCenter.code }}\"\n                [selected]=\"costCenterId === costCenter.code\"\n              >\n                {{ costCenter.name }}\n              </option>\n            </select>\n            <span class=\"label-content\">{{\n              'checkoutPO.availableLabel' | cxTranslate\n            }}</span>\n          </label>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { CostCenterComponent } from './cost-center.component';\nimport { CartValidationGuard } from '@spartacus/storefront';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutCostCenterComponent: {\n          component: CostCenterComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CartValidationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [CostCenterComponent],\n})\nexport class CostCenterModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute } from '@angular/router';\nimport { CheckoutDeliveryFacade } from '@spartacus/checkout/root';\nimport { DeliveryMode } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  takeWhile,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { CheckoutConfigService } from '../../services/checkout-config.service';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-delivery-mode',\n  templateUrl: './delivery-mode.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class DeliveryModeComponent implements OnInit, OnDestroy {\n  supportedDeliveryModes$: Observable<DeliveryMode[]>;\n  selectedDeliveryMode$: Observable<DeliveryMode>;\n  continueButtonPressed = false;\n\n  backBtnText = this.checkoutStepService.getBackBntText(this.activatedRoute);\n\n  deliveryModeSub: Subscription;\n\n  mode: FormGroup = this.fb.group({\n    deliveryModeId: ['', Validators.required],\n  });\n\n  constructor(\n    private fb: FormBuilder,\n    private checkoutDeliveryService: CheckoutDeliveryFacade,\n    private checkoutConfigService: CheckoutConfigService,\n    private activatedRoute: ActivatedRoute,\n    protected checkoutStepService: CheckoutStepService\n  ) {}\n\n  ngOnInit() {\n    this.supportedDeliveryModes$ = this.checkoutDeliveryService\n      .getSupportedDeliveryModes()\n      .pipe(\n        filter((deliveryModes: DeliveryMode[]) => !!deliveryModes?.length),\n        distinctUntilChanged(\n          (current: DeliveryMode[], previous: DeliveryMode[]) => {\n            return JSON.stringify(current) === JSON.stringify(previous);\n          }\n        )\n      );\n\n    // Reload delivery modes on error\n    this.checkoutDeliveryService\n      .getLoadSupportedDeliveryModeProcess()\n      .pipe(takeWhile((state) => state?.success === false))\n      .subscribe((state) => {\n        if (state.error && !state.loading) {\n          this.checkoutDeliveryService.loadSupportedDeliveryModes();\n        }\n      });\n\n    this.deliveryModeSub = this.supportedDeliveryModes$\n      .pipe(\n        withLatestFrom(\n          this.checkoutDeliveryService\n            .getSelectedDeliveryMode()\n            .pipe(\n              map(\n                (deliveryMode: DeliveryMode | null | undefined) =>\n                  deliveryMode?.code\n              )\n            )\n        )\n      )\n      .subscribe(\n        ([deliveryModes, code]: [DeliveryMode[], string | undefined]) => {\n          if (\n            !(\n              code &&\n              !!deliveryModes.find((deliveryMode) => deliveryMode.code === code)\n            )\n          ) {\n            code =\n              this.checkoutConfigService.getPreferredDeliveryMode(\n                deliveryModes\n              );\n          }\n          if (code) {\n            this.mode.controls['deliveryModeId'].setValue(code);\n            this.checkoutDeliveryService.setDeliveryMode(code);\n          }\n        }\n      );\n  }\n\n  changeMode(code: string): void {\n    this.checkoutDeliveryService.setDeliveryMode(code);\n  }\n\n  next(): void {\n    if (this.mode.valid && this.mode.value) {\n      this.continueButtonPressed = true;\n      this.checkoutStepService.next(this.activatedRoute);\n    }\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n\n  get deliveryModeInvalid(): boolean {\n    return this.mode.controls['deliveryModeId'].invalid;\n  }\n\n  ngOnDestroy(): void {\n    if (this.deliveryModeSub) {\n      this.deliveryModeSub.unsubscribe();\n    }\n  }\n}\n","<div [formGroup]=\"mode\">\n  <div class=\"row\">\n    <div class=\"col-md-12 col-lg-9\">\n      <h2 class=\"cx-checkout-title d-none d-lg-block d-xl-block\">\n        {{ 'checkoutShipping.shippingMethod' | cxTranslate }}\n      </h2>\n\n      <ng-container\n        *ngIf=\"(supportedDeliveryModes$ | async)?.length; else loading\"\n      >\n        <div\n          class=\"form-check\"\n          *ngFor=\"let mode of supportedDeliveryModes$ | async\"\n        >\n          <input\n            class=\"form-check-input\"\n            role=\"radio\"\n            type=\"radio\"\n            id=\"deliveryMode-{{ mode.code }}\"\n            aria-checked=\"true\"\n            (change)=\"changeMode(mode.code)\"\n            [value]=\"mode.code\"\n            formControlName=\"deliveryModeId\"\n          />\n          <label\n            class=\"cx-delivery-label form-check-label form-radio-label\"\n            for=\"deliveryMode-{{ mode.code }}\"\n          >\n            <div class=\"cx-delivery-mode\">{{ mode.name }}</div>\n            <div class=\"cx-delivery-price\">\n              {{ mode.deliveryCost.formattedValue }}\n            </div>\n            <div class=\"cx-delivery-details\">{{ mode.description }}</div>\n          </label>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n\n  <ng-container *ngIf=\"!continueButtonPressed; else loading\">\n    <div class=\"row cx-checkout-btns\">\n      <div class=\"col-md-12 col-lg-6\">\n        <button class=\"btn btn-block btn-action\" (click)=\"back()\">\n          {{ backBtnText | cxTranslate }}\n        </button>\n      </div>\n      <div class=\"col-md-12 col-lg-6\">\n        <button\n          class=\"btn btn-block btn-primary\"\n          [disabled]=\"deliveryModeInvalid\"\n          (click)=\"next()\"\n        >\n          {{ 'common.continue' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n  </ng-container>\n</div>\n\n<ng-template #loading>\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { SpinnerModule } from '@spartacus/storefront';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { DeliveryModeComponent } from './delivery-mode.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, I18nModule, SpinnerModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutDeliveryMode: {\n          component: DeliveryModeComponent,\n          // TODO(#8880): Shouldn't we keep ShippingAddressSetGuard here?\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [DeliveryModeComponent],\n  exports: [DeliveryModeComponent],\n})\nexport class DeliveryModeModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  CheckoutDeliveryFacade,\n  CheckoutPaymentFacade,\n} from '@spartacus/checkout/root';\nimport {\n  Address,\n  AddressValidation,\n  CardType,\n  Country,\n  GlobalMessageService,\n  GlobalMessageType,\n  Region,\n  StateUtils,\n  UserAddressService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport {\n  Card,\n  ICON_TYPE,\n  ModalRef,\n  ModalService,\n  SuggestedAddressDialogComponent,\n} from '@spartacus/storefront';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-payment-form',\n  templateUrl: './payment-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentFormComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  suggestedAddressModalRef: ModalRef | null;\n  months: string[] = [];\n  years: number[] = [];\n\n  cardTypes$: Observable<CardType[]>;\n  shippingAddress$: Observable<Address>;\n  countries$: Observable<Country[]>;\n  loading$: Observable<StateUtils.LoaderState<void>>;\n  sameAsShippingAddress = true;\n  regions$: Observable<Region[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  showSameAsShippingAddressCheckbox$: Observable<boolean>;\n\n  @Input()\n  setAsDefaultField: boolean;\n\n  @Input()\n  paymentMethodsCount: number;\n\n  @Output()\n  goBack = new EventEmitter<any>();\n\n  @Output()\n  closeForm = new EventEmitter<any>();\n\n  @Output()\n  setPaymentDetails = new EventEmitter<any>();\n\n  paymentForm: FormGroup = this.fb.group({\n    cardType: this.fb.group({\n      code: [null, Validators.required],\n    }),\n    accountHolderName: ['', Validators.required],\n    cardNumber: ['', Validators.required],\n    expiryMonth: [null, Validators.required],\n    expiryYear: [null, Validators.required],\n    cvn: ['', Validators.required],\n    defaultPayment: [false],\n  });\n\n  billingAddressForm: FormGroup = this.fb.group({\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocodeShort: [null, Validators.required],\n    }),\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n  });\n\n  constructor(\n    protected checkoutPaymentService: CheckoutPaymentFacade,\n    protected checkoutDeliveryService: CheckoutDeliveryFacade,\n    protected userPaymentService: UserPaymentService,\n    protected globalMessageService: GlobalMessageService,\n    protected fb: FormBuilder,\n    protected modalService: ModalService,\n    protected userAddressService: UserAddressService\n  ) {}\n\n  ngOnInit() {\n    this.expMonthAndYear();\n    this.countries$ = this.userPaymentService.getAllBillingCountries().pipe(\n      tap((countries) => {\n        // If the store is empty fetch countries. This is also used when changing language.\n        if (Object.keys(countries).length === 0) {\n          this.userPaymentService.loadBillingCountries();\n        }\n      })\n    );\n\n    this.cardTypes$ = this.checkoutPaymentService.getCardTypes().pipe(\n      tap((cardTypes) => {\n        if (Object.keys(cardTypes).length === 0) {\n          this.checkoutPaymentService.loadSupportedCardTypes();\n        }\n      })\n    );\n\n    this.shippingAddress$ = this.checkoutDeliveryService.getDeliveryAddress();\n    this.loading$ =\n      this.checkoutPaymentService.getSetPaymentDetailsResultProcess();\n\n    this.showSameAsShippingAddressCheckbox$ = combineLatest([\n      this.countries$,\n      this.shippingAddress$,\n    ]).pipe(\n      map(([countries, address]) => {\n        return (\n          (address?.country &&\n            !!countries.filter(\n              (country: Country): boolean =>\n                country.isocode === address.country?.isocode\n            ).length) ??\n          false\n        );\n      }),\n      tap((shouldShowCheckbox) => {\n        this.sameAsShippingAddress = shouldShowCheckbox;\n      })\n    );\n\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap((country) => this.userAddressService.getRegions(country)),\n      tap((regions) => {\n        const regionControl = this.billingAddressForm.get(\n          'region.isocodeShort'\n        );\n        if (regions.length > 0) {\n          regionControl?.enable();\n        } else {\n          regionControl?.disable();\n        }\n      })\n    );\n  }\n\n  expMonthAndYear(): void {\n    const year = new Date().getFullYear();\n\n    for (let i = 0; i < 10; i++) {\n      this.years.push(year + i);\n    }\n\n    for (let j = 1; j <= 12; j++) {\n      if (j < 10) {\n        this.months.push(`0${j}`);\n      } else {\n        this.months.push(j.toString());\n      }\n    }\n  }\n\n  toggleDefaultPaymentMethod(): void {\n    this.paymentForm.value.defaultPayment =\n      !this.paymentForm.value.defaultPayment;\n  }\n\n  toggleSameAsShippingAddress(): void {\n    this.sameAsShippingAddress = !this.sameAsShippingAddress;\n  }\n\n  getAddressCardContent(address: Address): Card {\n    let region = '';\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    return {\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country?.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n    } as Card;\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress =\n        this.billingAddressForm.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then(() => {\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  close(): void {\n    this.closeForm.emit();\n  }\n\n  back(): void {\n    this.goBack.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.sameAsShippingAddress) {\n      this.next();\n    } else {\n      this.userAddressService\n        .verifyAddress(this.billingAddressForm.value)\n        .subscribe((result) => {\n          this.handleAddressVerificationResults(result);\n        });\n    }\n  }\n\n  protected handleAddressVerificationResults(results: AddressValidation) {\n    if (results.decision === 'ACCEPT') {\n      this.next();\n    } else if (results.decision === 'REJECT') {\n      this.globalMessageService.add(\n        { key: 'addressForm.invalidAddress' },\n        GlobalMessageType.MSG_TYPE_ERROR\n      );\n    } else if (results.decision === 'REVIEW') {\n      this.openSuggestedAddress(results);\n    }\n  }\n\n  countrySelected(country: Country): void {\n    this.billingAddressForm.get('country.isocode')?.setValue(country.isocode);\n    this.selectedCountry$.next(country.isocode as string);\n  }\n\n  next(): void {\n    if (this.paymentForm.valid) {\n      if (this.sameAsShippingAddress) {\n        this.setPaymentDetails.emit({\n          paymentDetails: this.paymentForm.value,\n          billingAddress: null,\n        });\n      } else {\n        if (this.billingAddressForm.valid) {\n          this.setPaymentDetails.emit({\n            paymentDetails: this.paymentForm.value,\n            billingAddress: this.billingAddressForm.value,\n          });\n        } else {\n          this.billingAddressForm.markAllAsTouched();\n        }\n      }\n    } else {\n      this.paymentForm.markAllAsTouched();\n\n      if (!this.sameAsShippingAddress) {\n        this.billingAddressForm.markAllAsTouched();\n      }\n    }\n  }\n}\n","<!-- FORM -->\n<ng-container *ngIf=\"!(loading$ | async)?.loading; else spinner\">\n  <form (ngSubmit)=\"next()\" [formGroup]=\"paymentForm\">\n    <div class=\"row\">\n      <div class=\"col-md-12 col-xl-10\">\n        <div class=\"form-group\" formGroupName=\"cardType\">\n          <ng-container *ngIf=\"cardTypes$ | async as cardTypes\">\n            <div *ngIf=\"cardTypes.length !== 0\">\n              <label>\n                <span class=\"label-content required\">{{\n                  'paymentForm.paymentType' | cxTranslate\n                }}</span>\n                <ng-select\n                  aria-required=\"true\"\n                  [searchable]=\"true\"\n                  [clearable]=\"false\"\n                  [items]=\"cardTypes\"\n                  bindLabel=\"name\"\n                  bindValue=\"code\"\n                  placeholder=\"{{ 'paymentForm.selectOne' | cxTranslate }}\"\n                  formControlName=\"code\"\n                >\n                </ng-select>\n                <cx-form-errors\n                  aria-live=\"assertive\"\n                  aria-atomic=\"true\"\n                  [control]=\"paymentForm.get('cardType.code')\"\n                ></cx-form-errors>\n              </label>\n            </div>\n          </ng-container>\n        </div>\n\n        <div class=\"form-group\">\n          <label>\n            <span class=\"label-content\">{{\n              'paymentForm.accountHolderName.label' | cxTranslate\n            }}</span>\n            <input\n              aria-required=\"true\"\n              class=\"form-control\"\n              type=\"text\"\n              placeholder=\"{{\n                'paymentForm.accountHolderName.placeholder' | cxTranslate\n              }}\"\n              formControlName=\"accountHolderName\"\n            />\n            <cx-form-errors\n              aria-live=\"assertive\"\n              aria-atomic=\"true\"\n              [control]=\"paymentForm.get('accountHolderName')\"\n            ></cx-form-errors>\n          </label>\n        </div>\n\n        <div class=\"form-group\">\n          <label>\n            <span class=\"label-content\">{{\n              'paymentForm.cardNumber' | cxTranslate\n            }}</span>\n            <input\n              aria-required=\"true\"\n              type=\"text\"\n              class=\"form-control\"\n              formControlName=\"cardNumber\"\n            />\n            <cx-form-errors\n              aria-live=\"assertive\"\n              aria-atomic=\"true\"\n              [control]=\"paymentForm.get('cardNumber')\"\n            ></cx-form-errors>\n          </label>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"form-group col-md-8\">\n            <fieldset class=\"cx-payment-form-exp-date\">\n              <legend class=\"label-content\">\n                {{ 'paymentForm.expirationDate' | cxTranslate }}\n              </legend>\n              <label class=\"cx-payment-form-exp-date-wrapper\">\n                <ng-select\n                  aria-required=\"true\"\n                  [searchable]=\"true\"\n                  [clearable]=\"false\"\n                  [items]=\"months\"\n                  placeholder=\"{{ 'paymentForm.monthMask' | cxTranslate }}\"\n                  formControlName=\"expiryMonth\"\n                  [attr.aria-label]=\"\n                    'paymentForm.expirationMonth'\n                      | cxTranslate\n                        : { selected: paymentForm.get('expiryMonth')?.value }\n                  \"\n                >\n                </ng-select>\n                <cx-form-errors\n                  aria-live=\"assertive\"\n                  aria-atomic=\"true\"\n                  [control]=\"paymentForm.get('expiryMonth')\"\n                ></cx-form-errors>\n              </label>\n              <label class=\"cx-payment-form-exp-date-wrapper\">\n                <ng-select\n                  aria-required=\"true\"\n                  [searchable]=\"true\"\n                  [clearable]=\"false\"\n                  [items]=\"years\"\n                  placeholder=\"{{ 'paymentForm.yearMask' | cxTranslate }}\"\n                  [attr.aria-label]=\"\n                    'paymentForm.expirationYear'\n                      | cxTranslate\n                        : { selected: paymentForm.get('expiryYear')?.value }\n                  \"\n                  formControlName=\"expiryYear\"\n                >\n                </ng-select>\n                <cx-form-errors\n                  aria-live=\"assertive\"\n                  aria-atomic=\"true\"\n                  [control]=\"paymentForm.get('expiryYear')\"\n                ></cx-form-errors>\n              </label>\n            </fieldset>\n          </div>\n\n          <div class=\"form-group col-md-4\">\n            <label>\n              <span class=\"label-content\">\n                {{ 'paymentForm.securityCode' | cxTranslate }}\n                <cx-icon\n                  [type]=\"iconTypes.INFO\"\n                  class=\"cx-payment-form-tooltip\"\n                  placement=\"right\"\n                  title=\"{{ 'paymentForm.securityCodeTitle' | cxTranslate }}\"\n                  alt=\"\"\n                ></cx-icon>\n              </span>\n              <input\n                aria-required=\"true\"\n                type=\"text\"\n                class=\"form-control\"\n                id=\"cVVNumber\"\n                formControlName=\"cvn\"\n              />\n              <cx-form-errors\n                aria-live=\"assertive\"\n                aria-atomic=\"true\"\n                [control]=\"paymentForm.get('cvn')\"\n              ></cx-form-errors>\n            </label>\n          </div>\n        </div>\n\n        <div class=\"form-group\" *ngIf=\"setAsDefaultField\">\n          <div class=\"form-check\">\n            <label>\n              <input\n                type=\"checkbox\"\n                class=\"form-check-input\"\n                (change)=\"toggleDefaultPaymentMethod()\"\n              />\n              <span class=\"form-check-label\">{{\n                'paymentForm.setAsDefault' | cxTranslate\n              }}</span>\n            </label>\n          </div>\n        </div>\n\n        <!-- BILLING -->\n        <div class=\"cx-payment-form-billing\">\n          <div class=\"cx-payment-form-billing-address\">\n            {{ 'paymentForm.billingAddress' | cxTranslate }}\n          </div>\n\n          <!-- SAME AS SHIPPING CHECKBOX -->\n          <ng-container *ngIf=\"showSameAsShippingAddressCheckbox$ | async\">\n            <div class=\"form-group\">\n              <div class=\"form-check\">\n                <label>\n                  <input\n                    type=\"checkbox\"\n                    class=\"form-check-input\"\n                    [checked]=\"sameAsShippingAddress\"\n                    (change)=\"toggleSameAsShippingAddress()\"\n                  />\n                  <span class=\"form-check-label\">{{\n                    'paymentForm.sameAsShippingAddress' | cxTranslate\n                  }}</span>\n                </label>\n              </div>\n            </div>\n          </ng-container>\n\n          <!-- BILLING INFO COMPONENT -->\n          <ng-container\n            *ngIf=\"\n              sameAsShippingAddress &&\n                (shippingAddress$ | async) as shippingAddress;\n              else billingAddress\n            \"\n          >\n            <cx-card\n              [content]=\"getAddressCardContent(shippingAddress)\"\n            ></cx-card>\n          </ng-container>\n\n          <ng-template #billingAddress>\n            <div [formGroup]=\"billingAddressForm\">\n              <div class=\"form-group\" formGroupName=\"country\">\n                <ng-container *ngIf=\"countries$ | async as countries\">\n                  <div *ngIf=\"countries.length !== 0\">\n                    <label aria-required=\"true\">\n                      <span class=\"label-content required\">{{\n                        'addressForm.country' | cxTranslate\n                      }}</span>\n                      <ng-select\n                        aria-required=\"true\"\n                        [searchable]=\"true\"\n                        [clearable]=\"false\"\n                        [items]=\"countries\"\n                        bindLabel=\"name\"\n                        bindValue=\"isocode\"\n                        placeholder=\"{{\n                          'addressForm.selectOne' | cxTranslate\n                        }}\"\n                        (change)=\"countrySelected($event)\"\n                        formControlName=\"isocode\"\n                      >\n                      </ng-select>\n                      <cx-form-errors\n                        aria-live=\"assertive\"\n                        aria-atomic=\"true\"\n                        [control]=\"billingAddressForm.get('country.isocode')\"\n                      ></cx-form-errors>\n                    </label>\n                  </div>\n                </ng-container>\n              </div>\n              <div class=\"form-group\">\n                <label>\n                  <span class=\"label-content required\">{{\n                    'addressForm.firstName.label' | cxTranslate\n                  }}</span>\n                  <input\n                    aria-required=\"true\"\n                    class=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"{{\n                      'addressForm.firstName.placeholder' | cxTranslate\n                    }}\"\n                    formControlName=\"firstName\"\n                  />\n                  <cx-form-errors\n                    aria-live=\"assertive\"\n                    aria-atomic=\"true\"\n                    [control]=\"billingAddressForm.get('firstName')\"\n                  ></cx-form-errors>\n                </label>\n              </div>\n              <div class=\"form-group\">\n                <label>\n                  <span class=\"label-content required\">{{\n                    'addressForm.lastName.label' | cxTranslate\n                  }}</span>\n                  <input\n                    aria-required=\"true\"\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{\n                      'addressForm.lastName.placeholder' | cxTranslate\n                    }}\"\n                    formControlName=\"lastName\"\n                  />\n                  <cx-form-errors\n                    aria-live=\"assertive\"\n                    aria-atomic=\"true\"\n                    [control]=\"billingAddressForm.get('lastName')\"\n                  ></cx-form-errors>\n                </label>\n              </div>\n              <div class=\"form-group\">\n                <label>\n                  <span class=\"label-content required\">{{\n                    'addressForm.address1' | cxTranslate\n                  }}</span>\n                  <input\n                    aria-required=\"true\"\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{\n                      'addressForm.streetAddress' | cxTranslate\n                    }}\"\n                    formControlName=\"line1\"\n                  />\n                  <cx-form-errors\n                    aria-live=\"assertive\"\n                    aria-atomic=\"true\"\n                    [control]=\"billingAddressForm.get('line1')\"\n                  ></cx-form-errors>\n                </label>\n              </div>\n              <div class=\"form-group\">\n                <label>\n                  <span class=\"label-content\">{{\n                    'addressForm.address2' | cxTranslate\n                  }}</span>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"{{ 'addressForm.aptSuite' | cxTranslate }}\"\n                    formControlName=\"line2\"\n                  />\n                </label>\n              </div>\n              <div class=\"row\">\n                <div class=\"form-group col-md-6\">\n                  <label>\n                    <span class=\"label-content required\">{{\n                      'addressForm.city.label' | cxTranslate\n                    }}</span>\n                    <input\n                      aria-required=\"true\"\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"{{\n                        'addressForm.city.placeholder' | cxTranslate\n                      }}\"\n                      formControlName=\"town\"\n                    />\n                    <cx-form-errors\n                      aria-live=\"assertive\"\n                      aria-atomic=\"true\"\n                      [control]=\"billingAddressForm.get('town')\"\n                    ></cx-form-errors>\n                  </label>\n                </div>\n                <div class=\"form-group col-md-6\">\n                  <label>\n                    <span class=\"label-content required\">{{\n                      'addressForm.zipCode.label' | cxTranslate\n                    }}</span>\n                    <input\n                      aria-required=\"true\"\n                      type=\"text\"\n                      class=\"form-control\"\n                      placeholder=\"{{\n                        'addressForm.zipCode.placeholder' | cxTranslate\n                      }}\"\n                      formControlName=\"postalCode\"\n                    />\n                    <cx-form-errors\n                      aria-live=\"assertive\"\n                      aria-atomic=\"true\"\n                      [control]=\"billingAddressForm.get('postalCode')\"\n                    ></cx-form-errors>\n                  </label>\n                </div>\n                <ng-container\n                  *ngIf=\"regions$ | async as regions\"\n                  formGroupName=\"region\"\n                >\n                  <ng-container *ngIf=\"regions.length !== 0\">\n                    <div class=\"form-group col-md-6\">\n                      <label aria-required=\"true\">\n                        <span class=\"label-content required\">{{\n                          'addressForm.state' | cxTranslate\n                        }}</span>\n                        <ng-select\n                          aria-required=\"true\"\n                          class=\"region-select\"\n                          formControlName=\"isocodeShort\"\n                          [searchable]=\"true\"\n                          [clearable]=\"false\"\n                          [items]=\"regions\"\n                          bindLabel=\"{{\n                            regions[0].name ? 'name' : 'isocodeShort'\n                          }}\"\n                          bindValue=\"{{\n                            regions[0].name ? 'isocodeShort' : 'region'\n                          }}\"\n                          placeholder=\"{{\n                            'addressForm.selectOne' | cxTranslate\n                          }}\"\n                        >\n                        </ng-select>\n                        <cx-form-errors\n                          aria-live=\"assertive\"\n                          aria-atomic=\"true\"\n                          [control]=\"\n                            billingAddressForm.get('region.isocodeShort')\n                          \"\n                        ></cx-form-errors>\n                      </label>\n                    </div>\n                  </ng-container>\n                </ng-container>\n              </div>\n            </div>\n          </ng-template>\n        </div>\n      </div>\n    </div>\n\n    <!-- BUTTON SECTION -->\n    <div class=\"cx-checkout-btns row\">\n      <div class=\"col-md-12 col-lg-6\">\n        <button\n          *ngIf=\"paymentMethodsCount === 0\"\n          class=\"btn btn-block btn-action\"\n          (click)=\"back()\"\n        >\n          {{ 'common.back' | cxTranslate }}\n        </button>\n        <button\n          *ngIf=\"paymentMethodsCount > 0\"\n          class=\"btn btn-block btn-action\"\n          (click)=\"close()\"\n        >\n          {{ 'paymentForm.changePayment' | cxTranslate }}\n        </button>\n      </div>\n      <div class=\"col-md-12 col-lg-6\">\n        <button class=\"btn btn-block btn-primary\" type=\"submit\">\n          {{ 'common.continue' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n  </form>\n</ng-container>\n\n<ng-template #spinner>\n  <cx-spinner></cx-spinner>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport {\n  CardModule,\n  FormErrorsModule,\n  IconModule,\n  SpinnerModule,\n} from '@spartacus/storefront';\nimport { PaymentFormComponent } from './payment-form.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    CardModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    FormErrorsModule,\n  ],\n  declarations: [PaymentFormComponent],\n  exports: [PaymentFormComponent],\n})\nexport class PaymentFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  CheckoutDeliveryFacade,\n  CheckoutFacade,\n  CheckoutPaymentFacade,\n} from '@spartacus/checkout/root';\nimport {\n  ActiveCartService,\n  Address,\n  GlobalMessageService,\n  GlobalMessageType,\n  PaymentDetails,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { Card, ICON_TYPE } from '@spartacus/storefront';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-payment-method',\n  templateUrl: './payment-method.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentMethodComponent implements OnInit, OnDestroy {\n  iconTypes = ICON_TYPE;\n  existingPaymentMethods$: Observable<PaymentDetails[]>;\n  isLoading$: Observable<boolean>;\n  cards$: Observable<{ content: Card; paymentMethod: PaymentDetails }[]>;\n  selectedMethod$: Observable<PaymentDetails>;\n  isGuestCheckout = false;\n  newPaymentFormManuallyOpened = false;\n\n  backBtnText = this.checkoutStepService.getBackBntText(this.activatedRoute);\n\n  protected shouldRedirect: boolean;\n  protected deliveryAddress: Address;\n\n  constructor(\n    protected userPaymentService: UserPaymentService,\n    protected checkoutService: CheckoutFacade,\n    protected checkoutDeliveryService: CheckoutDeliveryFacade,\n    protected checkoutPaymentService: CheckoutPaymentFacade,\n    protected globalMessageService: GlobalMessageService,\n    protected activatedRoute: ActivatedRoute,\n    protected translation: TranslationService,\n    protected activeCartService: ActiveCartService,\n    protected checkoutStepService: CheckoutStepService\n  ) {}\n\n  ngOnInit() {\n    this.shouldRedirect = false;\n    this.isLoading$ = this.userPaymentService.getPaymentMethodsLoading();\n\n    if (!this.activeCartService.isGuestCart()) {\n      this.userPaymentService.loadPaymentMethods();\n    } else {\n      this.isGuestCheckout = true;\n    }\n\n    this.checkoutDeliveryService\n      .getDeliveryAddress()\n      .pipe(take(1))\n      .subscribe((address: Address) => {\n        this.deliveryAddress = address;\n      });\n\n    this.existingPaymentMethods$ = this.userPaymentService.getPaymentMethods();\n\n    this.selectedMethod$ = this.checkoutPaymentService.getPaymentDetails().pipe(\n      tap((paymentInfo: any) => {\n        if (paymentInfo && !!Object.keys(paymentInfo).length) {\n          if (paymentInfo['hasError']) {\n            Object.keys(paymentInfo).forEach((key) => {\n              if (key.startsWith('InvalidField')) {\n                this.sendPaymentMethodFailGlobalMessage(paymentInfo[key]);\n              }\n            });\n            this.checkoutService.clearCheckoutStep(3);\n          } else if (this.shouldRedirect) {\n            this.next();\n          }\n        }\n      })\n    );\n\n    this.cards$ = combineLatest([\n      this.existingPaymentMethods$.pipe(\n        switchMap((methods) => {\n          return !methods?.length\n            ? of([])\n            : combineLatest(\n                methods.map((method) =>\n                  combineLatest([\n                    of(method),\n                    this.translation.translate('paymentCard.expires', {\n                      month: method.expiryMonth,\n                      year: method.expiryYear,\n                    }),\n                  ]).pipe(\n                    map(([payment, translation]) => ({\n                      payment,\n                      expiryTranslation: translation,\n                    }))\n                  )\n                )\n              );\n        })\n      ),\n      this.selectedMethod$,\n      this.translation.translate('paymentForm.useThisPayment'),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n      this.translation.translate('paymentCard.selected'),\n    ]).pipe(\n      map(\n        ([\n          paymentMethods,\n          selectedMethod,\n          textUseThisPayment,\n          textDefaultPaymentMethod,\n          textSelected,\n        ]) => {\n          if (\n            paymentMethods.length &&\n            (!selectedMethod || Object.keys(selectedMethod).length === 0)\n          ) {\n            const defaultPaymentMethod = paymentMethods.find(\n              (paymentMethod) => paymentMethod.payment.defaultPayment\n            );\n            if (defaultPaymentMethod) {\n              selectedMethod = defaultPaymentMethod.payment;\n              this.checkoutPaymentService.setPaymentDetails(selectedMethod);\n            }\n          }\n          return paymentMethods.map((payment) => ({\n            content: this.createCard(\n              payment.payment,\n              {\n                textExpires: payment.expiryTranslation,\n                textUseThisPayment,\n                textDefaultPaymentMethod,\n                textSelected,\n              },\n              selectedMethod\n            ),\n            paymentMethod: payment.payment,\n          }));\n        }\n      )\n    );\n  }\n\n  selectPaymentMethod(paymentDetails: PaymentDetails): void {\n    this.checkoutPaymentService.setPaymentDetails(paymentDetails);\n  }\n\n  showNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = true;\n  }\n\n  hideNewPaymentForm(): void {\n    this.newPaymentFormManuallyOpened = false;\n  }\n\n  setPaymentDetails({\n    paymentDetails,\n    billingAddress,\n  }: {\n    paymentDetails: PaymentDetails;\n    billingAddress?: Address;\n  }): void {\n    const details: PaymentDetails = { ...paymentDetails };\n    details.billingAddress = billingAddress || this.deliveryAddress;\n    this.checkoutPaymentService.createPaymentDetails(details);\n    this.shouldRedirect = true;\n  }\n\n  ngOnDestroy(): void {\n    this.checkoutPaymentService.paymentProcessSuccess();\n  }\n\n  protected getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n\n  protected sendPaymentMethodFailGlobalMessage(field: string) {\n    this.globalMessageService.add(\n      {\n        key: 'paymentMethods.invalidField',\n        params: { field },\n      },\n      GlobalMessageType.MSG_TYPE_ERROR\n    );\n  }\n\n  protected createCard(\n    paymentDetails: PaymentDetails,\n    cardLabels: {\n      textDefaultPaymentMethod: string;\n      textExpires: string;\n      textUseThisPayment: string;\n      textSelected: string;\n    },\n    selected: PaymentDetails\n  ): Card {\n    return {\n      title: paymentDetails.defaultPayment\n        ? cardLabels.textDefaultPaymentMethod\n        : '',\n      textBold: paymentDetails.accountHolderName,\n      text: [paymentDetails.cardNumber ?? '', cardLabels.textExpires],\n      img: this.getCardIcon(paymentDetails.cardType?.code as string),\n      actions: [{ name: cardLabels.textUseThisPayment, event: 'send' }],\n      header:\n        selected?.id === paymentDetails.id\n          ? cardLabels.textSelected\n          : undefined,\n    };\n  }\n\n  next(): void {\n    this.checkoutStepService.next(this.activatedRoute);\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n}\n","<ng-container *ngIf=\"cards$ | async as cards\">\n  <h2 class=\"cx-checkout-title d-none d-lg-block d-xl-block\">\n    {{ 'paymentForm.payment' | cxTranslate }}\n  </h2>\n  <ng-container *ngIf=\"!(isLoading$ | async); else loading\">\n    <ng-container\n      *ngIf=\"\n        cards?.length && !newPaymentFormManuallyOpened;\n        else newPaymentForm\n      \"\n    >\n      <p class=\"cx-checkout-text\">\n        {{ 'paymentForm.choosePaymentMethod' | cxTranslate }}\n      </p>\n      <div class=\"cx-checkout-btns row\">\n        <div class=\"col-md-12 col-lg-6\">\n          <button\n            class=\"btn btn-block btn-action\"\n            (click)=\"showNewPaymentForm()\"\n          >\n            {{ 'paymentForm.addNewPayment' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n\n      <div class=\"cx-checkout-body row\">\n        <div\n          class=\"cx-payment-card col-md-12 col-lg-6\"\n          *ngFor=\"let card of cards; let i = index\"\n        >\n          <div class=\"cx-payment-card-inner\">\n            <cx-card\n              [border]=\"true\"\n              [fitToContainer]=\"true\"\n              [content]=\"card.content\"\n              (sendCard)=\"selectPaymentMethod(card.paymentMethod)\"\n            ></cx-card>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"row cx-checkout-btns\">\n        <div class=\"col-md-12 col-lg-6\">\n          <button class=\"btn btn-block btn-action\" (click)=\"back()\">\n            {{ backBtnText | cxTranslate }}\n          </button>\n        </div>\n        <div class=\"col-md-12 col-lg-6\">\n          <button\n            class=\"btn btn-block btn-primary\"\n            [disabled]=\"!(selectedMethod$ | async)?.id\"\n            (click)=\"next()\"\n          >\n            {{ 'common.continue' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-template #newPaymentForm>\n      <cx-payment-form\n        (setPaymentDetails)=\"setPaymentDetails($event)\"\n        (closeForm)=\"hideNewPaymentForm()\"\n        (goBack)=\"back()\"\n        [paymentMethodsCount]=\"cards?.length || 0\"\n        [setAsDefaultField]=\"!isGuestCheckout\"\n      ></cx-payment-form>\n    </ng-template>\n  </ng-container>\n\n  <ng-template #loading>\n    <div class=\"cx-spinner\"><cx-spinner></cx-spinner></div>\n  </ng-template>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { CardModule, SpinnerModule } from '@spartacus/storefront';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { PaymentFormModule } from './payment-form/payment-form.module';\nimport { PaymentMethodComponent } from './payment-method.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    PaymentFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPaymentDetails: {\n          component: PaymentMethodComponent,\n          // TODO(#8880): Shouldn't we keep ShippingAddressSetGuard and others here?\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PaymentMethodComponent],\n  exports: [PaymentMethodComponent],\n})\nexport class PaymentMethodModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  ViewChild,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { CheckoutStepType, PaymentTypeFacade } from '@spartacus/checkout/root';\nimport {\n  B2BPaymentTypeEnum,\n  isNotUndefined,\n  PaymentType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, tap } from 'rxjs/operators';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\n@Component({\n  selector: 'cx-payment-type',\n  templateUrl: './payment-type.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentTypeComponent {\n  @ViewChild('poNumber', { static: false })\n  private _poNumberInput: ElementRef;\n\n  typeSelected: string;\n  cartPoNumber: string;\n\n  paymentTypes$: Observable<PaymentType[]> =\n    this.paymentTypeService.getPaymentTypes();\n\n  typeSelected$: Observable<string> = this.paymentTypeService\n    .getSelectedPaymentType()\n    .pipe(\n      filter(isNotUndefined),\n      distinctUntilChanged(),\n      tap((selected) => {\n        this.typeSelected = selected;\n        this.checkoutStepService.resetSteps();\n        this.checkoutStepService.disableEnableStep(\n          CheckoutStepType.PAYMENT_DETAILS,\n          selected === B2BPaymentTypeEnum.ACCOUNT_PAYMENT\n        );\n      })\n    );\n\n  cartPoNumber$: Observable<string> = this.paymentTypeService\n    .getPoNumber()\n    .pipe(\n      filter(isNotUndefined),\n      tap((po) => {\n        return (this.cartPoNumber = po);\n      })\n    );\n\n  constructor(\n    protected paymentTypeService: PaymentTypeFacade,\n    protected checkoutStepService: CheckoutStepService,\n    protected activatedRoute: ActivatedRoute\n  ) {}\n\n  changeType(code: string): void {\n    this.paymentTypeService.setPaymentType(code);\n    this.typeSelected = code;\n  }\n\n  next(): void {\n    // set po number to cart\n    const poNumInput = this._poNumberInput.nativeElement.value;\n    if (this.typeSelected && poNumInput !== this.cartPoNumber) {\n      this.paymentTypeService.setPaymentType(this.typeSelected, poNumInput);\n    }\n\n    this.checkoutStepService.next(this.activatedRoute);\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-md-12 col-lg-6\">\n    <label>\n      <span class=\"label-content\">{{\n        'checkoutPO.poNumber' | cxTranslate\n      }}</span>\n      <input\n        #poNumber\n        class=\"form-control\"\n        formControlName=\"poNumber\"\n        type=\"text\"\n        placeholder=\"{{ 'checkoutPO.placeholder' | cxTranslate }}\"\n        value=\"{{ cartPoNumber$ | async }}\"\n      />\n    </label>\n  </div>\n</div>\n<div class=\"row\">\n  <div class=\"col-md-12 col-lg-6\">\n    <ng-container\n      *ngIf=\"\n        (paymentTypes$ | async)?.length && typeSelected$ | async;\n        else loading\n      \"\n    >\n      <label class=\"cx-payment-type-container\">\n        <span class=\"label-content\">{{\n          'paymentTypes.title' | cxTranslate\n        }}</span>\n        <div class=\"form-check\" *ngFor=\"let type of paymentTypes$ | async\">\n          <input\n            id=\"paymentType-{{ type.code }}\"\n            class=\"form-check-input\"\n            role=\"radio\"\n            type=\"radio\"\n            aria-checked=\"true\"\n            (change)=\"changeType(type.code)\"\n            [value]=\"type.code\"\n            [checked]=\"type.code == typeSelected\"\n            formControlName=\"paymentType\"\n          />\n          <label\n            class=\"cx-payment-type-label form-check-label form-radio-label\"\n            for=\"paymentType-{{ type.code }}\"\n          >\n            <div class=\"cx-payment-type\">\n              {{ 'paymentTypes.paymentType_' + type?.code | cxTranslate }}\n            </div>\n          </label>\n        </div>\n      </label>\n    </ng-container>\n  </div>\n</div>\n\n<div class=\"cx-checkout-btns row\">\n  <div class=\"col-md-12 col-lg-6\">\n    <button class=\"btn btn-block btn-action\" (click)=\"back()\">\n      {{ 'checkout.backToCart' | cxTranslate }}\n    </button>\n  </div>\n  <div class=\"col-md-12 col-lg-6\">\n    <button class=\"btn btn-block btn-primary\" (click)=\"next()\">\n      {{ 'common.continue' | cxTranslate }}\n    </button>\n  </div>\n</div>\n\n<ng-template #loading>\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { SpinnerModule, CartValidationGuard } from '@spartacus/storefront';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { PaymentTypeComponent } from './payment-type.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    SpinnerModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPaymentType: {\n          component: PaymentTypeComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CartValidationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PaymentTypeComponent],\n  exports: [PaymentTypeComponent],\n})\nexport class PaymentTypeModule {}\n","import {\n  DIALOG_TYPE,\n  LayoutConfig,\n  SpinnerComponent,\n} from '@spartacus/storefront';\n\nexport const defaultPlaceOrderSpinnerLayoutConfig: LayoutConfig = {\n  launch: {\n    PLACE_ORDER_SPINNER: {\n      inline: true,\n      component: SpinnerComponent,\n      dialogType: DIALOG_TYPE.POPOVER_CENTER_BACKDROP,\n    },\n  },\n};\n","import { Injectable } from '@angular/core';\nimport {\n  DaysOfWeek,\n  recurrencePeriod,\n  ScheduleReplenishmentForm,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CheckoutReplenishmentFormService {\n  /**\n   * Default form data\n   */\n  readonly defaultFormData: ScheduleReplenishmentForm = {\n    daysOfWeek: [DaysOfWeek.MONDAY],\n    nthDayOfMonth: '1',\n    numberOfDays: '14',\n    numberOfWeeks: '1',\n    recurrencePeriod: recurrencePeriod.DAILY,\n    replenishmentStartDate: new Date().toISOString().split('T')[0],\n  };\n\n  private scheduleReplenishmentFormData$: BehaviorSubject<ScheduleReplenishmentForm> =\n    new BehaviorSubject<ScheduleReplenishmentForm>(this.defaultFormData);\n\n  constructor() {}\n\n  getScheduleReplenishmentFormData(): Observable<ScheduleReplenishmentForm> {\n    return this.scheduleReplenishmentFormData$.asObservable();\n  }\n\n  setScheduleReplenishmentFormData(formData: ScheduleReplenishmentForm): void {\n    this.scheduleReplenishmentFormData$.next(formData);\n  }\n\n  resetScheduleReplenishmentFormData(): void {\n    this.scheduleReplenishmentFormData$.next(this.defaultFormData);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  OnDestroy,\n  OnInit,\n  ViewContainerRef,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { CheckoutFacade } from '@spartacus/checkout/root';\nimport {\n  ORDER_TYPE,\n  recurrencePeriod,\n  RoutingService,\n  ScheduleReplenishmentForm,\n} from '@spartacus/core';\nimport { LaunchDialogService, LAUNCH_CALLER } from '@spartacus/storefront';\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\nimport { CheckoutReplenishmentFormService } from '../../services/checkout-replenishment-form-service';\n\n@Component({\n  selector: 'cx-place-order',\n  templateUrl: './place-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PlaceOrderComponent implements OnInit, OnDestroy {\n  private subscription: Subscription = new Subscription();\n\n  currentOrderType: ORDER_TYPE;\n  scheduleReplenishmentFormData: ScheduleReplenishmentForm;\n  placedOrder: void | Observable<ComponentRef<any> | undefined>;\n\n  daysOfWeekNotChecked$ = new BehaviorSubject<boolean>(false);\n\n  checkoutSubmitForm: FormGroup = this.fb.group({\n    termsAndConditions: [false, Validators.requiredTrue],\n  });\n\n  get termsAndConditionInvalid(): Boolean {\n    return this.checkoutSubmitForm.invalid;\n  }\n\n  constructor(\n    protected checkoutService: CheckoutFacade,\n    protected routingService: RoutingService,\n    protected fb: FormBuilder,\n    protected checkoutReplenishmentFormService: CheckoutReplenishmentFormService,\n    protected launchDialogService: LaunchDialogService,\n    protected vcr: ViewContainerRef\n  ) {}\n\n  submitForm(): void {\n    if (this.checkoutSubmitForm.valid && Boolean(this.currentOrderType)) {\n      switch (this.currentOrderType) {\n        case ORDER_TYPE.PLACE_ORDER: {\n          this.checkoutService.placeOrder(this.checkoutSubmitForm.valid);\n          break;\n        }\n\n        case ORDER_TYPE.SCHEDULE_REPLENISHMENT_ORDER: {\n          this.checkoutService.scheduleReplenishmentOrder(\n            this.scheduleReplenishmentFormData,\n            this.checkoutSubmitForm.valid\n          );\n          break;\n        }\n      }\n    } else {\n      this.checkoutSubmitForm.markAllAsTouched();\n    }\n  }\n\n  ngOnInit(): void {\n    this.subscription.add(\n      combineLatest([\n        this.checkoutService.getPlaceOrderLoading(),\n        this.checkoutService.getPlaceOrderSuccess(),\n        this.checkoutService.getPlaceOrderError(),\n      ]).subscribe(([orderLoading, orderSuccess, orderError]) => {\n        if (orderLoading) {\n          this.placedOrder = this.launchDialogService.launch(\n            LAUNCH_CALLER.PLACE_ORDER_SPINNER,\n            this.vcr\n          );\n        }\n\n        if (orderError) {\n          if (this.placedOrder) {\n            this.placedOrder\n              .subscribe((component) => {\n                this.launchDialogService.clear(\n                  LAUNCH_CALLER.PLACE_ORDER_SPINNER\n                );\n                if (component) {\n                  component.destroy();\n                }\n              })\n              .unsubscribe();\n            this.checkoutService.clearPlaceOrderState();\n          }\n        }\n\n        if (orderSuccess) {\n          this.onSuccess(orderSuccess);\n        }\n      })\n    );\n\n    this.subscription.add(\n      this.checkoutService\n        .getCurrentOrderType()\n        .subscribe((orderType) => (this.currentOrderType = orderType))\n    );\n\n    this.subscription.add(\n      this.checkoutReplenishmentFormService\n        .getScheduleReplenishmentFormData()\n        .subscribe((data) => {\n          this.scheduleReplenishmentFormData = data;\n\n          this.daysOfWeekNotChecked$.next(\n            data.daysOfWeek?.length === 0 &&\n              data.recurrencePeriod === recurrencePeriod.WEEKLY\n          );\n        })\n    );\n  }\n\n  onSuccess(data: boolean): void {\n    if (data) {\n      switch (this.currentOrderType) {\n        case ORDER_TYPE.PLACE_ORDER: {\n          this.routingService.go({ cxRoute: 'orderConfirmation' });\n          break;\n        }\n\n        case ORDER_TYPE.SCHEDULE_REPLENISHMENT_ORDER: {\n          this.routingService.go({ cxRoute: 'replenishmentConfirmation' });\n          break;\n        }\n      }\n      this.checkoutReplenishmentFormService.resetScheduleReplenishmentFormData();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.launchDialogService.clear(LAUNCH_CALLER.PLACE_ORDER_SPINNER);\n    this.checkoutService.clearPlaceOrderState();\n  }\n}\n","<form\n  (ngSubmit)=\"submitForm()\"\n  class=\"cx-place-order-form form-check\"\n  [formGroup]=\"checkoutSubmitForm\"\n>\n  <div class=\"form-group\">\n    <label>\n      <input\n        formControlName=\"termsAndConditions\"\n        class=\"scaled-input form-check-input\"\n        type=\"checkbox\"\n      />\n      <span class=\"form-check-label\">\n        {{ 'checkoutReview.confirmThatRead' | cxTranslate }}\n        <a\n          [routerLink]=\"{ cxRoute: 'termsAndConditions' } | cxUrl\"\n          class=\"cx-tc-link\"\n          target=\"_blank\"\n        >\n          {{ 'checkoutReview.termsAndConditions' | cxTranslate }}\n        </a>\n      </span>\n    </label>\n  </div>\n\n  <button\n    type=\"submit\"\n    class=\"btn btn-primary btn-block\"\n    [disabled]=\"termsAndConditionInvalid || (daysOfWeekNotChecked$ | async)\"\n  >\n    {{ 'checkoutReview.placeOrder' | cxTranslate }}\n  </button>\n</form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideConfig,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { defaultPlaceOrderSpinnerLayoutConfig } from './default-place-order-spinner-layout.config';\nimport { PlaceOrderComponent } from './place-order.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ReactiveFormsModule,\n  ],\n  providers: [\n    provideConfig(defaultPlaceOrderSpinnerLayoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutPlaceOrder: {\n          component: PlaceOrderComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PlaceOrderComponent],\n  exports: [PlaceOrderComponent],\n})\nexport class PlaceOrderModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CheckoutCostCenterFacade,\n  CheckoutDeliveryFacade,\n  CheckoutPaymentFacade,\n  checkoutPaymentSteps,\n  checkoutShippingSteps,\n  CheckoutStep,\n  CheckoutStepType,\n  PaymentTypeFacade,\n} from '@spartacus/checkout/root';\nimport {\n  ActiveCartService,\n  Address,\n  Cart,\n  CostCenter,\n  Country,\n  DeliveryMode,\n  OrderEntry,\n  PaymentDetails,\n  PromotionLocation,\n  TranslationService,\n  UserAddressService,\n  UserCostCenterService,\n} from '@spartacus/core';\nimport { Card, ICON_TYPE } from '@spartacus/storefront';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { CheckoutStepService } from '../../services/index';\n\n@Component({\n  selector: 'cx-review-submit',\n  templateUrl: './review-submit.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReviewSubmitComponent {\n  iconTypes = ICON_TYPE;\n  checkoutStepType = CheckoutStepType;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  constructor(\n    protected checkoutDeliveryService: CheckoutDeliveryFacade,\n    protected checkoutPaymentService: CheckoutPaymentFacade,\n    protected userAddressService: UserAddressService,\n    protected activeCartService: ActiveCartService,\n    protected translation: TranslationService,\n    protected checkoutStepService: CheckoutStepService,\n    protected paymentTypeService: PaymentTypeFacade,\n    protected checkoutCostCenterService: CheckoutCostCenterFacade,\n    protected userCostCenterService: UserCostCenterService\n  ) {}\n\n  get cart$(): Observable<Cart> {\n    return this.activeCartService.getActive();\n  }\n\n  get entries$(): Observable<OrderEntry[]> {\n    return this.activeCartService.getEntries();\n  }\n\n  get steps$(): Observable<CheckoutStep[]> {\n    return this.checkoutStepService.steps$;\n  }\n\n  get deliveryAddress$(): Observable<Address> {\n    return this.checkoutDeliveryService.getDeliveryAddress();\n  }\n\n  get deliveryMode$(): Observable<DeliveryMode | null | undefined> {\n    return this.checkoutDeliveryService.getSelectedDeliveryMode().pipe(\n      tap((selected: DeliveryMode | null | undefined) => {\n        if (selected === null) {\n          this.checkoutDeliveryService.loadSupportedDeliveryModes();\n        }\n      })\n    );\n  }\n\n  get paymentDetails$(): Observable<PaymentDetails> {\n    return this.checkoutPaymentService.getPaymentDetails();\n  }\n\n  get countryName$(): Observable<string | undefined> {\n    return this.deliveryAddress$.pipe(\n      switchMap((address: Address) =>\n        this.userAddressService.getCountry(address?.country?.isocode as string)\n      ),\n      tap((country: Country) => {\n        if (country === null) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      }),\n      map((country: Country) => country && country.name)\n    );\n  }\n\n  get poNumber$(): Observable<string | undefined> {\n    return this.paymentTypeService.getPoNumber();\n  }\n\n  get paymentType$(): Observable<string | undefined> {\n    return this.paymentTypeService.getSelectedPaymentType();\n  }\n\n  get isAccountPayment$(): Observable<boolean> {\n    return this.paymentTypeService.isAccountPayment();\n  }\n\n  get costCenter$(): Observable<CostCenter | undefined> {\n    return this.userCostCenterService.getActiveCostCenters().pipe(\n      filter((costCenters) => Boolean(costCenters)),\n      switchMap((costCenters) => {\n        return this.checkoutCostCenterService.getCostCenter().pipe(\n          map((code) => {\n            return costCenters.find((cc) => cc.code === code);\n          })\n        );\n      })\n    );\n  }\n\n  getShippingAddressCard(\n    deliveryAddress: Address,\n    countryName: string\n  ): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('addressCard.shipTo'),\n    ]).pipe(\n      map(([textTitle]) => {\n        if (!countryName) {\n          countryName = deliveryAddress?.country?.isocode as string;\n        }\n\n        let region = '';\n        if (\n          deliveryAddress &&\n          deliveryAddress.region &&\n          deliveryAddress.region.isocode\n        ) {\n          region = deliveryAddress.region.isocode + ', ';\n        }\n\n        return {\n          title: textTitle,\n          textBold: deliveryAddress.firstName + ' ' + deliveryAddress.lastName,\n          text: [\n            deliveryAddress.line1,\n            deliveryAddress.line2,\n            deliveryAddress.town + ', ' + region + countryName,\n            deliveryAddress.postalCode,\n            deliveryAddress.phone,\n          ],\n        } as Card;\n      })\n    );\n  }\n\n  getCostCenterCard(costCenter?: CostCenter): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutPO.costCenter'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: costCenter?.name,\n          text: ['(' + costCenter?.unit?.name + ')'],\n        };\n      })\n    );\n  }\n\n  getDeliveryModeCard(deliveryMode: DeliveryMode): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutShipping.shippingMethod'),\n    ]).pipe(\n      map(([textTitle]) => {\n        return {\n          title: textTitle,\n          textBold: deliveryMode.name,\n          text: [\n            deliveryMode.description,\n            deliveryMode.deliveryCost?.formattedValue\n              ? deliveryMode.deliveryCost?.formattedValue\n              : '',\n          ],\n        } as Card;\n      })\n    );\n  }\n\n  getPaymentMethodCard(paymentDetails: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: paymentDetails.expiryMonth,\n        year: paymentDetails.expiryYear,\n      }),\n      this.translation.translate('paymentForm.billingAddress'),\n    ]).pipe(\n      map(([textTitle, textExpires, billingAddress]) => {\n        const region = paymentDetails.billingAddress?.region?.isocode\n          ? paymentDetails.billingAddress?.region?.isocode + ', '\n          : '';\n        return {\n          title: textTitle,\n          textBold: paymentDetails.accountHolderName,\n          text: [paymentDetails.cardNumber, textExpires],\n          paragraphs: [\n            {\n              title: billingAddress + ':',\n              text: [\n                paymentDetails.billingAddress?.firstName +\n                  ' ' +\n                  paymentDetails.billingAddress?.lastName,\n                paymentDetails.billingAddress?.line1,\n                paymentDetails.billingAddress?.town +\n                  ', ' +\n                  region +\n                  paymentDetails.billingAddress?.country?.isocode,\n                paymentDetails.billingAddress?.postalCode,\n              ],\n            },\n          ],\n        } as Card;\n      })\n    );\n  }\n\n  getPoNumberCard(poNumber?: string | null): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutReview.poNumber'),\n      this.translation.translate('checkoutPO.noPoNumber'),\n    ]).pipe(\n      map(([textTitle, noneTextTitle]) => {\n        return {\n          title: textTitle,\n          textBold: poNumber ? poNumber : noneTextTitle,\n        };\n      })\n    );\n  }\n\n  getPaymentTypeCard(paymentType?: string): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('checkoutProgress.methodOfPayment'),\n      this.translation.translate('paymentTypes.paymentType_' + paymentType),\n    ]).pipe(\n      map(([textTitle, paymentTypeTranslation]) => {\n        return {\n          title: textTitle,\n          textBold: paymentTypeTranslation,\n        };\n      })\n    );\n  }\n\n  getCheckoutStepUrl(stepType: CheckoutStepType): string | undefined {\n    const step = this.checkoutStepService.getCheckoutStep(stepType);\n    return step && step.routeName;\n  }\n\n  shippingSteps(steps: CheckoutStep[]): CheckoutStep[] {\n    return steps.filter((step) => checkoutShippingSteps.includes(step.type[0]));\n  }\n\n  paymentSteps(steps: CheckoutStep[]): CheckoutStep[] {\n    return steps.filter((step) => checkoutPaymentSteps.includes(step.type[0]));\n  }\n}\n","<div class=\"cx-review\">\n  <!-- TITLE -->\n  <h2 class=\"cx-review-title d-none d-lg-block d-xl-block\">\n    {{ 'checkoutReview.review' | cxTranslate }}\n  </h2>\n\n  <div class=\"cx-review-summary row\">\n    <ng-container *ngIf=\"(steps$ | async)?.slice(0, -1) as steps\">\n      <div class=\"col-md-12 col-lg-6 col-xl-6 cx-review-payment-col\">\n        <ng-container *ngFor=\"let step of paymentSteps(steps)\">\n          <ng-container [ngSwitch]=\"step.type[0]\">\n            <ng-container *ngSwitchCase=\"checkoutStepType.PAYMENT_TYPE\">\n              <ng-container *ngTemplateOutlet=\"poNumber\"></ng-container>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"checkoutStepType.PAYMENT_TYPE\">\n              <ng-container *ngTemplateOutlet=\"paymentType\"></ng-container>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"checkoutStepType.PAYMENT_DETAILS\">\n              <ng-container *ngTemplateOutlet=\"paymentMethod\"></ng-container>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"checkoutStepType.SHIPPING_ADDRESS\">\n              <ng-container *ngTemplateOutlet=\"costCenter\"></ng-container>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n      <div class=\"col-md-12 col-lg-6 col-xl-6 cx-review-shipping-col\">\n        <ng-container *ngFor=\"let step of shippingSteps(steps)\">\n          <ng-container [ngSwitch]=\"step.type[0]\">\n            <ng-container *ngSwitchCase=\"checkoutStepType.SHIPPING_ADDRESS\">\n              <ng-container *ngTemplateOutlet=\"shippingAddress\"></ng-container>\n            </ng-container>\n            <ng-container *ngSwitchCase=\"checkoutStepType.DELIVERY_MODE\">\n              <ng-container *ngTemplateOutlet=\"deliveryMode\"></ng-container>\n            </ng-container>\n          </ng-container>\n        </ng-container>\n      </div>\n    </ng-container>\n  </div>\n\n  <!-- PO NUMBER SECTION -->\n  <ng-template #poNumber>\n    <div class=\"cx-review-summary-card\">\n      <cx-card [content]=\"getPoNumberCard(poNumber$ | async) | async\"></cx-card>\n      <div class=\"cx-review-summary-edit-step\">\n        <a\n          [attr.aria-label]=\"'checkoutReview.editPaymentType' | cxTranslate\"\n          [routerLink]=\"\n            {\n              cxRoute: getCheckoutStepUrl(checkoutStepType.PAYMENT_TYPE)\n            } | cxUrl\n          \"\n          ><cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon\n        ></a>\n      </div>\n    </div>\n  </ng-template>\n\n  <!-- PAYMENT TYPE SECTION -->\n  <ng-template #paymentType>\n    <div class=\"cx-review-summary-card\">\n      <cx-card\n        *ngIf=\"paymentType$ | async as paymentType\"\n        [content]=\"getPaymentTypeCard(paymentType) | async\"\n      ></cx-card>\n      <div class=\"cx-review-summary-edit-step\">\n        <a\n          [attr.aria-label]=\"'checkoutReview.editPaymentType' | cxTranslate\"\n          [routerLink]=\"\n            {\n              cxRoute: getCheckoutStepUrl(checkoutStepType.PAYMENT_TYPE)\n            } | cxUrl\n          \"\n          ><cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon\n        ></a>\n      </div>\n    </div>\n  </ng-template>\n\n  <!-- COST CENTER SECTION -->\n  <ng-template #costCenter>\n    <ng-container *ngIf=\"isAccountPayment$ | async\">\n      <div class=\"cx-review-summary-card\">\n        <cx-card\n          *ngIf=\"costCenter$ | async as costCenter\"\n          [content]=\"getCostCenterCard(costCenter) | async\"\n        ></cx-card>\n        <div class=\"cx-review-summary-edit-step\">\n          <a\n            [attr.aria-label]=\"\n              'checkoutReview.editShippingAddressDetails' | cxTranslate\n            \"\n            [routerLink]=\"\n              {\n                cxRoute: getCheckoutStepUrl(checkoutStepType.SHIPPING_ADDRESS)\n              } | cxUrl\n            \"\n            ><cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon\n          ></a>\n        </div>\n      </div>\n    </ng-container>\n  </ng-template>\n\n  <!-- SHIPPING ADDRESS SECTION -->\n  <ng-template #shippingAddress>\n    <div\n      *ngIf=\"deliveryAddress$ | async as deliveryAddress\"\n      class=\"cx-review-summary-card cx-review-card-address\"\n    >\n      <cx-card\n        *ngIf=\"countryName$ | async as countryName\"\n        [content]=\"getShippingAddressCard(deliveryAddress, countryName) | async\"\n      ></cx-card>\n      <div class=\"cx-review-summary-edit-step\">\n        <a\n          [attr.aria-label]=\"\n            'checkoutReview.editShippingAddressDetails' | cxTranslate\n          \"\n          [routerLink]=\"\n            {\n              cxRoute: getCheckoutStepUrl(checkoutStepType.SHIPPING_ADDRESS)\n            } | cxUrl\n          \"\n          ><cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon\n        ></a>\n      </div>\n    </div>\n  </ng-template>\n\n  <!-- DELIVERY MODE SECTION -->\n  <ng-template #deliveryMode>\n    <div class=\"cx-review-summary-card cx-review-card-shipping\">\n      <cx-card\n        *ngIf=\"deliveryMode$ | async as deliveryMode\"\n        [content]=\"getDeliveryModeCard(deliveryMode) | async\"\n      ></cx-card>\n      <div class=\"cx-review-summary-edit-step\">\n        <a\n          [attr.aria-label]=\"'checkoutReview.editDeliveryMode' | cxTranslate\"\n          [routerLink]=\"\n            { cxRoute: getCheckoutStepUrl(checkoutStepType.DELIVERY_MODE) }\n              | cxUrl\n          \"\n        >\n          <cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon>\n        </a>\n      </div>\n    </div>\n  </ng-template>\n\n  <!-- PAYMENT METHOD SECTION -->\n  <ng-template #paymentMethod>\n    <div class=\"cx-review-summary-card cx-review-card-payment\">\n      <div>\n        <cx-card\n          *ngIf=\"paymentDetails$ | async as paymentDetails\"\n          [content]=\"getPaymentMethodCard(paymentDetails) | async\"\n        ></cx-card>\n      </div>\n      <div class=\"cx-review-summary-edit-step\">\n        <a\n          [attr.aria-label]=\"'checkoutReview.editPaymentDetails' | cxTranslate\"\n          [routerLink]=\"\n            { cxRoute: getCheckoutStepUrl(checkoutStepType.PAYMENT_DETAILS) }\n              | cxUrl\n          \"\n        >\n          <cx-icon aria-hidden=\"true\" [type]=\"iconTypes.PENCIL\"></cx-icon>\n        </a>\n      </div>\n    </div>\n  </ng-template>\n\n  <!-- CART ITEM SECTION -->\n  <ng-container *ngIf=\"cart$ | async as cart\">\n    <h4 class=\"cx-review-cart-total d-none d-lg-block d-xl-block\">\n      {{\n        'cartItems.cartTotal'\n          | cxTranslate: { count: cart.deliveryItemsQuantity }\n      }}:\n      {{ cart.totalPrice?.formattedValue }}\n    </h4>\n    <h4 class=\"cx-review-cart-heading d-block d-lg-none d-xl-none\">\n      {{ 'checkoutReview.placeOrder' | cxTranslate }}\n    </h4>\n    <div\n      class=\"cx-review-cart-item col-md-12\"\n      *ngIf=\"entries$ | async as entries\"\n    >\n      <cx-promotions\n        [promotions]=\"\n          (cart.appliedOrderPromotions || []).concat(\n            cart.potentialOrderPromotions || []\n          )\n        \"\n      ></cx-promotions>\n\n      <cx-cart-item-list\n        [items]=\"entries\"\n        [readonly]=\"true\"\n        [promotionLocation]=\"promotionLocation\"\n      ></cx-cart-item-list>\n    </div>\n  </ng-container>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  CardModule,\n  CartSharedModule,\n  IconModule,\n  PromotionsModule,\n} from '@spartacus/storefront';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { ReviewSubmitComponent } from './review-submit.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    CartSharedModule,\n    I18nModule,\n    UrlModule,\n    RouterModule,\n    PromotionsModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutReviewOrder: {\n          component: ReviewSubmitComponent,\n          // TODO(#8880): Shouldn't we keep ShippingAddressSetGuard and others here?\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ReviewSubmitComponent],\n  exports: [ReviewSubmitComponent],\n})\nexport class ReviewSubmitModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutFacade } from '@spartacus/checkout/root';\nimport {\n  DaysOfWeek,\n  ORDER_TYPE,\n  recurrencePeriod,\n  ScheduleReplenishmentForm,\n} from '@spartacus/core';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { Observable, Subscription } from 'rxjs';\nimport { CheckoutReplenishmentFormService } from '../../services/checkout-replenishment-form-service';\n\n@Component({\n  selector: 'cx-schedule-replenishment-order',\n  templateUrl: './schedule-replenishment-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ScheduleReplenishmentOrderComponent implements OnInit, OnDestroy {\n  private subscription: Subscription = new Subscription();\n\n  iconTypes = ICON_TYPE;\n  orderTypes = ORDER_TYPE;\n  daysOfWeek = Object.values(DaysOfWeek);\n  recurrencePeriodType = Object.values(recurrencePeriod);\n\n  selectedOrderType$: Observable<ORDER_TYPE> =\n    this.checkoutService.getCurrentOrderType();\n\n  isMonthly: Boolean = false;\n  isWeekly: Boolean = false;\n  currentDaysOfWeek: DaysOfWeek[] = [];\n  numberOfDays: string[];\n  numberOfWeeks: string[];\n  currentDate: string | undefined;\n  scheduleReplenishmentFormData: ScheduleReplenishmentForm;\n\n  constructor(\n    protected checkoutService: CheckoutFacade,\n    protected checkoutReplenishmentFormService: CheckoutReplenishmentFormService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.checkoutReplenishmentFormService\n        .getScheduleReplenishmentFormData()\n        .subscribe((data) => {\n          this.scheduleReplenishmentFormData = data;\n        })\n    );\n\n    this.initConfig();\n  }\n\n  changeOrderType(orderType: ORDER_TYPE): void {\n    this.checkoutService.setOrderType(orderType);\n  }\n\n  changeNumberOfDays(nDays: string): void {\n    this.checkoutReplenishmentFormService.setScheduleReplenishmentFormData({\n      ...this.scheduleReplenishmentFormData,\n      numberOfDays: nDays,\n    });\n  }\n\n  changeNumberOfWeeks(nWeeks: string): void {\n    this.checkoutReplenishmentFormService.setScheduleReplenishmentFormData({\n      ...this.scheduleReplenishmentFormData,\n      numberOfWeeks: nWeeks,\n    });\n  }\n\n  changeRecurrencePeriodType(type: string): void {\n    this.isWeekly = type === recurrencePeriod.WEEKLY;\n    this.isMonthly = type === recurrencePeriod.MONTHLY;\n\n    this.numberOfDays = this.isMonthly\n      ? this.createNumberStringArray(31)\n      : this.createNumberStringArray(30);\n\n    this.checkoutReplenishmentFormService.setScheduleReplenishmentFormData({\n      ...this.scheduleReplenishmentFormData,\n      recurrencePeriod: type,\n    });\n  }\n\n  changeDayOfTheMonth(dayOfMonth: string): void {\n    this.checkoutReplenishmentFormService.setScheduleReplenishmentFormData({\n      ...this.scheduleReplenishmentFormData,\n      nthDayOfMonth: dayOfMonth,\n    });\n  }\n\n  changeReplenishmentStartDate(date: string): void {\n    if (Boolean(date)) {\n      this.checkoutReplenishmentFormService.setScheduleReplenishmentFormData({\n        ...this.scheduleReplenishmentFormData,\n        replenishmentStartDate: date,\n      });\n    }\n  }\n\n  changeRepeatDays(day: DaysOfWeek, isChecked: boolean): void {\n    if (isChecked) {\n      this.currentDaysOfWeek = [...this.currentDaysOfWeek];\n\n      this.currentDaysOfWeek.push(day);\n\n      this.checkoutReplenishmentFormService.setScheduleReplenishmentFormData({\n        ...this.scheduleReplenishmentFormData,\n        daysOfWeek: this.currentDaysOfWeek,\n      });\n    } else {\n      const foundDay = this.currentDaysOfWeek.find((data) => day === data);\n\n      if (!foundDay) return;\n\n      const index = this.currentDaysOfWeek.indexOf(foundDay);\n      this.currentDaysOfWeek.splice(index, 1);\n\n      this.checkoutReplenishmentFormService.setScheduleReplenishmentFormData({\n        ...this.scheduleReplenishmentFormData,\n        daysOfWeek: this.currentDaysOfWeek,\n      });\n    }\n  }\n\n  hasDaysOfWeekChecked(day: DaysOfWeek): boolean {\n    return this.currentDaysOfWeek.includes(day);\n  }\n\n  private initConfig(): void {\n    this.isMonthly =\n      this.scheduleReplenishmentFormData.recurrencePeriod ===\n      recurrencePeriod.MONTHLY;\n\n    this.isWeekly =\n      this.scheduleReplenishmentFormData.recurrencePeriod ===\n      recurrencePeriod.WEEKLY;\n\n    this.currentDaysOfWeek = [\n      ...(this.scheduleReplenishmentFormData.daysOfWeek ?? []),\n    ];\n\n    this.numberOfDays = this.isMonthly\n      ? this.createNumberStringArray(31)\n      : this.createNumberStringArray(30);\n\n    this.numberOfWeeks = this.createNumberStringArray(12);\n\n    this.currentDate =\n      this.scheduleReplenishmentFormData.replenishmentStartDate;\n  }\n\n  private createNumberStringArray(n: number): string[] {\n    return Array(n)\n      .fill(0)\n      .map((_, y) => (y + 1).toString());\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"cx-order-type-card\">\n  <div class=\"cx-label-container\">\n    <h5 class=\"cx-order-replenishment-header\">\n      {{ 'checkoutReview.autoReplenishOrder' | cxTranslate }}\n    </h5>\n    <cx-icon [type]=\"iconTypes.CLOCK\"></cx-icon>\n  </div>\n  <div\n    class=\"cx-order-type-container form-check\"\n    *ngFor=\"let type of orderTypes | keyvalue\"\n  >\n    <input\n      id=\"orderType-{{ type.value }}\"\n      class=\"scaled-input form-check-input\"\n      role=\"radio\"\n      type=\"radio\"\n      formControlName=\"orderType\"\n      aria-checked=\"true\"\n      (change)=\"changeOrderType(type.value)\"\n      [value]=\"type.value\"\n      [checked]=\"type.value == (selectedOrderType$ | async)\"\n    />\n    <label\n      class=\"order-type-label form-check-label form-radio-label\"\n      for=\"orderType-{{ type.value }}\"\n    >\n      <div class=\"order-type\">\n        {{ 'checkoutReview.orderType_' + type?.value | cxTranslate }}\n      </div>\n    </label>\n  </div>\n  <ng-container\n    *ngIf=\"\n      scheduleReplenishmentFormData &&\n      (selectedOrderType$ | async) === orderTypes.SCHEDULE_REPLENISHMENT_ORDER\n    \"\n  >\n    <div class=\"cx-replenishment-form-data-container\">\n      <div *ngIf=\"!isMonthly\" class=\"cx-days\">\n        <span class=\"form-data-label\">{{\n          'checkoutReview.every' | cxTranslate\n        }}</span>\n        <ng-container *ngIf=\"isWeekly; else isDaily\">\n          <select\n            class=\"form-control\"\n            (change)=\"changeNumberOfWeeks($event.target.value)\"\n          >\n            <option\n              *ngFor=\"let nWeeks of numberOfWeeks\"\n              [value]=\"nWeeks\"\n              [selected]=\"\n                nWeeks === scheduleReplenishmentFormData.numberOfWeeks\n              \"\n            >\n              {{ nWeeks }}\n            </option>\n          </select>\n        </ng-container>\n        <ng-template #isDaily>\n          <select\n            class=\"form-control\"\n            (change)=\"changeNumberOfDays($event.target.value)\"\n          >\n            <option\n              *ngFor=\"let nDays of numberOfDays\"\n              [value]=\"nDays\"\n              [selected]=\"nDays === scheduleReplenishmentFormData.numberOfDays\"\n            >\n              {{ nDays }}\n            </option>\n          </select>\n        </ng-template>\n      </div>\n      <div class=\"cx-month\">\n        <span *ngIf=\"isMonthly\" class=\"form-data-label\">{{\n          'checkoutReview.every' | cxTranslate\n        }}</span>\n        <select\n          class=\"form-control\"\n          (change)=\"changeRecurrencePeriodType($event.target.value)\"\n        >\n          <option\n            *ngFor=\"let type of recurrencePeriodType\"\n            [value]=\"type\"\n            [selected]=\"type === scheduleReplenishmentFormData.recurrencePeriod\"\n          >\n            {{ 'checkoutReview.recurrencePeriodType_' + type | cxTranslate }}\n          </option>\n        </select>\n      </div>\n      <div *ngIf=\"isMonthly\" class=\"cx-dayMonth\">\n        <span class=\"form-data-label\">{{\n          'checkoutReview.dayOfMonth' | cxTranslate\n        }}</span>\n        <div class=\"cx-day-of-month\">\n          <select\n            class=\"form-control\"\n            (change)=\"changeDayOfTheMonth($event.target.value)\"\n          >\n            <option\n              *ngFor=\"let nDays of numberOfDays\"\n              [value]=\"nDays\"\n              [selected]=\"nDays === scheduleReplenishmentFormData.nthDayOfMonth\"\n            >\n              {{ nDays }}\n            </option>\n          </select>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"cx-replenishment-form-data-container\">\n      <span class=\"form-data-label\">{{\n        'checkoutReview.startOn' | cxTranslate\n      }}</span>\n      <div class=\"cx-replenishment-date\">\n        <input\n          type=\"date\"\n          placeholder=\"yyyy-mm-dd\"\n          [value]=\"currentDate\"\n          (change)=\"changeReplenishmentStartDate($event.target.value)\"\n        />\n      </div>\n    </div>\n\n    <div\n      *ngIf=\"isWeekly\"\n      class=\"cx-replenishment-form-data-container cx-repeat-days-container\"\n    >\n      <span class=\"cx-repeat-days form-data-label\">{{\n        'checkoutReview.repeatOnDays' | cxTranslate\n      }}</span>\n      <div *ngFor=\"let day of daysOfWeek\" class=\"form-check\">\n        <label for=\"day-{{ day }}\" class=\"cx-week-day\">{{\n          day | titlecase\n        }}</label\n        ><input\n          id=\"day-{{ day }}\"\n          type=\"checkbox\"\n          class=\"form-check-input\"\n          [checked]=\"hasDaysOfWeekChecked(day)\"\n          (change)=\"changeRepeatDays(day, $event.target.checked)\"\n        />\n      </div>\n    </div>\n  </ng-container>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { IconModule } from '@spartacus/storefront';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { ScheduleReplenishmentOrderComponent } from './schedule-replenishment-order.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, I18nModule, IconModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutScheduleReplenishmentOrder: {\n          component: ScheduleReplenishmentOrderComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ScheduleReplenishmentOrderComponent],\n  exports: [ScheduleReplenishmentOrderComponent],\n})\nexport class ScheduleReplenishmentOrderModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport {\n  CheckoutCostCenterFacade,\n  CheckoutDeliveryFacade,\n  PaymentTypeFacade,\n} from '@spartacus/checkout/root';\nimport {\n  ActiveCartService,\n  Address,\n  TranslationService,\n  UserAddressService,\n  UserCostCenterService,\n} from '@spartacus/core';\nimport { Card } from '@spartacus/storefront';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\nimport { CheckoutStepService } from '../../services/checkout-step.service';\n\nexport interface CardWithAddress {\n  card: Card;\n  address: Address;\n}\n\n@Component({\n  selector: 'cx-shipping-address',\n  templateUrl: './shipping-address.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShippingAddressComponent implements OnInit, OnDestroy {\n  addressFormOpened = false;\n  forceLoader = false; // this helps with smoother steps transition\n  selectedAddress: Address;\n  doneAutoSelect = false;\n  isAccountPayment = false;\n\n  protected subscriptions = new Subscription();\n\n  constructor(\n    protected userAddressService: UserAddressService,\n    protected checkoutDeliveryService: CheckoutDeliveryFacade,\n    protected activatedRoute: ActivatedRoute,\n    protected translation: TranslationService,\n    protected activeCartService: ActiveCartService,\n    protected checkoutStepService: CheckoutStepService,\n    protected paymentTypeService?: PaymentTypeFacade,\n    protected userCostCenterService?: UserCostCenterService,\n    protected checkoutCostCenterService?: CheckoutCostCenterFacade\n  ) {}\n\n  get isGuestCheckout(): boolean {\n    return this.activeCartService.isGuestCart();\n  }\n\n  get backBtnText(): string {\n    return this.checkoutStepService.getBackBntText(this.activatedRoute);\n  }\n\n  get isLoading$(): Observable<boolean> {\n    return this.userAddressService.getAddressesLoading();\n  }\n\n  get selectedAddress$(): Observable<Address> {\n    return this.checkoutDeliveryService.getDeliveryAddress().pipe(\n      tap((address) => {\n        if (\n          address &&\n          (this.selectedAddress === undefined ||\n            this.selectedAddress.id !== address.id)\n        ) {\n          this.selectedAddress = address;\n          if (this.forceLoader) {\n            this.next();\n          }\n        }\n      })\n    );\n  }\n\n  get cards$(): Observable<CardWithAddress[]> {\n    return combineLatest([\n      this.getSupportedAddresses(),\n      this.selectedAddress$,\n      this.translation.translate('checkoutAddress.defaultShippingAddress'),\n      this.translation.translate('checkoutAddress.shipToThisAddress'),\n      this.translation.translate('addressCard.selected'),\n    ]).pipe(\n      tap(([addresses, selected]) =>\n        this.selectDefaultAddress(addresses, selected)\n      ),\n      map(([addresses, selected, textDefault, textShipTo, textSelected]) =>\n        (<any>addresses).map((address: Address) => ({\n          address,\n          card: this.getCardContent(\n            address,\n            selected,\n            textDefault,\n            textShipTo,\n            textSelected\n          ),\n        }))\n      )\n    );\n  }\n\n  getSupportedAddresses(): Observable<Address[]> {\n    if (\n      this.isAccountPayment &&\n      this.checkoutCostCenterService &&\n      this.userCostCenterService\n    ) {\n      return this.checkoutCostCenterService.getCostCenter().pipe(\n        distinctUntilChanged(),\n        switchMap((selected) => {\n          this.doneAutoSelect = false;\n          return (\n            this.userCostCenterService?.getCostCenterAddresses(\n              selected as string\n            ) ?? []\n          );\n        })\n      );\n    }\n    return this.userAddressService.getAddresses();\n  }\n\n  selectDefaultAddress(addresses: Address[], selected: Address | undefined) {\n    if (\n      !this.doneAutoSelect &&\n      addresses &&\n      addresses.length &&\n      (!selected || Object.keys(selected).length === 0)\n    ) {\n      if (this.isAccountPayment) {\n        if (addresses.length === 1) {\n          this.selectAddress(addresses[0]);\n        }\n      } else {\n        selected = addresses.find((address) => address.defaultAddress);\n        if (selected) {\n          this.selectAddress(selected);\n        }\n      }\n      this.doneAutoSelect = true;\n    }\n  }\n\n  ngOnInit(): void {\n    if (\n      this.paymentTypeService &&\n      this.userCostCenterService &&\n      this.checkoutCostCenterService\n    ) {\n      this.subscriptions.add(\n        this.paymentTypeService\n          .isAccountPayment()\n          .pipe(distinctUntilChanged())\n          .subscribe((isAccount) => (this.isAccountPayment = isAccount))\n      );\n    }\n\n    if (!this.isGuestCheckout && !this.isAccountPayment) {\n      this.userAddressService.loadAddresses();\n    }\n  }\n\n  getCardContent(\n    address: Address,\n    selected: any,\n    textDefaultShippingAddress: string,\n    textShipToThisAddress: string,\n    textSelected: string\n  ): Card {\n    let region = '';\n    if (address.region && address.region.isocode) {\n      region = address.region.isocode + ', ';\n    }\n\n    return {\n      title: address.defaultAddress ? textDefaultShippingAddress : '',\n      textBold: address.firstName + ' ' + address.lastName,\n      text: [\n        address.line1,\n        address.line2,\n        address.town + ', ' + region + address.country?.isocode,\n        address.postalCode,\n        address.phone,\n      ],\n      actions: [{ name: textShipToThisAddress, event: 'send' }],\n      header: selected && selected.id === address.id ? textSelected : '',\n    } as Card;\n  }\n\n  selectAddress(address: Address): void {\n    this.checkoutDeliveryService.setDeliveryAddress(address);\n  }\n\n  addAddress(address: Address): void {\n    this.forceLoader = true;\n    if (Boolean(address)) {\n      this.checkoutDeliveryService.createAndSetAddress(address);\n    } else {\n      this.forceLoader = false;\n      this.next();\n    }\n  }\n\n  showNewAddressForm(): void {\n    this.addressFormOpened = true;\n  }\n\n  hideNewAddressForm(goPrevious: boolean = false): void {\n    this.addressFormOpened = false;\n    if (goPrevious) {\n      this.back();\n    }\n  }\n\n  next(): void {\n    this.checkoutStepService.next(this.activatedRoute);\n  }\n\n  back(): void {\n    this.checkoutStepService.back(this.activatedRoute);\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ng-container *ngIf=\"cards$ | async as cards\">\n  <h2 class=\"cx-checkout-title d-none d-lg-block d-xl-block\">\n    {{ 'checkoutAddress.shippingAddress' | cxTranslate }}\n  </h2>\n  <ng-container *ngIf=\"!forceLoader && !(isLoading$ | async); else loading\">\n    <ng-container\n      *ngIf=\"\n        isAccountPayment || (cards?.length && !addressFormOpened);\n        else newAddressForm\n      \"\n    >\n      <p class=\"cx-checkout-text\">\n        {{ 'checkoutAddress.selectYourShippingAddress' | cxTranslate }}\n      </p>\n      <div class=\"cx-checkout-btns row\" *ngIf=\"!isAccountPayment\">\n        <div class=\"col-sm-12 col-md-12 col-lg-6\">\n          <button\n            class=\"btn btn-block btn-action\"\n            (click)=\"showNewAddressForm()\"\n          >\n            {{ 'checkoutAddress.addNewAddress' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n\n      <div class=\"cx-checkout-body row\">\n        <div\n          class=\"cx-shipping-address-card col-md-12 col-lg-6\"\n          *ngFor=\"let card of cards; let i = index\"\n        >\n          <div\n            class=\"cx-shipping-address-card-inner\"\n            (click)=\"selectAddress(card.address)\"\n          >\n            <cx-card\n              [border]=\"true\"\n              [fitToContainer]=\"true\"\n              [content]=\"card.card\"\n              (sendCard)=\"selectAddress(card.address)\"\n            ></cx-card>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"cx-checkout-btns row\">\n        <div class=\"col-md-12 col-lg-6\">\n          <button class=\"cx-btn btn btn-block btn-action\" (click)=\"back()\">\n            {{ backBtnText | cxTranslate }}\n          </button>\n        </div>\n        <div class=\"col-md-12 col-lg-6\">\n          <button\n            class=\"cx-btn btn btn-block btn-primary\"\n            [disabled]=\"!selectedAddress?.id\"\n            (click)=\"next()\"\n          >\n            {{ 'common.continue' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </ng-container>\n\n    <ng-template #newAddressForm>\n      <cx-address-form\n        *ngIf=\"cards.length; else initialAddressForm\"\n        [showTitleCode]=\"true\"\n        (backToAddress)=\"hideNewAddressForm(false)\"\n        (submitAddress)=\"addAddress($event)\"\n      ></cx-address-form>\n      <ng-template #initialAddressForm>\n        <cx-address-form\n          [showTitleCode]=\"true\"\n          [setAsDefaultField]=\"!isGuestCheckout\"\n          [addressData]=\"selectedAddress\"\n          cancelBtnLabel=\"{{ backBtnText | cxTranslate }}\"\n          (backToAddress)=\"hideNewAddressForm(true)\"\n          (submitAddress)=\"addAddress($event)\"\n        ></cx-address-form>\n      </ng-template>\n    </ng-template>\n  </ng-container>\n\n  <ng-template #loading>\n    <div class=\"cx-spinner\">\n      <cx-spinner></cx-spinner>\n    </div>\n  </ng-template>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport {\n  AddressFormModule,\n  CardModule,\n  SpinnerModule,\n  CartValidationGuard,\n} from '@spartacus/storefront';\nimport { CartNotEmptyGuard } from '../../guards/cart-not-empty.guard';\nimport { CheckoutAuthGuard } from '../../guards/checkout-auth.guard';\nimport { ShippingAddressComponent } from './shipping-address.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    AddressFormModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CheckoutShippingAddress: {\n          component: ShippingAddressComponent,\n          guards: [CheckoutAuthGuard, CartNotEmptyGuard, CartValidationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ShippingAddressComponent],\n  exports: [ShippingAddressComponent],\n})\nexport class ShippingAddressModule {}\n","import { Component, Input, OnDestroy } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService, RoutingService } from '@spartacus/core';\nimport { CustomFormValidators } from '@spartacus/storefront';\nimport { UserRegisterFacade } from '@spartacus/user/profile/root';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-guest-register-form',\n  templateUrl: './guest-register-form.component.html',\n})\nexport class GuestRegisterFormComponent implements OnDestroy {\n  @Input() guid: string;\n  @Input() email: string;\n\n  subscription: Subscription;\n  guestRegisterForm: FormGroup = this.fb.group(\n    {\n      password: [\n        '',\n        [Validators.required, CustomFormValidators.passwordValidator],\n      ],\n      passwordconf: ['', Validators.required],\n    },\n    {\n      validators: CustomFormValidators.passwordsMustMatch(\n        'password',\n        'passwordconf'\n      ),\n    }\n  );\n\n  constructor(\n    protected userRegisterFacade: UserRegisterFacade,\n    protected routingService: RoutingService,\n    protected authService: AuthService,\n    protected fb: FormBuilder\n  ) {}\n\n  submit() {\n    if (this.guestRegisterForm.valid) {\n      this.userRegisterFacade.registerGuest(\n        this.guid,\n        this.guestRegisterForm.value.password\n      );\n      if (!this.subscription) {\n        this.subscription = this.authService\n          .isUserLoggedIn()\n          .subscribe((isLoggedIn) => {\n            if (isLoggedIn) {\n              this.routingService.go({ cxRoute: 'home' });\n            }\n          });\n      }\n    } else {\n      this.guestRegisterForm.markAllAsTouched();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","<div class=\"register-guest\">\n  <div class=\"col-md-6 col-lg-4\">\n    <h3>{{ 'checkoutOrderConfirmation.createAccount' | cxTranslate }}</h3>\n    <p>\n      {{\n        'checkoutOrderConfirmation.createAccountForNext'\n          | cxTranslate: { email: email }\n      }}\n    </p>\n\n    <form (ngSubmit)=\"submit()\" [formGroup]=\"guestRegisterForm\">\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content\">{{\n            'register.password.label' | cxTranslate\n          }}</span>\n          <input\n            aria-required=\"true\"\n            class=\"form-control\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"{{ 'register.password.placeholder' | cxTranslate }}\"\n            formControlName=\"password\"\n          />\n          <cx-form-errors\n            aria-live=\"assertive\"\n            aria-atomic=\"true\"\n            [control]=\"guestRegisterForm.get('password')\"\n          ></cx-form-errors>\n        </label>\n      </div>\n\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content\">{{\n            'register.confirmPassword.label' | cxTranslate\n          }}</span>\n          <input\n            aria-required=\"true\"\n            class=\"form-control\"\n            type=\"password\"\n            name=\"passwordconf\"\n            placeholder=\"{{\n              'register.confirmPassword.placeholder' | cxTranslate\n            }}\"\n            formControlName=\"passwordconf\"\n          />\n          <cx-form-errors\n            aria-live=\"assertive\"\n            aria-atomic=\"true\"\n            [control]=\"guestRegisterForm.get('passwordconf')\"\n          ></cx-form-errors>\n        </label>\n      </div>\n\n      <button type=\"submit\" class=\"btn btn-block btn-primary\">\n        {{ 'common.submit' | cxTranslate }}\n      </button>\n    </form>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutFacade } from '@spartacus/checkout/root';\nimport { Order, PromotionLocation } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-items',\n  templateUrl: './order-confirmation-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationItemsComponent implements OnInit, OnDestroy {\n  promotionLocation: PromotionLocation = PromotionLocation.Checkout;\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutFacade) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","<div class=\"cx-order-items container\" *ngIf=\"order$ | async as order\">\n  <h4 class=\"cx-order-items-header\">\n    {{ 'checkoutOrderConfirmation.orderItems' | cxTranslate }}\n  </h4>\n\n  <cx-promotions\n    [promotions]=\"order.appliedOrderPromotions || []\"\n  ></cx-promotions>\n\n  <cx-cart-item-list\n    [items]=\"order.entries\"\n    [readonly]=\"true\"\n    [promotionLocation]=\"promotionLocation\"\n  ></cx-cart-item-list>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutFacade } from '@spartacus/checkout/root';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-overview',\n  templateUrl: './order-confirmation-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationOverviewComponent implements OnInit, OnDestroy {\n  order$: Observable<any>;\n\n  constructor(protected checkoutService: CheckoutFacade) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","<ng-container *ngIf=\"order$ | async as order\">\n  <cx-order-overview [order]=\"order\"></cx-order-overview>\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutFacade } from '@spartacus/checkout/root';\nimport { ORDER_TYPE } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-order-confirmation-thank-you-message',\n  templateUrl: './order-confirmation-thank-you-message.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationThankYouMessageComponent\n  implements OnInit, OnDestroy\n{\n  order$: Observable<any>;\n  isReplenishmentOrderType$: Observable<boolean>;\n\n  isGuestCustomer = false;\n  orderGuid: string;\n\n  constructor(protected checkoutService: CheckoutFacade) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails().pipe(\n      tap((order) => {\n        this.isGuestCustomer =\n          'guestCustomer' in order ? order.guestCustomer ?? false : false;\n        this.orderGuid = order.guid as string;\n      })\n    );\n\n    this.isReplenishmentOrderType$ = this.checkoutService\n      .getCurrentOrderType()\n      .pipe(\n        map(\n          (orderType) => ORDER_TYPE.SCHEDULE_REPLENISHMENT_ORDER === orderType\n        )\n      );\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","<ng-container *ngIf=\"order$ | async as order\">\n  <div class=\"cx-page-header\">\n    <h1 class=\"cx-page-title\">\n      {{ 'checkoutOrderConfirmation.confirmationOfOrder' | cxTranslate }}\n      {{\n        (isReplenishmentOrderType$ | async)\n          ? order.replenishmentOrderCode\n          : order.code\n      }}\n    </h1>\n  </div>\n\n  <div class=\"cx-order-confirmation-message\">\n    <h2>{{ 'checkoutOrderConfirmation.thankYou' | cxTranslate }}</h2>\n    <p>\n      {{ 'checkoutOrderConfirmation.invoiceHasBeenSentByEmail' | cxTranslate }}\n    </p>\n  </div>\n\n  <div *ngIf=\"isGuestCustomer\">\n    <cx-guest-register-form\n      [guid]=\"orderGuid\"\n      [email]=\"order.paymentInfo.billingAddress.email\"\n    ></cx-guest-register-form>\n  </div>\n\n  <cx-add-to-home-screen-banner></cx-add-to-home-screen-banner>\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { CheckoutFacade } from '@spartacus/checkout/root';\nimport { Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-order-confirmation-totals',\n  templateUrl: './order-confirmation-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderConfirmationTotalsComponent implements OnInit, OnDestroy {\n  order$: Observable<Order>;\n\n  constructor(protected checkoutService: CheckoutFacade) {}\n\n  ngOnInit() {\n    this.order$ = this.checkoutService.getOrderDetails();\n  }\n\n  ngOnDestroy() {\n    this.checkoutService.clearCheckoutData();\n  }\n}\n","<div class=\"cx-order-summary container\" *ngIf=\"order$ | async as order\">\n  <div class=\"row justify-content-end\">\n    <div class=\"col-sm-12 col-md-6 col-lg-5 col-xl-4\">\n      <cx-order-summary [cart]=\"order\"></cx-order-summary>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { CheckoutFacade } from '@spartacus/checkout/root';\nimport { SemanticPathService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderConfirmationGuard implements CanActivate {\n  constructor(\n    private checkoutService: CheckoutFacade,\n    private router: Router,\n    private semanticPathService: SemanticPathService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.checkoutService.getOrderDetails().pipe(\n      map((orderDetails) => {\n        if (orderDetails && Object.keys(orderDetails).length !== 0) {\n          return true;\n        } else {\n          return this.router.parseUrl(this.semanticPathService.get('orders'));\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport {\n  CardModule,\n  CartSharedModule,\n  FormErrorsModule,\n  OrderOverviewModule,\n  PromotionsModule,\n  PwaModule,\n} from '@spartacus/storefront';\nimport { GuestRegisterFormComponent } from './components/guest-register-form/guest-register-form.component';\nimport { OrderConfirmationItemsComponent } from './components/order-confirmation-items/order-confirmation-items.component';\nimport { OrderConfirmationOverviewComponent } from './components/order-confirmation-overview/order-confirmation-overview.component';\n// eslint-disable-next-line\nimport { OrderConfirmationThankYouMessageComponent } from './components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component';\nimport { OrderConfirmationTotalsComponent } from './components/order-confirmation-totals/order-confirmation-totals.component';\nimport { OrderConfirmationGuard } from './guards/order-confirmation.guard';\n\nconst orderConfirmationComponents = [\n  OrderConfirmationItemsComponent,\n  OrderConfirmationOverviewComponent,\n  OrderConfirmationThankYouMessageComponent,\n  OrderConfirmationTotalsComponent,\n  GuestRegisterFormComponent,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CartSharedModule,\n    CardModule,\n    PwaModule,\n    PromotionsModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FeaturesConfigModule,\n    FormErrorsModule,\n    OrderOverviewModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderConfirmationThankMessageComponent: {\n          component: OrderConfirmationThankYouMessageComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationItemsComponent: {\n          component: OrderConfirmationItemsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationTotalsComponent: {\n          component: OrderConfirmationTotalsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        OrderConfirmationOverviewComponent: {\n          component: OrderConfirmationOverviewComponent,\n          guards: [OrderConfirmationGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [...orderConfirmationComponents],\n  exports: [...orderConfirmationComponents],\n})\nexport class OrderConfirmationModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport {\n  CardModule,\n  CartSharedModule,\n  FormErrorsModule,\n  PromotionsModule,\n  PwaModule,\n} from '@spartacus/storefront';\nimport { OrderConfirmationItemsComponent } from './components/order-confirmation-items/order-confirmation-items.component';\nimport { OrderConfirmationOverviewComponent } from './components/order-confirmation-overview/order-confirmation-overview.component';\nimport { OrderConfirmationThankYouMessageComponent } from './components/order-confirmation-thank-you-message/order-confirmation-thank-you-message.component';\nimport { OrderConfirmationTotalsComponent } from './components/order-confirmation-totals/order-confirmation-totals.component';\nimport { OrderConfirmationGuard } from './guards/order-confirmation.guard';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CartSharedModule,\n    CardModule,\n    PwaModule,\n    PromotionsModule,\n    I18nModule,\n    ReactiveFormsModule,\n    FeaturesConfigModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReplenishmentConfirmationMessageComponent: {\n          component: OrderConfirmationThankYouMessageComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        ReplenishmentConfirmationOverviewComponent: {\n          component: OrderConfirmationOverviewComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        ReplenishmentConfirmationItemsComponent: {\n          component: OrderConfirmationItemsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n        ReplenishmentConfirmationTotalsComponent: {\n          component: OrderConfirmationTotalsComponent,\n          guards: [OrderConfirmationGuard],\n        },\n      },\n    }),\n  ],\n})\nexport class ReplenishmentOrderConfirmationModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CheckoutLoginModule } from './components/checkout-login/checkout-login.module';\nimport { CheckoutOrchestratorModule } from './components/checkout-orchestrator/checkout-orchestrator.module';\nimport { CheckoutOrderSummaryModule } from './components/checkout-order-summary/checkout-order-summary.module';\n// eslint-disable-next-line\nimport { CheckoutProgressMobileBottomModule } from './components/checkout-progress/checkout-progress-mobile-bottom/checkout-progress-mobile-bottom.module';\n// eslint-disable-next-line\nimport { CheckoutProgressMobileTopModule } from './components/checkout-progress/checkout-progress-mobile-top/checkout-progress-mobile-top.module';\nimport { CheckoutProgressModule } from './components/checkout-progress/checkout-progress.module';\nimport { CostCenterModule } from './components/cost-center/cost-center.module';\nimport { DeliveryModeModule } from './components/delivery-mode/delivery-mode.module';\nimport { PaymentMethodModule } from './components/payment-method/payment-method.module';\nimport { PaymentTypeModule } from './components/payment-type/payment-type.module';\nimport { PlaceOrderModule } from './components/place-order/place-order.module';\nimport { ReviewSubmitModule } from './components/review-submit/review-submit.module';\nimport { ScheduleReplenishmentOrderModule } from './components/schedule-replenishment-order/schedule-replenishment-order.module';\nimport { ShippingAddressModule } from './components/shipping-address/shipping-address.module';\nimport { OrderConfirmationModule } from './order-confirmation/order-confirmation.module';\nimport { ReplenishmentOrderConfirmationModule } from './order-confirmation/replenishment-order-confirmation.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CheckoutOrchestratorModule,\n    CheckoutOrderSummaryModule,\n    CheckoutProgressModule,\n    CheckoutProgressMobileTopModule,\n    CheckoutProgressMobileBottomModule,\n    PaymentTypeModule,\n    DeliveryModeModule,\n    PaymentMethodModule,\n    PlaceOrderModule,\n    ScheduleReplenishmentOrderModule,\n    ReviewSubmitModule,\n    ShippingAddressModule,\n    CostCenterModule,\n    OrderConfirmationModule,\n    ReplenishmentOrderConfirmationModule,\n    CheckoutLoginModule,\n  ],\n})\nexport class CheckoutComponentsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["map","Injectable","Validators","CustomFormValidators","Component","CommonModule","I18nModule","FormsModule","ReactiveFormsModule","FormErrorsModule","provideDefaultConfig","NgModule","combineLatest","filter","DeliveryModePreferences","B2BUserRole","GlobalMessageType","OCC_USER_ID_ANONYMOUS","OCC_USER_ID_GUEST","EMAIL_PATTERN","tap","shareReplay","switchMap","skipWhile","debounceTime","of","distinctUntilChanged","BehaviorSubject","CheckoutStepType","ChangeDetectionStrategy","CartSharedModule","take","isDevMode","UrlModule","RouterModule","Pipe","withLatestFrom","ConfigModule","CartValidationGuard","takeWhile","SpinnerModule","ICON_TYPE","EventEmitter","SuggestedAddressDialogComponent","Input","Output","NgSelectModule","CardModule","IconModule","isNotUndefined","B2BPaymentTypeEnum","ViewChild","SpinnerComponent","DIALOG_TYPE","DaysOfWeek","recurrencePeriod","Subscription","ORDER_TYPE","provideConfig","PromotionLocation","checkoutShippingSteps","checkoutPaymentSteps","PromotionsModule","AddressFormModule","PwaModule","FeaturesConfigModule","OrderOverviewModule"],"mappings":"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"}