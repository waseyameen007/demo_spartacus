import { ActiveCartService, BasePageMetaResolver, Cart, PageDescriptionResolver, PageMetaResolver, PageRobotsMeta, PageRobotsResolver, PageTitleResolver, TranslationService } from '@spartacus/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
/**
 * Resolves the page data for all Content Pages based on the `PageType.CONTENT_PAGE`
 * and the `MultiStepCheckoutSummaryPageTemplate`. If the checkout page matches this template,
 * the more generic `ContentPageMetaResolver` is overridden by this resolver.
 *
 * The page title and robots are resolved in this implementation only.
 */
export declare class CheckoutPageMetaResolver extends PageMetaResolver implements PageTitleResolver, PageDescriptionResolver, PageRobotsResolver {
    protected translation: TranslationService;
    protected activeCartService: ActiveCartService;
    protected basePageMetaResolver: BasePageMetaResolver;
    protected cart$: Observable<Cart>;
    constructor(translation: TranslationService, activeCartService: ActiveCartService, basePageMetaResolver: BasePageMetaResolver);
    /**
     * @override
     * Resolves the page title from the translation `pageMetaResolver.checkout.title`. The
     * cart total item `count` is passed to the translation, so it can be used in the title.
     *
     * The title from the page data is ignored for this page title.
     */
    resolveTitle(): Observable<string>;
    resolveDescription(): Observable<string | undefined>;
    resolveRobots(): Observable<PageRobotsMeta[]>;
    static ɵfac: i0.ɵɵFactoryDeclaration<CheckoutPageMetaResolver, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<CheckoutPageMetaResolver>;
}
