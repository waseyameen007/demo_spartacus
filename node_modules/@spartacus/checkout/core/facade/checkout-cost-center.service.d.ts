import { Store } from '@ngrx/store';
import { CheckoutCostCenterFacade } from '@spartacus/checkout/root';
import { ActiveCartService, UserIdService } from '@spartacus/core';
import { Observable } from 'rxjs';
import { StateWithCheckout } from '../store/checkout-state';
import * as i0 from "@angular/core";
export declare class CheckoutCostCenterService implements CheckoutCostCenterFacade {
    protected checkoutStore: Store<StateWithCheckout>;
    protected activeCartService: ActiveCartService;
    protected userIdService: UserIdService;
    constructor(checkoutStore: Store<StateWithCheckout>, activeCartService: ActiveCartService, userIdService: UserIdService);
    /**
     * Set cost center to cart
     * @param costCenterId : cost center id
     */
    setCostCenter(costCenterId: string): void;
    /**
     * Get cost center id from cart
     */
    getCostCenter(): Observable<string | undefined>;
    static ɵfac: i0.ɵɵFactoryDeclaration<CheckoutCostCenterService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<CheckoutCostCenterService>;
}
