import { CheckoutCostCenterFacade, CheckoutDeliveryFacade, CheckoutPaymentFacade, CheckoutStep, CheckoutStepType, PaymentTypeFacade } from '@spartacus/checkout/root';
import { ActiveCartService, Address, Cart, CostCenter, DeliveryMode, OrderEntry, PaymentDetails, PromotionLocation, TranslationService, UserAddressService, UserCostCenterService } from '@spartacus/core';
import { Card, ICON_TYPE } from '@spartacus/storefront';
import { Observable } from 'rxjs';
import { CheckoutStepService } from '../../services/index';
import * as i0 from "@angular/core";
export declare class ReviewSubmitComponent {
    protected checkoutDeliveryService: CheckoutDeliveryFacade;
    protected checkoutPaymentService: CheckoutPaymentFacade;
    protected userAddressService: UserAddressService;
    protected activeCartService: ActiveCartService;
    protected translation: TranslationService;
    protected checkoutStepService: CheckoutStepService;
    protected paymentTypeService: PaymentTypeFacade;
    protected checkoutCostCenterService: CheckoutCostCenterFacade;
    protected userCostCenterService: UserCostCenterService;
    iconTypes: typeof ICON_TYPE;
    checkoutStepType: typeof CheckoutStepType;
    promotionLocation: PromotionLocation;
    constructor(checkoutDeliveryService: CheckoutDeliveryFacade, checkoutPaymentService: CheckoutPaymentFacade, userAddressService: UserAddressService, activeCartService: ActiveCartService, translation: TranslationService, checkoutStepService: CheckoutStepService, paymentTypeService: PaymentTypeFacade, checkoutCostCenterService: CheckoutCostCenterFacade, userCostCenterService: UserCostCenterService);
    get cart$(): Observable<Cart>;
    get entries$(): Observable<OrderEntry[]>;
    get steps$(): Observable<CheckoutStep[]>;
    get deliveryAddress$(): Observable<Address>;
    get deliveryMode$(): Observable<DeliveryMode | null | undefined>;
    get paymentDetails$(): Observable<PaymentDetails>;
    get countryName$(): Observable<string | undefined>;
    get poNumber$(): Observable<string | undefined>;
    get paymentType$(): Observable<string | undefined>;
    get isAccountPayment$(): Observable<boolean>;
    get costCenter$(): Observable<CostCenter | undefined>;
    getShippingAddressCard(deliveryAddress: Address, countryName: string): Observable<Card>;
    getCostCenterCard(costCenter?: CostCenter): Observable<Card>;
    getDeliveryModeCard(deliveryMode: DeliveryMode): Observable<Card>;
    getPaymentMethodCard(paymentDetails: PaymentDetails): Observable<Card>;
    getPoNumberCard(poNumber?: string | null): Observable<Card>;
    getPaymentTypeCard(paymentType?: string): Observable<Card>;
    getCheckoutStepUrl(stepType: CheckoutStepType): string | undefined;
    shippingSteps(steps: CheckoutStep[]): CheckoutStep[];
    paymentSteps(steps: CheckoutStep[]): CheckoutStep[];
    static ɵfac: i0.ɵɵFactoryDeclaration<ReviewSubmitComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ReviewSubmitComponent, "cx-review-submit", never, {}, {}, never, never>;
}
