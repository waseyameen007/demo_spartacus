import { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from '@angular/router';
import { CheckoutCostCenterFacade, CheckoutStep, PaymentTypeFacade } from '@spartacus/checkout/root';
import { RoutingConfigService } from '@spartacus/core';
import { Observable } from 'rxjs';
import { CheckoutDetailsService } from '../services/checkout-details.service';
import { CheckoutStepService } from '../services/checkout-step.service';
import * as i0 from "@angular/core";
export declare class CheckoutStepsSetGuard implements CanActivate {
    protected paymentTypeService: PaymentTypeFacade;
    protected checkoutStepService: CheckoutStepService;
    protected checkoutDetailsService: CheckoutDetailsService;
    protected routingConfigService: RoutingConfigService;
    protected checkoutCostCenterService: CheckoutCostCenterFacade;
    protected router: Router;
    constructor(paymentTypeService: PaymentTypeFacade, checkoutStepService: CheckoutStepService, checkoutDetailsService: CheckoutDetailsService, routingConfigService: RoutingConfigService, checkoutCostCenterService: CheckoutCostCenterFacade, router: Router);
    canActivate(route: ActivatedRouteSnapshot, _: RouterStateSnapshot): Observable<boolean | UrlTree>;
    protected isStepSet(step: CheckoutStep, isAccountPayment: boolean): Observable<boolean | UrlTree>;
    protected isPaymentTypeSet(step: CheckoutStep): Observable<boolean | UrlTree>;
    protected isShippingAddressAndCostCenterSet(step: CheckoutStep, isAccountPayment: boolean): Observable<boolean | UrlTree>;
    protected isDeliveryModeSet(step: CheckoutStep): Observable<boolean | UrlTree>;
    protected isPaymentDetailsSet(step: CheckoutStep): Observable<boolean | UrlTree>;
    private getUrl;
    static ɵfac: i0.ɵɵFactoryDeclaration<CheckoutStepsSetGuard, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<CheckoutStepsSetGuard>;
}
