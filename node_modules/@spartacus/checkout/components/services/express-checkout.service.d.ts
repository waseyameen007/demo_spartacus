import { CheckoutDeliveryFacade, CheckoutPaymentFacade, ClearCheckoutFacade } from '@spartacus/checkout/root';
import { UserAddressService, UserPaymentService } from '@spartacus/core';
import { Observable } from 'rxjs';
import { CheckoutConfigService } from '../services/checkout-config.service';
import { CheckoutDetailsService } from './checkout-details.service';
import * as i0 from "@angular/core";
export declare class ExpressCheckoutService {
    protected userAddressService: UserAddressService;
    protected userPaymentService: UserPaymentService;
    protected checkoutDeliveryService: CheckoutDeliveryFacade;
    protected checkoutPaymentService: CheckoutPaymentFacade;
    protected checkoutDetailsService: CheckoutDetailsService;
    protected checkoutConfigService: CheckoutConfigService;
    protected clearCheckoutService: ClearCheckoutFacade;
    private shippingAddressSet$;
    private deliveryModeSet$;
    private paymentMethodSet$;
    constructor(userAddressService: UserAddressService, userPaymentService: UserPaymentService, checkoutDeliveryService: CheckoutDeliveryFacade, checkoutPaymentService: CheckoutPaymentFacade, checkoutDetailsService: CheckoutDetailsService, checkoutConfigService: CheckoutConfigService, clearCheckoutService: ClearCheckoutFacade);
    protected setShippingAddress(): void;
    protected setPaymentMethod(): void;
    protected setDeliveryMode(): void;
    trySetDefaultCheckoutDetails(): Observable<boolean>;
    static ɵfac: i0.ɵɵFactoryDeclaration<ExpressCheckoutService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ExpressCheckoutService>;
}
