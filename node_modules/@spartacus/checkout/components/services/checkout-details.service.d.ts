import { CheckoutDeliveryFacade, CheckoutFacade, CheckoutPaymentFacade } from '@spartacus/checkout/root';
import { ActiveCartService, Address, PaymentDetails } from '@spartacus/core';
import { Observable } from 'rxjs';
import * as i0 from "@angular/core";
export declare class CheckoutDetailsService {
    protected checkoutService: CheckoutFacade;
    protected checkoutDeliveryService: CheckoutDeliveryFacade;
    protected checkoutPaymentService: CheckoutPaymentFacade;
    protected activeCartService: ActiveCartService;
    cartId$: Observable<string>;
    getCheckoutDetailsLoaded$: Observable<boolean>;
    constructor(checkoutService: CheckoutFacade, checkoutDeliveryService: CheckoutDeliveryFacade, checkoutPaymentService: CheckoutPaymentFacade, activeCartService: ActiveCartService);
    getDeliveryAddress(): Observable<Address>;
    getSelectedDeliveryModeCode(): Observable<string>;
    getPaymentDetails(): Observable<PaymentDetails>;
    static ɵfac: i0.ɵɵFactoryDeclaration<CheckoutDetailsService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<CheckoutDetailsService>;
}
