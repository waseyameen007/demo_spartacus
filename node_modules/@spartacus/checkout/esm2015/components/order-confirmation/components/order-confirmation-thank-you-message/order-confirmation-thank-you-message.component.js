import { ChangeDetectionStrategy, Component, } from '@angular/core';
import { ORDER_TYPE } from '@spartacus/core';
import { map, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/checkout/root";
import * as i2 from "../guest-register-form/guest-register-form.component";
import * as i3 from "@spartacus/storefront";
import * as i4 from "@angular/common";
import * as i5 from "@spartacus/core";
export class OrderConfirmationThankYouMessageComponent {
    constructor(checkoutService) {
        this.checkoutService = checkoutService;
        this.isGuestCustomer = false;
    }
    ngOnInit() {
        this.order$ = this.checkoutService.getOrderDetails().pipe(tap((order) => {
            var _a;
            this.isGuestCustomer =
                'guestCustomer' in order ? (_a = order.guestCustomer) !== null && _a !== void 0 ? _a : false : false;
            this.orderGuid = order.guid;
        }));
        this.isReplenishmentOrderType$ = this.checkoutService
            .getCurrentOrderType()
            .pipe(map((orderType) => ORDER_TYPE.SCHEDULE_REPLENISHMENT_ORDER === orderType));
    }
    ngOnDestroy() {
        this.checkoutService.clearCheckoutData();
    }
}
OrderConfirmationThankYouMessageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: OrderConfirmationThankYouMessageComponent, deps: [{ token: i1.CheckoutFacade }], target: i0.ɵɵFactoryTarget.Component });
OrderConfirmationThankYouMessageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: OrderConfirmationThankYouMessageComponent, selector: "cx-order-confirmation-thank-you-message", ngImport: i0, template: "<ng-container *ngIf=\"order$ | async as order\">\n  <div class=\"cx-page-header\">\n    <h1 class=\"cx-page-title\">\n      {{ 'checkoutOrderConfirmation.confirmationOfOrder' | cxTranslate }}\n      {{\n        (isReplenishmentOrderType$ | async)\n          ? order.replenishmentOrderCode\n          : order.code\n      }}\n    </h1>\n  </div>\n\n  <div class=\"cx-order-confirmation-message\">\n    <h2>{{ 'checkoutOrderConfirmation.thankYou' | cxTranslate }}</h2>\n    <p>\n      {{ 'checkoutOrderConfirmation.invoiceHasBeenSentByEmail' | cxTranslate }}\n    </p>\n  </div>\n\n  <div *ngIf=\"isGuestCustomer\">\n    <cx-guest-register-form\n      [guid]=\"orderGuid\"\n      [email]=\"order.paymentInfo.billingAddress.email\"\n    ></cx-guest-register-form>\n  </div>\n\n  <cx-add-to-home-screen-banner></cx-add-to-home-screen-banner>\n</ng-container>\n", components: [{ type: i2.GuestRegisterFormComponent, selector: "cx-guest-register-form", inputs: ["guid", "email"] }, { type: i3.AddToHomeScreenBannerComponent, selector: "cx-add-to-home-screen-banner" }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i4.AsyncPipe, "cxTranslate": i5.TranslatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: OrderConfirmationThankYouMessageComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-order-confirmation-thank-you-message',
                    templateUrl: './order-confirmation-thank-you-message.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.CheckoutFacade }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItY29uZmlybWF0aW9uLXRoYW5rLXlvdS1tZXNzYWdlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9jaGVja291dC9jb21wb25lbnRzL29yZGVyLWNvbmZpcm1hdGlvbi9jb21wb25lbnRzL29yZGVyLWNvbmZpcm1hdGlvbi10aGFuay15b3UtbWVzc2FnZS9vcmRlci1jb25maXJtYXRpb24tdGhhbmsteW91LW1lc3NhZ2UuY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL2NoZWNrb3V0L2NvbXBvbmVudHMvb3JkZXItY29uZmlybWF0aW9uL2NvbXBvbmVudHMvb3JkZXItY29uZmlybWF0aW9uLXRoYW5rLXlvdS1tZXNzYWdlL29yZGVyLWNvbmZpcm1hdGlvbi10aGFuay15b3UtbWVzc2FnZS5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsdUJBQXVCLEVBQ3ZCLFNBQVMsR0FHVixNQUFNLGVBQWUsQ0FBQztBQUV2QixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFN0MsT0FBTyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7OztBQU8xQyxNQUFNLE9BQU8seUNBQXlDO0lBU3BELFlBQXNCLGVBQStCO1FBQS9CLG9CQUFlLEdBQWYsZUFBZSxDQUFnQjtRQUhyRCxvQkFBZSxHQUFHLEtBQUssQ0FBQztJQUdnQyxDQUFDO0lBRXpELFFBQVE7UUFDTixJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQUMsZUFBZSxFQUFFLENBQUMsSUFBSSxDQUN2RCxHQUFHLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRTs7WUFDWixJQUFJLENBQUMsZUFBZTtnQkFDbEIsZUFBZSxJQUFJLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBQSxLQUFLLENBQUMsYUFBYSxtQ0FBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztZQUNsRSxJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQyxJQUFjLENBQUM7UUFDeEMsQ0FBQyxDQUFDLENBQ0gsQ0FBQztRQUVGLElBQUksQ0FBQyx5QkFBeUIsR0FBRyxJQUFJLENBQUMsZUFBZTthQUNsRCxtQkFBbUIsRUFBRTthQUNyQixJQUFJLENBQ0gsR0FBRyxDQUNELENBQUMsU0FBUyxFQUFFLEVBQUUsQ0FBQyxVQUFVLENBQUMsNEJBQTRCLEtBQUssU0FBUyxDQUNyRSxDQUNGLENBQUM7SUFDTixDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxlQUFlLENBQUMsaUJBQWlCLEVBQUUsQ0FBQztJQUMzQyxDQUFDOztzSUEvQlUseUNBQXlDOzBIQUF6Qyx5Q0FBeUMsK0VDaEJ0RCx5MUJBNEJBOzJGRFphLHlDQUF5QztrQkFMckQsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUseUNBQXlDO29CQUNuRCxXQUFXLEVBQUUsdURBQXVEO29CQUNwRSxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSxcbiAgQ29tcG9uZW50LFxuICBPbkRlc3Ryb3ksXG4gIE9uSW5pdCxcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDaGVja291dEZhY2FkZSB9IGZyb20gJ0BzcGFydGFjdXMvY2hlY2tvdXQvcm9vdCc7XG5pbXBvcnQgeyBPUkRFUl9UWVBFIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCwgdGFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1vcmRlci1jb25maXJtYXRpb24tdGhhbmsteW91LW1lc3NhZ2UnLFxuICB0ZW1wbGF0ZVVybDogJy4vb3JkZXItY29uZmlybWF0aW9uLXRoYW5rLXlvdS1tZXNzYWdlLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIE9yZGVyQ29uZmlybWF0aW9uVGhhbmtZb3VNZXNzYWdlQ29tcG9uZW50XG4gIGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3lcbntcbiAgb3JkZXIkOiBPYnNlcnZhYmxlPGFueT47XG4gIGlzUmVwbGVuaXNobWVudE9yZGVyVHlwZSQ6IE9ic2VydmFibGU8Ym9vbGVhbj47XG5cbiAgaXNHdWVzdEN1c3RvbWVyID0gZmFsc2U7XG4gIG9yZGVyR3VpZDogc3RyaW5nO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjaGVja291dFNlcnZpY2U6IENoZWNrb3V0RmFjYWRlKSB7fVxuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMub3JkZXIkID0gdGhpcy5jaGVja291dFNlcnZpY2UuZ2V0T3JkZXJEZXRhaWxzKCkucGlwZShcbiAgICAgIHRhcCgob3JkZXIpID0+IHtcbiAgICAgICAgdGhpcy5pc0d1ZXN0Q3VzdG9tZXIgPVxuICAgICAgICAgICdndWVzdEN1c3RvbWVyJyBpbiBvcmRlciA/IG9yZGVyLmd1ZXN0Q3VzdG9tZXIgPz8gZmFsc2UgOiBmYWxzZTtcbiAgICAgICAgdGhpcy5vcmRlckd1aWQgPSBvcmRlci5ndWlkIGFzIHN0cmluZztcbiAgICAgIH0pXG4gICAgKTtcblxuICAgIHRoaXMuaXNSZXBsZW5pc2htZW50T3JkZXJUeXBlJCA9IHRoaXMuY2hlY2tvdXRTZXJ2aWNlXG4gICAgICAuZ2V0Q3VycmVudE9yZGVyVHlwZSgpXG4gICAgICAucGlwZShcbiAgICAgICAgbWFwKFxuICAgICAgICAgIChvcmRlclR5cGUpID0+IE9SREVSX1RZUEUuU0NIRURVTEVfUkVQTEVOSVNITUVOVF9PUkRFUiA9PT0gb3JkZXJUeXBlXG4gICAgICAgIClcbiAgICAgICk7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpIHtcbiAgICB0aGlzLmNoZWNrb3V0U2VydmljZS5jbGVhckNoZWNrb3V0RGF0YSgpO1xuICB9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwib3JkZXIkIHwgYXN5bmMgYXMgb3JkZXJcIj5cbiAgPGRpdiBjbGFzcz1cImN4LXBhZ2UtaGVhZGVyXCI+XG4gICAgPGgxIGNsYXNzPVwiY3gtcGFnZS10aXRsZVwiPlxuICAgICAge3sgJ2NoZWNrb3V0T3JkZXJDb25maXJtYXRpb24uY29uZmlybWF0aW9uT2ZPcmRlcicgfCBjeFRyYW5zbGF0ZSB9fVxuICAgICAge3tcbiAgICAgICAgKGlzUmVwbGVuaXNobWVudE9yZGVyVHlwZSQgfCBhc3luYylcbiAgICAgICAgICA/IG9yZGVyLnJlcGxlbmlzaG1lbnRPcmRlckNvZGVcbiAgICAgICAgICA6IG9yZGVyLmNvZGVcbiAgICAgIH19XG4gICAgPC9oMT5cbiAgPC9kaXY+XG5cbiAgPGRpdiBjbGFzcz1cImN4LW9yZGVyLWNvbmZpcm1hdGlvbi1tZXNzYWdlXCI+XG4gICAgPGgyPnt7ICdjaGVja291dE9yZGVyQ29uZmlybWF0aW9uLnRoYW5rWW91JyB8IGN4VHJhbnNsYXRlIH19PC9oMj5cbiAgICA8cD5cbiAgICAgIHt7ICdjaGVja291dE9yZGVyQ29uZmlybWF0aW9uLmludm9pY2VIYXNCZWVuU2VudEJ5RW1haWwnIHwgY3hUcmFuc2xhdGUgfX1cbiAgICA8L3A+XG4gIDwvZGl2PlxuXG4gIDxkaXYgKm5nSWY9XCJpc0d1ZXN0Q3VzdG9tZXJcIj5cbiAgICA8Y3gtZ3Vlc3QtcmVnaXN0ZXItZm9ybVxuICAgICAgW2d1aWRdPVwib3JkZXJHdWlkXCJcbiAgICAgIFtlbWFpbF09XCJvcmRlci5wYXltZW50SW5mby5iaWxsaW5nQWRkcmVzcy5lbWFpbFwiXG4gICAgPjwvY3gtZ3Vlc3QtcmVnaXN0ZXItZm9ybT5cbiAgPC9kaXY+XG5cbiAgPGN4LWFkZC10by1ob21lLXNjcmVlbi1iYW5uZXI+PC9jeC1hZGQtdG8taG9tZS1zY3JlZW4tYmFubmVyPlxuPC9uZy1jb250YWluZXI+XG4iXX0=