import { Injectable } from '@angular/core';
import { facadeFactory, } from '@spartacus/core';
import { CHECKOUT_CORE_FEATURE } from '../feature-name';
import * as i0 from "@angular/core";
export class CheckoutFacade {
}
CheckoutFacade.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CheckoutFacade, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
CheckoutFacade.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CheckoutFacade, providedIn: 'root', useFactory: () => facadeFactory({
        facade: CheckoutFacade,
        feature: CHECKOUT_CORE_FEATURE,
        methods: [
            'placeOrder',
            'scheduleReplenishmentOrder',
            'getPlaceOrderLoading',
            'getPlaceOrderSuccess',
            'getPlaceOrderError',
            'clearPlaceOrderState',
            'clearCheckoutData',
            'clearCheckoutStep',
            'loadCheckoutDetails',
            'getCheckoutDetailsLoaded',
            'isLoading',
            'getOrderDetails',
            'setOrderType',
            'getCurrentOrderType',
        ],
        async: true,
    }) });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CheckoutFacade, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                    useFactory: () => facadeFactory({
                        facade: CheckoutFacade,
                        feature: CHECKOUT_CORE_FEATURE,
                        methods: [
                            'placeOrder',
                            'scheduleReplenishmentOrder',
                            'getPlaceOrderLoading',
                            'getPlaceOrderSuccess',
                            'getPlaceOrderError',
                            'clearPlaceOrderState',
                            'clearCheckoutData',
                            'clearCheckoutStep',
                            'loadCheckoutDetails',
                            'getCheckoutDetailsLoaded',
                            'isLoading',
                            'getOrderDetails',
                            'setOrderType',
                            'getCurrentOrderType',
                        ],
                        async: true,
                    }),
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tvdXQuZmFjYWRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL2NoZWNrb3V0L3Jvb3QvZmFjYWRlL2NoZWNrb3V0LmZhY2FkZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFDTCxhQUFhLEdBS2QsTUFBTSxpQkFBaUIsQ0FBQztBQUV6QixPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQzs7QUEyQnhELE1BQU0sT0FBZ0IsY0FBYzs7MkdBQWQsY0FBYzsrR0FBZCxjQUFjLGNBeEJ0QixNQUFNLGNBQ04sR0FBRyxFQUFFLENBQ2YsYUFBYSxDQUFDO1FBQ1osTUFBTSxFQUFFLGNBQWM7UUFDdEIsT0FBTyxFQUFFLHFCQUFxQjtRQUM5QixPQUFPLEVBQUU7WUFDUCxZQUFZO1lBQ1osNEJBQTRCO1lBQzVCLHNCQUFzQjtZQUN0QixzQkFBc0I7WUFDdEIsb0JBQW9CO1lBQ3BCLHNCQUFzQjtZQUN0QixtQkFBbUI7WUFDbkIsbUJBQW1CO1lBQ25CLHFCQUFxQjtZQUNyQiwwQkFBMEI7WUFDMUIsV0FBVztZQUNYLGlCQUFpQjtZQUNqQixjQUFjO1lBQ2QscUJBQXFCO1NBQ3RCO1FBQ0QsS0FBSyxFQUFFLElBQUk7S0FDWixDQUFDOzJGQUVnQixjQUFjO2tCQXpCbkMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtvQkFDbEIsVUFBVSxFQUFFLEdBQUcsRUFBRSxDQUNmLGFBQWEsQ0FBQzt3QkFDWixNQUFNLGdCQUFnQjt3QkFDdEIsT0FBTyxFQUFFLHFCQUFxQjt3QkFDOUIsT0FBTyxFQUFFOzRCQUNQLFlBQVk7NEJBQ1osNEJBQTRCOzRCQUM1QixzQkFBc0I7NEJBQ3RCLHNCQUFzQjs0QkFDdEIsb0JBQW9COzRCQUNwQixzQkFBc0I7NEJBQ3RCLG1CQUFtQjs0QkFDbkIsbUJBQW1COzRCQUNuQixxQkFBcUI7NEJBQ3JCLDBCQUEwQjs0QkFDMUIsV0FBVzs0QkFDWCxpQkFBaUI7NEJBQ2pCLGNBQWM7NEJBQ2QscUJBQXFCO3lCQUN0Qjt3QkFDRCxLQUFLLEVBQUUsSUFBSTtxQkFDWixDQUFDO2lCQUNMIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgZmFjYWRlRmFjdG9yeSxcbiAgT3JkZXIsXG4gIE9SREVSX1RZUEUsXG4gIFJlcGxlbmlzaG1lbnRPcmRlcixcbiAgU2NoZWR1bGVSZXBsZW5pc2htZW50Rm9ybSxcbn0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IENIRUNLT1VUX0NPUkVfRkVBVFVSRSB9IGZyb20gJy4uL2ZlYXR1cmUtbmFtZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxuICB1c2VGYWN0b3J5OiAoKSA9PlxuICAgIGZhY2FkZUZhY3Rvcnkoe1xuICAgICAgZmFjYWRlOiBDaGVja291dEZhY2FkZSxcbiAgICAgIGZlYXR1cmU6IENIRUNLT1VUX0NPUkVfRkVBVFVSRSxcbiAgICAgIG1ldGhvZHM6IFtcbiAgICAgICAgJ3BsYWNlT3JkZXInLFxuICAgICAgICAnc2NoZWR1bGVSZXBsZW5pc2htZW50T3JkZXInLFxuICAgICAgICAnZ2V0UGxhY2VPcmRlckxvYWRpbmcnLFxuICAgICAgICAnZ2V0UGxhY2VPcmRlclN1Y2Nlc3MnLFxuICAgICAgICAnZ2V0UGxhY2VPcmRlckVycm9yJyxcbiAgICAgICAgJ2NsZWFyUGxhY2VPcmRlclN0YXRlJyxcbiAgICAgICAgJ2NsZWFyQ2hlY2tvdXREYXRhJyxcbiAgICAgICAgJ2NsZWFyQ2hlY2tvdXRTdGVwJyxcbiAgICAgICAgJ2xvYWRDaGVja291dERldGFpbHMnLFxuICAgICAgICAnZ2V0Q2hlY2tvdXREZXRhaWxzTG9hZGVkJyxcbiAgICAgICAgJ2lzTG9hZGluZycsXG4gICAgICAgICdnZXRPcmRlckRldGFpbHMnLFxuICAgICAgICAnc2V0T3JkZXJUeXBlJyxcbiAgICAgICAgJ2dldEN1cnJlbnRPcmRlclR5cGUnLFxuICAgICAgXSxcbiAgICAgIGFzeW5jOiB0cnVlLFxuICAgIH0pLFxufSlcbmV4cG9ydCBhYnN0cmFjdCBjbGFzcyBDaGVja291dEZhY2FkZSB7XG4gIC8qKlxuICAgKiBQbGFjZXMgYW4gb3JkZXJcbiAgICovXG4gIGFic3RyYWN0IHBsYWNlT3JkZXIodGVybXNDaGVja2VkOiBib29sZWFuKTogdm9pZDtcblxuICAvKipcbiAgICogU2NoZWR1bGUgYSByZXBsZW5pc2htZW50IG9yZGVyXG4gICAqL1xuICBhYnN0cmFjdCBzY2hlZHVsZVJlcGxlbmlzaG1lbnRPcmRlcihcbiAgICBzY2hlZHVsZVJlcGxlbmlzaG1lbnRGb3JtOiBTY2hlZHVsZVJlcGxlbmlzaG1lbnRGb3JtLFxuICAgIHRlcm1zQ2hlY2tlZDogYm9vbGVhblxuICApOiB2b2lkO1xuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBwbGFjZSBvciBzY2hlZHVsZSByZXBsZW5pc2htZW50IG9yZGVyJ3MgbG9hZGluZyBmbGFnXG4gICAqL1xuICBhYnN0cmFjdCBnZXRQbGFjZU9yZGVyTG9hZGluZygpOiBPYnNlcnZhYmxlPGJvb2xlYW4+O1xuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBwbGFjZSBvciBzY2hlZHVsZSByZXBsZW5pc2htZW50IG9yZGVyJ3Mgc3VjY2VzcyBmbGFnXG4gICAqL1xuICBhYnN0cmFjdCBnZXRQbGFjZU9yZGVyU3VjY2VzcygpOiBPYnNlcnZhYmxlPGJvb2xlYW4+O1xuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBwbGFjZSBvciBzY2hlZHVsZSByZXBsZW5pc2htZW50IG9yZGVyJ3MgZXJyb3IgZmxhZ1xuICAgKi9cbiAgYWJzdHJhY3QgZ2V0UGxhY2VPcmRlckVycm9yKCk6IE9ic2VydmFibGU8Ym9vbGVhbj47XG5cbiAgLyoqXG4gICAqIFJlc2V0cyB0aGUgcGxhY2Ugb3Igc2NoZWR1bGUgcmVwbGVuaXNobWVudCBvcmRlcidzIHByb2Nlc3Npbmcgc3RhdGVcbiAgICovXG4gIGFic3RyYWN0IGNsZWFyUGxhY2VPcmRlclN0YXRlKCk6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIENsZWFyIGNoZWNrb3V0IGRhdGFcbiAgICovXG4gIGFic3RyYWN0IGNsZWFyQ2hlY2tvdXREYXRhKCk6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIENsZWFyIGNoZWNrb3V0IHN0ZXBcbiAgICogQHBhcmFtIHN0ZXBOdW1iZXIgOiB0aGUgc3RlcCBudW1iZXIgdG8gYmUgY2xlYXJlZFxuICAgKi9cbiAgYWJzdHJhY3QgY2xlYXJDaGVja291dFN0ZXAoc3RlcE51bWJlcjogbnVtYmVyKTogdm9pZDtcblxuICAvKipcbiAgICogTG9hZCBjaGVja291dCBkZXRhaWxzIGRhdGFcbiAgICogQHBhcmFtIGNhcnRJZCA6IHN0cmluZyBDYXJ0IElEIG9mIGxvYWRlZCBjYXJ0XG4gICAqL1xuICBhYnN0cmFjdCBsb2FkQ2hlY2tvdXREZXRhaWxzKGNhcnRJZDogc3RyaW5nKTogdm9pZDtcblxuICAvKipcbiAgICogR2V0IHN0YXR1cyBvZiBjaGVja291dCBkZXRhaWxzIGxvYWRlZFxuICAgKi9cbiAgYWJzdHJhY3QgZ2V0Q2hlY2tvdXREZXRhaWxzTG9hZGVkKCk6IE9ic2VydmFibGU8Ym9vbGVhbj47XG5cbiAgLyoqXG4gICAqIENoZWNrIGlmIGNoZWNrb3V0IGRldGFpbHMgYXJlIHN0YWJsZSAobm8gbG9uZ2VyIGxvYWRpbmcpXG4gICAqL1xuICBhYnN0cmFjdCBpc0xvYWRpbmcoKTogT2JzZXJ2YWJsZTxib29sZWFuPjtcblxuICAvKipcbiAgICogR2V0IG9yZGVyIGRldGFpbHNcbiAgICovXG4gIGFic3RyYWN0IGdldE9yZGVyRGV0YWlscygpOiBPYnNlcnZhYmxlPE9yZGVyIHwgUmVwbGVuaXNobWVudE9yZGVyPjtcblxuICAvKipcbiAgICogU2V0IGNoZWNrb3V0IG9yZGVyIHR5cGVcbiAgICogQHBhcmFtIG9yZGVyVHlwZSA6IGFuIGVudW0gb2YgdHlwZXMgb2Ygb3JkZXIgd2UgYXJlIHBsYWNpbmdcbiAgICovXG4gIGFic3RyYWN0IHNldE9yZGVyVHlwZShvcmRlclR5cGU6IE9SREVSX1RZUEUpOiB2b2lkO1xuXG4gIC8qKlxuICAgKiBHZXQgY3VycmVudCBjaGVja291dCBvcmRlciB0eXBlXG4gICAqL1xuICBhYnN0cmFjdCBnZXRDdXJyZW50T3JkZXJUeXBlKCk6IE9ic2VydmFibGU8T1JERVJfVFlQRT47XG59XG4iXX0=