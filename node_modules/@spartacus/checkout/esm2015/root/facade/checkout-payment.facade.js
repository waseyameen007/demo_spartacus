import { Injectable } from '@angular/core';
import { facadeFactory, } from '@spartacus/core';
import { CHECKOUT_CORE_FEATURE } from '../feature-name';
import * as i0 from "@angular/core";
export class CheckoutPaymentFacade {
}
CheckoutPaymentFacade.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CheckoutPaymentFacade, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
CheckoutPaymentFacade.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CheckoutPaymentFacade, providedIn: 'root', useFactory: () => facadeFactory({
        facade: CheckoutPaymentFacade,
        feature: CHECKOUT_CORE_FEATURE,
        methods: [
            'getCardTypes',
            'getPaymentDetails',
            'getSetPaymentDetailsResultProcess',
            'resetSetPaymentDetailsProcess',
            'loadSupportedCardTypes',
            'createPaymentDetails',
            'setPaymentDetails',
            'paymentProcessSuccess',
        ],
        async: true,
    }) });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CheckoutPaymentFacade, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                    useFactory: () => facadeFactory({
                        facade: CheckoutPaymentFacade,
                        feature: CHECKOUT_CORE_FEATURE,
                        methods: [
                            'getCardTypes',
                            'getPaymentDetails',
                            'getSetPaymentDetailsResultProcess',
                            'resetSetPaymentDetailsProcess',
                            'loadSupportedCardTypes',
                            'createPaymentDetails',
                            'setPaymentDetails',
                            'paymentProcessSuccess',
                        ],
                        async: true,
                    }),
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tvdXQtcGF5bWVudC5mYWNhZGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvY2hlY2tvdXQvcm9vdC9mYWNhZGUvY2hlY2tvdXQtcGF5bWVudC5mYWNhZGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBRUwsYUFBYSxHQUdkLE1BQU0saUJBQWlCLENBQUM7QUFFekIsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0saUJBQWlCLENBQUM7O0FBcUJ4RCxNQUFNLE9BQWdCLHFCQUFxQjs7a0hBQXJCLHFCQUFxQjtzSEFBckIscUJBQXFCLGNBbEI3QixNQUFNLGNBQ04sR0FBRyxFQUFFLENBQ2YsYUFBYSxDQUFDO1FBQ1osTUFBTSxFQUFFLHFCQUFxQjtRQUM3QixPQUFPLEVBQUUscUJBQXFCO1FBQzlCLE9BQU8sRUFBRTtZQUNQLGNBQWM7WUFDZCxtQkFBbUI7WUFDbkIsbUNBQW1DO1lBQ25DLCtCQUErQjtZQUMvQix3QkFBd0I7WUFDeEIsc0JBQXNCO1lBQ3RCLG1CQUFtQjtZQUNuQix1QkFBdUI7U0FDeEI7UUFDRCxLQUFLLEVBQUUsSUFBSTtLQUNaLENBQUM7MkZBRWdCLHFCQUFxQjtrQkFuQjFDLFVBQVU7bUJBQUM7b0JBQ1YsVUFBVSxFQUFFLE1BQU07b0JBQ2xCLFVBQVUsRUFBRSxHQUFHLEVBQUUsQ0FDZixhQUFhLENBQUM7d0JBQ1osTUFBTSx1QkFBdUI7d0JBQzdCLE9BQU8sRUFBRSxxQkFBcUI7d0JBQzlCLE9BQU8sRUFBRTs0QkFDUCxjQUFjOzRCQUNkLG1CQUFtQjs0QkFDbkIsbUNBQW1DOzRCQUNuQywrQkFBK0I7NEJBQy9CLHdCQUF3Qjs0QkFDeEIsc0JBQXNCOzRCQUN0QixtQkFBbUI7NEJBQ25CLHVCQUF1Qjt5QkFDeEI7d0JBQ0QsS0FBSyxFQUFFLElBQUk7cUJBQ1osQ0FBQztpQkFDTCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIENhcmRUeXBlLFxuICBmYWNhZGVGYWN0b3J5LFxuICBQYXltZW50RGV0YWlscyxcbiAgU3RhdGVVdGlscyxcbn0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IENIRUNLT1VUX0NPUkVfRkVBVFVSRSB9IGZyb20gJy4uL2ZlYXR1cmUtbmFtZSc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxuICB1c2VGYWN0b3J5OiAoKSA9PlxuICAgIGZhY2FkZUZhY3Rvcnkoe1xuICAgICAgZmFjYWRlOiBDaGVja291dFBheW1lbnRGYWNhZGUsXG4gICAgICBmZWF0dXJlOiBDSEVDS09VVF9DT1JFX0ZFQVRVUkUsXG4gICAgICBtZXRob2RzOiBbXG4gICAgICAgICdnZXRDYXJkVHlwZXMnLFxuICAgICAgICAnZ2V0UGF5bWVudERldGFpbHMnLFxuICAgICAgICAnZ2V0U2V0UGF5bWVudERldGFpbHNSZXN1bHRQcm9jZXNzJyxcbiAgICAgICAgJ3Jlc2V0U2V0UGF5bWVudERldGFpbHNQcm9jZXNzJyxcbiAgICAgICAgJ2xvYWRTdXBwb3J0ZWRDYXJkVHlwZXMnLFxuICAgICAgICAnY3JlYXRlUGF5bWVudERldGFpbHMnLFxuICAgICAgICAnc2V0UGF5bWVudERldGFpbHMnLFxuICAgICAgICAncGF5bWVudFByb2Nlc3NTdWNjZXNzJyxcbiAgICAgIF0sXG4gICAgICBhc3luYzogdHJ1ZSxcbiAgICB9KSxcbn0pXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQ2hlY2tvdXRQYXltZW50RmFjYWRlIHtcbiAgLyoqXG4gICAqIEdldCBjYXJkIHR5cGVzXG4gICAqL1xuICBhYnN0cmFjdCBnZXRDYXJkVHlwZXMoKTogT2JzZXJ2YWJsZTxDYXJkVHlwZVtdPjtcblxuICAvKipcbiAgICogR2V0IHBheW1lbnQgZGV0YWlsc1xuICAgKi9cbiAgYWJzdHJhY3QgZ2V0UGF5bWVudERldGFpbHMoKTogT2JzZXJ2YWJsZTxQYXltZW50RGV0YWlscz47XG5cbiAgLyoqXG4gICAqIEdldCBzdGF0dXMgYWJvdXQgc2V0IFBheW1lbnQgRGV0YWlscyBwcm9jZXNzXG4gICAqL1xuICBhYnN0cmFjdCBnZXRTZXRQYXltZW50RGV0YWlsc1Jlc3VsdFByb2Nlc3MoKTogT2JzZXJ2YWJsZTxcbiAgICBTdGF0ZVV0aWxzLkxvYWRlclN0YXRlPHZvaWQ+XG4gID47XG5cbiAgLyoqXG4gICAqIENsZWFyIGluZm8gYWJvdXQgcHJvY2VzcyBvZiBzZXR0aW5nIFBheW1lbnQgRGV0YWlsc1xuICAgKi9cbiAgYWJzdHJhY3QgcmVzZXRTZXRQYXltZW50RGV0YWlsc1Byb2Nlc3MoKTogdm9pZDtcblxuICAvKipcbiAgICogTG9hZCB0aGUgc3VwcG9ydGVkIGNhcmQgdHlwZXNcbiAgICovXG4gIGFic3RyYWN0IGxvYWRTdXBwb3J0ZWRDYXJkVHlwZXMoKTogdm9pZDtcblxuICAvKipcbiAgICogQ3JlYXRlIHBheW1lbnQgZGV0YWlscyB1c2luZyB0aGUgZ2l2ZW4gcGF5bWVudERldGFpbHMgcGFyYW1cbiAgICogQHBhcmFtIHBheW1lbnREZXRhaWxzOiB0aGUgUGF5bWVudERldGFpbHMgdG8gYmUgY3JlYXRlZFxuICAgKi9cbiAgYWJzdHJhY3QgY3JlYXRlUGF5bWVudERldGFpbHMocGF5bWVudERldGFpbHM6IFBheW1lbnREZXRhaWxzKTogdm9pZDtcblxuICAvKipcbiAgICogU2V0IHBheW1lbnQgZGV0YWlsc1xuICAgKiBAcGFyYW0gcGF5bWVudERldGFpbHMgOiB0aGUgUGF5bWVudERldGFpbHMgdG8gYmUgc2V0XG4gICAqL1xuICBhYnN0cmFjdCBzZXRQYXltZW50RGV0YWlscyhwYXltZW50RGV0YWlsczogUGF5bWVudERldGFpbHMpOiB2b2lkO1xuXG4gIC8qKlxuICAgKiBTZXRzIHBheW1lbnQgbG9hZGluZyB0byB0cnVlIHdpdGhvdXQgaGF2aW5nIHRoZSBmbGlja2VyIGlzc3VlIChHSC0zMTAyKVxuICAgKi9cbiAgYWJzdHJhY3QgcGF5bWVudFByb2Nlc3NTdWNjZXNzKCk6IHZvaWQ7XG59XG4iXX0=