import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { provideDefaultConfig, provideDefaultConfigFactory, } from '@spartacus/core';
import { CmsPageGuard, PageLayoutComponent, ORDER_ENTRIES_CONTEXT, } from '@spartacus/storefront';
import { defaultCheckoutConfig } from './config/default-checkout-config';
import { defaultCheckoutRoutingConfig } from './config/default-checkout-routing-config';
import { CHECKOUT_CORE_FEATURE, CHECKOUT_FEATURE } from './feature-name';
import { interceptors } from './http-interceptors/index';
import { OrderConfirmationOrderEntriesContext } from './pages/order-confirmation-order-entries-context';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
export function defaultCheckoutComponentsConfig() {
    const config = {
        featureModules: {
            [CHECKOUT_FEATURE]: {
                cmsComponents: [
                    'CheckoutOrchestrator',
                    'CheckoutOrderSummary',
                    'CheckoutProgress',
                    'CheckoutProgressMobileBottom',
                    'CheckoutProgressMobileTop',
                    'CheckoutCostCenterComponent',
                    'CheckoutDeliveryMode',
                    'CheckoutPaymentDetails',
                    'CheckoutPaymentType',
                    'CheckoutPlaceOrder',
                    'CheckoutReviewOrder',
                    'CheckoutScheduleReplenishmentOrder',
                    'CheckoutShippingAddress',
                    'GuestCheckoutLoginComponent',
                    'OrderConfirmationThankMessageComponent',
                    'OrderConfirmationItemsComponent',
                    'OrderConfirmationTotalsComponent',
                    'OrderConfirmationOverviewComponent',
                    'ReplenishmentConfirmationMessageComponent',
                    'ReplenishmentConfirmationOverviewComponent',
                    'ReplenishmentConfirmationItemsComponent',
                    'ReplenishmentConfirmationTotalsComponent',
                ],
            },
            // by default core is bundled together with components
            [CHECKOUT_CORE_FEATURE]: CHECKOUT_FEATURE,
        },
    };
    return config;
}
export class CheckoutRootModule {
}
CheckoutRootModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CheckoutRootModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
CheckoutRootModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CheckoutRootModule, imports: [i1.RouterModule] });
CheckoutRootModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CheckoutRootModule, providers: [
        ...interceptors,
        provideDefaultConfig(defaultCheckoutRoutingConfig),
        provideDefaultConfig(defaultCheckoutConfig),
        provideDefaultConfigFactory(defaultCheckoutComponentsConfig),
    ], imports: [[
            RouterModule.forChild([
                {
                    // @ts-ignore
                    path: null,
                    canActivate: [CmsPageGuard],
                    component: PageLayoutComponent,
                    data: {
                        cxRoute: 'orderConfirmation',
                        cxContext: {
                            [ORDER_ENTRIES_CONTEXT]: OrderConfirmationOrderEntriesContext,
                        },
                    },
                },
            ]),
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CheckoutRootModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        RouterModule.forChild([
                            {
                                // @ts-ignore
                                path: null,
                                canActivate: [CmsPageGuard],
                                component: PageLayoutComponent,
                                data: {
                                    cxRoute: 'orderConfirmation',
                                    cxContext: {
                                        [ORDER_ENTRIES_CONTEXT]: OrderConfirmationOrderEntriesContext,
                                    },
                                },
                            },
                        ]),
                    ],
                    providers: [
                        ...interceptors,
                        provideDefaultConfig(defaultCheckoutRoutingConfig),
                        provideDefaultConfig(defaultCheckoutConfig),
                        provideDefaultConfigFactory(defaultCheckoutComponentsConfig),
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tvdXQtcm9vdC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvY2hlY2tvdXQvcm9vdC9jaGVja291dC1yb290Lm1vZHVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQ0wsb0JBQW9CLEVBQ3BCLDJCQUEyQixHQUM1QixNQUFNLGlCQUFpQixDQUFDO0FBQ3pCLE9BQU8sRUFDTCxZQUFZLEVBQ1osbUJBQW1CLEVBQ25CLHFCQUFxQixHQUN0QixNQUFNLHVCQUF1QixDQUFDO0FBQy9CLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLGtDQUFrQyxDQUFDO0FBQ3pFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxNQUFNLDBDQUEwQyxDQUFDO0FBQ3hGLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3pFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsb0NBQW9DLEVBQUUsTUFBTSxrREFBa0QsQ0FBQzs7O0FBRXhHLE1BQU0sVUFBVSwrQkFBK0I7SUFDN0MsTUFBTSxNQUFNLEdBQUc7UUFDYixjQUFjLEVBQUU7WUFDZCxDQUFDLGdCQUFnQixDQUFDLEVBQUU7Z0JBQ2xCLGFBQWEsRUFBRTtvQkFDYixzQkFBc0I7b0JBQ3RCLHNCQUFzQjtvQkFDdEIsa0JBQWtCO29CQUNsQiw4QkFBOEI7b0JBQzlCLDJCQUEyQjtvQkFDM0IsNkJBQTZCO29CQUM3QixzQkFBc0I7b0JBQ3RCLHdCQUF3QjtvQkFDeEIscUJBQXFCO29CQUNyQixvQkFBb0I7b0JBQ3BCLHFCQUFxQjtvQkFDckIsb0NBQW9DO29CQUNwQyx5QkFBeUI7b0JBQ3pCLDZCQUE2QjtvQkFDN0Isd0NBQXdDO29CQUN4QyxpQ0FBaUM7b0JBQ2pDLGtDQUFrQztvQkFDbEMsb0NBQW9DO29CQUNwQywyQ0FBMkM7b0JBQzNDLDRDQUE0QztvQkFDNUMseUNBQXlDO29CQUN6QywwQ0FBMEM7aUJBQzNDO2FBQ0Y7WUFDRCxzREFBc0Q7WUFDdEQsQ0FBQyxxQkFBcUIsQ0FBQyxFQUFFLGdCQUFnQjtTQUMxQztLQUNGLENBQUM7SUFDRixPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBMEJELE1BQU0sT0FBTyxrQkFBa0I7OytHQUFsQixrQkFBa0I7Z0hBQWxCLGtCQUFrQjtnSEFBbEIsa0JBQWtCLGFBUGxCO1FBQ1QsR0FBRyxZQUFZO1FBQ2Ysb0JBQW9CLENBQUMsNEJBQTRCLENBQUM7UUFDbEQsb0JBQW9CLENBQUMscUJBQXFCLENBQUM7UUFDM0MsMkJBQTJCLENBQUMsK0JBQStCLENBQUM7S0FDN0QsWUFyQlE7WUFDUCxZQUFZLENBQUMsUUFBUSxDQUFDO2dCQUNwQjtvQkFDRSxhQUFhO29CQUNiLElBQUksRUFBRSxJQUFJO29CQUNWLFdBQVcsRUFBRSxDQUFDLFlBQVksQ0FBQztvQkFDM0IsU0FBUyxFQUFFLG1CQUFtQjtvQkFDOUIsSUFBSSxFQUFFO3dCQUNKLE9BQU8sRUFBRSxtQkFBbUI7d0JBQzVCLFNBQVMsRUFBRTs0QkFDVCxDQUFDLHFCQUFxQixDQUFDLEVBQUUsb0NBQW9DO3lCQUM5RDtxQkFDRjtpQkFDRjthQUNGLENBQUM7U0FDSDsyRkFRVSxrQkFBa0I7a0JBeEI5QixRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRTt3QkFDUCxZQUFZLENBQUMsUUFBUSxDQUFDOzRCQUNwQjtnQ0FDRSxhQUFhO2dDQUNiLElBQUksRUFBRSxJQUFJO2dDQUNWLFdBQVcsRUFBRSxDQUFDLFlBQVksQ0FBQztnQ0FDM0IsU0FBUyxFQUFFLG1CQUFtQjtnQ0FDOUIsSUFBSSxFQUFFO29DQUNKLE9BQU8sRUFBRSxtQkFBbUI7b0NBQzVCLFNBQVMsRUFBRTt3Q0FDVCxDQUFDLHFCQUFxQixDQUFDLEVBQUUsb0NBQW9DO3FDQUM5RDtpQ0FDRjs2QkFDRjt5QkFDRixDQUFDO3FCQUNIO29CQUNELFNBQVMsRUFBRTt3QkFDVCxHQUFHLFlBQVk7d0JBQ2Ysb0JBQW9CLENBQUMsNEJBQTRCLENBQUM7d0JBQ2xELG9CQUFvQixDQUFDLHFCQUFxQixDQUFDO3dCQUMzQywyQkFBMkIsQ0FBQywrQkFBK0IsQ0FBQztxQkFDN0Q7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7XG4gIHByb3ZpZGVEZWZhdWx0Q29uZmlnLFxuICBwcm92aWRlRGVmYXVsdENvbmZpZ0ZhY3RvcnksXG59IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQge1xuICBDbXNQYWdlR3VhcmQsXG4gIFBhZ2VMYXlvdXRDb21wb25lbnQsXG4gIE9SREVSX0VOVFJJRVNfQ09OVEVYVCxcbn0gZnJvbSAnQHNwYXJ0YWN1cy9zdG9yZWZyb250JztcbmltcG9ydCB7IGRlZmF1bHRDaGVja291dENvbmZpZyB9IGZyb20gJy4vY29uZmlnL2RlZmF1bHQtY2hlY2tvdXQtY29uZmlnJztcbmltcG9ydCB7IGRlZmF1bHRDaGVja291dFJvdXRpbmdDb25maWcgfSBmcm9tICcuL2NvbmZpZy9kZWZhdWx0LWNoZWNrb3V0LXJvdXRpbmctY29uZmlnJztcbmltcG9ydCB7IENIRUNLT1VUX0NPUkVfRkVBVFVSRSwgQ0hFQ0tPVVRfRkVBVFVSRSB9IGZyb20gJy4vZmVhdHVyZS1uYW1lJztcbmltcG9ydCB7IGludGVyY2VwdG9ycyB9IGZyb20gJy4vaHR0cC1pbnRlcmNlcHRvcnMvaW5kZXgnO1xuaW1wb3J0IHsgT3JkZXJDb25maXJtYXRpb25PcmRlckVudHJpZXNDb250ZXh0IH0gZnJvbSAnLi9wYWdlcy9vcmRlci1jb25maXJtYXRpb24tb3JkZXItZW50cmllcy1jb250ZXh0JztcblxuZXhwb3J0IGZ1bmN0aW9uIGRlZmF1bHRDaGVja291dENvbXBvbmVudHNDb25maWcoKSB7XG4gIGNvbnN0IGNvbmZpZyA9IHtcbiAgICBmZWF0dXJlTW9kdWxlczoge1xuICAgICAgW0NIRUNLT1VUX0ZFQVRVUkVdOiB7XG4gICAgICAgIGNtc0NvbXBvbmVudHM6IFtcbiAgICAgICAgICAnQ2hlY2tvdXRPcmNoZXN0cmF0b3InLFxuICAgICAgICAgICdDaGVja291dE9yZGVyU3VtbWFyeScsXG4gICAgICAgICAgJ0NoZWNrb3V0UHJvZ3Jlc3MnLFxuICAgICAgICAgICdDaGVja291dFByb2dyZXNzTW9iaWxlQm90dG9tJyxcbiAgICAgICAgICAnQ2hlY2tvdXRQcm9ncmVzc01vYmlsZVRvcCcsXG4gICAgICAgICAgJ0NoZWNrb3V0Q29zdENlbnRlckNvbXBvbmVudCcsXG4gICAgICAgICAgJ0NoZWNrb3V0RGVsaXZlcnlNb2RlJyxcbiAgICAgICAgICAnQ2hlY2tvdXRQYXltZW50RGV0YWlscycsXG4gICAgICAgICAgJ0NoZWNrb3V0UGF5bWVudFR5cGUnLFxuICAgICAgICAgICdDaGVja291dFBsYWNlT3JkZXInLFxuICAgICAgICAgICdDaGVja291dFJldmlld09yZGVyJyxcbiAgICAgICAgICAnQ2hlY2tvdXRTY2hlZHVsZVJlcGxlbmlzaG1lbnRPcmRlcicsXG4gICAgICAgICAgJ0NoZWNrb3V0U2hpcHBpbmdBZGRyZXNzJyxcbiAgICAgICAgICAnR3Vlc3RDaGVja291dExvZ2luQ29tcG9uZW50JyxcbiAgICAgICAgICAnT3JkZXJDb25maXJtYXRpb25UaGFua01lc3NhZ2VDb21wb25lbnQnLFxuICAgICAgICAgICdPcmRlckNvbmZpcm1hdGlvbkl0ZW1zQ29tcG9uZW50JyxcbiAgICAgICAgICAnT3JkZXJDb25maXJtYXRpb25Ub3RhbHNDb21wb25lbnQnLFxuICAgICAgICAgICdPcmRlckNvbmZpcm1hdGlvbk92ZXJ2aWV3Q29tcG9uZW50JyxcbiAgICAgICAgICAnUmVwbGVuaXNobWVudENvbmZpcm1hdGlvbk1lc3NhZ2VDb21wb25lbnQnLFxuICAgICAgICAgICdSZXBsZW5pc2htZW50Q29uZmlybWF0aW9uT3ZlcnZpZXdDb21wb25lbnQnLFxuICAgICAgICAgICdSZXBsZW5pc2htZW50Q29uZmlybWF0aW9uSXRlbXNDb21wb25lbnQnLFxuICAgICAgICAgICdSZXBsZW5pc2htZW50Q29uZmlybWF0aW9uVG90YWxzQ29tcG9uZW50JyxcbiAgICAgICAgXSxcbiAgICAgIH0sXG4gICAgICAvLyBieSBkZWZhdWx0IGNvcmUgaXMgYnVuZGxlZCB0b2dldGhlciB3aXRoIGNvbXBvbmVudHNcbiAgICAgIFtDSEVDS09VVF9DT1JFX0ZFQVRVUkVdOiBDSEVDS09VVF9GRUFUVVJFLFxuICAgIH0sXG4gIH07XG4gIHJldHVybiBjb25maWc7XG59XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBSb3V0ZXJNb2R1bGUuZm9yQ2hpbGQoW1xuICAgICAge1xuICAgICAgICAvLyBAdHMtaWdub3JlXG4gICAgICAgIHBhdGg6IG51bGwsXG4gICAgICAgIGNhbkFjdGl2YXRlOiBbQ21zUGFnZUd1YXJkXSxcbiAgICAgICAgY29tcG9uZW50OiBQYWdlTGF5b3V0Q29tcG9uZW50LFxuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgY3hSb3V0ZTogJ29yZGVyQ29uZmlybWF0aW9uJyxcbiAgICAgICAgICBjeENvbnRleHQ6IHtcbiAgICAgICAgICAgIFtPUkRFUl9FTlRSSUVTX0NPTlRFWFRdOiBPcmRlckNvbmZpcm1hdGlvbk9yZGVyRW50cmllc0NvbnRleHQsXG4gICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgIH0sXG4gICAgXSksXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIC4uLmludGVyY2VwdG9ycyxcbiAgICBwcm92aWRlRGVmYXVsdENvbmZpZyhkZWZhdWx0Q2hlY2tvdXRSb3V0aW5nQ29uZmlnKSxcbiAgICBwcm92aWRlRGVmYXVsdENvbmZpZyhkZWZhdWx0Q2hlY2tvdXRDb25maWcpLFxuICAgIHByb3ZpZGVEZWZhdWx0Q29uZmlnRmFjdG9yeShkZWZhdWx0Q2hlY2tvdXRDb21wb25lbnRzQ29uZmlnKSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgQ2hlY2tvdXRSb290TW9kdWxlIHt9XG4iXX0=