import { PROCESS_FEATURE } from '@spartacus/core';
import { StateUtils } from '@spartacus/core';
import { PLACED_ORDER_PROCESS_ID } from '../checkout-state';
export const SCHEDULE_REPLENISHMENT_ORDER = '[Checkout] Schedule Replenishment Order';
export const SCHEDULE_REPLENISHMENT_ORDER_SUCCESS = '[Checkout] Schedule Replenishment Order Success';
export const SCHEDULE_REPLENISHMENT_ORDER_FAIL = '[Checkout] Schedule Replenishment Order Fail';
export const CLEAR_SCHEDULE_REPLENISHMENT_ORDER = '[Checkout] Clear Schedule Replenishment Data';
export class ScheduleReplenishmentOrder extends StateUtils.EntityLoadAction {
    constructor(payload) {
        super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);
        this.payload = payload;
        this.type = SCHEDULE_REPLENISHMENT_ORDER;
    }
}
export class ScheduleReplenishmentOrderSuccess extends StateUtils.EntitySuccessAction {
    constructor(payload) {
        super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);
        this.payload = payload;
        this.type = SCHEDULE_REPLENISHMENT_ORDER_SUCCESS;
    }
}
export class ScheduleReplenishmentOrderFail extends StateUtils.EntityFailAction {
    constructor(payload) {
        super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID, payload);
        this.payload = payload;
        this.type = SCHEDULE_REPLENISHMENT_ORDER_FAIL;
    }
}
export class ClearScheduleReplenishmentOrderAction extends StateUtils.EntityLoaderResetAction {
    constructor() {
        super(PROCESS_FEATURE, PLACED_ORDER_PROCESS_ID);
        this.type = CLEAR_SCHEDULE_REPLENISHMENT_ORDER;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwbGVuaXNobWVudC1vcmRlci5hY3Rpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvY2hlY2tvdXQvY29yZS9zdG9yZS9hY3Rpb25zL3JlcGxlbmlzaG1lbnQtb3JkZXIuYWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUNsRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDN0MsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFNUQsTUFBTSxDQUFDLE1BQU0sNEJBQTRCLEdBQ3ZDLHlDQUF5QyxDQUFDO0FBQzVDLE1BQU0sQ0FBQyxNQUFNLG9DQUFvQyxHQUMvQyxpREFBaUQsQ0FBQztBQUNwRCxNQUFNLENBQUMsTUFBTSxpQ0FBaUMsR0FDNUMsOENBQThDLENBQUM7QUFDakQsTUFBTSxDQUFDLE1BQU0sa0NBQWtDLEdBQzdDLDhDQUE4QyxDQUFDO0FBRWpELE1BQU0sT0FBTywwQkFBMkIsU0FBUSxVQUFVLENBQUMsZ0JBQWdCO0lBRXpFLFlBQ1MsT0FLTjtRQUVELEtBQUssQ0FBQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztRQVB6QyxZQUFPLEdBQVAsT0FBTyxDQUtiO1FBUE0sU0FBSSxHQUFHLDRCQUE0QixDQUFDO0lBVTdDLENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxpQ0FBa0MsU0FBUSxVQUFVLENBQUMsbUJBQW1CO0lBRW5GLFlBQW1CLE9BQTJCO1FBQzVDLEtBQUssQ0FBQyxlQUFlLEVBQUUsdUJBQXVCLENBQUMsQ0FBQztRQUQvQixZQUFPLEdBQVAsT0FBTyxDQUFvQjtRQURyQyxTQUFJLEdBQUcsb0NBQW9DLENBQUM7SUFHckQsQ0FBQztDQUNGO0FBRUQsTUFBTSxPQUFPLDhCQUErQixTQUFRLFVBQVUsQ0FBQyxnQkFBZ0I7SUFFN0UsWUFBbUIsT0FBWTtRQUM3QixLQUFLLENBQUMsZUFBZSxFQUFFLHVCQUF1QixFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBRHhDLFlBQU8sR0FBUCxPQUFPLENBQUs7UUFEdEIsU0FBSSxHQUFHLGlDQUFpQyxDQUFDO0lBR2xELENBQUM7Q0FDRjtBQUVELE1BQU0sT0FBTyxxQ0FBc0MsU0FBUSxVQUFVLENBQUMsdUJBQXVCO0lBRTNGO1FBQ0UsS0FBSyxDQUFDLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxDQUFDO1FBRnpDLFNBQUksR0FBRyxrQ0FBa0MsQ0FBQztJQUduRCxDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSZXBsZW5pc2htZW50T3JkZXIsIFNjaGVkdWxlUmVwbGVuaXNobWVudEZvcm0gfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgUFJPQ0VTU19GRUFUVVJFIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IFN0YXRlVXRpbHMgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgUExBQ0VEX09SREVSX1BST0NFU1NfSUQgfSBmcm9tICcuLi9jaGVja291dC1zdGF0ZSc7XG5cbmV4cG9ydCBjb25zdCBTQ0hFRFVMRV9SRVBMRU5JU0hNRU5UX09SREVSID1cbiAgJ1tDaGVja291dF0gU2NoZWR1bGUgUmVwbGVuaXNobWVudCBPcmRlcic7XG5leHBvcnQgY29uc3QgU0NIRURVTEVfUkVQTEVOSVNITUVOVF9PUkRFUl9TVUNDRVNTID1cbiAgJ1tDaGVja291dF0gU2NoZWR1bGUgUmVwbGVuaXNobWVudCBPcmRlciBTdWNjZXNzJztcbmV4cG9ydCBjb25zdCBTQ0hFRFVMRV9SRVBMRU5JU0hNRU5UX09SREVSX0ZBSUwgPVxuICAnW0NoZWNrb3V0XSBTY2hlZHVsZSBSZXBsZW5pc2htZW50IE9yZGVyIEZhaWwnO1xuZXhwb3J0IGNvbnN0IENMRUFSX1NDSEVEVUxFX1JFUExFTklTSE1FTlRfT1JERVIgPVxuICAnW0NoZWNrb3V0XSBDbGVhciBTY2hlZHVsZSBSZXBsZW5pc2htZW50IERhdGEnO1xuXG5leHBvcnQgY2xhc3MgU2NoZWR1bGVSZXBsZW5pc2htZW50T3JkZXIgZXh0ZW5kcyBTdGF0ZVV0aWxzLkVudGl0eUxvYWRBY3Rpb24ge1xuICByZWFkb25seSB0eXBlID0gU0NIRURVTEVfUkVQTEVOSVNITUVOVF9PUkRFUjtcbiAgY29uc3RydWN0b3IoXG4gICAgcHVibGljIHBheWxvYWQ6IHtcbiAgICAgIGNhcnRJZDogc3RyaW5nO1xuICAgICAgc2NoZWR1bGVSZXBsZW5pc2htZW50Rm9ybTogU2NoZWR1bGVSZXBsZW5pc2htZW50Rm9ybTtcbiAgICAgIHRlcm1zQ2hlY2tlZDogYm9vbGVhbjtcbiAgICAgIHVzZXJJZDogc3RyaW5nO1xuICAgIH1cbiAgKSB7XG4gICAgc3VwZXIoUFJPQ0VTU19GRUFUVVJFLCBQTEFDRURfT1JERVJfUFJPQ0VTU19JRCk7XG4gIH1cbn1cblxuZXhwb3J0IGNsYXNzIFNjaGVkdWxlUmVwbGVuaXNobWVudE9yZGVyU3VjY2VzcyBleHRlbmRzIFN0YXRlVXRpbHMuRW50aXR5U3VjY2Vzc0FjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBTQ0hFRFVMRV9SRVBMRU5JU0hNRU5UX09SREVSX1NVQ0NFU1M7XG4gIGNvbnN0cnVjdG9yKHB1YmxpYyBwYXlsb2FkOiBSZXBsZW5pc2htZW50T3JkZXIpIHtcbiAgICBzdXBlcihQUk9DRVNTX0ZFQVRVUkUsIFBMQUNFRF9PUkRFUl9QUk9DRVNTX0lEKTtcbiAgfVxufVxuXG5leHBvcnQgY2xhc3MgU2NoZWR1bGVSZXBsZW5pc2htZW50T3JkZXJGYWlsIGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlGYWlsQWN0aW9uIHtcbiAgcmVhZG9ubHkgdHlwZSA9IFNDSEVEVUxFX1JFUExFTklTSE1FTlRfT1JERVJfRkFJTDtcbiAgY29uc3RydWN0b3IocHVibGljIHBheWxvYWQ6IGFueSkge1xuICAgIHN1cGVyKFBST0NFU1NfRkVBVFVSRSwgUExBQ0VEX09SREVSX1BST0NFU1NfSUQsIHBheWxvYWQpO1xuICB9XG59XG5cbmV4cG9ydCBjbGFzcyBDbGVhclNjaGVkdWxlUmVwbGVuaXNobWVudE9yZGVyQWN0aW9uIGV4dGVuZHMgU3RhdGVVdGlscy5FbnRpdHlMb2FkZXJSZXNldEFjdGlvbiB7XG4gIHJlYWRvbmx5IHR5cGUgPSBDTEVBUl9TQ0hFRFVMRV9SRVBMRU5JU0hNRU5UX09SREVSO1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcihQUk9DRVNTX0ZFQVRVUkUsIFBMQUNFRF9PUkRFUl9QUk9DRVNTX0lEKTtcbiAgfVxufVxuXG5leHBvcnQgdHlwZSBSZXBsZW5pc2htZW50T3JkZXJBY3Rpb25zID1cbiAgfCBTY2hlZHVsZVJlcGxlbmlzaG1lbnRPcmRlclxuICB8IFNjaGVkdWxlUmVwbGVuaXNobWVudE9yZGVyU3VjY2Vzc1xuICB8IFNjaGVkdWxlUmVwbGVuaXNobWVudE9yZGVyRmFpbFxuICB8IENsZWFyU2NoZWR1bGVSZXBsZW5pc2htZW50T3JkZXJBY3Rpb247XG4iXX0=