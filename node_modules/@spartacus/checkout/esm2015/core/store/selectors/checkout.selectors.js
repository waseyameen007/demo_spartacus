import { createFeatureSelector, createSelector, } from '@ngrx/store';
import { StateUtils, } from '@spartacus/core';
import { CHECKOUT_FEATURE, } from '../checkout-state';
const getDeliveryAddressSelector = (state) => state.address;
const getDeliveryModeSelector = (state) => state.deliveryMode;
const getPaymentDetailsSelector = (state) => state.paymentDetails;
const getOrderDetailsSelector = (state) => state.orderDetails;
export const getCheckoutState = createFeatureSelector(CHECKOUT_FEATURE);
export const getCheckoutStepsState = createSelector(getCheckoutState, (checkoutState) => checkoutState.steps);
export const getCheckoutSteps = createSelector(getCheckoutStepsState, (state) => StateUtils.loaderValueSelector(state));
export const getDeliveryAddress = createSelector(getCheckoutSteps, getDeliveryAddressSelector);
export const getDeliveryMode = createSelector(getCheckoutSteps, getDeliveryModeSelector);
export const getSupportedDeliveryModes = createSelector(getDeliveryMode, (deliveryMode) => {
    return (deliveryMode &&
        Object.keys(deliveryMode.supported).map((code) => deliveryMode.supported[code]));
});
export const getSelectedDeliveryModeCode = createSelector(getDeliveryMode, (deliveryMode) => {
    return deliveryMode && deliveryMode.selected;
});
export const getSelectedDeliveryMode = createSelector(getDeliveryMode, (deliveryMode) => {
    if (deliveryMode.selected !== '') {
        if (Object.keys(deliveryMode.supported).length === 0) {
            return null;
        }
        return deliveryMode.supported[deliveryMode.selected];
    }
});
export const getPaymentDetails = createSelector(getCheckoutSteps, getPaymentDetailsSelector);
export const getCheckoutOrderDetails = createSelector(getCheckoutSteps, getOrderDetailsSelector);
export const getCheckoutDetailsLoaded = createSelector(getCheckoutStepsState, (state) => StateUtils.loaderSuccessSelector(state) &&
    !StateUtils.loaderLoadingSelector(state));
export const getCheckoutLoading = createSelector(getCheckoutStepsState, (state) => StateUtils.loaderLoadingSelector(state));
export const getPoNumer = createSelector(getCheckoutSteps, (state) => state.poNumber.po);
export const getCostCenter = createSelector(getCheckoutSteps, (state) => state.poNumber.costCenter);
//# sourceMappingURL=data:application/json;base64,