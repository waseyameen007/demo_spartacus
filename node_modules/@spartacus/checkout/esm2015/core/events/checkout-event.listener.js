import { Injectable } from '@angular/core';
import { RestoreSavedCartSuccessEvent, SaveCartSuccessEvent, SavedCartEvent, } from '@spartacus/cart/saved-cart/root';
import { DeleteUserAddressEvent, UpdateUserAddressEvent, UserAddressEvent, } from '@spartacus/core';
import { Subscription } from 'rxjs';
import { filter } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/checkout/root";
import * as i2 from "@spartacus/core";
export class CheckoutEventListener {
    constructor(checkoutDeliveryFacade, clearCheckoutFacade, eventService) {
        this.checkoutDeliveryFacade = checkoutDeliveryFacade;
        this.clearCheckoutFacade = clearCheckoutFacade;
        this.eventService = eventService;
        this.subscription = new Subscription();
        this.onUserAddressChange();
        this.onSavedCartChange();
    }
    /**
     * Clears the checkout delivery info when an address in the address book is
     * changed ( updated, set as default or deleted )
     *
     * Listens for UpdateUserAddressEvent or DeleteUserAddressEvent
     */
    onUserAddressChange() {
        this.subscription.add(this.eventService
            .get(UserAddressEvent)
            .pipe(filter((event) => {
            return (event instanceof UpdateUserAddressEvent ||
                event instanceof DeleteUserAddressEvent);
        }))
            .subscribe((_event) => {
            this.checkoutDeliveryFacade.clearCheckoutDeliveryDetails();
        }));
    }
    /**
     * What te active cart is saved for later or when a saved card is restored,
     * the whole checkout state is reset.
     *
     * Listens for SaveCartSuccessEvent or RestoreSavedCartSuccessEvent
     */
    onSavedCartChange() {
        this.subscription.add(this.eventService
            .get(SavedCartEvent)
            .pipe(filter((event) => {
            return (event instanceof SaveCartSuccessEvent ||
                event instanceof RestoreSavedCartSuccessEvent);
        }))
            .subscribe((_event) => {
            this.clearCheckoutFacade.resetCheckoutProcesses();
        }));
    }
    ngOnDestroy() {
        var _a;
        (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();
    }
}
CheckoutEventListener.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CheckoutEventListener, deps: [{ token: i1.CheckoutDeliveryFacade }, { token: i1.ClearCheckoutFacade }, { token: i2.EventService }], target: i0.ɵɵFactoryTarget.Injectable });
CheckoutEventListener.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CheckoutEventListener, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CheckoutEventListener, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return [{ type: i1.CheckoutDeliveryFacade }, { type: i1.ClearCheckoutFacade }, { type: i2.EventService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hlY2tvdXQtZXZlbnQubGlzdGVuZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvY2hlY2tvdXQvY29yZS9ldmVudHMvY2hlY2tvdXQtZXZlbnQubGlzdGVuZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBYSxNQUFNLGVBQWUsQ0FBQztBQUN0RCxPQUFPLEVBQ0wsNEJBQTRCLEVBQzVCLG9CQUFvQixFQUNwQixjQUFjLEdBQ2YsTUFBTSxpQ0FBaUMsQ0FBQztBQUt6QyxPQUFPLEVBQ0wsc0JBQXNCLEVBRXRCLHNCQUFzQixFQUN0QixnQkFBZ0IsR0FDakIsTUFBTSxpQkFBaUIsQ0FBQztBQUN6QixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxNQUFNLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7OztBQUt4QyxNQUFNLE9BQU8scUJBQXFCO0lBR2hDLFlBQ1ksc0JBQThDLEVBQzlDLG1CQUF3QyxFQUN4QyxZQUEwQjtRQUYxQiwyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXdCO1FBQzlDLHdCQUFtQixHQUFuQixtQkFBbUIsQ0FBcUI7UUFDeEMsaUJBQVksR0FBWixZQUFZLENBQWM7UUFMNUIsaUJBQVksR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBTzFDLElBQUksQ0FBQyxtQkFBbUIsRUFBRSxDQUFDO1FBQzNCLElBQUksQ0FBQyxpQkFBaUIsRUFBRSxDQUFDO0lBQzNCLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNPLG1CQUFtQjtRQUMzQixJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FDbkIsSUFBSSxDQUFDLFlBQVk7YUFDZCxHQUFHLENBQUMsZ0JBQWdCLENBQUM7YUFDckIsSUFBSSxDQUNILE1BQU0sQ0FBQyxDQUFDLEtBQUssRUFBRSxFQUFFO1lBQ2YsT0FBTyxDQUNMLEtBQUssWUFBWSxzQkFBc0I7Z0JBQ3ZDLEtBQUssWUFBWSxzQkFBc0IsQ0FDeEMsQ0FBQztRQUNKLENBQUMsQ0FBQyxDQUNIO2FBQ0EsU0FBUyxDQUFDLENBQUMsTUFBTSxFQUFFLEVBQUU7WUFDcEIsSUFBSSxDQUFDLHNCQUFzQixDQUFDLDRCQUE0QixFQUFFLENBQUM7UUFDN0QsQ0FBQyxDQUFDLENBQ0wsQ0FBQztJQUNKLENBQUM7SUFFRDs7Ozs7T0FLRztJQUNPLGlCQUFpQjtRQUN6QixJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FDbkIsSUFBSSxDQUFDLFlBQVk7YUFDZCxHQUFHLENBQUMsY0FBYyxDQUFDO2FBQ25CLElBQUksQ0FDSCxNQUFNLENBQUMsQ0FBQyxLQUFLLEVBQUUsRUFBRTtZQUNmLE9BQU8sQ0FDTCxLQUFLLFlBQVksb0JBQW9CO2dCQUNyQyxLQUFLLFlBQVksNEJBQTRCLENBQzlDLENBQUM7UUFDSixDQUFDLENBQUMsQ0FDSDthQUNBLFNBQVMsQ0FBQyxDQUFDLE1BQU0sRUFBRSxFQUFFO1lBQ3BCLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxzQkFBc0IsRUFBRSxDQUFDO1FBQ3BELENBQUMsQ0FBQyxDQUNMLENBQUM7SUFDSixDQUFDO0lBRUQsV0FBVzs7UUFDVCxNQUFBLElBQUksQ0FBQyxZQUFZLDBDQUFFLFdBQVcsRUFBRSxDQUFDO0lBQ25DLENBQUM7O2tIQTlEVSxxQkFBcUI7c0hBQXJCLHFCQUFxQixjQUZwQixNQUFNOzJGQUVQLHFCQUFxQjtrQkFIakMsVUFBVTttQkFBQztvQkFDVixVQUFVLEVBQUUsTUFBTTtpQkFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIFJlc3RvcmVTYXZlZENhcnRTdWNjZXNzRXZlbnQsXG4gIFNhdmVDYXJ0U3VjY2Vzc0V2ZW50LFxuICBTYXZlZENhcnRFdmVudCxcbn0gZnJvbSAnQHNwYXJ0YWN1cy9jYXJ0L3NhdmVkLWNhcnQvcm9vdCc7XG5pbXBvcnQge1xuICBDaGVja291dERlbGl2ZXJ5RmFjYWRlLFxuICBDbGVhckNoZWNrb3V0RmFjYWRlLFxufSBmcm9tICdAc3BhcnRhY3VzL2NoZWNrb3V0L3Jvb3QnO1xuaW1wb3J0IHtcbiAgRGVsZXRlVXNlckFkZHJlc3NFdmVudCxcbiAgRXZlbnRTZXJ2aWNlLFxuICBVcGRhdGVVc2VyQWRkcmVzc0V2ZW50LFxuICBVc2VyQWRkcmVzc0V2ZW50LFxufSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBmaWx0ZXIgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5cbkBJbmplY3RhYmxlKHtcbiAgcHJvdmlkZWRJbjogJ3Jvb3QnLFxufSlcbmV4cG9ydCBjbGFzcyBDaGVja291dEV2ZW50TGlzdGVuZXIgaW1wbGVtZW50cyBPbkRlc3Ryb3kge1xuICBwcm90ZWN0ZWQgc3Vic2NyaXB0aW9uID0gbmV3IFN1YnNjcmlwdGlvbigpO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCBjaGVja291dERlbGl2ZXJ5RmFjYWRlOiBDaGVja291dERlbGl2ZXJ5RmFjYWRlLFxuICAgIHByb3RlY3RlZCBjbGVhckNoZWNrb3V0RmFjYWRlOiBDbGVhckNoZWNrb3V0RmFjYWRlLFxuICAgIHByb3RlY3RlZCBldmVudFNlcnZpY2U6IEV2ZW50U2VydmljZVxuICApIHtcbiAgICB0aGlzLm9uVXNlckFkZHJlc3NDaGFuZ2UoKTtcbiAgICB0aGlzLm9uU2F2ZWRDYXJ0Q2hhbmdlKCk7XG4gIH1cblxuICAvKipcbiAgICogQ2xlYXJzIHRoZSBjaGVja291dCBkZWxpdmVyeSBpbmZvIHdoZW4gYW4gYWRkcmVzcyBpbiB0aGUgYWRkcmVzcyBib29rIGlzXG4gICAqIGNoYW5nZWQgKCB1cGRhdGVkLCBzZXQgYXMgZGVmYXVsdCBvciBkZWxldGVkIClcbiAgICpcbiAgICogTGlzdGVucyBmb3IgVXBkYXRlVXNlckFkZHJlc3NFdmVudCBvciBEZWxldGVVc2VyQWRkcmVzc0V2ZW50XG4gICAqL1xuICBwcm90ZWN0ZWQgb25Vc2VyQWRkcmVzc0NoYW5nZSgpIHtcbiAgICB0aGlzLnN1YnNjcmlwdGlvbi5hZGQoXG4gICAgICB0aGlzLmV2ZW50U2VydmljZVxuICAgICAgICAuZ2V0KFVzZXJBZGRyZXNzRXZlbnQpXG4gICAgICAgIC5waXBlKFxuICAgICAgICAgIGZpbHRlcigoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgIGV2ZW50IGluc3RhbmNlb2YgVXBkYXRlVXNlckFkZHJlc3NFdmVudCB8fFxuICAgICAgICAgICAgICBldmVudCBpbnN0YW5jZW9mIERlbGV0ZVVzZXJBZGRyZXNzRXZlbnRcbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSlcbiAgICAgICAgKVxuICAgICAgICAuc3Vic2NyaWJlKChfZXZlbnQpID0+IHtcbiAgICAgICAgICB0aGlzLmNoZWNrb3V0RGVsaXZlcnlGYWNhZGUuY2xlYXJDaGVja291dERlbGl2ZXJ5RGV0YWlscygpO1xuICAgICAgICB9KVxuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogV2hhdCB0ZSBhY3RpdmUgY2FydCBpcyBzYXZlZCBmb3IgbGF0ZXIgb3Igd2hlbiBhIHNhdmVkIGNhcmQgaXMgcmVzdG9yZWQsXG4gICAqIHRoZSB3aG9sZSBjaGVja291dCBzdGF0ZSBpcyByZXNldC5cbiAgICpcbiAgICogTGlzdGVucyBmb3IgU2F2ZUNhcnRTdWNjZXNzRXZlbnQgb3IgUmVzdG9yZVNhdmVkQ2FydFN1Y2Nlc3NFdmVudFxuICAgKi9cbiAgcHJvdGVjdGVkIG9uU2F2ZWRDYXJ0Q2hhbmdlKCkge1xuICAgIHRoaXMuc3Vic2NyaXB0aW9uLmFkZChcbiAgICAgIHRoaXMuZXZlbnRTZXJ2aWNlXG4gICAgICAgIC5nZXQoU2F2ZWRDYXJ0RXZlbnQpXG4gICAgICAgIC5waXBlKFxuICAgICAgICAgIGZpbHRlcigoZXZlbnQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoXG4gICAgICAgICAgICAgIGV2ZW50IGluc3RhbmNlb2YgU2F2ZUNhcnRTdWNjZXNzRXZlbnQgfHxcbiAgICAgICAgICAgICAgZXZlbnQgaW5zdGFuY2VvZiBSZXN0b3JlU2F2ZWRDYXJ0U3VjY2Vzc0V2ZW50XG4gICAgICAgICAgICApO1xuICAgICAgICAgIH0pXG4gICAgICAgIClcbiAgICAgICAgLnN1YnNjcmliZSgoX2V2ZW50KSA9PiB7XG4gICAgICAgICAgdGhpcy5jbGVhckNoZWNrb3V0RmFjYWRlLnJlc2V0Q2hlY2tvdXRQcm9jZXNzZXMoKTtcbiAgICAgICAgfSlcbiAgICApO1xuICB9XG5cbiAgbmdPbkRlc3Ryb3koKTogdm9pZCB7XG4gICAgdGhpcy5zdWJzY3JpcHRpb24/LnVuc3Vic2NyaWJlKCk7XG4gIH1cbn1cbiJdfQ==