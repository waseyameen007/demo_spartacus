{"version":3,"file":"spartacus-product-variants-components.js","sources":["../../../feature-libs/product/variants/components/variant-color-selector/product-variant-color-selector.component.ts","../../../feature-libs/product/variants/components/variant-color-selector/product-variant-color-selector.component.html","../../../feature-libs/product/variants/components/variant-color-selector/product-variant-color-selector.module.ts","../../../feature-libs/product/variants/components/variant-size-selector/product-variant-size-selector.component.ts","../../../feature-libs/product/variants/components/variant-size-selector/product-variant-size-selector.component.html","../../../feature-libs/product/variants/components/variant-size-selector/product-variant-size-selector.module.ts","../../../feature-libs/product/variants/components/variant-style-selector/product-variant-style-selector.component.ts","../../../feature-libs/product/variants/components/variant-style-selector/product-variant-style-selector.component.html","../../../feature-libs/product/variants/components/variant-style-selector/product-variant-style-selector.module.ts","../../../feature-libs/product/variants/components/product-variants-container/product-variants-container.component.ts","../../../feature-libs/product/variants/components/product-variants-container/product-variants-container.component.html","../../../feature-libs/product/variants/components/product-variants-container/product-variants-container.module.ts","../../../feature-libs/product/variants/components/guards/product-variants.guard.ts","../../../feature-libs/product/variants/components/product-variants-components.module.ts","../../../feature-libs/product/variants/components/spartacus-product-variants-components.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  BaseOption,\n  Product,\n  RoutingService,\n  VariantOptionQualifier,\n  VariantQualifier,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-product-variant-color-selector',\n  templateUrl: './product-variant-color-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantColorSelectorComponent {\n  constructor(private routingService: RoutingService) {}\n\n  @Input()\n  product: Product;\n\n  @Input()\n  variants: BaseOption;\n\n  changeColor(code: string, name: string): null {\n    if (code) {\n      this.routingService.go({\n        cxRoute: 'product',\n        params: { code, name },\n      });\n    }\n    return null;\n  }\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.COLOR);\n    return obj ? obj.value : '';\n  }\n}\n","<ng-container>\n  <div class=\"variant-selector\">\n    <div class=\"variant-name\">{{ 'productVariants.color' | cxTranslate }}:</div>\n\n    <select\n      (change)=\"changeColor($event.target.value, product?.name)\"\n      class=\"form-control variant-select\"\n    >\n      <option\n        *ngFor=\"let v of variants?.options\"\n        value=\"{{ v.code }}\"\n        [selected]=\"v.code === product?.code\"\n      >\n        {{ getVariantOptionValue(v.variantOptionQualifiers) }}\n      </option>\n    </select>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { ProductVariantColorSelectorComponent } from './product-variant-color-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [ProductVariantColorSelectorComponent],\n  exports: [ProductVariantColorSelectorComponent],\n})\nexport class ProductVariantColorSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  Product,\n  RoutingService,\n  BaseOption,\n  VariantQualifier,\n  VariantOptionQualifier,\n  ProductService,\n  ProductScope,\n} from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-product-variant-size-selector',\n  templateUrl: './product-variant-size-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantSizeSelectorComponent {\n  constructor(\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  @Input()\n  product: Product;\n\n  @Input()\n  variants: BaseOption;\n\n  changeSize(code: string): null {\n    if (code) {\n      this.productService\n        .get(code, ProductScope.LIST)\n        .pipe(\n          // below call might looks redundant but in fact this data is going to be loaded anyways\n          // we're just calling it earlier and storing\n          filter((p) => !!p),\n          take(1)\n        )\n        .subscribe((product: Product) => {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: product,\n          });\n        });\n    }\n    return null;\n  }\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.SIZE);\n    return obj ? obj.value : '';\n  }\n}\n","<ng-container>\n  <div class=\"variant-selector\">\n    <div class=\"variant-name\">{{ 'productVariants.size' | cxTranslate }}:</div>\n    <select\n      (change)=\"changeSize($event.target.value)\"\n      class=\"form-control variant-select\"\n    >\n      <option\n        *ngFor=\"let v of variants?.options\"\n        value=\"{{ v.code }}\"\n        [selected]=\"v.code === product?.code\"\n      >\n        {{ getVariantOptionValue(v.variantOptionQualifiers) }}\n      </option>\n    </select>\n    <a\n      href=\"#\"\n      class=\"size-guide\"\n      title=\"{{ 'productVariants.sizeGuideLabel' | cxTranslate }}\"\n    >\n      {{ 'productVariants.sizeGuideLabel' | cxTranslate }}\n    </a>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { ProductVariantSizeSelectorComponent } from './product-variant-size-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [ProductVariantSizeSelectorComponent],\n  exports: [ProductVariantSizeSelectorComponent],\n})\nexport class ProductVariantSizeSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  OccConfig,\n  BaseOption,\n  VariantQualifier,\n  VariantOptionQualifier,\n  Product,\n  ProductService,\n  ProductScope,\n  RoutingService,\n} from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-product-variant-style-selector',\n  templateUrl: './product-variant-style-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantStyleSelectorComponent {\n  constructor(\n    private config: OccConfig,\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  variantQualifier = VariantQualifier;\n\n  @Input()\n  variants: BaseOption;\n\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.STYLE);\n    return obj ? obj.value : '';\n  }\n\n  getVariantThumbnailUrl(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const qualifier = variantOptionQualifiers.find((item) => item.image);\n\n    return qualifier\n      ? `${this.config?.backend?.occ?.baseUrl}${qualifier.image?.url}`\n      : '';\n  }\n\n  changeStyle(code: string): null {\n    if (code) {\n      this.productService\n        .get(code, ProductScope.LIST)\n        .pipe(\n          // below call might looks redundant but in fact this data is going to be loaded anyways\n          // we're just calling it earlier and storing\n          filter((p) => !!p),\n          take(1)\n        )\n        .subscribe((product: Product) => {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: product,\n          });\n        });\n    }\n    return null;\n  }\n}\n","<ng-container>\n  <div class=\"variant-selector\">\n    <div *ngIf=\"variants.selected\" class=\"variant-name\">\n      {{ 'productVariants.style' | cxTranslate }}:\n      <span class=\"style-name\">{{\n        getVariantOptionValue(variants?.selected.variantOptionQualifiers)\n      }}</span>\n    </div>\n    <ul class=\"variant-list\">\n      <li\n        *ngFor=\"let v of variants?.options\"\n        [ngClass]=\"{ 'selected-variant': v.code === variants?.selected?.code }\"\n      >\n        <button class=\"variant-button\" (click)=\"changeStyle(v.code)\">\n          <img\n            src=\"{{ getVariantThumbnailUrl(v.variantOptionQualifiers) }}\"\n            title=\"{{ getVariantOptionValue(v.variantOptionQualifiers) }}\"\n            alt=\"{{ getVariantOptionValue(v.variantOptionQualifiers) }}\"\n          />\n        </button>\n      </li>\n    </ul>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { ProductVariantStyleSelectorComponent } from './product-variant-style-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [ProductVariantStyleSelectorComponent],\n  exports: [ProductVariantStyleSelectorComponent],\n})\nexport class ProductVariantStyleSelectorModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  BaseOption,\n  isNotNullable,\n  Product,\n  RequiredPick,\n  VariantType,\n} from '@spartacus/core';\nimport { CurrentProductService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-product-variants-container',\n  templateUrl: './product-variants-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantsContainerComponent implements OnInit {\n  constructor(private currentProductService: CurrentProductService) {}\n\n  variants: { [key: string]: BaseOption } = {};\n  variantType = VariantType;\n  product$: Observable<Product | null>;\n\n  ngOnInit(): void {\n    this.product$ = this.currentProductService.getProduct().pipe(\n      filter(isNotNullable),\n      filter(\n        (product): product is RequiredPick<Product, 'baseOptions'> =>\n          !!product.baseOptions\n      ),\n      distinctUntilChanged(),\n      tap((product) => {\n        product.baseOptions.forEach((option: BaseOption) => {\n          if (option?.variantType) {\n            this.variants[option.variantType] = option;\n          }\n        });\n      })\n    );\n  }\n}\n","<ng-container *ngIf=\"product$ | async as product\">\n  <div class=\"variant-section\" *ngIf=\"product.baseOptions?.length\">\n    <cx-product-variant-style-selector\n      *ngIf=\"variants[variantType.STYLE]\"\n      [variants]=\"variants[variantType.STYLE]\"\n    ></cx-product-variant-style-selector>\n    <cx-product-variant-size-selector\n      *ngIf=\"variants[variantType.SIZE]\"\n      [product]=\"product\"\n      [variants]=\"variants[variantType.SIZE]\"\n    ></cx-product-variant-size-selector>\n    <cx-product-variant-color-selector\n      *ngIf=\"variants[variantType.COLOR]\"\n      [product]=\"product\"\n      [variants]=\"variants[variantType.COLOR]\"\n    ></cx-product-variant-color-selector>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { ProductVariantColorSelectorModule } from '../variant-color-selector/product-variant-color-selector.module';\nimport { ProductVariantSizeSelectorModule } from '../variant-size-selector/product-variant-size-selector.module';\nimport { ProductVariantStyleSelectorModule } from '../variant-style-selector/product-variant-style-selector.module';\nimport { ProductVariantsContainerComponent } from './product-variants-container.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ProductVariantStyleSelectorModule,\n    ProductVariantSizeSelectorModule,\n    ProductVariantColorSelectorModule,\n  ],\n  declarations: [ProductVariantsContainerComponent],\n})\nexport class ProductVariantsContainerModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  UrlTree,\n} from '@angular/router';\nimport {\n  Product,\n  ProductScope,\n  ProductService,\n  SemanticPathService,\n  VariantOption,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n/**\n * Guard that will redirect to purchasable variant of product, if the navigation\n * is for the non-purchasable one\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductVariantsGuard implements CanActivate {\n  constructor(\n    protected productService: ProductService,\n    protected semanticPathService: SemanticPathService,\n    protected router: Router\n  ) {}\n  canActivate(\n    activatedRoute: ActivatedRouteSnapshot\n  ): Observable<boolean | UrlTree> {\n    const productCode = activatedRoute.params?.productCode;\n    if (!productCode) {\n      return of(true);\n    }\n    return this.productService.get(productCode, ProductScope.VARIANTS).pipe(\n      filter((p) => !!p),\n      switchMap((product: Product) => {\n        if (!product.purchasable) {\n          const purchasableCode = this.findPurchasableProductCode(product);\n          if (purchasableCode) {\n            return this.productService\n              .get(purchasableCode, ProductScope.LIST)\n              .pipe(\n                filter((p) => !!p),\n                take(1),\n                map((_product: Product) => {\n                  return this.router.createUrlTree(\n                    this.semanticPathService.transform({\n                      cxRoute: 'product',\n                      params: _product,\n                    })\n                  );\n                })\n              );\n          }\n        }\n        return of(true);\n      })\n    );\n  }\n  /**\n   * Finds a purchasable product code looking at variant options, if any\n   *\n   * @param product\n   */\n  protected findPurchasableProductCode(product: Product): string | undefined {\n    if (product.variantOptions?.length) {\n      const results: VariantOption[] = product.variantOptions.filter(\n        (variant) => {\n          return variant.stock && variant.stock.stockLevel ? variant : false;\n        }\n      );\n      return results && results.length\n        ? results[0]?.code\n        : product.variantOptions[0]?.code;\n    }\n    return undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ProductVariantsContainerModule } from './product-variants-container/product-variants-container.module';\nimport { ProductVariantColorSelectorModule } from './variant-color-selector/product-variant-color-selector.module';\nimport { ProductVariantSizeSelectorModule } from './variant-size-selector/product-variant-size-selector.module';\nimport { ProductVariantStyleSelectorModule } from './variant-style-selector/product-variant-style-selector.module';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { ProductVariantsContainerComponent } from './product-variants-container/product-variants-container.component';\nimport { ProductVariantsGuard } from './guards/product-variants.guard';\n\n@NgModule({\n  imports: [\n    ProductVariantsContainerModule,\n    ProductVariantColorSelectorModule,\n    ProductVariantSizeSelectorModule,\n    ProductVariantStyleSelectorModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductVariantSelectorComponent: {\n          component: ProductVariantsContainerComponent,\n          guards: [ProductVariantsGuard],\n        },\n      },\n    }),\n  ],\n})\nexport class ProductVariantsComponentsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}