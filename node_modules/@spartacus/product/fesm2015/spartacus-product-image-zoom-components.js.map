{"version":3,"file":"spartacus-product-image-zoom-components.js","sources":["../../../feature-libs/product/image-zoom/components/product-image-zoom/product-image-zoom-thumbnails/product-image-zoom-thumbnails.component.ts","../../../feature-libs/product/image-zoom/components/product-image-zoom/product-image-zoom-thumbnails/product-image-zoom-thumbnails.component.html","../../../feature-libs/product/image-zoom/components/product-image-zoom/product-image-zoom-view/product-image-zoom-view.component.ts","../../../feature-libs/product/image-zoom/components/product-image-zoom/product-image-zoom-view/product-image-zoom-view.component.html","../../../feature-libs/product/image-zoom/components/product-image-zoom/product-image-zoom-dialog/product-image-zoom-dialog.component.ts","../../../feature-libs/product/image-zoom/components/product-image-zoom/product-image-zoom-dialog/product-image-zoom-dialog.component.html","../../../feature-libs/product/image-zoom/components/product-image-zoom/default-product-image-zoom-layout.config.ts","../../../feature-libs/product/image-zoom/components/product-image-zoom/product-image-zoom-trigger/product-image-zoom-trigger.component.ts","../../../feature-libs/product/image-zoom/components/product-image-zoom/product-image-zoom-trigger/product-image-zoom-trigger.component.html","../../../feature-libs/product/image-zoom/components/product-image-zoom/product-image-zoom-product-images/product-image-zoom-product-images.component.ts","../../../feature-libs/product/image-zoom/components/product-image-zoom/product-image-zoom-product-images/product-image-zoom-product-images.component.html","../../../feature-libs/product/image-zoom/components/product-image-zoom/product-image-zoom.module.ts","../../../feature-libs/product/image-zoom/components/product-image-zoom-components.module.ts","../../../feature-libs/product/image-zoom/components/spartacus-product-image-zoom-components.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { ImageGroup, isNotNullable } from '@spartacus/core';\nimport { ThumbnailsGroup } from '@spartacus/product/image-zoom/root';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-product-image-zoom-thumbnails',\n  templateUrl: './product-image-zoom-thumbnails.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductImageZoomThumbnailsComponent implements OnInit, OnDestroy {\n  private mainMediaContainer = new BehaviorSubject<ImageGroup>({});\n\n  @Output() productImage = new EventEmitter<{ image: any; index: number }>();\n\n  @Input() thumbs$: Observable<ThumbnailsGroup[]>;\n\n  @Input() activeThumb: EventEmitter<ImageGroup>;\n\n  protected subscription = new Subscription();\n\n  selectedIndex: number;\n\n  constructor() {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.activeThumb.subscribe((image) => {\n        this.mainMediaContainer.next(image);\n      })\n    );\n  }\n\n  openImage(image: ImageGroup): void {\n    this.mainMediaContainer.next(image);\n    if (typeof image.zoom?.galleryIndex === 'number') {\n      this.productImage.emit({ image, index: image.zoom.galleryIndex });\n    }\n  }\n\n  isActive(thumbnail: ImageGroup): Observable<boolean> {\n    return this.mainMediaContainer.asObservable().pipe(\n      filter(isNotNullable),\n      map((container: ImageGroup) => {\n        return (container.zoom?.url &&\n          thumbnail.zoom?.url &&\n          container.zoom.url === thumbnail.zoom.url) as boolean;\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<ng-container *ngIf=\"thumbs$ | async as thumbs\">\n  <cx-carousel\n    *ngIf=\"thumbs.length\"\n    class=\"thumbs\"\n    [items]=\"thumbs\"\n    itemWidth=\"70px\"\n    [hideIndicators]=\"false\"\n    [template]=\"thumb\"\n  ></cx-carousel>\n</ng-container>\n\n<ng-template #thumb let-item=\"item\">\n  <cx-media\n    [container]=\"item.container\"\n    tabindex=\"0\"\n    (focus)=\"openImage(item.container)\"\n    [class.is-active]=\"isActive(item.container) | async\"\n  >\n  </cx-media>\n</ng-template>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewChild,\n  EventEmitter,\n} from '@angular/core';\nimport { ImageGroup, isNotNullable, Product } from '@spartacus/core';\nimport { ThumbnailsGroup } from '@spartacus/product/image-zoom/root';\nimport {\n  BREAKPOINT,\n  BreakpointService,\n  CurrentProductService,\n  ICON_TYPE,\n} from '@spartacus/storefront';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  fromEvent,\n  merge,\n  Observable,\n  of,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  switchMap,\n  switchMapTo,\n  tap,\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-product-image-zoom-view',\n  templateUrl: './product-image-zoom-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductImageZoomViewComponent implements OnInit, OnDestroy {\n  iconType = ICON_TYPE;\n\n  @Input() galleryIndex: number;\n\n  private mainMediaContainer = new BehaviorSubject<ImageGroup | null>(null);\n  private defaultImageReady = new BehaviorSubject<boolean>(false);\n  private zoomReady = new BehaviorSubject<boolean>(false);\n  private _defaultImage: ElementRef;\n  private _zoomImage: ElementRef;\n\n  protected subscription = new Subscription();\n  protected mainMediaContainer$: Observable<ImageGroup | null> =\n    this.mainMediaContainer.asObservable();\n  protected defaultImageReady$: Observable<boolean> =\n    this.defaultImageReady.asObservable();\n  protected zoomReady$: Observable<boolean> = this.zoomReady.asObservable();\n\n  activeThumb: EventEmitter<ImageGroup> = new EventEmitter<ImageGroup>();\n\n  defaultImageClickHandler$: Observable<any[]> = this.defaultImageReady$.pipe(\n    filter(Boolean),\n    switchMap((_) =>\n      merge(...this.clickOrDoubleClick(this.defaultImage)).pipe(\n        tap(() => this.zoom())\n      )\n    )\n  );\n\n  get defaultImage(): ElementRef {\n    return this._defaultImage;\n  }\n\n  @ViewChild('defaultImage', { read: ElementRef }) set defaultImage(\n    el: ElementRef\n  ) {\n    if (el) {\n      this._defaultImage = el;\n      this.defaultImageReady.next(true);\n    }\n  }\n\n  zoomImageClickHandler$: Observable<any[]> = this.zoomReady$.pipe(\n    filter(Boolean),\n    switchMap((_) =>\n      merge(...this.clickOrDoubleClick(this.zoomImage)).pipe(\n        tap(() => this.zoom())\n      )\n    )\n  );\n\n  get zoomImage(): ElementRef {\n    return this._zoomImage;\n  }\n\n  @ViewChild('zoomContainer', { read: ElementRef }) set zoomImage(\n    el: ElementRef\n  ) {\n    if (el) {\n      this._zoomImage = el;\n      this.zoomReady.next(true);\n    }\n  }\n\n  @ViewChild('zoomedImage', { read: ElementRef }) zoomedImage: ElementRef;\n\n  startCoords: { x: number; y: number } | null = null;\n  left = 0;\n  top = 0;\n  isZoomed = false;\n\n  protected product$: Observable<Product> = this.currentProductService\n    .getProduct()\n    .pipe(\n      filter(isNotNullable),\n      distinctUntilChanged(),\n      tap((p: Product) => {\n        if (this.galleryIndex) {\n          const image = Array.isArray(p.images?.GALLERY)\n            ? p.images?.GALLERY.find(\n                (img) => img.zoom?.galleryIndex === this.galleryIndex\n              )\n            : p.images?.GALLERY;\n          this.mainMediaContainer.next(image || null);\n        } else {\n          this.mainMediaContainer.next(\n            p.images?.PRIMARY ? (p.images.PRIMARY as ImageGroup) : {}\n          );\n        }\n      }),\n      shareReplay(1)\n    );\n\n  thumbnails$: Observable<Observable<ThumbnailsGroup>[]> = this.product$.pipe(\n    map((p: Product) => this.createThumbs(p)),\n    shareReplay(1)\n  );\n\n  mainImage$: Observable<ImageGroup | null> = combineLatest([\n    this.product$,\n    this.mainMediaContainer$,\n  ]).pipe(map(([, container]) => container));\n\n  constructor(\n    protected currentProductService: CurrentProductService,\n    protected renderer: Renderer2,\n    protected cdRef: ChangeDetectorRef,\n    protected breakpointService: BreakpointService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(this.defaultImageClickHandler$.subscribe());\n    this.subscription.add(this.zoomImageClickHandler$.subscribe());\n  }\n\n  openImage(item: ImageGroup): void {\n    this.mainMediaContainer.next(item);\n    this.activeThumb.emit(item);\n  }\n\n  /** find the index of the main media in the list of media */\n  protected getActive(): number {\n    if (Array.isArray(this.mainMediaContainer.value)) {\n      return this.mainMediaContainer.value[0].thumbnail?.galleryIndex || 0;\n    }\n    return this.mainMediaContainer?.value?.thumbnail?.galleryIndex || 0;\n  }\n\n  getPreviousProduct(thumbs: Observable<ImageGroup>[]): Observable<ImageGroup> {\n    const active = this.getActive();\n    if (active === 0) {\n      return thumbs[active];\n    }\n    return thumbs[active - 1];\n  }\n\n  getNextProduct(thumbs: Observable<ImageGroup>[]): Observable<ImageGroup> {\n    const active = this.getActive();\n    if (active === thumbs.length - 1) {\n      return thumbs[active];\n    }\n    return thumbs[active + 1];\n  }\n\n  /**\n   * Zoom in or out of the image\n   */\n  zoom(): void {\n    this.isZoomed = !this.isZoomed;\n    this.startCoords = null;\n    this.left = 0;\n    this.top = 0;\n    this.cdRef.markForCheck();\n  }\n\n  /**\n   * Touch screen image pan\n   *\n   * @param event\n   */\n  touchMove(event: TouchEvent): void {\n    const touch = event.touches[0] || event.changedTouches[0];\n    const boundingRect =\n      this.zoomedImage?.nativeElement?.getBoundingClientRect() as DOMRect;\n    const imageElement = this.zoomedImage?.nativeElement?.firstChild;\n\n    if (!this.startCoords)\n      this.startCoords = { x: touch.clientX, y: touch.clientY };\n\n    this.left += touch.clientX - this.startCoords.x;\n    this.top += touch.clientY - this.startCoords.y;\n\n    this.moveImage(this.left, this.top, boundingRect, imageElement);\n\n    this.startCoords = { x: touch.clientX, y: touch.clientY };\n  }\n\n  /**\n   * Clears touch location\n   */\n  clearTouch(): void {\n    this.startCoords = null;\n  }\n\n  /**\n   * Pointer image pan\n   *\n   * @param event\n   */\n  pointerMove(event: MouseEvent): void {\n    const boundingRect =\n      this.zoomedImage.nativeElement.getBoundingClientRect() as DOMRect;\n    const imageElement = this.zoomedImage.nativeElement.firstChild;\n\n    const { positionX, positionY } = this.calculatePointerMovePosition(\n      this.zoomedImage,\n      event.clientX,\n      event.clientY\n    );\n\n    this.moveImage(positionX, positionY, boundingRect, imageElement);\n  }\n\n  changeImage(event: { image: ImageGroup; index: number }): void {\n    this.mainMediaContainer.next(event.image);\n  }\n\n  /**\n   * Applies the offset from touchMove or pointerMove to the image element\n   *\n   * @param positionX\n   * @param positionY\n   * @param boundingRect\n   * @param imageElement\n   */\n  protected moveImage(\n    positionX: number,\n    positionY: number,\n    boundingRect: any,\n    imageElement: DOMRect\n  ): void {\n    const { x, y } = this.handleOutOfBounds(\n      positionX,\n      positionY,\n      imageElement,\n      boundingRect\n    );\n\n    if (imageElement) {\n      this.renderer.setStyle(imageElement, 'left', x + 'px');\n      this.renderer.setStyle(imageElement, 'top', y + 'px');\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  /**\n   * Returns click and dblclick event mapping for the given element\n   *\n   * @param element\n   */\n  private clickOrDoubleClick(element: ElementRef): Observable<any>[] {\n    return [\n      fromEvent(element.nativeElement, 'click').pipe(\n        switchMapTo(this.breakpointService.isUp(BREAKPOINT.md)),\n        filter(Boolean)\n      ),\n      fromEvent(element.nativeElement, 'dblclick').pipe(\n        switchMapTo(this.breakpointService.isDown(BREAKPOINT.lg)),\n        filter(Boolean)\n      ),\n    ];\n  }\n\n  /**\n   * Return an array of CarouselItems for the product thumbnails.\n   * In case there are less then 2 thumbs, we return null.\n   */\n  private createThumbs(product: Product): Observable<ThumbnailsGroup>[] {\n    if (\n      !product.images ||\n      !product.images.GALLERY ||\n      product.images.GALLERY.length < 2\n    ) {\n      return [];\n    }\n\n    const images: ImageGroup[] = product.images.GALLERY as ImageGroup[];\n\n    return images.map((c) => of({ container: c }));\n  }\n\n  /**\n   * Keeps the zoom image from leaving the bounding container\n   *\n   * @param positionX\n   * @param positionY\n   * @param imageElement\n   * @param boundingRect\n   */\n  handleOutOfBounds(\n    positionX: number,\n    positionY: number,\n    imageElement: any,\n    boundingRect: DOMRect\n  ): { x: number; y: number } {\n    const paddingX = 60;\n    const paddingY = 60;\n\n    if (positionY <= -imageElement?.height + paddingY) {\n      positionY = -imageElement?.height + paddingY;\n    }\n    if (positionY >= boundingRect?.height - paddingY) {\n      positionY = boundingRect?.height - paddingY;\n    }\n    if (\n      positionX <=\n      -imageElement?.width - boundingRect?.width / 2 + paddingX\n    ) {\n      positionX = -imageElement?.width - boundingRect?.width / 2 + paddingX;\n    }\n    if (positionX >= imageElement?.width + boundingRect?.width / 2 - paddingX) {\n      positionX = imageElement?.width + boundingRect?.width / 2 - paddingX;\n    }\n\n    return { x: positionX, y: positionY };\n  }\n\n  /**\n   * Returns the position of the image based on the cursor pointer\n   *\n   * @param element\n   * @param clientX\n   * @param clientY\n   */\n  calculatePointerMovePosition(\n    element: ElementRef,\n    clientX: number,\n    clientY: number\n  ): { positionX: number; positionY: number } {\n    const boundingRect =\n      element.nativeElement.getBoundingClientRect() as DOMRect;\n\n    const x = clientX - boundingRect.left;\n    const y = clientY - boundingRect.top;\n\n    const positionX = -x + element.nativeElement.clientWidth / 2;\n    const positionY = -y + element.nativeElement.clientHeight / 2;\n\n    return { positionX, positionY };\n  }\n}\n","<ng-container *ngIf=\"mainImage$ | async as main\">\n  <div class=\"cx-main-image-group\" *ngIf=\"thumbnails$ | async as thumbs\">\n    <div class=\"cx-navigate-image\">\n      <button\n        class=\"btn btn-link\"\n        *ngIf=\"getPreviousProduct(thumbs) | async as previousProduct\"\n        (click)=\"openImage(previousProduct.container)\"\n      >\n        <cx-icon [type]=\"iconType.CARET_LEFT\"></cx-icon>\n      </button>\n    </div>\n    <cx-media\n      #defaultImage\n      class=\"cx-default-image-zoom\"\n      *ngIf=\"!isZoomed\"\n      [container]=\"main\"\n    >\n    </cx-media>\n    <div #zoomContainer class=\"cx-zoom-container\" *ngIf=\"isZoomed\">\n      <cx-media\n        #zoomedImage\n        class=\"cx-image-zoomed\"\n        [container]=\"main\"\n        (mousemove)=\"pointerMove($event)\"\n        (touchmove)=\"touchMove($event)\"\n        (touchend)=\"clearTouch()\"\n      >\n      </cx-media>\n    </div>\n    <div class=\"cx-navigate-image\">\n      <button\n        class=\"btn btn-link\"\n        *ngIf=\"getNextProduct(thumbs) | async as nextProduct\"\n        (click)=\"openImage(nextProduct.container)\"\n      >\n        <cx-icon [type]=\"iconType.CARET_RIGHT\"></cx-icon>\n      </button>\n    </div>\n  </div>\n</ng-container>\n\n<cx-product-image-zoom-thumbnails\n  [thumbs$]=\"thumbnails$\"\n  [activeThumb]=\"activeThumb\"\n  (productImage)=\"changeImage($event)\"\n></cx-product-image-zoom-thumbnails>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostListener,\n  Input,\n} from '@angular/core';\nimport {\n  FocusConfig,\n  ICON_TYPE,\n  LaunchDialogService,\n} from '@spartacus/storefront';\n\n@Component({\n  selector: 'cx-product-image-zoom-dialog',\n  templateUrl: 'product-image-zoom-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductImageZoomDialogComponent {\n  iconType = ICON_TYPE;\n\n  focusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    autofocus: 'button',\n    focusOnEscape: true,\n  };\n\n  @Input() galleryIndex: number;\n\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    // Close on click outside the dialog window\n    if ((event.target as any).tagName === this.el.nativeElement.tagName) {\n      this.close('Cross click');\n    }\n  }\n\n  constructor(\n    protected launchDialogService: LaunchDialogService,\n    protected el: ElementRef\n  ) {}\n\n  close(reason = ''): void {\n    this.launchDialogService.closeDialog(reason);\n  }\n}\n","<div class=\"cx-image-zoom-dialog\" [cxFocus]=\"focusConfig\">\n  <div class=\"cx-dialog-content\">\n    <div class=\"cx-dialog-header\">\n      <button\n        type=\"button\"\n        class=\"close\"\n        [attr.aria-label]=\"'productImageZoomDialog.close' | cxTranslate\"\n        (click)=\"close('cross click')\"\n      >\n        <span aria-hidden=\"true\">\n          <cx-icon [type]=\"iconType.CLOSE\"></cx-icon>\n        </span>\n      </button>\n    </div>\n    <div class=\"cx-dialog-body\">\n      <cx-product-image-zoom-view\n        [galleryIndex]=\"galleryIndex\"\n      ></cx-product-image-zoom-view>\n    </div>\n  </div>\n</div>\n","import { DIALOG_TYPE, LayoutConfig } from '@spartacus/storefront';\nimport { ProductImageZoomDialogComponent } from './product-image-zoom-dialog/product-image-zoom-dialog.component';\n\nexport const defaultProductImageZoomLayoutConfig: LayoutConfig = {\n  launch: {\n    PRODUCT_IMAGE_ZOOM: {\n      inline: true,\n      component: ProductImageZoomDialogComponent,\n      dialogType: DIALOG_TYPE.DIALOG,\n    },\n  },\n};\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  Output,\n  ViewContainerRef,\n  ViewChild,\n  ElementRef,\n} from '@angular/core';\nimport {\n  ICON_TYPE,\n  LaunchDialogService,\n  LAUNCH_CALLER,\n} from '@spartacus/storefront';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { filter, tap } from 'rxjs/operators';\nimport { ProductImageZoomDialogComponent } from '../product-image-zoom-dialog/product-image-zoom-dialog.component';\n\n@Component({\n  selector: 'cx-product-image-zoom-trigger',\n  templateUrl: 'product-image-zoom-trigger.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductImageZoomTriggerComponent implements OnDestroy {\n  iconType = ICON_TYPE;\n  protected subscriptions = new Subscription();\n\n  //Expose the expand button so it can gain focus on closing the zoom window\n  @ViewChild('expandButton') expandButton: ElementRef;\n\n  @Input() galleryIndex: number;\n  @Input() set expandImage(expand: boolean) {\n    if (expand) {\n      this.triggerZoom();\n    }\n  }\n\n  @Output() dialogClose = new EventEmitter<void>();\n\n  constructor(\n    protected launchDialogService: LaunchDialogService,\n    protected vcr: ViewContainerRef\n  ) {}\n\n  triggerZoom(): void {\n    const component = this.launchDialogService.launch(\n      LAUNCH_CALLER.PRODUCT_IMAGE_ZOOM,\n      this.vcr\n    );\n    if (component) {\n      this.subscriptions.add(\n        combineLatest([component, this.launchDialogService.dialogClose])\n          .pipe(\n            tap(([comp]) => {\n              if (this.galleryIndex) {\n                (\n                  comp as ComponentRef<ProductImageZoomDialogComponent>\n                ).instance.galleryIndex = this.galleryIndex;\n              }\n            }),\n            filter(([, close]) => Boolean(close)),\n            tap(([comp]) => {\n              this.launchDialogService.clear(LAUNCH_CALLER.PRODUCT_IMAGE_ZOOM);\n              comp?.destroy();\n              this.dialogClose.emit();\n              this.expandButton.nativeElement.focus();\n            })\n          )\n          .subscribe()\n      );\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<button\n  #expandButton\n  class=\"btn btn-link cx-action-link\"\n  (click)=\"triggerZoom()\"\n>\n  <span>\n    {{ 'productImageZoomTrigger.expand' | cxTranslate }}\n    <cx-icon [type]=\"iconType.EXPAND_ARROWS\"></cx-icon\n  ></span>\n</button>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport {\n  CurrentProductService,\n  ProductImagesComponent,\n} from '@spartacus/storefront';\n\n@Component({\n  selector: 'cx-product-images',\n  templateUrl: './product-image-zoom-product-images.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductImageZoomProductImagesComponent extends ProductImagesComponent {\n  expandImage = new BehaviorSubject(false);\n  selectedIndex: number | undefined;\n\n  constructor(protected currentProductService: CurrentProductService) {\n    super(currentProductService);\n  }\n\n  openImage(item: any): void {\n    this.mainMediaContainer.next(item);\n    this.selectedIndex = this.mainMediaContainer.value?.zoom?.galleryIndex;\n  }\n\n  /**\n   * Opens image zoom dialog.\n   */\n  triggerZoom(value: boolean): void {\n    this.expandImage.next(value);\n  }\n}\n","<ng-container *ngIf=\"mainImage$ | async as main\">\n  <cx-media [container]=\"main\" (click)=\"triggerZoom(true)\"></cx-media>\n  <cx-product-image-zoom-trigger\n    [expandImage]=\"expandImage.value\"\n    [galleryIndex]=\"selectedIndex\"\n    (dialogClose)=\"triggerZoom(false)\"\n  ></cx-product-image-zoom-trigger>\n</ng-container>\n\n<ng-container *ngIf=\"thumbs$ | async as thumbs\">\n  <cx-carousel\n    *ngIf=\"thumbs.length\"\n    class=\"thumbs\"\n    [items]=\"thumbs\"\n    itemWidth=\"120px\"\n    [hideIndicators]=\"false\"\n    [template]=\"thumb\"\n  ></cx-carousel>\n</ng-container>\n\n<ng-template #thumb let-item=\"item\">\n  <cx-media\n    [container]=\"item.container\"\n    tabindex=\"0\"\n    (focus)=\"openImage(item.container)\"\n    [class.is-active]=\"isActive(item.container) | async\"\n    format=\"product\"\n  >\n  </cx-media>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  provideConfig,\n  I18nModule,\n  provideDefaultConfig,\n  CmsConfig,\n} from '@spartacus/core';\nimport {\n  CarouselModule,\n  IconModule,\n  KeyboardFocusModule,\n  MediaModule,\n  OutletModule,\n} from '@spartacus/storefront';\nimport { defaultProductImageZoomLayoutConfig } from './default-product-image-zoom-layout.config';\nimport { ProductImageZoomDialogComponent } from './product-image-zoom-dialog/product-image-zoom-dialog.component';\nimport { ProductImageZoomProductImagesComponent } from './product-image-zoom-product-images/product-image-zoom-product-images.component';\nimport { ProductImageZoomThumbnailsComponent } from './product-image-zoom-thumbnails/product-image-zoom-thumbnails.component';\nimport { ProductImageZoomTriggerComponent } from './product-image-zoom-trigger/product-image-zoom-trigger.component';\nimport { ProductImageZoomViewComponent } from './product-image-zoom-view/product-image-zoom-view.component';\n\n@NgModule({\n  imports: [\n    CarouselModule,\n    CommonModule,\n    I18nModule,\n    IconModule,\n    KeyboardFocusModule,\n    MediaModule,\n    OutletModule,\n    RouterModule,\n  ],\n  providers: [\n    provideConfig(defaultProductImageZoomLayoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductImagesComponent: {\n          component: ProductImageZoomProductImagesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [\n    ProductImageZoomDialogComponent,\n    ProductImageZoomProductImagesComponent,\n    ProductImageZoomThumbnailsComponent,\n    ProductImageZoomTriggerComponent,\n    ProductImageZoomViewComponent,\n  ],\n  exports: [\n    ProductImageZoomDialogComponent,\n    ProductImageZoomProductImagesComponent,\n    ProductImageZoomThumbnailsComponent,\n    ProductImageZoomTriggerComponent,\n    ProductImageZoomViewComponent,\n  ],\n})\nexport class ProductImageZoomModule {}\n","import { NgModule } from '@angular/core';\nimport { ProductImageZoomModule } from './product-image-zoom/product-image-zoom.module';\n\n@NgModule({\n  imports: [ProductImageZoomModule],\n})\nexport class ProductImageZoomComponentsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;;;;;MAmBa,mCAAmC;IAa9C;QAZQ,uBAAkB,GAAG,IAAI,eAAe,CAAa,EAAE,CAAC,CAAC;QAEvD,iBAAY,GAAG,IAAI,YAAY,EAAiC,CAAC;QAMjE,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;KAI5B;IAEhB,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,GAAG,CACnB,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,KAAK;YAC/B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACrC,CAAC,CACH,CAAC;KACH;IAED,SAAS,CAAC,KAAiB;;QACzB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,QAAO,MAAA,KAAK,CAAC,IAAI,0CAAE,YAAY,CAAA,KAAK,QAAQ,EAAE;YAChD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;SACnE;KACF;IAED,QAAQ,CAAC,SAAqB;QAC5B,OAAO,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC,IAAI,CAChD,MAAM,CAAC,aAAa,CAAC,EACrB,GAAG,CAAC,CAAC,SAAqB;;YACxB,QAAQ,CAAA,MAAA,SAAS,CAAC,IAAI,0CAAE,GAAG;iBACzB,MAAA,SAAS,CAAC,IAAI,0CAAE,GAAG,CAAA;gBACnB,SAAS,CAAC,IAAI,CAAC,GAAG,KAAK,SAAS,CAAC,IAAI,CAAC,GAAG,EAAa;SACzD,CAAC,CACH,CAAC;KACH;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;gIA3CU,mCAAmC;oHAAnC,mCAAmC,+KCnBhD,igBAoBA;2FDDa,mCAAmC;kBAL/C,SAAS;mBAAC;oBACT,QAAQ,EAAE,kCAAkC;oBAC5C,WAAW,EAAE,gDAAgD;oBAC7D,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;0EAIW,YAAY;sBAArB,MAAM;gBAEE,OAAO;sBAAf,KAAK;gBAEG,WAAW;sBAAnB,KAAK;;;MEkBK,6BAA6B;IAuGxC,YACY,qBAA4C,EAC5C,QAAmB,EACnB,KAAwB,EACxB,iBAAoC;QAHpC,0BAAqB,GAArB,qBAAqB,CAAuB;QAC5C,aAAQ,GAAR,QAAQ,CAAW;QACnB,UAAK,GAAL,KAAK,CAAmB;QACxB,sBAAiB,GAAjB,iBAAiB,CAAmB;QA1GhD,aAAQ,GAAG,SAAS,CAAC;QAIb,uBAAkB,GAAG,IAAI,eAAe,CAAoB,IAAI,CAAC,CAAC;QAClE,sBAAiB,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;QACxD,cAAS,GAAG,IAAI,eAAe,CAAU,KAAK,CAAC,CAAC;QAI9C,iBAAY,GAAG,IAAI,YAAY,EAAE,CAAC;QAClC,wBAAmB,GAC3B,IAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,CAAC;QAC/B,uBAAkB,GAC1B,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;QAC9B,eAAU,GAAwB,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAE1E,gBAAW,GAA6B,IAAI,YAAY,EAAc,CAAC;QAEvE,8BAAyB,GAAsB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CACzE,MAAM,CAAC,OAAO,CAAC,EACf,SAAS,CAAC,CAAC,CAAC,KACV,KAAK,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CACvD,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,CACvB,CACF,CACF,CAAC;QAeF,2BAAsB,GAAsB,IAAI,CAAC,UAAU,CAAC,IAAI,CAC9D,MAAM,CAAC,OAAO,CAAC,EACf,SAAS,CAAC,CAAC,CAAC,KACV,KAAK,CAAC,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CACpD,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,CACvB,CACF,CACF,CAAC;QAiBF,gBAAW,GAAoC,IAAI,CAAC;QACpD,SAAI,GAAG,CAAC,CAAC;QACT,QAAG,GAAG,CAAC,CAAC;QACR,aAAQ,GAAG,KAAK,CAAC;QAEP,aAAQ,GAAwB,IAAI,CAAC,qBAAqB;aACjE,UAAU,EAAE;aACZ,IAAI,CACH,MAAM,CAAC,aAAa,CAAC,EACrB,oBAAoB,EAAE,EACtB,GAAG,CAAC,CAAC,CAAU;;YACb,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAA,CAAC,CAAC,MAAM,0CAAE,OAAO,CAAC;sBAC1C,MAAA,CAAC,CAAC,MAAM,0CAAE,OAAO,CAAC,IAAI,CACpB,CAAC,GAAG,eAAK,OAAA,CAAA,MAAA,GAAG,CAAC,IAAI,0CAAE,YAAY,MAAK,IAAI,CAAC,YAAY,CAAA,EAAA,CACtD;sBACD,MAAA,CAAC,CAAC,MAAM,0CAAE,OAAO,CAAC;gBACtB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC;aAC7C;iBAAM;gBACL,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAC1B,CAAA,MAAA,CAAC,CAAC,MAAM,0CAAE,OAAO,IAAI,CAAC,CAAC,MAAM,CAAC,OAAsB,GAAG,EAAE,CAC1D,CAAC;aACH;SACF,CAAC,EACF,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEJ,gBAAW,GAA8C,IAAI,CAAC,QAAQ,CAAC,IAAI,CACzE,GAAG,CAAC,CAAC,CAAU,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,EACzC,WAAW,CAAC,CAAC,CAAC,CACf,CAAC;QAEF,eAAU,GAAkC,aAAa,CAAC;YACxD,IAAI,CAAC,QAAQ;YACb,IAAI,CAAC,mBAAmB;SACzB,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC;KAOvC;IA/EJ,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;IAED,IAAqD,YAAY,CAC/D,EAAc;QAEd,IAAI,EAAE,EAAE;YACN,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;YACxB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACnC;KACF;IAWD,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;KACxB;IAED,IAAsD,SAAS,CAC7D,EAAc;QAEd,IAAI,EAAE,EAAE;YACN,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;YACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SAC3B;KACF;IAgDD,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,yBAAyB,CAAC,SAAS,EAAE,CAAC,CAAC;QAClE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC,SAAS,EAAE,CAAC,CAAC;KAChE;IAED,SAAS,CAAC,IAAgB;QACxB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC7B;;IAGS,SAAS;;QACjB,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,EAAE;YAChD,OAAO,CAAA,MAAA,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,0CAAE,YAAY,KAAI,CAAC,CAAC;SACtE;QACD,OAAO,CAAA,MAAA,MAAA,MAAA,IAAI,CAAC,kBAAkB,0CAAE,KAAK,0CAAE,SAAS,0CAAE,YAAY,KAAI,CAAC,CAAC;KACrE;IAED,kBAAkB,CAAC,MAAgC;QACjD,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,MAAM,KAAK,CAAC,EAAE;YAChB,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC;SACvB;QACD,OAAO,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAC3B;IAED,cAAc,CAAC,MAAgC;QAC7C,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;QAChC,IAAI,MAAM,KAAK,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YAChC,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC;SACvB;QACD,OAAO,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;KAC3B;;;;IAKD,IAAI;QACF,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;KAC3B;;;;;;IAOD,SAAS,CAAC,KAAiB;;QACzB,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;QAC1D,MAAM,YAAY,GAChB,MAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,aAAa,0CAAE,qBAAqB,EAAa,CAAC;QACtE,MAAM,YAAY,GAAG,MAAA,MAAA,IAAI,CAAC,WAAW,0CAAE,aAAa,0CAAE,UAAU,CAAC;QAEjE,IAAI,CAAC,IAAI,CAAC,WAAW;YACnB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;QAE5D,IAAI,CAAC,IAAI,IAAI,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAChD,IAAI,CAAC,GAAG,IAAI,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;QAE/C,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;QAEhE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC;KAC3D;;;;IAKD,UAAU;QACR,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;KACzB;;;;;;IAOD,WAAW,CAAC,KAAiB;QAC3B,MAAM,YAAY,GAChB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,qBAAqB,EAAa,CAAC;QACpE,MAAM,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,UAAU,CAAC;QAE/D,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC,4BAA4B,CAChE,IAAI,CAAC,WAAW,EAChB,KAAK,CAAC,OAAO,EACb,KAAK,CAAC,OAAO,CACd,CAAC;QAEF,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;KAClE;IAED,WAAW,CAAC,KAA2C;QACrD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAC3C;;;;;;;;;IAUS,SAAS,CACjB,SAAiB,EACjB,SAAiB,EACjB,YAAiB,EACjB,YAAqB;QAErB,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,IAAI,CAAC,iBAAiB,CACrC,SAAS,EACT,SAAS,EACT,YAAY,EACZ,YAAY,CACb,CAAC;QAEF,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,EAAE,MAAM,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;YACvD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,YAAY,EAAE,KAAK,EAAE,CAAC,GAAG,IAAI,CAAC,CAAC;SACvD;KACF;IAED,WAAW;QACT,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC;KACjC;;;;;;IAOO,kBAAkB,CAAC,OAAmB;QAC5C,OAAO;YACL,SAAS,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,IAAI,CAC5C,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EACvD,MAAM,CAAC,OAAO,CAAC,CAChB;YACD,SAAS,CAAC,OAAO,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC,IAAI,CAC/C,WAAW,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,EACzD,MAAM,CAAC,OAAO,CAAC,CAChB;SACF,CAAC;KACH;;;;;IAMO,YAAY,CAAC,OAAgB;QACnC,IACE,CAAC,OAAO,CAAC,MAAM;YACf,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO;YACvB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EACjC;YACA,OAAO,EAAE,CAAC;SACX;QAED,MAAM,MAAM,GAAiB,OAAO,CAAC,MAAM,CAAC,OAAuB,CAAC;QAEpE,OAAO,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;KAChD;;;;;;;;;IAUD,iBAAiB,CACf,SAAiB,EACjB,SAAiB,EACjB,YAAiB,EACjB,YAAqB;QAErB,MAAM,QAAQ,GAAG,EAAE,CAAC;QACpB,MAAM,QAAQ,GAAG,EAAE,CAAC;QAEpB,IAAI,SAAS,IAAI,EAAC,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,MAAM,CAAA,GAAG,QAAQ,EAAE;YACjD,SAAS,GAAG,EAAC,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,MAAM,CAAA,GAAG,QAAQ,CAAC;SAC9C;QACD,IAAI,SAAS,IAAI,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,MAAM,IAAG,QAAQ,EAAE;YAChD,SAAS,GAAG,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,MAAM,IAAG,QAAQ,CAAC;SAC7C;QACD,IACE,SAAS;YACT,EAAC,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,CAAA,GAAG,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,IAAG,CAAC,GAAG,QAAQ,EACzD;YACA,SAAS,GAAG,EAAC,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,CAAA,GAAG,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,IAAG,CAAC,GAAG,QAAQ,CAAC;SACvE;QACD,IAAI,SAAS,IAAI,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,IAAG,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,IAAG,CAAC,GAAG,QAAQ,EAAE;YACzE,SAAS,GAAG,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,IAAG,CAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,KAAK,IAAG,CAAC,GAAG,QAAQ,CAAC;SACtE;QAED,OAAO,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC,EAAE,SAAS,EAAE,CAAC;KACvC;;;;;;;;IASD,4BAA4B,CAC1B,OAAmB,EACnB,OAAe,EACf,OAAe;QAEf,MAAM,YAAY,GAChB,OAAO,CAAC,aAAa,CAAC,qBAAqB,EAAa,CAAC;QAE3D,MAAM,CAAC,GAAG,OAAO,GAAG,YAAY,CAAC,IAAI,CAAC;QACtC,MAAM,CAAC,GAAG,OAAO,GAAG,YAAY,CAAC,GAAG,CAAC;QAErC,MAAM,SAAS,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,WAAW,GAAG,CAAC,CAAC;QAC7D,MAAM,SAAS,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,aAAa,CAAC,YAAY,GAAG,CAAC,CAAC;QAE9D,OAAO,EAAE,SAAS,EAAE,SAAS,EAAE,CAAC;KACjC;;0HA5UU,6BAA6B;8GAA7B,6BAA6B,qMAiCL,UAAU,qGAsBT,UAAU,qGASZ,UAAU,6BC5G9C,+6CA8CA;2FDFa,6BAA6B;kBALzC,SAAS;mBAAC;oBACT,QAAQ,EAAE,4BAA4B;oBACtC,WAAW,EAAE,0CAA0C;oBACvD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;oMAIU,YAAY;sBAApB,KAAK;gBA8B+C,YAAY;sBAAhE,SAAS;uBAAC,cAAc,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;gBAsBO,SAAS;sBAA9D,SAAS;uBAAC,eAAe,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;gBASA,WAAW;sBAA1D,SAAS;uBAAC,aAAa,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE;;;ME1FnC,+BAA+B;IAoB1C,YACY,mBAAwC,EACxC,EAAc;QADd,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,OAAE,GAAF,EAAE,CAAY;QArB1B,aAAQ,GAAG,SAAS,CAAC;QAErB,gBAAW,GAAgB;YACzB,IAAI,EAAE,IAAI;YACV,KAAK,EAAE,IAAI;YACX,SAAS,EAAE,QAAQ;YACnB,aAAa,EAAE,IAAI;SACpB,CAAC;KAeE;IAVJ,WAAW,CAAC,KAAc;;QAExB,IAAK,KAAK,CAAC,MAAc,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,OAAO,EAAE;YACnE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;SAC3B;KACF;IAOD,KAAK,CAAC,MAAM,GAAG,EAAE;QACf,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;KAC9C;;4HA3BU,+BAA+B;gHAA/B,+BAA+B,uKClB5C,6oBAqBA;2FDHa,+BAA+B;kBAL3C,SAAS;mBAAC;oBACT,QAAQ,EAAE,8BAA8B;oBACxC,WAAW,EAAE,0CAA0C;oBACvD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;mIAWU,YAAY;sBAApB,KAAK;gBAGN,WAAW;sBADV,YAAY;uBAAC,OAAO,EAAE,CAAC,QAAQ,CAAC;;;ME3BtB,mCAAmC,GAAiB;IAC/D,MAAM,EAAE;QACN,kBAAkB,EAAE;YAClB,MAAM,EAAE,IAAI;YACZ,SAAS,EAAE,+BAA+B;YAC1C,UAAU,EAAE,WAAW,CAAC,MAAM;SAC/B;KACF;;;MCgBU,gCAAgC;IAgB3C,YACY,mBAAwC,EACxC,GAAqB;QADrB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,QAAG,GAAH,GAAG,CAAkB;QAjBjC,aAAQ,GAAG,SAAS,CAAC;QACX,kBAAa,GAAG,IAAI,YAAY,EAAE,CAAC;QAYnC,gBAAW,GAAG,IAAI,YAAY,EAAQ,CAAC;KAK7C;IAXJ,IAAa,WAAW,CAAC,MAAe;QACtC,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,WAAW,EAAE,CAAC;SACpB;KACF;IASD,WAAW;QACT,MAAM,SAAS,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,gDAE/C,IAAI,CAAC,GAAG,CACT,CAAC;QACF,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,aAAa,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,mBAAmB,CAAC,WAAW,CAAC,CAAC;iBAC7D,IAAI,CACH,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;gBACT,IAAI,IAAI,CAAC,YAAY,EAAE;oBAEnB,IACD,CAAC,QAAQ,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;iBAC7C;aACF,CAAC,EACF,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,KAAK,OAAO,CAAC,KAAK,CAAC,CAAC,EACrC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC;gBACT,IAAI,CAAC,mBAAmB,CAAC,KAAK,+CAAkC,CAAC;gBACjE,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,OAAO,EAAE,CAAC;gBAChB,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;gBACxB,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;aACzC,CAAC,CACH;iBACA,SAAS,EAAE,CACf,CAAC;SACH;KACF;IAED,WAAW;QACT,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;KAClC;;6HApDU,gCAAgC;iHAAhC,gCAAgC,kSC1B7C,0PAUA;2FDgBa,gCAAgC;kBAL5C,SAAS;mBAAC;oBACT,QAAQ,EAAE,+BAA+B;oBACzC,WAAW,EAAE,2CAA2C;oBACxD,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;yIAM4B,YAAY;sBAAtC,SAAS;uBAAC,cAAc;gBAEhB,YAAY;sBAApB,KAAK;gBACO,WAAW;sBAAvB,KAAK;gBAMI,WAAW;sBAApB,MAAM;;;ME5BI,sCAAuC,SAAQ,sBAAsB;IAIhF,YAAsB,qBAA4C;QAChE,KAAK,CAAC,qBAAqB,CAAC,CAAC;QADT,0BAAqB,GAArB,qBAAqB,CAAuB;QAHlE,gBAAW,GAAG,IAAI,eAAe,CAAC,KAAK,CAAC,CAAC;KAKxC;IAED,SAAS,CAAC,IAAS;;QACjB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnC,IAAI,CAAC,aAAa,GAAG,MAAA,MAAA,IAAI,CAAC,kBAAkB,CAAC,KAAK,0CAAE,IAAI,0CAAE,YAAY,CAAC;KACxE;;;;IAKD,WAAW,CAAC,KAAc;QACxB,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;;mIAlBU,sCAAsC;uHAAtC,sCAAsC,gFCZnD,82BA8BA;2FDlBa,sCAAsC;kBALlD,SAAS;mBAAC;oBACT,QAAQ,EAAE,mBAAmB;oBAC7B,WAAW,EAAE,oDAAoD;oBACjE,eAAe,EAAE,uBAAuB,CAAC,MAAM;iBAChD;;;MEgDY,sBAAsB;;mHAAtB,sBAAsB;oHAAtB,sBAAsB,iBAd/B,+BAA+B;QAC/B,sCAAsC;QACtC,mCAAmC;QACnC,gCAAgC;QAChC,6BAA6B,aAxB7B,cAAc;QACd,YAAY;QACZ,UAAU;QACV,UAAU;QACV,mBAAmB;QACnB,WAAW;QACX,YAAY;QACZ,YAAY,aAoBZ,+BAA+B;QAC/B,sCAAsC;QACtC,mCAAmC;QACnC,gCAAgC;QAChC,6BAA6B;oHAGpB,sBAAsB,aAzBtB;QACT,aAAa,CAAC,mCAAmC,CAAC;QAClD,oBAAoB,CAAY;YAC9B,aAAa,EAAE;gBACb,sBAAsB,EAAE;oBACtB,SAAS,EAAE,sCAAsC;iBAClD;aACF;SACF,CAAC;KACH,YAnBQ;YACP,cAAc;YACd,YAAY;YACZ,UAAU;YACV,UAAU;YACV,mBAAmB;YACnB,WAAW;YACX,YAAY;YACZ,YAAY;SACb;2FA0BU,sBAAsB;kBApClC,QAAQ;mBAAC;oBACR,OAAO,EAAE;wBACP,cAAc;wBACd,YAAY;wBACZ,UAAU;wBACV,UAAU;wBACV,mBAAmB;wBACnB,WAAW;wBACX,YAAY;wBACZ,YAAY;qBACb;oBACD,SAAS,EAAE;wBACT,aAAa,CAAC,mCAAmC,CAAC;wBAClD,oBAAoB,CAAY;4BAC9B,aAAa,EAAE;gCACb,sBAAsB,EAAE;oCACtB,SAAS,EAAE,sCAAsC;iCAClD;6BACF;yBACF,CAAC;qBACH;oBACD,YAAY,EAAE;wBACZ,+BAA+B;wBAC/B,sCAAsC;wBACtC,mCAAmC;wBACnC,gCAAgC;wBAChC,6BAA6B;qBAC9B;oBACD,OAAO,EAAE;wBACP,+BAA+B;wBAC/B,sCAAsC;wBACtC,mCAAmC;wBACnC,gCAAgC;wBAChC,6BAA6B;qBAC9B;iBACF;;;MCpDY,gCAAgC;;6HAAhC,gCAAgC;8HAAhC,gCAAgC,YAFjC,sBAAsB;8HAErB,gCAAgC,YAFlC,CAAC,sBAAsB,CAAC;2FAEtB,gCAAgC;kBAH5C,QAAQ;mBAAC;oBACR,OAAO,EAAE,CAAC,sBAAsB,CAAC;iBAClC;;;ACLD;;;;;;"}