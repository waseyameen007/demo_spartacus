import { ChangeDetectionStrategy, Component } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { ProductImagesComponent, } from '@spartacus/storefront';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/storefront";
import * as i2 from "../product-image-zoom-trigger/product-image-zoom-trigger.component";
import * as i3 from "@angular/common";
export class ProductImageZoomProductImagesComponent extends ProductImagesComponent {
    constructor(currentProductService) {
        super(currentProductService);
        this.currentProductService = currentProductService;
        this.expandImage = new BehaviorSubject(false);
    }
    openImage(item) {
        var _a, _b;
        this.mainMediaContainer.next(item);
        this.selectedIndex = (_b = (_a = this.mainMediaContainer.value) === null || _a === void 0 ? void 0 : _a.zoom) === null || _b === void 0 ? void 0 : _b.galleryIndex;
    }
    /**
     * Opens image zoom dialog.
     */
    triggerZoom(value) {
        this.expandImage.next(value);
    }
}
ProductImageZoomProductImagesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ProductImageZoomProductImagesComponent, deps: [{ token: i1.CurrentProductService }], target: i0.ɵɵFactoryTarget.Component });
ProductImageZoomProductImagesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ProductImageZoomProductImagesComponent, selector: "cx-product-images", usesInheritance: true, ngImport: i0, template: "<ng-container *ngIf=\"mainImage$ | async as main\">\n  <cx-media [container]=\"main\" (click)=\"triggerZoom(true)\"></cx-media>\n  <cx-product-image-zoom-trigger\n    [expandImage]=\"expandImage.value\"\n    [galleryIndex]=\"selectedIndex\"\n    (dialogClose)=\"triggerZoom(false)\"\n  ></cx-product-image-zoom-trigger>\n</ng-container>\n\n<ng-container *ngIf=\"thumbs$ | async as thumbs\">\n  <cx-carousel\n    *ngIf=\"thumbs.length\"\n    class=\"thumbs\"\n    [items]=\"thumbs\"\n    itemWidth=\"120px\"\n    [hideIndicators]=\"false\"\n    [template]=\"thumb\"\n  ></cx-carousel>\n</ng-container>\n\n<ng-template #thumb let-item=\"item\">\n  <cx-media\n    [container]=\"item.container\"\n    tabindex=\"0\"\n    (focus)=\"openImage(item.container)\"\n    [class.is-active]=\"isActive(item.container) | async\"\n    format=\"product\"\n  >\n  </cx-media>\n</ng-template>\n", components: [{ type: i1.MediaComponent, selector: "cx-media", inputs: ["container", "format", "alt", "role", "loading"], outputs: ["loaded"] }, { type: i2.ProductImageZoomTriggerComponent, selector: "cx-product-image-zoom-trigger", inputs: ["galleryIndex", "expandImage"], outputs: ["dialogClose"] }, { type: i1.CarouselComponent, selector: "cx-carousel", inputs: ["title", "items", "template", "itemWidth", "hideIndicators", "indicatorIcon", "previousIcon", "nextIcon"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i3.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ProductImageZoomProductImagesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-product-images',
                    templateUrl: './product-image-zoom-product-images.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.CurrentProductService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1pbWFnZS16b29tLXByb2R1Y3QtaW1hZ2VzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9wcm9kdWN0L2ltYWdlLXpvb20vY29tcG9uZW50cy9wcm9kdWN0LWltYWdlLXpvb20vcHJvZHVjdC1pbWFnZS16b29tLXByb2R1Y3QtaW1hZ2VzL3Byb2R1Y3QtaW1hZ2Utem9vbS1wcm9kdWN0LWltYWdlcy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvcHJvZHVjdC9pbWFnZS16b29tL2NvbXBvbmVudHMvcHJvZHVjdC1pbWFnZS16b29tL3Byb2R1Y3QtaW1hZ2Utem9vbS1wcm9kdWN0LWltYWdlcy9wcm9kdWN0LWltYWdlLXpvb20tcHJvZHVjdC1pbWFnZXMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3ZDLE9BQU8sRUFFTCxzQkFBc0IsR0FDdkIsTUFBTSx1QkFBdUIsQ0FBQzs7Ozs7QUFPL0IsTUFBTSxPQUFPLHNDQUF1QyxTQUFRLHNCQUFzQjtJQUloRixZQUFzQixxQkFBNEM7UUFDaEUsS0FBSyxDQUFDLHFCQUFxQixDQUFDLENBQUM7UUFEVCwwQkFBcUIsR0FBckIscUJBQXFCLENBQXVCO1FBSGxFLGdCQUFXLEdBQUcsSUFBSSxlQUFlLENBQUMsS0FBSyxDQUFDLENBQUM7SUFLekMsQ0FBQztJQUVELFNBQVMsQ0FBQyxJQUFTOztRQUNqQixJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ25DLElBQUksQ0FBQyxhQUFhLEdBQUcsTUFBQSxNQUFBLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLDBDQUFFLElBQUksMENBQUUsWUFBWSxDQUFDO0lBQ3pFLENBQUM7SUFFRDs7T0FFRztJQUNILFdBQVcsQ0FBQyxLQUFjO1FBQ3hCLElBQUksQ0FBQyxXQUFXLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQy9CLENBQUM7O21JQWxCVSxzQ0FBc0M7dUhBQXRDLHNDQUFzQyxnRkNabkQsODJCQThCQTsyRkRsQmEsc0NBQXNDO2tCQUxsRCxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLFdBQVcsRUFBRSxvREFBb0Q7b0JBQ2pFLGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJlaGF2aW9yU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHtcbiAgQ3VycmVudFByb2R1Y3RTZXJ2aWNlLFxuICBQcm9kdWN0SW1hZ2VzQ29tcG9uZW50LFxufSBmcm9tICdAc3BhcnRhY3VzL3N0b3JlZnJvbnQnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1wcm9kdWN0LWltYWdlcycsXG4gIHRlbXBsYXRlVXJsOiAnLi9wcm9kdWN0LWltYWdlLXpvb20tcHJvZHVjdC1pbWFnZXMuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgUHJvZHVjdEltYWdlWm9vbVByb2R1Y3RJbWFnZXNDb21wb25lbnQgZXh0ZW5kcyBQcm9kdWN0SW1hZ2VzQ29tcG9uZW50IHtcbiAgZXhwYW5kSW1hZ2UgPSBuZXcgQmVoYXZpb3JTdWJqZWN0KGZhbHNlKTtcbiAgc2VsZWN0ZWRJbmRleDogbnVtYmVyIHwgdW5kZWZpbmVkO1xuXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjdXJyZW50UHJvZHVjdFNlcnZpY2U6IEN1cnJlbnRQcm9kdWN0U2VydmljZSkge1xuICAgIHN1cGVyKGN1cnJlbnRQcm9kdWN0U2VydmljZSk7XG4gIH1cblxuICBvcGVuSW1hZ2UoaXRlbTogYW55KTogdm9pZCB7XG4gICAgdGhpcy5tYWluTWVkaWFDb250YWluZXIubmV4dChpdGVtKTtcbiAgICB0aGlzLnNlbGVjdGVkSW5kZXggPSB0aGlzLm1haW5NZWRpYUNvbnRhaW5lci52YWx1ZT8uem9vbT8uZ2FsbGVyeUluZGV4O1xuICB9XG5cbiAgLyoqXG4gICAqIE9wZW5zIGltYWdlIHpvb20gZGlhbG9nLlxuICAgKi9cbiAgdHJpZ2dlclpvb20odmFsdWU6IGJvb2xlYW4pOiB2b2lkIHtcbiAgICB0aGlzLmV4cGFuZEltYWdlLm5leHQodmFsdWUpO1xuICB9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwibWFpbkltYWdlJCB8IGFzeW5jIGFzIG1haW5cIj5cbiAgPGN4LW1lZGlhIFtjb250YWluZXJdPVwibWFpblwiIChjbGljayk9XCJ0cmlnZ2VyWm9vbSh0cnVlKVwiPjwvY3gtbWVkaWE+XG4gIDxjeC1wcm9kdWN0LWltYWdlLXpvb20tdHJpZ2dlclxuICAgIFtleHBhbmRJbWFnZV09XCJleHBhbmRJbWFnZS52YWx1ZVwiXG4gICAgW2dhbGxlcnlJbmRleF09XCJzZWxlY3RlZEluZGV4XCJcbiAgICAoZGlhbG9nQ2xvc2UpPVwidHJpZ2dlclpvb20oZmFsc2UpXCJcbiAgPjwvY3gtcHJvZHVjdC1pbWFnZS16b29tLXRyaWdnZXI+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLWNvbnRhaW5lciAqbmdJZj1cInRodW1icyQgfCBhc3luYyBhcyB0aHVtYnNcIj5cbiAgPGN4LWNhcm91c2VsXG4gICAgKm5nSWY9XCJ0aHVtYnMubGVuZ3RoXCJcbiAgICBjbGFzcz1cInRodW1ic1wiXG4gICAgW2l0ZW1zXT1cInRodW1ic1wiXG4gICAgaXRlbVdpZHRoPVwiMTIwcHhcIlxuICAgIFtoaWRlSW5kaWNhdG9yc109XCJmYWxzZVwiXG4gICAgW3RlbXBsYXRlXT1cInRodW1iXCJcbiAgPjwvY3gtY2Fyb3VzZWw+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLXRlbXBsYXRlICN0aHVtYiBsZXQtaXRlbT1cIml0ZW1cIj5cbiAgPGN4LW1lZGlhXG4gICAgW2NvbnRhaW5lcl09XCJpdGVtLmNvbnRhaW5lclwiXG4gICAgdGFiaW5kZXg9XCIwXCJcbiAgICAoZm9jdXMpPVwib3BlbkltYWdlKGl0ZW0uY29udGFpbmVyKVwiXG4gICAgW2NsYXNzLmlzLWFjdGl2ZV09XCJpc0FjdGl2ZShpdGVtLmNvbnRhaW5lcikgfCBhc3luY1wiXG4gICAgZm9ybWF0PVwicHJvZHVjdFwiXG4gID5cbiAgPC9jeC1tZWRpYT5cbjwvbmctdGVtcGxhdGU+XG4iXX0=