import { ChangeDetectionStrategy, Component, Input, Optional, } from '@angular/core';
import { VariantQualifier, } from '@spartacus/core';
import { ProductListOutlets, } from '@spartacus/storefront';
import { EMPTY, Subscription } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/core";
import * as i2 from "@spartacus/storefront";
import * as i3 from "@angular/common";
export class ProductVariantStyleIconsComponent {
    constructor(config, productListItemContext) {
        var _a, _b;
        this.config = config;
        this.productListItemContext = productListItemContext;
        this.subscriptions = new Subscription();
        this.ProductListOutlets = ProductListOutlets;
        this.product$ = (_b = (_a = this.productListItemContext) === null || _a === void 0 ? void 0 : _a.product$) !== null && _b !== void 0 ? _b : EMPTY;
        this.variantNames = {};
    }
    ngOnInit() {
        this.setVariantsNames();
        this.subscriptions.add(this.product$.subscribe((product) => {
            if (product.variantOptions && product.variantOptions.length) {
                this.variants = product.variantOptions;
                this.setVariantsNames();
            }
        }));
    }
    setVariantsNames() {
        var _a;
        (_a = this.variants) === null || _a === void 0 ? void 0 : _a.forEach((variant) => {
            if (variant.code && variant.variantOptionQualifiers) {
                this.variantNames[variant.code] =
                    this.getVariantName(variant.variantOptionQualifiers) || '';
            }
        });
    }
    getVariantThumbnailUrl(variantOptionQualifiers) {
        var _a, _b, _c, _d;
        const thumbnail = variantOptionQualifiers.find((item) => item.qualifier === VariantQualifier.THUMBNAIL);
        return thumbnail
            ? `${(_c = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.backend) === null || _b === void 0 ? void 0 : _b.occ) === null || _c === void 0 ? void 0 : _c.baseUrl}${(_d = thumbnail.image) === null || _d === void 0 ? void 0 : _d.url}`
            : '';
    }
    getVariantName(variantOptionQualifiers) {
        const rollupProperty = variantOptionQualifiers.find((item) => item.qualifier === VariantQualifier.ROLLUP_PROPERTY);
        const property = rollupProperty
            ? variantOptionQualifiers.find((item) => item.qualifier === rollupProperty.value)
            : null;
        return property ? property.value : '';
    }
    ngOnDestroy() {
        this.subscriptions.unsubscribe();
    }
}
ProductVariantStyleIconsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ProductVariantStyleIconsComponent, deps: [{ token: i1.OccConfig }, { token: i2.ProductListItemContext, optional: true }], target: i0.ɵɵFactoryTarget.Component });
ProductVariantStyleIconsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ProductVariantStyleIconsComponent, selector: "cx-variant-style-icons", inputs: { variants: "variants" }, ngImport: i0, template: "<ul class=\"variant-list\" *ngIf=\"variants && variants.length\">\n  <li *ngFor=\"let v of variants\">\n    <img\n      [attr.src]=\"getVariantThumbnailUrl(v.variantOptionQualifiers)\"\n      [attr.title]=\"variantNames[v.code]\"\n      [attr.alt]=\"variantNames[v.code]\"\n    />\n  </li>\n</ul>\n", styles: ["ul{padding:0;white-space:nowrap;overflow:hidden}ul li{display:inline}ul li img{width:50px}"], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ProductVariantStyleIconsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-variant-style-icons',
                    templateUrl: './product-variant-style-icons.component.html',
                    styleUrls: ['./product-variant-style-icons.component.scss'],
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.OccConfig }, { type: i2.ProductListItemContext, decorators: [{
                    type: Optional
                }] }]; }, propDecorators: { variants: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC12YXJpYW50LXN0eWxlLWljb25zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9wcm9kdWN0L3ZhcmlhbnRzL3Jvb3QvY29tcG9uZW50cy92YXJpYW50LXN0eWxlLWljb25zL3Byb2R1Y3QtdmFyaWFudC1zdHlsZS1pY29ucy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvcHJvZHVjdC92YXJpYW50cy9yb290L2NvbXBvbmVudHMvdmFyaWFudC1zdHlsZS1pY29ucy9wcm9kdWN0LXZhcmlhbnQtc3R5bGUtaWNvbnMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLHVCQUF1QixFQUN2QixTQUFTLEVBQ1QsS0FBSyxFQUdMLFFBQVEsR0FDVCxNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBS0wsZ0JBQWdCLEdBQ2pCLE1BQU0saUJBQWlCLENBQUM7QUFDekIsT0FBTyxFQUVMLGtCQUFrQixHQUNuQixNQUFNLHVCQUF1QixDQUFDO0FBQy9CLE9BQU8sRUFBRSxLQUFLLEVBQWMsWUFBWSxFQUFFLE1BQU0sTUFBTSxDQUFDOzs7OztBQVF2RCxNQUFNLE9BQU8saUNBQWlDO0lBQzVDLFlBQ1UsTUFBaUIsRUFFZixzQkFBK0M7O1FBRmpELFdBQU0sR0FBTixNQUFNLENBQVc7UUFFZiwyQkFBc0IsR0FBdEIsc0JBQXNCLENBQXlCO1FBR2pELGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNwQyx1QkFBa0IsR0FBRyxrQkFBa0IsQ0FBQztRQUN4QyxhQUFRLEdBQ2YsTUFBQSxNQUFBLElBQUksQ0FBQyxzQkFBc0IsMENBQUUsUUFBUSxtQ0FBSSxLQUFLLENBQUM7UUFLakQsaUJBQVksR0FBOEIsRUFBRSxDQUFDO0lBVjFDLENBQUM7SUFZSixRQUFRO1FBQ04sSUFBSSxDQUFDLGdCQUFnQixFQUFFLENBQUM7UUFFeEIsSUFBSSxDQUFDLGFBQWEsQ0FBQyxHQUFHLENBQ3BCLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLENBQUMsT0FBZ0IsRUFBRSxFQUFFO1lBQzNDLElBQUksT0FBTyxDQUFDLGNBQWMsSUFBSSxPQUFPLENBQUMsY0FBYyxDQUFDLE1BQU0sRUFBRTtnQkFDM0QsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsY0FBYyxDQUFDO2dCQUN2QyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQzthQUN6QjtRQUNILENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRU8sZ0JBQWdCOztRQUN0QixNQUFBLElBQUksQ0FBQyxRQUFRLDBDQUFFLE9BQU8sQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFO1lBQ2pDLElBQUksT0FBTyxDQUFDLElBQUksSUFBSSxPQUFPLENBQUMsdUJBQXVCLEVBQUU7Z0JBQ25ELElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQztvQkFDN0IsSUFBSSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsdUJBQXVCLENBQUMsSUFBSSxFQUFFLENBQUM7YUFDOUQ7UUFDSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxzQkFBc0IsQ0FDcEIsdUJBQWlEOztRQUVqRCxNQUFNLFNBQVMsR0FBRyx1QkFBdUIsQ0FBQyxJQUFJLENBQzVDLENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxLQUFLLGdCQUFnQixDQUFDLFNBQVMsQ0FDeEQsQ0FBQztRQUNGLE9BQU8sU0FBUztZQUNkLENBQUMsQ0FBQyxHQUFHLE1BQUEsTUFBQSxNQUFBLElBQUksQ0FBQyxNQUFNLDBDQUFFLE9BQU8sMENBQUUsR0FBRywwQ0FBRSxPQUFPLEdBQUcsTUFBQSxTQUFTLENBQUMsS0FBSywwQ0FBRSxHQUFHLEVBQUU7WUFDaEUsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUNULENBQUM7SUFFTyxjQUFjLENBQ3BCLHVCQUFpRDtRQUVqRCxNQUFNLGNBQWMsR0FBRyx1QkFBdUIsQ0FBQyxJQUFJLENBQ2pELENBQUMsSUFBSSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsU0FBUyxLQUFLLGdCQUFnQixDQUFDLGVBQWUsQ0FDOUQsQ0FBQztRQUNGLE1BQU0sUUFBUSxHQUFHLGNBQWM7WUFDN0IsQ0FBQyxDQUFDLHVCQUF1QixDQUFDLElBQUksQ0FDMUIsQ0FBQyxJQUFJLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLEtBQUssY0FBYyxDQUFDLEtBQUssQ0FDbEQ7WUFDSCxDQUFDLENBQUMsSUFBSSxDQUFDO1FBQ1QsT0FBTyxRQUFRLENBQUMsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztJQUN4QyxDQUFDO0lBRUQsV0FBVztRQUNULElBQUksQ0FBQyxhQUFhLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDbkMsQ0FBQzs7OEhBbEVVLGlDQUFpQztrSEFBakMsaUNBQWlDLGdHQzNCOUMsNFNBU0E7MkZEa0JhLGlDQUFpQztrQkFON0MsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsd0JBQXdCO29CQUNsQyxXQUFXLEVBQUUsOENBQThDO29CQUMzRCxTQUFTLEVBQUUsQ0FBQyw4Q0FBOEMsQ0FBQztvQkFDM0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEOzswQkFJSSxRQUFROzRDQVVYLFFBQVE7c0JBRFAsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENoYW5nZURldGVjdGlvblN0cmF0ZWd5LFxuICBDb21wb25lbnQsXG4gIElucHV0LFxuICBPbkRlc3Ryb3ksXG4gIE9uSW5pdCxcbiAgT3B0aW9uYWwsXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgT2NjQ29uZmlnLFxuICBQcm9kdWN0LFxuICBWYXJpYW50T3B0aW9uLFxuICBWYXJpYW50T3B0aW9uUXVhbGlmaWVyLFxuICBWYXJpYW50UXVhbGlmaWVyLFxufSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHtcbiAgUHJvZHVjdExpc3RJdGVtQ29udGV4dCxcbiAgUHJvZHVjdExpc3RPdXRsZXRzLFxufSBmcm9tICdAc3BhcnRhY3VzL3N0b3JlZnJvbnQnO1xuaW1wb3J0IHsgRU1QVFksIE9ic2VydmFibGUsIFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC12YXJpYW50LXN0eWxlLWljb25zJyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Byb2R1Y3QtdmFyaWFudC1zdHlsZS1pY29ucy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL3Byb2R1Y3QtdmFyaWFudC1zdHlsZS1pY29ucy5jb21wb25lbnQuc2NzcyddLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgUHJvZHVjdFZhcmlhbnRTdHlsZUljb25zQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkRlc3Ryb3kge1xuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIGNvbmZpZzogT2NjQ29uZmlnLFxuICAgIEBPcHRpb25hbCgpXG4gICAgcHJvdGVjdGVkIHByb2R1Y3RMaXN0SXRlbUNvbnRleHQ/OiBQcm9kdWN0TGlzdEl0ZW1Db250ZXh0XG4gICkge31cblxuICBwcm90ZWN0ZWQgc3Vic2NyaXB0aW9ucyA9IG5ldyBTdWJzY3JpcHRpb24oKTtcbiAgcmVhZG9ubHkgUHJvZHVjdExpc3RPdXRsZXRzID0gUHJvZHVjdExpc3RPdXRsZXRzO1xuICByZWFkb25seSBwcm9kdWN0JDogT2JzZXJ2YWJsZTxQcm9kdWN0PiA9XG4gICAgdGhpcy5wcm9kdWN0TGlzdEl0ZW1Db250ZXh0Py5wcm9kdWN0JCA/PyBFTVBUWTtcblxuICBASW5wdXQoKVxuICB2YXJpYW50czogVmFyaWFudE9wdGlvbltdO1xuXG4gIHZhcmlhbnROYW1lczogeyBba2V5OiBzdHJpbmddOiBzdHJpbmcgfSA9IHt9O1xuXG4gIG5nT25Jbml0KCkge1xuICAgIHRoaXMuc2V0VmFyaWFudHNOYW1lcygpO1xuXG4gICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZChcbiAgICAgIHRoaXMucHJvZHVjdCQuc3Vic2NyaWJlKChwcm9kdWN0OiBQcm9kdWN0KSA9PiB7XG4gICAgICAgIGlmIChwcm9kdWN0LnZhcmlhbnRPcHRpb25zICYmIHByb2R1Y3QudmFyaWFudE9wdGlvbnMubGVuZ3RoKSB7XG4gICAgICAgICAgdGhpcy52YXJpYW50cyA9IHByb2R1Y3QudmFyaWFudE9wdGlvbnM7XG4gICAgICAgICAgdGhpcy5zZXRWYXJpYW50c05hbWVzKCk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIHByaXZhdGUgc2V0VmFyaWFudHNOYW1lcygpIHtcbiAgICB0aGlzLnZhcmlhbnRzPy5mb3JFYWNoKCh2YXJpYW50KSA9PiB7XG4gICAgICBpZiAodmFyaWFudC5jb2RlICYmIHZhcmlhbnQudmFyaWFudE9wdGlvblF1YWxpZmllcnMpIHtcbiAgICAgICAgdGhpcy52YXJpYW50TmFtZXNbdmFyaWFudC5jb2RlXSA9XG4gICAgICAgICAgdGhpcy5nZXRWYXJpYW50TmFtZSh2YXJpYW50LnZhcmlhbnRPcHRpb25RdWFsaWZpZXJzKSB8fCAnJztcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIGdldFZhcmlhbnRUaHVtYm5haWxVcmwoXG4gICAgdmFyaWFudE9wdGlvblF1YWxpZmllcnM6IFZhcmlhbnRPcHRpb25RdWFsaWZpZXJbXVxuICApOiBzdHJpbmcge1xuICAgIGNvbnN0IHRodW1ibmFpbCA9IHZhcmlhbnRPcHRpb25RdWFsaWZpZXJzLmZpbmQoXG4gICAgICAoaXRlbSkgPT4gaXRlbS5xdWFsaWZpZXIgPT09IFZhcmlhbnRRdWFsaWZpZXIuVEhVTUJOQUlMXG4gICAgKTtcbiAgICByZXR1cm4gdGh1bWJuYWlsXG4gICAgICA/IGAke3RoaXMuY29uZmlnPy5iYWNrZW5kPy5vY2M/LmJhc2VVcmx9JHt0aHVtYm5haWwuaW1hZ2U/LnVybH1gXG4gICAgICA6ICcnO1xuICB9XG5cbiAgcHJpdmF0ZSBnZXRWYXJpYW50TmFtZShcbiAgICB2YXJpYW50T3B0aW9uUXVhbGlmaWVyczogVmFyaWFudE9wdGlvblF1YWxpZmllcltdXG4gICk6IHN0cmluZyB8IHVuZGVmaW5lZCB7XG4gICAgY29uc3Qgcm9sbHVwUHJvcGVydHkgPSB2YXJpYW50T3B0aW9uUXVhbGlmaWVycy5maW5kKFxuICAgICAgKGl0ZW0pID0+IGl0ZW0ucXVhbGlmaWVyID09PSBWYXJpYW50UXVhbGlmaWVyLlJPTExVUF9QUk9QRVJUWVxuICAgICk7XG4gICAgY29uc3QgcHJvcGVydHkgPSByb2xsdXBQcm9wZXJ0eVxuICAgICAgPyB2YXJpYW50T3B0aW9uUXVhbGlmaWVycy5maW5kKFxuICAgICAgICAgIChpdGVtKSA9PiBpdGVtLnF1YWxpZmllciA9PT0gcm9sbHVwUHJvcGVydHkudmFsdWVcbiAgICAgICAgKVxuICAgICAgOiBudWxsO1xuICAgIHJldHVybiBwcm9wZXJ0eSA/IHByb3BlcnR5LnZhbHVlIDogJyc7XG4gIH1cblxuICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcbiAgICB0aGlzLnN1YnNjcmlwdGlvbnMudW5zdWJzY3JpYmUoKTtcbiAgfVxufVxuIiwiPHVsIGNsYXNzPVwidmFyaWFudC1saXN0XCIgKm5nSWY9XCJ2YXJpYW50cyAmJiB2YXJpYW50cy5sZW5ndGhcIj5cbiAgPGxpICpuZ0Zvcj1cImxldCB2IG9mIHZhcmlhbnRzXCI+XG4gICAgPGltZ1xuICAgICAgW2F0dHIuc3JjXT1cImdldFZhcmlhbnRUaHVtYm5haWxVcmwodi52YXJpYW50T3B0aW9uUXVhbGlmaWVycylcIlxuICAgICAgW2F0dHIudGl0bGVdPVwidmFyaWFudE5hbWVzW3YuY29kZV1cIlxuICAgICAgW2F0dHIuYWx0XT1cInZhcmlhbnROYW1lc1t2LmNvZGVdXCJcbiAgICAvPlxuICA8L2xpPlxuPC91bD5cbiJdfQ==