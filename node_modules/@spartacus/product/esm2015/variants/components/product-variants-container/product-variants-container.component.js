import { ChangeDetectionStrategy, Component } from '@angular/core';
import { isNotNullable, VariantType, } from '@spartacus/core';
import { distinctUntilChanged, filter, tap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/storefront";
import * as i2 from "../variant-style-selector/product-variant-style-selector.component";
import * as i3 from "../variant-size-selector/product-variant-size-selector.component";
import * as i4 from "../variant-color-selector/product-variant-color-selector.component";
import * as i5 from "@angular/common";
export class ProductVariantsContainerComponent {
    constructor(currentProductService) {
        this.currentProductService = currentProductService;
        this.variants = {};
        this.variantType = VariantType;
    }
    ngOnInit() {
        this.product$ = this.currentProductService.getProduct().pipe(filter(isNotNullable), filter((product) => !!product.baseOptions), distinctUntilChanged(), tap((product) => {
            product.baseOptions.forEach((option) => {
                if (option === null || option === void 0 ? void 0 : option.variantType) {
                    this.variants[option.variantType] = option;
                }
            });
        }));
    }
}
ProductVariantsContainerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ProductVariantsContainerComponent, deps: [{ token: i1.CurrentProductService }], target: i0.ɵɵFactoryTarget.Component });
ProductVariantsContainerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ProductVariantsContainerComponent, selector: "cx-product-variants-container", ngImport: i0, template: "<ng-container *ngIf=\"product$ | async as product\">\n  <div class=\"variant-section\" *ngIf=\"product.baseOptions?.length\">\n    <cx-product-variant-style-selector\n      *ngIf=\"variants[variantType.STYLE]\"\n      [variants]=\"variants[variantType.STYLE]\"\n    ></cx-product-variant-style-selector>\n    <cx-product-variant-size-selector\n      *ngIf=\"variants[variantType.SIZE]\"\n      [product]=\"product\"\n      [variants]=\"variants[variantType.SIZE]\"\n    ></cx-product-variant-size-selector>\n    <cx-product-variant-color-selector\n      *ngIf=\"variants[variantType.COLOR]\"\n      [product]=\"product\"\n      [variants]=\"variants[variantType.COLOR]\"\n    ></cx-product-variant-color-selector>\n  </div>\n</ng-container>\n", components: [{ type: i2.ProductVariantStyleSelectorComponent, selector: "cx-product-variant-style-selector", inputs: ["variants"] }, { type: i3.ProductVariantSizeSelectorComponent, selector: "cx-product-variant-size-selector", inputs: ["product", "variants"] }, { type: i4.ProductVariantColorSelectorComponent, selector: "cx-product-variant-color-selector", inputs: ["product", "variants"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i5.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ProductVariantsContainerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-product-variants-container',
                    templateUrl: './product-variants-container.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.CurrentProductService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC12YXJpYW50cy1jb250YWluZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL3Byb2R1Y3QvdmFyaWFudHMvY29tcG9uZW50cy9wcm9kdWN0LXZhcmlhbnRzLWNvbnRhaW5lci9wcm9kdWN0LXZhcmlhbnRzLWNvbnRhaW5lci5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvcHJvZHVjdC92YXJpYW50cy9jb21wb25lbnRzL3Byb2R1Y3QtdmFyaWFudHMtY29udGFpbmVyL3Byb2R1Y3QtdmFyaWFudHMtY29udGFpbmVyLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDM0UsT0FBTyxFQUVMLGFBQWEsRUFHYixXQUFXLEdBQ1osTUFBTSxpQkFBaUIsQ0FBQztBQUd6QixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7Ozs7O0FBT25FLE1BQU0sT0FBTyxpQ0FBaUM7SUFDNUMsWUFBb0IscUJBQTRDO1FBQTVDLDBCQUFxQixHQUFyQixxQkFBcUIsQ0FBdUI7UUFFaEUsYUFBUSxHQUFrQyxFQUFFLENBQUM7UUFDN0MsZ0JBQVcsR0FBRyxXQUFXLENBQUM7SUFIeUMsQ0FBQztJQU1wRSxRQUFRO1FBQ04sSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsVUFBVSxFQUFFLENBQUMsSUFBSSxDQUMxRCxNQUFNLENBQUMsYUFBYSxDQUFDLEVBQ3JCLE1BQU0sQ0FDSixDQUFDLE9BQU8sRUFBbUQsRUFBRSxDQUMzRCxDQUFDLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FDeEIsRUFDRCxvQkFBb0IsRUFBRSxFQUN0QixHQUFHLENBQUMsQ0FBQyxPQUFPLEVBQUUsRUFBRTtZQUNkLE9BQU8sQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUMsTUFBa0IsRUFBRSxFQUFFO2dCQUNqRCxJQUFJLE1BQU0sYUFBTixNQUFNLHVCQUFOLE1BQU0sQ0FBRSxXQUFXLEVBQUU7b0JBQ3ZCLElBQUksQ0FBQyxRQUFRLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxHQUFHLE1BQU0sQ0FBQztpQkFDNUM7WUFDSCxDQUFDLENBQUMsQ0FBQztRQUNMLENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDOzs4SEF2QlUsaUNBQWlDO2tIQUFqQyxpQ0FBaUMscUVDakI5Qyx3dUJBa0JBOzJGRERhLGlDQUFpQztrQkFMN0MsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsK0JBQStCO29CQUN6QyxXQUFXLEVBQUUsNkNBQTZDO29CQUMxRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7XG4gIEJhc2VPcHRpb24sXG4gIGlzTm90TnVsbGFibGUsXG4gIFByb2R1Y3QsXG4gIFJlcXVpcmVkUGljayxcbiAgVmFyaWFudFR5cGUsXG59IGZyb20gJ0BzcGFydGFjdXMvY29yZSc7XG5pbXBvcnQgeyBDdXJyZW50UHJvZHVjdFNlcnZpY2UgfSBmcm9tICdAc3BhcnRhY3VzL3N0b3JlZnJvbnQnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgZGlzdGluY3RVbnRpbENoYW5nZWQsIGZpbHRlciwgdGFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1wcm9kdWN0LXZhcmlhbnRzLWNvbnRhaW5lcicsXG4gIHRlbXBsYXRlVXJsOiAnLi9wcm9kdWN0LXZhcmlhbnRzLWNvbnRhaW5lci5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBQcm9kdWN0VmFyaWFudHNDb250YWluZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGN1cnJlbnRQcm9kdWN0U2VydmljZTogQ3VycmVudFByb2R1Y3RTZXJ2aWNlKSB7fVxuXG4gIHZhcmlhbnRzOiB7IFtrZXk6IHN0cmluZ106IEJhc2VPcHRpb24gfSA9IHt9O1xuICB2YXJpYW50VHlwZSA9IFZhcmlhbnRUeXBlO1xuICBwcm9kdWN0JDogT2JzZXJ2YWJsZTxQcm9kdWN0IHwgbnVsbD47XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgdGhpcy5wcm9kdWN0JCA9IHRoaXMuY3VycmVudFByb2R1Y3RTZXJ2aWNlLmdldFByb2R1Y3QoKS5waXBlKFxuICAgICAgZmlsdGVyKGlzTm90TnVsbGFibGUpLFxuICAgICAgZmlsdGVyKFxuICAgICAgICAocHJvZHVjdCk6IHByb2R1Y3QgaXMgUmVxdWlyZWRQaWNrPFByb2R1Y3QsICdiYXNlT3B0aW9ucyc+ID0+XG4gICAgICAgICAgISFwcm9kdWN0LmJhc2VPcHRpb25zXG4gICAgICApLFxuICAgICAgZGlzdGluY3RVbnRpbENoYW5nZWQoKSxcbiAgICAgIHRhcCgocHJvZHVjdCkgPT4ge1xuICAgICAgICBwcm9kdWN0LmJhc2VPcHRpb25zLmZvckVhY2goKG9wdGlvbjogQmFzZU9wdGlvbikgPT4ge1xuICAgICAgICAgIGlmIChvcHRpb24/LnZhcmlhbnRUeXBlKSB7XG4gICAgICAgICAgICB0aGlzLnZhcmlhbnRzW29wdGlvbi52YXJpYW50VHlwZV0gPSBvcHRpb247XG4gICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgIH0pXG4gICAgKTtcbiAgfVxufVxuIiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cInByb2R1Y3QkIHwgYXN5bmMgYXMgcHJvZHVjdFwiPlxuICA8ZGl2IGNsYXNzPVwidmFyaWFudC1zZWN0aW9uXCIgKm5nSWY9XCJwcm9kdWN0LmJhc2VPcHRpb25zPy5sZW5ndGhcIj5cbiAgICA8Y3gtcHJvZHVjdC12YXJpYW50LXN0eWxlLXNlbGVjdG9yXG4gICAgICAqbmdJZj1cInZhcmlhbnRzW3ZhcmlhbnRUeXBlLlNUWUxFXVwiXG4gICAgICBbdmFyaWFudHNdPVwidmFyaWFudHNbdmFyaWFudFR5cGUuU1RZTEVdXCJcbiAgICA+PC9jeC1wcm9kdWN0LXZhcmlhbnQtc3R5bGUtc2VsZWN0b3I+XG4gICAgPGN4LXByb2R1Y3QtdmFyaWFudC1zaXplLXNlbGVjdG9yXG4gICAgICAqbmdJZj1cInZhcmlhbnRzW3ZhcmlhbnRUeXBlLlNJWkVdXCJcbiAgICAgIFtwcm9kdWN0XT1cInByb2R1Y3RcIlxuICAgICAgW3ZhcmlhbnRzXT1cInZhcmlhbnRzW3ZhcmlhbnRUeXBlLlNJWkVdXCJcbiAgICA+PC9jeC1wcm9kdWN0LXZhcmlhbnQtc2l6ZS1zZWxlY3Rvcj5cbiAgICA8Y3gtcHJvZHVjdC12YXJpYW50LWNvbG9yLXNlbGVjdG9yXG4gICAgICAqbmdJZj1cInZhcmlhbnRzW3ZhcmlhbnRUeXBlLkNPTE9SXVwiXG4gICAgICBbcHJvZHVjdF09XCJwcm9kdWN0XCJcbiAgICAgIFt2YXJpYW50c109XCJ2YXJpYW50c1t2YXJpYW50VHlwZS5DT0xPUl1cIlxuICAgID48L2N4LXByb2R1Y3QtdmFyaWFudC1jb2xvci1zZWxlY3Rvcj5cbiAgPC9kaXY+XG48L25nLWNvbnRhaW5lcj5cbiJdfQ==