{"version":3,"file":"spartacus-product-variants-components.umd.js","sources":["../../../feature-libs/product/variants/components/variant-color-selector/product-variant-color-selector.component.ts","../../../feature-libs/product/variants/components/variant-color-selector/product-variant-color-selector.component.html","../../../feature-libs/product/variants/components/variant-color-selector/product-variant-color-selector.module.ts","../../../feature-libs/product/variants/components/variant-size-selector/product-variant-size-selector.component.ts","../../../feature-libs/product/variants/components/variant-size-selector/product-variant-size-selector.component.html","../../../feature-libs/product/variants/components/variant-size-selector/product-variant-size-selector.module.ts","../../../feature-libs/product/variants/components/variant-style-selector/product-variant-style-selector.component.ts","../../../feature-libs/product/variants/components/variant-style-selector/product-variant-style-selector.component.html","../../../feature-libs/product/variants/components/variant-style-selector/product-variant-style-selector.module.ts","../../../feature-libs/product/variants/components/product-variants-container/product-variants-container.component.ts","../../../feature-libs/product/variants/components/product-variants-container/product-variants-container.component.html","../../../feature-libs/product/variants/components/product-variants-container/product-variants-container.module.ts","../../../feature-libs/product/variants/components/guards/product-variants.guard.ts","../../../feature-libs/product/variants/components/product-variants-components.module.ts","../../../feature-libs/product/variants/components/spartacus-product-variants-components.ts"],"sourcesContent":["import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  BaseOption,\n  Product,\n  RoutingService,\n  VariantOptionQualifier,\n  VariantQualifier,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-product-variant-color-selector',\n  templateUrl: './product-variant-color-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantColorSelectorComponent {\n  constructor(private routingService: RoutingService) {}\n\n  @Input()\n  product: Product;\n\n  @Input()\n  variants: BaseOption;\n\n  changeColor(code: string, name: string): null {\n    if (code) {\n      this.routingService.go({\n        cxRoute: 'product',\n        params: { code, name },\n      });\n    }\n    return null;\n  }\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.COLOR);\n    return obj ? obj.value : '';\n  }\n}\n","<ng-container>\n  <div class=\"variant-selector\">\n    <div class=\"variant-name\">{{ 'productVariants.color' | cxTranslate }}:</div>\n\n    <select\n      (change)=\"changeColor($event.target.value, product?.name)\"\n      class=\"form-control variant-select\"\n    >\n      <option\n        *ngFor=\"let v of variants?.options\"\n        value=\"{{ v.code }}\"\n        [selected]=\"v.code === product?.code\"\n      >\n        {{ getVariantOptionValue(v.variantOptionQualifiers) }}\n      </option>\n    </select>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { ProductVariantColorSelectorComponent } from './product-variant-color-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [ProductVariantColorSelectorComponent],\n  exports: [ProductVariantColorSelectorComponent],\n})\nexport class ProductVariantColorSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  Product,\n  RoutingService,\n  BaseOption,\n  VariantQualifier,\n  VariantOptionQualifier,\n  ProductService,\n  ProductScope,\n} from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-product-variant-size-selector',\n  templateUrl: './product-variant-size-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantSizeSelectorComponent {\n  constructor(\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  @Input()\n  product: Product;\n\n  @Input()\n  variants: BaseOption;\n\n  changeSize(code: string): null {\n    if (code) {\n      this.productService\n        .get(code, ProductScope.LIST)\n        .pipe(\n          // below call might looks redundant but in fact this data is going to be loaded anyways\n          // we're just calling it earlier and storing\n          filter((p) => !!p),\n          take(1)\n        )\n        .subscribe((product: Product) => {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: product,\n          });\n        });\n    }\n    return null;\n  }\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.SIZE);\n    return obj ? obj.value : '';\n  }\n}\n","<ng-container>\n  <div class=\"variant-selector\">\n    <div class=\"variant-name\">{{ 'productVariants.size' | cxTranslate }}:</div>\n    <select\n      (change)=\"changeSize($event.target.value)\"\n      class=\"form-control variant-select\"\n    >\n      <option\n        *ngFor=\"let v of variants?.options\"\n        value=\"{{ v.code }}\"\n        [selected]=\"v.code === product?.code\"\n      >\n        {{ getVariantOptionValue(v.variantOptionQualifiers) }}\n      </option>\n    </select>\n    <a\n      href=\"#\"\n      class=\"size-guide\"\n      title=\"{{ 'productVariants.sizeGuideLabel' | cxTranslate }}\"\n    >\n      {{ 'productVariants.sizeGuideLabel' | cxTranslate }}\n    </a>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { ProductVariantSizeSelectorComponent } from './product-variant-size-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [ProductVariantSizeSelectorComponent],\n  exports: [ProductVariantSizeSelectorComponent],\n})\nexport class ProductVariantSizeSelectorModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  OccConfig,\n  BaseOption,\n  VariantQualifier,\n  VariantOptionQualifier,\n  Product,\n  ProductService,\n  ProductScope,\n  RoutingService,\n} from '@spartacus/core';\nimport { filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-product-variant-style-selector',\n  templateUrl: './product-variant-style-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantStyleSelectorComponent {\n  constructor(\n    private config: OccConfig,\n    private productService: ProductService,\n    private routingService: RoutingService\n  ) {}\n\n  variantQualifier = VariantQualifier;\n\n  @Input()\n  variants: BaseOption;\n\n  getVariantOptionValue(qualifiers: VariantOptionQualifier[]) {\n    const obj = qualifiers.find((q) => q.qualifier === VariantQualifier.STYLE);\n    return obj ? obj.value : '';\n  }\n\n  getVariantThumbnailUrl(\n    variantOptionQualifiers: VariantOptionQualifier[]\n  ): string {\n    const qualifier = variantOptionQualifiers.find((item) => item.image);\n\n    return qualifier\n      ? `${this.config?.backend?.occ?.baseUrl}${qualifier.image?.url}`\n      : '';\n  }\n\n  changeStyle(code: string): null {\n    if (code) {\n      this.productService\n        .get(code, ProductScope.LIST)\n        .pipe(\n          // below call might looks redundant but in fact this data is going to be loaded anyways\n          // we're just calling it earlier and storing\n          filter((p) => !!p),\n          take(1)\n        )\n        .subscribe((product: Product) => {\n          this.routingService.go({\n            cxRoute: 'product',\n            params: product,\n          });\n        });\n    }\n    return null;\n  }\n}\n","<ng-container>\n  <div class=\"variant-selector\">\n    <div *ngIf=\"variants.selected\" class=\"variant-name\">\n      {{ 'productVariants.style' | cxTranslate }}:\n      <span class=\"style-name\">{{\n        getVariantOptionValue(variants?.selected.variantOptionQualifiers)\n      }}</span>\n    </div>\n    <ul class=\"variant-list\">\n      <li\n        *ngFor=\"let v of variants?.options\"\n        [ngClass]=\"{ 'selected-variant': v.code === variants?.selected?.code }\"\n      >\n        <button class=\"variant-button\" (click)=\"changeStyle(v.code)\">\n          <img\n            src=\"{{ getVariantThumbnailUrl(v.variantOptionQualifiers) }}\"\n            title=\"{{ getVariantOptionValue(v.variantOptionQualifiers) }}\"\n            alt=\"{{ getVariantOptionValue(v.variantOptionQualifiers) }}\"\n          />\n        </button>\n      </li>\n    </ul>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { UrlModule, I18nModule } from '@spartacus/core';\nimport { ProductVariantStyleSelectorComponent } from './product-variant-style-selector.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [ProductVariantStyleSelectorComponent],\n  exports: [ProductVariantStyleSelectorComponent],\n})\nexport class ProductVariantStyleSelectorModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  BaseOption,\n  isNotNullable,\n  Product,\n  RequiredPick,\n  VariantType,\n} from '@spartacus/core';\nimport { CurrentProductService } from '@spartacus/storefront';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-product-variants-container',\n  templateUrl: './product-variants-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductVariantsContainerComponent implements OnInit {\n  constructor(private currentProductService: CurrentProductService) {}\n\n  variants: { [key: string]: BaseOption } = {};\n  variantType = VariantType;\n  product$: Observable<Product | null>;\n\n  ngOnInit(): void {\n    this.product$ = this.currentProductService.getProduct().pipe(\n      filter(isNotNullable),\n      filter(\n        (product): product is RequiredPick<Product, 'baseOptions'> =>\n          !!product.baseOptions\n      ),\n      distinctUntilChanged(),\n      tap((product) => {\n        product.baseOptions.forEach((option: BaseOption) => {\n          if (option?.variantType) {\n            this.variants[option.variantType] = option;\n          }\n        });\n      })\n    );\n  }\n}\n","<ng-container *ngIf=\"product$ | async as product\">\n  <div class=\"variant-section\" *ngIf=\"product.baseOptions?.length\">\n    <cx-product-variant-style-selector\n      *ngIf=\"variants[variantType.STYLE]\"\n      [variants]=\"variants[variantType.STYLE]\"\n    ></cx-product-variant-style-selector>\n    <cx-product-variant-size-selector\n      *ngIf=\"variants[variantType.SIZE]\"\n      [product]=\"product\"\n      [variants]=\"variants[variantType.SIZE]\"\n    ></cx-product-variant-size-selector>\n    <cx-product-variant-color-selector\n      *ngIf=\"variants[variantType.COLOR]\"\n      [product]=\"product\"\n      [variants]=\"variants[variantType.COLOR]\"\n    ></cx-product-variant-color-selector>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { ProductVariantColorSelectorModule } from '../variant-color-selector/product-variant-color-selector.module';\nimport { ProductVariantSizeSelectorModule } from '../variant-size-selector/product-variant-size-selector.module';\nimport { ProductVariantStyleSelectorModule } from '../variant-style-selector/product-variant-style-selector.module';\nimport { ProductVariantsContainerComponent } from './product-variants-container.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    ProductVariantStyleSelectorModule,\n    ProductVariantSizeSelectorModule,\n    ProductVariantColorSelectorModule,\n  ],\n  declarations: [ProductVariantsContainerComponent],\n})\nexport class ProductVariantsContainerModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  Router,\n  UrlTree,\n} from '@angular/router';\nimport {\n  Product,\n  ProductScope,\n  ProductService,\n  SemanticPathService,\n  VariantOption,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\n/**\n * Guard that will redirect to purchasable variant of product, if the navigation\n * is for the non-purchasable one\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductVariantsGuard implements CanActivate {\n  constructor(\n    protected productService: ProductService,\n    protected semanticPathService: SemanticPathService,\n    protected router: Router\n  ) {}\n  canActivate(\n    activatedRoute: ActivatedRouteSnapshot\n  ): Observable<boolean | UrlTree> {\n    const productCode = activatedRoute.params?.productCode;\n    if (!productCode) {\n      return of(true);\n    }\n    return this.productService.get(productCode, ProductScope.VARIANTS).pipe(\n      filter((p) => !!p),\n      switchMap((product: Product) => {\n        if (!product.purchasable) {\n          const purchasableCode = this.findPurchasableProductCode(product);\n          if (purchasableCode) {\n            return this.productService\n              .get(purchasableCode, ProductScope.LIST)\n              .pipe(\n                filter((p) => !!p),\n                take(1),\n                map((_product: Product) => {\n                  return this.router.createUrlTree(\n                    this.semanticPathService.transform({\n                      cxRoute: 'product',\n                      params: _product,\n                    })\n                  );\n                })\n              );\n          }\n        }\n        return of(true);\n      })\n    );\n  }\n  /**\n   * Finds a purchasable product code looking at variant options, if any\n   *\n   * @param product\n   */\n  protected findPurchasableProductCode(product: Product): string | undefined {\n    if (product.variantOptions?.length) {\n      const results: VariantOption[] = product.variantOptions.filter(\n        (variant) => {\n          return variant.stock && variant.stock.stockLevel ? variant : false;\n        }\n      );\n      return results && results.length\n        ? results[0]?.code\n        : product.variantOptions[0]?.code;\n    }\n    return undefined;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ProductVariantsContainerModule } from './product-variants-container/product-variants-container.module';\nimport { ProductVariantColorSelectorModule } from './variant-color-selector/product-variant-color-selector.module';\nimport { ProductVariantSizeSelectorModule } from './variant-size-selector/product-variant-size-selector.module';\nimport { ProductVariantStyleSelectorModule } from './variant-style-selector/product-variant-style-selector.module';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { ProductVariantsContainerComponent } from './product-variants-container/product-variants-container.component';\nimport { ProductVariantsGuard } from './guards/product-variants.guard';\n\n@NgModule({\n  imports: [\n    ProductVariantsContainerModule,\n    ProductVariantColorSelectorModule,\n    ProductVariantSizeSelectorModule,\n    ProductVariantStyleSelectorModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductVariantSelectorComponent: {\n          component: ProductVariantsContainerComponent,\n          guards: [ProductVariantsGuard],\n        },\n      },\n    }),\n  ],\n})\nexport class ProductVariantsComponentsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["VariantQualifier","Component","ChangeDetectionStrategy","Input","CommonModule","RouterModule","UrlModule","I18nModule","NgModule","filter","take","VariantType","isNotNullable","distinctUntilChanged","tap","of","switchMap","map","Injectable","provideDefaultConfig"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAeE,8CAAoB,cAA8B;YAA9B,mBAAc,GAAd,cAAc,CAAgB;SAAI;QAQtD,0DAAW,GAAX,UAAY,IAAY,EAAE,IAAY;YACpC,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC;oBACrB,OAAO,EAAE,SAAS;oBAClB,MAAM,EAAE,EAAE,IAAI,MAAA,EAAE,IAAI,MAAA,EAAE;iBACvB,CAAC,CAAC;aACJ;YACD,OAAO,IAAI,CAAC;SACb;QACD,oEAAqB,GAArB,UAAsB,UAAoC;YACxD,IAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,SAAS,KAAKA,mBAAgB,CAAC,KAAK,GAAA,CAAC,CAAC;YAC3E,OAAO,GAAG,GAAG,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;SAC7B;;;2JArBU,oCAAoC;oIAApC,oCAAoC,0ICdjD,oiBAkBA;qHDJa,oCAAoC;sBALhDC,YAAS;uBAAC;wBACT,QAAQ,EAAE,mCAAmC;wBAC7C,WAAW,EAAE,iDAAiD;wBAC9D,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;oHAKC,OAAO;0BADNC,QAAK;oBAIN,QAAQ;0BADPA,QAAK;;;;QETR;;;;wJAAa,iCAAiC;yJAAjC,iCAAiC,iBAH7B,oCAAoC,aADzCC,eAAY,EAAEC,iBAAY,EAAEC,YAAS,EAAEC,aAAU,aAEjD,oCAAoC;yJAEnC,iCAAiC,YAJnC,CAACH,eAAY,EAAEC,iBAAY,EAAEC,YAAS,EAAEC,aAAU,CAAC;qHAIjD,iCAAiC;sBAL7CC,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACJ,eAAY,EAAEC,iBAAY,EAAEC,YAAS,EAAEC,aAAU,CAAC;wBAC5D,YAAY,EAAE,CAAC,oCAAoC,CAAC;wBACpD,OAAO,EAAE,CAAC,oCAAoC,CAAC;qBAChD;;;;QCQC,6CACU,cAA8B,EAC9B,cAA8B;YAD9B,mBAAc,GAAd,cAAc,CAAgB;YAC9B,mBAAc,GAAd,cAAc,CAAgB;SACpC;QAQJ,wDAAU,GAAV,UAAW,IAAY;YAAvB,iBAkBC;YAjBC,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,cAAc;qBAChB,GAAG,CAAC,IAAI,oBAAoB;qBAC5B,IAAI;;;gBAGHE,gBAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,GAAA,CAAC,EAClBC,cAAI,CAAC,CAAC,CAAC,CACR;qBACA,SAAS,CAAC,UAAC,OAAgB;oBAC1B,KAAI,CAAC,cAAc,CAAC,EAAE,CAAC;wBACrB,OAAO,EAAE,SAAS;wBAClB,MAAM,EAAE,OAAO;qBAChB,CAAC,CAAC;iBACJ,CAAC,CAAC;aACN;YACD,OAAO,IAAI,CAAC;SACb;QACD,mEAAqB,GAArB,UAAsB,UAAoC;YACxD,IAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,SAAS,KAAKV,mBAAgB,CAAC,IAAI,GAAA,CAAC,CAAC;YAC1E,OAAO,GAAG,GAAG,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;SAC7B;;;0JAlCU,mCAAmC;mIAAnC,mCAAmC,yICjBhD,0tBAwBA;qHDPa,mCAAmC;sBAL/CC,YAAS;uBAAC;wBACT,QAAQ,EAAE,kCAAkC;wBAC5C,WAAW,EAAE,gDAAgD;wBAC7D,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;4JAQC,OAAO;0BADNC,QAAK;oBAIN,QAAQ;0BADPA,QAAK;;;;QEfR;;;;uJAAa,gCAAgC;wJAAhC,gCAAgC,iBAH5B,mCAAmC,aADxCC,eAAY,EAAEC,iBAAY,EAAEC,YAAS,EAAEC,aAAU,aAEjD,mCAAmC;wJAElC,gCAAgC,YAJlC,CAACH,eAAY,EAAEC,iBAAY,EAAEC,YAAS,EAAEC,aAAU,CAAC;qHAIjD,gCAAgC;sBAL5CC,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACJ,eAAY,EAAEC,iBAAY,EAAEC,YAAS,EAAEC,aAAU,CAAC;wBAC5D,YAAY,EAAE,CAAC,mCAAmC,CAAC;wBACnD,OAAO,EAAE,CAAC,mCAAmC,CAAC;qBAC/C;;;;QCSC,8CACU,MAAiB,EACjB,cAA8B,EAC9B,cAA8B;YAF9B,WAAM,GAAN,MAAM,CAAW;YACjB,mBAAc,GAAd,cAAc,CAAgB;YAC9B,mBAAc,GAAd,cAAc,CAAgB;YAGxC,qBAAgB,GAAGP,mBAAgB,CAAC;SAFhC;QAOJ,oEAAqB,GAArB,UAAsB,UAAoC;YACxD,IAAM,GAAG,GAAG,UAAU,CAAC,IAAI,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,SAAS,KAAKA,mBAAgB,CAAC,KAAK,GAAA,CAAC,CAAC;YAC3E,OAAO,GAAG,GAAG,GAAG,CAAC,KAAK,GAAG,EAAE,CAAC;SAC7B;QAED,qEAAsB,GAAtB,UACE,uBAAiD;;YAEjD,IAAM,SAAS,GAAG,uBAAuB,CAAC,IAAI,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,KAAK,GAAA,CAAC,CAAC;YAErE,OAAO,SAAS;kBACZ,MAAG,MAAA,MAAA,MAAA,IAAI,CAAC,MAAM,0CAAE,OAAO,0CAAE,GAAG,0CAAE,OAAO,KAAG,MAAA,SAAS,CAAC,KAAK,0CAAE,GAAG,CAAE;kBAC9D,EAAE,CAAC;SACR;QAED,0DAAW,GAAX,UAAY,IAAY;YAAxB,iBAkBC;YAjBC,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,cAAc;qBAChB,GAAG,CAAC,IAAI,oBAAoB;qBAC5B,IAAI;;;gBAGHS,gBAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,GAAA,CAAC,EAClBC,cAAI,CAAC,CAAC,CAAC,CACR;qBACA,SAAS,CAAC,UAAC,OAAgB;oBAC1B,KAAI,CAAC,cAAc,CAAC,EAAE,CAAC;wBACrB,OAAO,EAAE,SAAS;wBAClB,MAAM,EAAE,OAAO;qBAChB,CAAC,CAAC;iBACJ,CAAC,CAAC;aACN;YACD,OAAO,IAAI,CAAC;SACb;;;2JA7CU,oCAAoC;oIAApC,oCAAoC,sHClBjD,k4BAwBA;qHDNa,oCAAoC;sBALhDT,YAAS;uBAAC;wBACT,QAAQ,EAAE,mCAAmC;wBAC7C,WAAW,EAAE,iDAAiD;wBAC9D,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;+LAWC,QAAQ;0BADPC,QAAK;;;;QEhBR;;;;wJAAa,iCAAiC;yJAAjC,iCAAiC,iBAH7B,oCAAoC,aADzCC,eAAY,EAAEC,iBAAY,EAAEC,YAAS,EAAEC,aAAU,aAEjD,oCAAoC;yJAEnC,iCAAiC,YAJnC,CAACH,eAAY,EAAEC,iBAAY,EAAEC,YAAS,EAAEC,aAAU,CAAC;qHAIjD,iCAAiC;sBAL7CC,WAAQ;uBAAC;wBACR,OAAO,EAAE,CAACJ,eAAY,EAAEC,iBAAY,EAAEC,YAAS,EAAEC,aAAU,CAAC;wBAC5D,YAAY,EAAE,CAAC,oCAAoC,CAAC;wBACpD,OAAO,EAAE,CAAC,oCAAoC,CAAC;qBAChD;;;;QCQC,2CAAoB,qBAA4C;YAA5C,0BAAqB,GAArB,qBAAqB,CAAuB;YAEhE,aAAQ,GAAkC,EAAE,CAAC;YAC7C,gBAAW,GAAGI,cAAW,CAAC;SAH0C;QAMpE,oDAAQ,GAAR;YAAA,iBAgBC;YAfC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC,IAAI,CAC1DF,gBAAM,CAACG,gBAAa,CAAC,EACrBH,gBAAM,CACJ,UAAC,OAAO,IACN,OAAA,CAAC,CAAC,OAAO,CAAC,WAAW,GAAA,CACxB,EACDI,8BAAoB,EAAE,EACtBC,aAAG,CAAC,UAAC,OAAO;gBACV,OAAO,CAAC,WAAW,CAAC,OAAO,CAAC,UAAC,MAAkB;oBAC7C,IAAI,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,WAAW,EAAE;wBACvB,KAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC,GAAG,MAAM,CAAC;qBAC5C;iBACF,CAAC,CAAC;aACJ,CAAC,CACH,CAAC;SACH;;;wJAvBU,iCAAiC;iIAAjC,iCAAiC,gFCjB9C,wuBAkBA;qHDDa,iCAAiC;sBAL7Cb,YAAS;uBAAC;wBACT,QAAQ,EAAE,+BAA+B;wBACzC,WAAW,EAAE,6CAA6C;wBAC1D,eAAe,EAAEC,0BAAuB,CAAC,MAAM;qBAChD;;;;QEKD;;;;qJAAa,8BAA8B;sJAA9B,8BAA8B,iBAF1B,iCAAiC,aAR9CE,eAAY;YACZC,iBAAY;YACZC,YAAS;YACTC,aAAU;YACV,iCAAiC;YACjC,gCAAgC;YAChC,iCAAiC;sJAIxB,8BAA8B,YAXhC;gBACPH,eAAY;gBACZC,iBAAY;gBACZC,YAAS;gBACTC,aAAU;gBACV,iCAAiC;gBACjC,gCAAgC;gBAChC,iCAAiC;aAClC;qHAGU,8BAA8B;sBAZ1CC,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACPJ,eAAY;4BACZC,iBAAY;4BACZC,YAAS;4BACTC,aAAU;4BACV,iCAAiC;4BACjC,gCAAgC;4BAChC,iCAAiC;yBAClC;wBACD,YAAY,EAAE,CAAC,iCAAiC,CAAC;qBAClD;;;ICJD;;;;;QAQE,8BACY,cAA8B,EAC9B,mBAAwC,EACxC,MAAc;YAFd,mBAAc,GAAd,cAAc,CAAgB;YAC9B,wBAAmB,GAAnB,mBAAmB,CAAqB;YACxC,WAAM,GAAN,MAAM,CAAQ;SACtB;QACJ,0CAAW,GAAX,UACE,cAAsC;YADxC,iBAgCC;;YA7BC,IAAM,WAAW,GAAG,MAAA,cAAc,CAAC,MAAM,0CAAE,WAAW,CAAC;YACvD,IAAI,CAAC,WAAW,EAAE;gBAChB,OAAOQ,OAAE,CAAC,IAAI,CAAC,CAAC;aACjB;YACD,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,WAAW,4BAAwB,CAAC,IAAI,CACrEN,gBAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,GAAA,CAAC,EAClBO,mBAAS,CAAC,UAAC,OAAgB;gBACzB,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE;oBACxB,IAAM,eAAe,GAAG,KAAI,CAAC,0BAA0B,CAAC,OAAO,CAAC,CAAC;oBACjE,IAAI,eAAe,EAAE;wBACnB,OAAO,KAAI,CAAC,cAAc;6BACvB,GAAG,CAAC,eAAe,oBAAoB;6BACvC,IAAI,CACHP,gBAAM,CAAC,UAAC,CAAC,IAAK,OAAA,CAAC,CAAC,CAAC,GAAA,CAAC,EAClBC,cAAI,CAAC,CAAC,CAAC,EACPO,aAAG,CAAC,UAAC,QAAiB;4BACpB,OAAO,KAAI,CAAC,MAAM,CAAC,aAAa,CAC9B,KAAI,CAAC,mBAAmB,CAAC,SAAS,CAAC;gCACjC,OAAO,EAAE,SAAS;gCAClB,MAAM,EAAE,QAAQ;6BACjB,CAAC,CACH,CAAC;yBACH,CAAC,CACH,CAAC;qBACL;iBACF;gBACD,OAAOF,OAAE,CAAC,IAAI,CAAC,CAAC;aACjB,CAAC,CACH,CAAC;SACH;;;;;;QAMS,yDAA0B,GAA1B,UAA2B,OAAgB;;YACnD,IAAI,MAAA,OAAO,CAAC,cAAc,0CAAE,MAAM,EAAE;gBAClC,IAAM,OAAO,GAAoB,OAAO,CAAC,cAAc,CAAC,MAAM,CAC5D,UAAC,OAAO;oBACN,OAAO,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,CAAC,UAAU,GAAG,OAAO,GAAG,KAAK,CAAC;iBACpE,CACF,CAAC;gBACF,OAAO,OAAO,IAAI,OAAO,CAAC,MAAM;sBAC5B,MAAA,OAAO,CAAC,CAAC,CAAC,0CAAE,IAAI;sBAChB,MAAA,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,0CAAE,IAAI,CAAC;aACrC;YACD,OAAO,SAAS,CAAC;SAClB;;;2IAxDU,oBAAoB;+IAApB,oBAAoB,cAFnB,MAAM;qHAEP,oBAAoB;sBAHhCG,aAAU;uBAAC;wBACV,UAAU,EAAE,MAAM;qBACnB;;;;QCKD;;;;sJAAa,+BAA+B;uJAA/B,+BAA+B,YAhBxC,8BAA8B;YAC9B,iCAAiC;YACjC,gCAAgC;YAChC,iCAAiC;uJAaxB,+BAA+B,aAX/B;YACTC,uBAAoB,CAAY;gBAC9B,aAAa,EAAE;oBACb,+BAA+B,EAAE;wBAC/B,SAAS,EAAE,iCAAiC;wBAC5C,MAAM,EAAE,CAAC,oBAAoB,CAAC;qBAC/B;iBACF;aACF,CAAC;SACH,YAfQ;gBACP,8BAA8B;gBAC9B,iCAAiC;gBACjC,gCAAgC;gBAChC,iCAAiC;aAClC;qHAYU,+BAA+B;sBAlB3CX,WAAQ;uBAAC;wBACR,OAAO,EAAE;4BACP,8BAA8B;4BAC9B,iCAAiC;4BACjC,gCAAgC;4BAChC,iCAAiC;yBAClC;wBACD,SAAS,EAAE;4BACTW,uBAAoB,CAAY;gCAC9B,aAAa,EAAE;oCACb,+BAA+B,EAAE;wCAC/B,SAAS,EAAE,iCAAiC;wCAC5C,MAAM,EAAE,CAAC,oBAAoB,CAAC;qCAC/B;iCACF;6BACF,CAAC;yBACH;qBACF;;;IC1BD;;;;;;;;;;;;;;;;;;;;;"}