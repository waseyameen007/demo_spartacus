(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/router'), require('@spartacus/core'), require('rxjs/operators'), require('@spartacus/storefront'), require('rxjs')) :
    typeof define === 'function' && define.amd ? define('@spartacus/product/variants/components', ['exports', '@angular/core', '@angular/common', '@angular/router', '@spartacus/core', 'rxjs/operators', '@spartacus/storefront', 'rxjs'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.spartacus = global.spartacus || {}, global.spartacus.product = global.spartacus.product || {}, global.spartacus.product.variants = global.spartacus.product.variants || {}, global.spartacus.product.variants.components = {}), global.ng.core, global.ng.common, global.ng.router, global.core, global.rxjs.operators, global.storefront, global.rxjs));
}(this, (function (exports, i0, i2, i2$1, i1, operators, i1$1, rxjs) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i2__namespace = /*#__PURE__*/_interopNamespace(i2);
    var i2__namespace$1 = /*#__PURE__*/_interopNamespace(i2$1);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1$1);

    var ProductVariantColorSelectorComponent = /** @class */ (function () {
        function ProductVariantColorSelectorComponent(routingService) {
            this.routingService = routingService;
        }
        ProductVariantColorSelectorComponent.prototype.changeColor = function (code, name) {
            if (code) {
                this.routingService.go({
                    cxRoute: 'product',
                    params: { code: code, name: name },
                });
            }
            return null;
        };
        ProductVariantColorSelectorComponent.prototype.getVariantOptionValue = function (qualifiers) {
            var obj = qualifiers.find(function (q) { return q.qualifier === i1.VariantQualifier.COLOR; });
            return obj ? obj.value : '';
        };
        return ProductVariantColorSelectorComponent;
    }());
    ProductVariantColorSelectorComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantColorSelectorComponent, deps: [{ token: i1__namespace.RoutingService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductVariantColorSelectorComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ProductVariantColorSelectorComponent, selector: "cx-product-variant-color-selector", inputs: { product: "product", variants: "variants" }, ngImport: i0__namespace, template: "<ng-container>\n  <div class=\"variant-selector\">\n    <div class=\"variant-name\">{{ 'productVariants.color' | cxTranslate }}:</div>\n\n    <select\n      (change)=\"changeColor($event.target.value, product?.name)\"\n      class=\"form-control variant-select\"\n    >\n      <option\n        *ngFor=\"let v of variants?.options\"\n        value=\"{{ v.code }}\"\n        [selected]=\"v.code === product?.code\"\n      >\n        {{ getVariantOptionValue(v.variantOptionQualifiers) }}\n      </option>\n    </select>\n  </div>\n</ng-container>\n", directives: [{ type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "cxTranslate": i1__namespace.TranslatePipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantColorSelectorComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-product-variant-color-selector',
                        templateUrl: './product-variant-color-selector.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.RoutingService }]; }, propDecorators: { product: [{
                    type: i0.Input
                }], variants: [{
                    type: i0.Input
                }] } });

    var ProductVariantColorSelectorModule = /** @class */ (function () {
        function ProductVariantColorSelectorModule() {
        }
        return ProductVariantColorSelectorModule;
    }());
    ProductVariantColorSelectorModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantColorSelectorModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductVariantColorSelectorModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantColorSelectorModule, declarations: [ProductVariantColorSelectorComponent], imports: [i2.CommonModule, i2$1.RouterModule, i1.UrlModule, i1.I18nModule], exports: [ProductVariantColorSelectorComponent] });
    ProductVariantColorSelectorModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantColorSelectorModule, imports: [[i2.CommonModule, i2$1.RouterModule, i1.UrlModule, i1.I18nModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantColorSelectorModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i2.CommonModule, i2$1.RouterModule, i1.UrlModule, i1.I18nModule],
                        declarations: [ProductVariantColorSelectorComponent],
                        exports: [ProductVariantColorSelectorComponent],
                    }]
            }] });

    var ProductVariantSizeSelectorComponent = /** @class */ (function () {
        function ProductVariantSizeSelectorComponent(productService, routingService) {
            this.productService = productService;
            this.routingService = routingService;
        }
        ProductVariantSizeSelectorComponent.prototype.changeSize = function (code) {
            var _this = this;
            if (code) {
                this.productService
                    .get(code, "list" /* LIST */)
                    .pipe(
                // below call might looks redundant but in fact this data is going to be loaded anyways
                // we're just calling it earlier and storing
                operators.filter(function (p) { return !!p; }), operators.take(1))
                    .subscribe(function (product) {
                    _this.routingService.go({
                        cxRoute: 'product',
                        params: product,
                    });
                });
            }
            return null;
        };
        ProductVariantSizeSelectorComponent.prototype.getVariantOptionValue = function (qualifiers) {
            var obj = qualifiers.find(function (q) { return q.qualifier === i1.VariantQualifier.SIZE; });
            return obj ? obj.value : '';
        };
        return ProductVariantSizeSelectorComponent;
    }());
    ProductVariantSizeSelectorComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantSizeSelectorComponent, deps: [{ token: i1__namespace.ProductService }, { token: i1__namespace.RoutingService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductVariantSizeSelectorComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ProductVariantSizeSelectorComponent, selector: "cx-product-variant-size-selector", inputs: { product: "product", variants: "variants" }, ngImport: i0__namespace, template: "<ng-container>\n  <div class=\"variant-selector\">\n    <div class=\"variant-name\">{{ 'productVariants.size' | cxTranslate }}:</div>\n    <select\n      (change)=\"changeSize($event.target.value)\"\n      class=\"form-control variant-select\"\n    >\n      <option\n        *ngFor=\"let v of variants?.options\"\n        value=\"{{ v.code }}\"\n        [selected]=\"v.code === product?.code\"\n      >\n        {{ getVariantOptionValue(v.variantOptionQualifiers) }}\n      </option>\n    </select>\n    <a\n      href=\"#\"\n      class=\"size-guide\"\n      title=\"{{ 'productVariants.sizeGuideLabel' | cxTranslate }}\"\n    >\n      {{ 'productVariants.sizeGuideLabel' | cxTranslate }}\n    </a>\n  </div>\n</ng-container>\n", directives: [{ type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }], pipes: { "cxTranslate": i1__namespace.TranslatePipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantSizeSelectorComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-product-variant-size-selector',
                        templateUrl: './product-variant-size-selector.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.ProductService }, { type: i1__namespace.RoutingService }]; }, propDecorators: { product: [{
                    type: i0.Input
                }], variants: [{
                    type: i0.Input
                }] } });

    var ProductVariantSizeSelectorModule = /** @class */ (function () {
        function ProductVariantSizeSelectorModule() {
        }
        return ProductVariantSizeSelectorModule;
    }());
    ProductVariantSizeSelectorModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantSizeSelectorModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductVariantSizeSelectorModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantSizeSelectorModule, declarations: [ProductVariantSizeSelectorComponent], imports: [i2.CommonModule, i2$1.RouterModule, i1.UrlModule, i1.I18nModule], exports: [ProductVariantSizeSelectorComponent] });
    ProductVariantSizeSelectorModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantSizeSelectorModule, imports: [[i2.CommonModule, i2$1.RouterModule, i1.UrlModule, i1.I18nModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantSizeSelectorModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i2.CommonModule, i2$1.RouterModule, i1.UrlModule, i1.I18nModule],
                        declarations: [ProductVariantSizeSelectorComponent],
                        exports: [ProductVariantSizeSelectorComponent],
                    }]
            }] });

    var ProductVariantStyleSelectorComponent = /** @class */ (function () {
        function ProductVariantStyleSelectorComponent(config, productService, routingService) {
            this.config = config;
            this.productService = productService;
            this.routingService = routingService;
            this.variantQualifier = i1.VariantQualifier;
        }
        ProductVariantStyleSelectorComponent.prototype.getVariantOptionValue = function (qualifiers) {
            var obj = qualifiers.find(function (q) { return q.qualifier === i1.VariantQualifier.STYLE; });
            return obj ? obj.value : '';
        };
        ProductVariantStyleSelectorComponent.prototype.getVariantThumbnailUrl = function (variantOptionQualifiers) {
            var _a, _b, _c, _d;
            var qualifier = variantOptionQualifiers.find(function (item) { return item.image; });
            return qualifier
                ? "" + ((_c = (_b = (_a = this.config) === null || _a === void 0 ? void 0 : _a.backend) === null || _b === void 0 ? void 0 : _b.occ) === null || _c === void 0 ? void 0 : _c.baseUrl) + ((_d = qualifier.image) === null || _d === void 0 ? void 0 : _d.url)
                : '';
        };
        ProductVariantStyleSelectorComponent.prototype.changeStyle = function (code) {
            var _this = this;
            if (code) {
                this.productService
                    .get(code, "list" /* LIST */)
                    .pipe(
                // below call might looks redundant but in fact this data is going to be loaded anyways
                // we're just calling it earlier and storing
                operators.filter(function (p) { return !!p; }), operators.take(1))
                    .subscribe(function (product) {
                    _this.routingService.go({
                        cxRoute: 'product',
                        params: product,
                    });
                });
            }
            return null;
        };
        return ProductVariantStyleSelectorComponent;
    }());
    ProductVariantStyleSelectorComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantStyleSelectorComponent, deps: [{ token: i1__namespace.OccConfig }, { token: i1__namespace.ProductService }, { token: i1__namespace.RoutingService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductVariantStyleSelectorComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ProductVariantStyleSelectorComponent, selector: "cx-product-variant-style-selector", inputs: { variants: "variants" }, ngImport: i0__namespace, template: "<ng-container>\n  <div class=\"variant-selector\">\n    <div *ngIf=\"variants.selected\" class=\"variant-name\">\n      {{ 'productVariants.style' | cxTranslate }}:\n      <span class=\"style-name\">{{\n        getVariantOptionValue(variants?.selected.variantOptionQualifiers)\n      }}</span>\n    </div>\n    <ul class=\"variant-list\">\n      <li\n        *ngFor=\"let v of variants?.options\"\n        [ngClass]=\"{ 'selected-variant': v.code === variants?.selected?.code }\"\n      >\n        <button class=\"variant-button\" (click)=\"changeStyle(v.code)\">\n          <img\n            src=\"{{ getVariantThumbnailUrl(v.variantOptionQualifiers) }}\"\n            title=\"{{ getVariantOptionValue(v.variantOptionQualifiers) }}\"\n            alt=\"{{ getVariantOptionValue(v.variantOptionQualifiers) }}\"\n          />\n        </button>\n      </li>\n    </ul>\n  </div>\n</ng-container>\n", directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i2__namespace.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i2__namespace.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], pipes: { "cxTranslate": i1__namespace.TranslatePipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantStyleSelectorComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-product-variant-style-selector',
                        templateUrl: './product-variant-style-selector.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.OccConfig }, { type: i1__namespace.ProductService }, { type: i1__namespace.RoutingService }]; }, propDecorators: { variants: [{
                    type: i0.Input
                }] } });

    var ProductVariantStyleSelectorModule = /** @class */ (function () {
        function ProductVariantStyleSelectorModule() {
        }
        return ProductVariantStyleSelectorModule;
    }());
    ProductVariantStyleSelectorModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantStyleSelectorModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductVariantStyleSelectorModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantStyleSelectorModule, declarations: [ProductVariantStyleSelectorComponent], imports: [i2.CommonModule, i2$1.RouterModule, i1.UrlModule, i1.I18nModule], exports: [ProductVariantStyleSelectorComponent] });
    ProductVariantStyleSelectorModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantStyleSelectorModule, imports: [[i2.CommonModule, i2$1.RouterModule, i1.UrlModule, i1.I18nModule]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantStyleSelectorModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [i2.CommonModule, i2$1.RouterModule, i1.UrlModule, i1.I18nModule],
                        declarations: [ProductVariantStyleSelectorComponent],
                        exports: [ProductVariantStyleSelectorComponent],
                    }]
            }] });

    var ProductVariantsContainerComponent = /** @class */ (function () {
        function ProductVariantsContainerComponent(currentProductService) {
            this.currentProductService = currentProductService;
            this.variants = {};
            this.variantType = i1.VariantType;
        }
        ProductVariantsContainerComponent.prototype.ngOnInit = function () {
            var _this = this;
            this.product$ = this.currentProductService.getProduct().pipe(operators.filter(i1.isNotNullable), operators.filter(function (product) { return !!product.baseOptions; }), operators.distinctUntilChanged(), operators.tap(function (product) {
                product.baseOptions.forEach(function (option) {
                    if (option === null || option === void 0 ? void 0 : option.variantType) {
                        _this.variants[option.variantType] = option;
                    }
                });
            }));
        };
        return ProductVariantsContainerComponent;
    }());
    ProductVariantsContainerComponent.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantsContainerComponent, deps: [{ token: i1__namespace$1.CurrentProductService }], target: i0__namespace.ɵɵFactoryTarget.Component });
    ProductVariantsContainerComponent.ɵcmp = i0__namespace.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ProductVariantsContainerComponent, selector: "cx-product-variants-container", ngImport: i0__namespace, template: "<ng-container *ngIf=\"product$ | async as product\">\n  <div class=\"variant-section\" *ngIf=\"product.baseOptions?.length\">\n    <cx-product-variant-style-selector\n      *ngIf=\"variants[variantType.STYLE]\"\n      [variants]=\"variants[variantType.STYLE]\"\n    ></cx-product-variant-style-selector>\n    <cx-product-variant-size-selector\n      *ngIf=\"variants[variantType.SIZE]\"\n      [product]=\"product\"\n      [variants]=\"variants[variantType.SIZE]\"\n    ></cx-product-variant-size-selector>\n    <cx-product-variant-color-selector\n      *ngIf=\"variants[variantType.COLOR]\"\n      [product]=\"product\"\n      [variants]=\"variants[variantType.COLOR]\"\n    ></cx-product-variant-color-selector>\n  </div>\n</ng-container>\n", components: [{ type: ProductVariantStyleSelectorComponent, selector: "cx-product-variant-style-selector", inputs: ["variants"] }, { type: ProductVariantSizeSelectorComponent, selector: "cx-product-variant-size-selector", inputs: ["product", "variants"] }, { type: ProductVariantColorSelectorComponent, selector: "cx-product-variant-color-selector", inputs: ["product", "variants"] }], directives: [{ type: i2__namespace.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i2__namespace.AsyncPipe }, changeDetection: i0__namespace.ChangeDetectionStrategy.OnPush });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantsContainerComponent, decorators: [{
                type: i0.Component,
                args: [{
                        selector: 'cx-product-variants-container',
                        templateUrl: './product-variants-container.component.html',
                        changeDetection: i0.ChangeDetectionStrategy.OnPush,
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.CurrentProductService }]; } });

    var ProductVariantsContainerModule = /** @class */ (function () {
        function ProductVariantsContainerModule() {
        }
        return ProductVariantsContainerModule;
    }());
    ProductVariantsContainerModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantsContainerModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductVariantsContainerModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantsContainerModule, declarations: [ProductVariantsContainerComponent], imports: [i2.CommonModule,
            i2$1.RouterModule,
            i1.UrlModule,
            i1.I18nModule,
            ProductVariantStyleSelectorModule,
            ProductVariantSizeSelectorModule,
            ProductVariantColorSelectorModule] });
    ProductVariantsContainerModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantsContainerModule, imports: [[
                i2.CommonModule,
                i2$1.RouterModule,
                i1.UrlModule,
                i1.I18nModule,
                ProductVariantStyleSelectorModule,
                ProductVariantSizeSelectorModule,
                ProductVariantColorSelectorModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantsContainerModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            i2.CommonModule,
                            i2$1.RouterModule,
                            i1.UrlModule,
                            i1.I18nModule,
                            ProductVariantStyleSelectorModule,
                            ProductVariantSizeSelectorModule,
                            ProductVariantColorSelectorModule,
                        ],
                        declarations: [ProductVariantsContainerComponent],
                    }]
            }] });

    /**
     * Guard that will redirect to purchasable variant of product, if the navigation
     * is for the non-purchasable one
     */
    var ProductVariantsGuard = /** @class */ (function () {
        function ProductVariantsGuard(productService, semanticPathService, router) {
            this.productService = productService;
            this.semanticPathService = semanticPathService;
            this.router = router;
        }
        ProductVariantsGuard.prototype.canActivate = function (activatedRoute) {
            var _this = this;
            var _a;
            var productCode = (_a = activatedRoute.params) === null || _a === void 0 ? void 0 : _a.productCode;
            if (!productCode) {
                return rxjs.of(true);
            }
            return this.productService.get(productCode, "variants" /* VARIANTS */).pipe(operators.filter(function (p) { return !!p; }), operators.switchMap(function (product) {
                if (!product.purchasable) {
                    var purchasableCode = _this.findPurchasableProductCode(product);
                    if (purchasableCode) {
                        return _this.productService
                            .get(purchasableCode, "list" /* LIST */)
                            .pipe(operators.filter(function (p) { return !!p; }), operators.take(1), operators.map(function (_product) {
                            return _this.router.createUrlTree(_this.semanticPathService.transform({
                                cxRoute: 'product',
                                params: _product,
                            }));
                        }));
                    }
                }
                return rxjs.of(true);
            }));
        };
        /**
         * Finds a purchasable product code looking at variant options, if any
         *
         * @param product
         */
        ProductVariantsGuard.prototype.findPurchasableProductCode = function (product) {
            var _a, _b, _c;
            if ((_a = product.variantOptions) === null || _a === void 0 ? void 0 : _a.length) {
                var results = product.variantOptions.filter(function (variant) {
                    return variant.stock && variant.stock.stockLevel ? variant : false;
                });
                return results && results.length
                    ? (_b = results[0]) === null || _b === void 0 ? void 0 : _b.code
                    : (_c = product.variantOptions[0]) === null || _c === void 0 ? void 0 : _c.code;
            }
            return undefined;
        };
        return ProductVariantsGuard;
    }());
    ProductVariantsGuard.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantsGuard, deps: [{ token: i1__namespace.ProductService }, { token: i1__namespace.SemanticPathService }, { token: i2__namespace$1.Router }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    ProductVariantsGuard.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantsGuard, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantsGuard, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace.ProductService }, { type: i1__namespace.SemanticPathService }, { type: i2__namespace$1.Router }]; } });

    var ProductVariantsComponentsModule = /** @class */ (function () {
        function ProductVariantsComponentsModule() {
        }
        return ProductVariantsComponentsModule;
    }());
    ProductVariantsComponentsModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantsComponentsModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    ProductVariantsComponentsModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantsComponentsModule, imports: [ProductVariantsContainerModule,
            ProductVariantColorSelectorModule,
            ProductVariantSizeSelectorModule,
            ProductVariantStyleSelectorModule] });
    ProductVariantsComponentsModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantsComponentsModule, providers: [
            i1.provideDefaultConfig({
                cmsComponents: {
                    ProductVariantSelectorComponent: {
                        component: ProductVariantsContainerComponent,
                        guards: [ProductVariantsGuard],
                    },
                },
            }),
        ], imports: [[
                ProductVariantsContainerModule,
                ProductVariantColorSelectorModule,
                ProductVariantSizeSelectorModule,
                ProductVariantStyleSelectorModule,
            ]] });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: ProductVariantsComponentsModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        imports: [
                            ProductVariantsContainerModule,
                            ProductVariantColorSelectorModule,
                            ProductVariantSizeSelectorModule,
                            ProductVariantStyleSelectorModule,
                        ],
                        providers: [
                            i1.provideDefaultConfig({
                                cmsComponents: {
                                    ProductVariantSelectorComponent: {
                                        component: ProductVariantsContainerComponent,
                                        guards: [ProductVariantsGuard],
                                    },
                                },
                            }),
                        ],
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.ProductVariantColorSelectorComponent = ProductVariantColorSelectorComponent;
    exports.ProductVariantColorSelectorModule = ProductVariantColorSelectorModule;
    exports.ProductVariantSizeSelectorComponent = ProductVariantSizeSelectorComponent;
    exports.ProductVariantSizeSelectorModule = ProductVariantSizeSelectorModule;
    exports.ProductVariantStyleSelectorComponent = ProductVariantStyleSelectorComponent;
    exports.ProductVariantStyleSelectorModule = ProductVariantStyleSelectorModule;
    exports.ProductVariantsComponentsModule = ProductVariantsComponentsModule;
    exports.ProductVariantsContainerComponent = ProductVariantsContainerComponent;
    exports.ProductVariantsContainerModule = ProductVariantsContainerModule;
    exports.ProductVariantsGuard = ProductVariantsGuard;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=spartacus-product-variants-components.umd.js.map
