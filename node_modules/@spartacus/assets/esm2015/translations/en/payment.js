export const payment = {
    paymentForm: {
        payment: 'Payment',
        choosePaymentMethod: 'Choose a payment method',
        paymentType: 'Payment Type',
        accountHolderName: {
            label: 'Account Holder Name',
            placeholder: 'Account Holder Name',
        },
        cardNumber: 'Card Number',
        expirationDate: 'Expiration Date',
        securityCode: 'Security code (CVV)',
        securityCodeTitle: 'Card Verification Value',
        saveAsDefault: 'Save as default',
        setAsDefault: 'Set as default',
        billingAddress: 'Billing address',
        sameAsShippingAddress: 'Same as shipping address',
        selectOne: 'Select One...',
        monthMask: 'MM',
        yearMask: 'YYYY',
        expirationYear: 'Expiration year {{ selected }}',
        expirationMonth: 'Expiration month {{ selected }}',
        useThisPayment: 'Use this payment',
        addNewPayment: 'Add New Payment',
        changePayment: 'Change Payment',
    },
    paymentMethods: {
        paymentMethods: 'Payment methods',
        newPaymentMethodsAreAddedDuringCheckout: 'New payment methods are added during checkout.',
        invalidField: 'InvalidField: {{ field }}',
    },
    paymentCard: {
        deleteConfirmation: 'Are you sure you want to delete this payment method?',
        setAsDefault: 'Set as default',
        expires: 'Expires: {{ month }}/{{ year }}',
        defaultPaymentMethod: 'âœ“ DEFAULT',
        selected: 'Selected',
    },
    paymentTypes: {
        title: 'Payment method',
        paymentType_CARD: 'Credit Card',
        paymentType_ACCOUNT: 'Account',
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGF5bWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL2Fzc2V0cy9zcmMvdHJhbnNsYXRpb25zL2VuL3BheW1lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTSxDQUFDLE1BQU0sT0FBTyxHQUFHO0lBQ3JCLFdBQVcsRUFBRTtRQUNYLE9BQU8sRUFBRSxTQUFTO1FBQ2xCLG1CQUFtQixFQUFFLHlCQUF5QjtRQUM5QyxXQUFXLEVBQUUsY0FBYztRQUMzQixpQkFBaUIsRUFBRTtZQUNqQixLQUFLLEVBQUUscUJBQXFCO1lBQzVCLFdBQVcsRUFBRSxxQkFBcUI7U0FDbkM7UUFDRCxVQUFVLEVBQUUsYUFBYTtRQUN6QixjQUFjLEVBQUUsaUJBQWlCO1FBQ2pDLFlBQVksRUFBRSxxQkFBcUI7UUFDbkMsaUJBQWlCLEVBQUUseUJBQXlCO1FBQzVDLGFBQWEsRUFBRSxpQkFBaUI7UUFDaEMsWUFBWSxFQUFFLGdCQUFnQjtRQUM5QixjQUFjLEVBQUUsaUJBQWlCO1FBQ2pDLHFCQUFxQixFQUFFLDBCQUEwQjtRQUNqRCxTQUFTLEVBQUUsZUFBZTtRQUMxQixTQUFTLEVBQUUsSUFBSTtRQUNmLFFBQVEsRUFBRSxNQUFNO1FBQ2hCLGNBQWMsRUFBRSxnQ0FBZ0M7UUFDaEQsZUFBZSxFQUFFLGlDQUFpQztRQUNsRCxjQUFjLEVBQUUsa0JBQWtCO1FBQ2xDLGFBQWEsRUFBRSxpQkFBaUI7UUFDaEMsYUFBYSxFQUFFLGdCQUFnQjtLQUNoQztJQUNELGNBQWMsRUFBRTtRQUNkLGNBQWMsRUFBRSxpQkFBaUI7UUFDakMsdUNBQXVDLEVBQ3JDLGdEQUFnRDtRQUNsRCxZQUFZLEVBQUUsMkJBQTJCO0tBQzFDO0lBQ0QsV0FBVyxFQUFFO1FBQ1gsa0JBQWtCLEVBQUUsc0RBQXNEO1FBQzFFLFlBQVksRUFBRSxnQkFBZ0I7UUFDOUIsT0FBTyxFQUFFLGlDQUFpQztRQUMxQyxvQkFBb0IsRUFBRSxXQUFXO1FBQ2pDLFFBQVEsRUFBRSxVQUFVO0tBQ3JCO0lBQ0QsWUFBWSxFQUFFO1FBQ1osS0FBSyxFQUFFLGdCQUFnQjtRQUN2QixnQkFBZ0IsRUFBRSxhQUFhO1FBQy9CLG1CQUFtQixFQUFFLFNBQVM7S0FDL0I7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IHBheW1lbnQgPSB7XG4gIHBheW1lbnRGb3JtOiB7XG4gICAgcGF5bWVudDogJ1BheW1lbnQnLFxuICAgIGNob29zZVBheW1lbnRNZXRob2Q6ICdDaG9vc2UgYSBwYXltZW50IG1ldGhvZCcsXG4gICAgcGF5bWVudFR5cGU6ICdQYXltZW50IFR5cGUnLFxuICAgIGFjY291bnRIb2xkZXJOYW1lOiB7XG4gICAgICBsYWJlbDogJ0FjY291bnQgSG9sZGVyIE5hbWUnLFxuICAgICAgcGxhY2Vob2xkZXI6ICdBY2NvdW50IEhvbGRlciBOYW1lJyxcbiAgICB9LFxuICAgIGNhcmROdW1iZXI6ICdDYXJkIE51bWJlcicsXG4gICAgZXhwaXJhdGlvbkRhdGU6ICdFeHBpcmF0aW9uIERhdGUnLFxuICAgIHNlY3VyaXR5Q29kZTogJ1NlY3VyaXR5IGNvZGUgKENWViknLFxuICAgIHNlY3VyaXR5Q29kZVRpdGxlOiAnQ2FyZCBWZXJpZmljYXRpb24gVmFsdWUnLFxuICAgIHNhdmVBc0RlZmF1bHQ6ICdTYXZlIGFzIGRlZmF1bHQnLFxuICAgIHNldEFzRGVmYXVsdDogJ1NldCBhcyBkZWZhdWx0JyxcbiAgICBiaWxsaW5nQWRkcmVzczogJ0JpbGxpbmcgYWRkcmVzcycsXG4gICAgc2FtZUFzU2hpcHBpbmdBZGRyZXNzOiAnU2FtZSBhcyBzaGlwcGluZyBhZGRyZXNzJyxcbiAgICBzZWxlY3RPbmU6ICdTZWxlY3QgT25lLi4uJyxcbiAgICBtb250aE1hc2s6ICdNTScsXG4gICAgeWVhck1hc2s6ICdZWVlZJyxcbiAgICBleHBpcmF0aW9uWWVhcjogJ0V4cGlyYXRpb24geWVhciB7eyBzZWxlY3RlZCB9fScsXG4gICAgZXhwaXJhdGlvbk1vbnRoOiAnRXhwaXJhdGlvbiBtb250aCB7eyBzZWxlY3RlZCB9fScsXG4gICAgdXNlVGhpc1BheW1lbnQ6ICdVc2UgdGhpcyBwYXltZW50JyxcbiAgICBhZGROZXdQYXltZW50OiAnQWRkIE5ldyBQYXltZW50JyxcbiAgICBjaGFuZ2VQYXltZW50OiAnQ2hhbmdlIFBheW1lbnQnLFxuICB9LFxuICBwYXltZW50TWV0aG9kczoge1xuICAgIHBheW1lbnRNZXRob2RzOiAnUGF5bWVudCBtZXRob2RzJyxcbiAgICBuZXdQYXltZW50TWV0aG9kc0FyZUFkZGVkRHVyaW5nQ2hlY2tvdXQ6XG4gICAgICAnTmV3IHBheW1lbnQgbWV0aG9kcyBhcmUgYWRkZWQgZHVyaW5nIGNoZWNrb3V0LicsXG4gICAgaW52YWxpZEZpZWxkOiAnSW52YWxpZEZpZWxkOiB7eyBmaWVsZCB9fScsXG4gIH0sXG4gIHBheW1lbnRDYXJkOiB7XG4gICAgZGVsZXRlQ29uZmlybWF0aW9uOiAnQXJlIHlvdSBzdXJlIHlvdSB3YW50IHRvIGRlbGV0ZSB0aGlzIHBheW1lbnQgbWV0aG9kPycsXG4gICAgc2V0QXNEZWZhdWx0OiAnU2V0IGFzIGRlZmF1bHQnLFxuICAgIGV4cGlyZXM6ICdFeHBpcmVzOiB7eyBtb250aCB9fS97eyB5ZWFyIH19JyxcbiAgICBkZWZhdWx0UGF5bWVudE1ldGhvZDogJ+KckyBERUZBVUxUJyxcbiAgICBzZWxlY3RlZDogJ1NlbGVjdGVkJyxcbiAgfSxcbiAgcGF5bWVudFR5cGVzOiB7XG4gICAgdGl0bGU6ICdQYXltZW50IG1ldGhvZCcsXG4gICAgcGF5bWVudFR5cGVfQ0FSRDogJ0NyZWRpdCBDYXJkJyxcbiAgICBwYXltZW50VHlwZV9BQ0NPVU5UOiAnQWNjb3VudCcsXG4gIH0sXG59O1xuIl19