(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
    typeof define === 'function' && define.amd ? define('@spartacus/assets', ['exports'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.spartacus = global.spartacus || {}, global.spartacus.assets = {})));
}(this, (function (exports) { 'use strict';

    var translationChunksConfig = {
        common: [
            'common',
            'spinner',
            'searchBox',
            'navigation',
            'sorting',
            'httpHandlers',
            'pageMetaResolver',
            'miniCart',
            'skipLink',
            'formErrors',
            'errorHandlers',
            'carousel',
        ],
        cart: [
            'cartDetails',
            'cartItems',
            'orderCost',
            'voucher',
            'wishList',
            'saveForLaterItems',
            'validation',
        ],
        address: ['addressForm', 'addressBook', 'addressCard', 'addressSuggestion'],
        payment: ['paymentForm', 'paymentMethods', 'paymentCard', 'paymentTypes'],
        myAccount: [
            'orderDetails',
            'orderHistory',
            'closeAccount',
            'updatePasswordForm',
            'updateProfileForm',
            'consentManagementForm',
            'myCoupons',
            'wishlist',
            'notificationPreference',
            'myInterests',
            'AccountOrderHistoryTabContainer',
            'returnRequestList',
            'returnRequest',
        ],
        pwa: ['pwa'],
        product: [
            'productDetails',
            'productList',
            'productFacetNavigation',
            'productSummary',
            'productReview',
            'addToCart',
            'addToWishList',
            'CMSTabParagraphContainer',
            'stockNotification',
            'TabPanelContainer',
            'itemCounter',
            'productView',
        ],
        user: ['anonymousConsents', 'loginRegister', 'checkoutLogin'],
    };

    var address = {
        addressForm: {
            title: 'Title',
            defaultTitle: 'Title',
            firstName: {
                label: 'First name',
                placeholder: 'First Name',
            },
            lastName: {
                label: 'Last name',
                placeholder: 'Last Name',
            },
            address1: 'Address 1',
            address2: 'Address 2 (optional)',
            country: 'Country/Region',
            city: {
                label: 'City',
                placeholder: 'City',
            },
            state: 'State',
            zipCode: {
                label: 'Zip code',
                placeholder: 'Postal Code/Zip',
            },
            phoneNumber: {
                label: 'Phone number (optional)',
                placeholder: '(555) 555 - 0123',
            },
            saveAsDefault: 'Save as default',
            chooseAddress: 'Choose address',
            streetAddress: 'Street Address',
            aptSuite: 'Apt, Suite',
            selectOne: 'Select One...',
            setAsDefault: 'Set as default',
            titleRequired: 'Title is required.',
            userAddressAddSuccess: 'New address was added successfully!',
            userAddressUpdateSuccess: 'Address updated successfully!',
            userAddressDeleteSuccess: 'Address deleted successfully!',
            invalidAddress: 'Invalid Address',
        },
        addressBook: {
            addNewShippingAddress: 'Add a new shipping address',
            editShippingAddress: 'Edit shipping address',
            areYouSureToDeleteAddress: 'Are you sure you want to delete this address?',
            addNewAddress: 'Add new address',
            addAddress: 'Add address',
            updateAddress: 'Update address',
            backToAddressList: 'Back to address list',
        },
        addressCard: {
            default: 'DEFAULT',
            selected: 'Selected',
            setAsDefault: 'Set as default',
            shipTo: 'Ship To',
            billTo: 'Bill To',
        },
        addressSuggestion: {
            verifyYourAddress: 'Verify your address',
            ensureAccuracySuggestChange: 'To ensure delivery accuracy, we suggest the change selected below.',
            chooseAddressToUse: 'Please choose which address you would like to use:',
            suggestedAddress: 'Suggested address',
            enteredAddress: 'Entered address',
            editAddress: 'Edit address',
            saveAddress: 'Save address',
        },
    };

    var cart = {
        cartDetails: {
            id: 'ID',
            proceedToCheckout: 'Proceed to Checkout',
            cartName: 'Cart #{{code}}',
        },
        cartItems: {
            id: 'ID',
            description: 'Description',
            item: 'Item',
            itemPrice: 'Item price',
            quantity: 'Qty',
            quantityTitle: 'The quantity represents the total number of this item in your cart.',
            total: 'Total',
            cartTotal: 'Cart total ({{count}} item)',
            cartTotal_plural: 'Cart total ({{count}} items)',
        },
        orderCost: {
            orderSummary: 'Order Summary',
            subtotal: 'Subtotal after discounts:',
            shipping: 'Shipping:',
            estimatedShipping: 'Estimated shipping:',
            discount: 'You saved:',
            salesTax: 'Sales Tax:',
            grossTax: 'The order total does not include tax of',
            grossIncludeTax: 'The order total includes tax of',
            total: 'Total:',
            toBeDetermined: 'TBD',
        },
        voucher: {
            coupon: 'Have a coupon?',
            coupon_plural: 'Coupon codes',
            apply: 'Apply',
            placeholder: 'Promo code',
            applyVoucherSuccess: '{{voucherCode}} has been applied.',
            removeVoucherSuccess: '{{voucherCode}} has been removed.',
            anchorLabel: 'Enter or remove your coupon code',
            vouchersApplied: 'Applied coupons',
            availableCoupons: 'Available coupons',
            availableCouponsLabel: 'You can add these coupons to this order.',
        },
        saveForLaterItems: {
            itemTotal: 'Saved for later ({{count}} item)',
            itemTotal_plural: 'Saved for later ({{count}} items)',
            cartTitle: 'Cart',
            saveForLater: 'Save For Later',
            moveToCart: 'Move To Cart',
            stock: 'Stock',
            forceInStock: 'In Stock',
        },
        validation: {
            cartEntriesChangeDuringCheckout: 'During checkout we found problems with your entries. Please review your cart.',
            cartEntryRemoved: '{{name}} was removed from the cart due to being out of stock.',
            productOutOfStock: '{{name}} has been removed from the cart due to insufficient stock.',
            lowStock: 'Quantity has reduced to {{quantity}} due to insufficient stock.',
            reviewConfiguration: 'Resolve the issues in the configuration for cart entry first.',
            pricingError: 'Configurator pricing is currently not available. Checkout/quote submission is not possible. Please try again later.',
            unresolvableIssues: 'The product configuration requires additional entries in the back end. As a result, you cannot proceed. Please contact support.',
        },
    };

    var common = {
        common: {
            cancel: 'Cancel',
            delete: 'Delete',
            remove: 'Remove',
            edit: 'Edit',
            restore: 'Restore',
            back: 'Back',
            submit: 'Submit',
            continue: 'Continue',
            save: 'Save',
            done: 'Done',
            home: 'Home',
            noData: 'No data.',
            confirm: 'Confirm',
            more: 'more',
            close: 'Close',
            loading: 'Loading',
            menu: 'Menu',
            reset: 'Reset',
            search: 'Search',
            add: 'Add',
            selectFile: 'Select file',
        },
        pageMetaResolver: {
            category: {
                title: '{{count}} result for {{query}}',
                title_plural: '{{count}} results for {{query}}',
            },
            checkout: {
                title: 'Checkout',
            },
            search: {
                title: '{{count}} result for "{{query}}"',
                title_plural: '{{count}} results for "{{query}}"',
                findProductTitle: '{{count}} result for coupon "{{coupon}}"',
                findProductTitle_plural: '{{count}} results for coupon "{{coupon}}"',
                default_title: 'All products',
            },
            product: {
                description: '{{description}}',
                heading: '{{heading}}',
                title: '{{title}}',
            },
        },
        spinner: {
            loading: 'Loading...',
        },
        navigation: {
            shopAll: 'Shop all {{ navNode}} >',
        },
        searchBox: {
            placeholder: 'Search here...',
            ariaLabelInput: 'Search here...',
            ariaLabelSuggestions: 'typing suggestions',
            ariaLabelProducts: 'product results',
            initialDescription: 'When autocomplete results are available use up and down arrows to review and enter to select. Touch device users, explore by touch or with swipe gestures.',
            suggestionsResult: '{{ count }} suggestion and ',
            suggestionsResult_plural: '{{ count }} suggestions and ',
            productsResult: '{{ count }} product is available.',
            productsResult_plural: '{{ count }} products are available.',
            resetLabel: 'Reset Search',
            help: {
                insufficientChars: 'Please type more characters',
                noMatch: 'We could not find any results',
                exactMatch: '{{ term }}',
                empty: 'Ask us anything',
            },
        },
        sorting: {
            date: 'Date',
            orderNumber: 'Order Number',
            rma: 'Return Number',
            replenishmentNumber: 'Replenishment Number',
            nextOrderDate: 'Next Order Date',
        },
        httpHandlers: {
            badGateway: 'A server error occurred. Please try again later.',
            badRequestPleaseLoginAgain: '{{ errorMessage }}. Please login again.',
            badRequestOldPasswordIncorrect: 'Old password incorrect.',
            badRequestGuestDuplicateEmail: '{{ errorMessage }} email already exist. Please checkout with a different email to register using a guest account.',
            conflict: 'Already exists.',
            forbidden: 'You are not authorized to perform this action. Please contact your administrator if you think this is a mistake.',
            gatewayTimeout: 'The server did not respond, please try again later.',
            internalServerError: 'An Internal Server Error occurred. Please try again later.',
            sessionExpired: 'Your session has expired. Please login again.',
            unknownError: 'An unknown error occurred',
            unauthorized: {
                common: 'An unknown authorization error occured',
                invalid_client: 'Bad client credentials',
            },
            validationErrors: {
                missing: {
                    card_cardType: 'The selected credit card is not supported. Please select another.',
                    card_accountNumber: 'The credit card number entered is not valid.',
                    card_cvNumber: 'The security code entered is not valid.',
                    card_expirationMonth: 'The credit card expiration date entered is not valid.',
                    card_expirationYear: 'The credit card expiration date entered is not valid.',
                    billTo_firstName: 'The first name entered is not valid.',
                    billTo_lastName: 'The last name entered is not valid.',
                    billTo_street1: 'The address entered is not valid.',
                    billTo_street2: 'The address entered is not valid.',
                    billTo_city: 'The city entered is not valid for this credit card.',
                    billTo_state: 'The state/province entered is not valid for this credit card.',
                    billTo_country: 'The country/region entered is not valid for this credit card.',
                    billTo_postalCode: 'The zip/postal code is not valid for this credit card.',
                    country: {
                        isocode: 'Missing country/region',
                    },
                },
                invalid: {
                    card_expirationMonth: 'The credit card expiration date entered is not valid.',
                    firstName: 'First Name entered is not valid.',
                    lastName: 'Last Name entered is not valid.',
                    password: 'Password entered is not valid.',
                    uid: 'UID is not valid.',
                    code: 'Code is not valid.',
                    email: 'Email is not valid.',
                },
            },
            cartNotFound: 'Cart not found.',
            invalidCodeProvided: 'Invalid code provided.',
        },
        miniCart: {
            item: '{{count}} item currently in your cart',
            item_plural: '{{count}} items currently in your cart',
            total: '{{total}}',
            count: '{{count}}',
        },
        skipLink: {
            skipTo: 'Skip to',
            labels: {
                header: 'Header',
                main: 'Main Content',
                footer: 'Footer',
                productFacets: 'Product Facets',
                productList: 'Product List',
            },
        },
        carousel: {
            previousSlide: 'Previous slide',
            nextSlide: 'Next slide',
            slideNumber: 'Slide {{currentSlideNumber}}',
        },
        formErrors: {
            globalMessage: 'The form you are trying to submit contains errors.',
            required: 'This field is required',
            cxInvalidEmail: 'This is not a valid email format',
            cxInvalidPassword: 'This is not a valid password format',
            cxPasswordsMustMatch: 'Password fields must match',
            cxEmailsMustMatch: 'Email fields must match',
            cxStarRatingEmpty: 'Rating field is required',
            cxNoSelectedItemToCancel: 'Select at least one item',
            cxNegativeAmount: 'Amount must be equal or greater than zero',
            cxContainsSpecialCharacters: 'Field cannot contain special characters',
            date: {
                required: 'This field is required',
                min: 'Date cannot be before {{min}}',
                max: 'Date cannot be after {{max}}',
                pattern: 'Use dateformat yyyy-mm-dd',
                invalid: 'Use a valid date',
            },
            file: {
                required: 'File is required',
                empty: 'File should not be empty',
                invalidExtension: 'File extension is not valid',
                tooLarge: 'File size should not exceed {{ maxSize }} MB',
                tooManyEntries: 'The number of items is greater than {{ maxEntries }}',
                notParsable: 'File is not parsable',
            },
        },
        errorHandlers: {
            scriptFailedToLoad: 'Failed to load the script.',
            refreshThePage: 'Please refresh the page.',
        },
    };

    var myAccount = {
        /**
         * @deprecated since 4.2, use feature-library @spartacus/order/assets instead
         */
        orderDetails: {
            orderId: 'Order #',
            orderNumber: 'Order Number',
            replenishmentId: 'Replenishment #',
            purchaseOrderId: 'Purchase Order #',
            purchaseOrderNumber: 'Purchase Order Number',
            emptyPurchaseOrderId: 'None',
            none: 'None {{value}}',
            placed: 'Placed',
            placedBy: 'Placed By',
            unit: 'Unit',
            costCenter: 'Cost Center',
            costCenterAndUnit: 'Cost Center / Unit',
            costCenterAndUnitValue: '{{costCenterName}} / {{unitName}}',
            methodOfPayment: 'Method of Payment',
            payByAccount: 'Pay by Account',
            paidByCreditCard: '(paid by credit card)',
            status: 'Status',
            active: 'Active',
            shippedOn: 'Shipped on',
            shippingMethod: 'Shipping Method',
            placedOn: 'Placed on',
            startOn: 'Start On',
            nextOrderDate: 'Next Order Date',
            frequency: 'Frequency',
            cancelled: ' Cancelled',
            deliveryStatus_IN_TRANSIT: 'In Transit',
            deliveryStatus_READY_FOR_PICKUP: 'Ready for Pickup',
            deliveryStatus_READY_FOR_SHIPPING: 'Ready for Shipping',
            deliveryStatus_WAITING: 'Waiting',
            deliveryStatus_DELIVERING: 'Delivering',
            deliveryStatus_PICKPACK: 'Preparing for Shipment',
            deliveryStatus_PICKUP_COMPLETE: 'Pickup Complete',
            deliveryStatus_DELIVERY_COMPLETED: 'Delivery Complete',
            deliveryStatus_PAYMENT_NOT_CAPTURED: 'Payment Issue',
            deliveryStatus_READY: 'In Process',
            deliveryStatus_DELIVERY_REJECTED: 'Delivery Rejected',
            deliveryStatus_SHIPPED: 'Shipped',
            deliveryStatus_TAX_NOT_COMMITTED: 'Tax Issue',
            deliveryStatus_CANCELLED: 'Cancelled',
            statusDisplay_cancelled: 'Cancelled',
            statusDisplay_cancelling: 'Cancel Pending',
            statusDisplay_completed: 'Completed',
            statusDisplay_created: 'Created',
            statusDisplay_error: 'Pending',
            statusDisplay_Error: 'Pending',
            statusDisplay_processing: 'Pending',
            statusDisplay_open: 'Open',
            statusDisplay_pending: {
                approval: 'Pending Approval',
                merchant: {
                    approval: 'Pending Merchant Approval',
                },
            },
            statusDisplay_approved: 'Approved',
            statusDisplay_rejected: 'Rejected',
            statusDisplay_merchant: {
                approved: 'Merchant Approved',
                rejected: 'Merchant Rejected',
            },
            statusDisplay_assigned: {
                admin: 'Assigned To Administrator',
            },
            consignmentTracking: {
                action: 'Track package',
                dialog: {
                    header: 'Tracking Information',
                    shipped: 'Shipped',
                    estimate: 'Estimated Delivery',
                    carrier: 'Delivery Service',
                    trackingId: 'Tracking Number',
                    noTracking: 'The package has not been dispatched from the warehouse. The tracking information will be available after the package is shipped.',
                    loadingHeader: 'Consignment Tracking',
                },
            },
            cancellationAndReturn: {
                returnAction: 'Request a Return',
                cancelAction: 'Cancel Items',
                item: 'Item',
                itemPrice: 'Item Price',
                quantity: 'Max Quantity',
                returnQty: 'Quantity to Return',
                cancelQty: 'Quantity to Cancel',
                setAll: 'Set all quantities to maximum',
                totalPrice: 'Total',
                submit: 'Submit Request',
                returnSuccess: 'Your return request ({{rma}}) was submitted',
                cancelSuccess: 'Your cancellation request was submitted (original order {{orderCode}} will be updated)',
            },
            cancelReplenishment: {
                title: 'Cancel Replenishment',
                description: 'Cancel any future replenishment order?',
                accept: 'Yes',
                reject: 'No',
                cancelSuccess: 'Replenishment order #{{replenishmentOrderCode}} has been successfully cancelled',
            },
        },
        /**
         * @deprecated since 4.2, use feature-library @spartacus/order/assets instead
         */
        orderHistory: {
            orderHistory: 'Order history',
            orderId: 'Order #',
            emptyPurchaseOrderId: 'None',
            date: 'Date',
            status: 'Status',
            total: 'Total',
            noOrders: 'We have no order records for this account.',
            noReplenishmentOrders: 'We have no replenishment order records for this account.',
            startShopping: 'Start Shopping',
            sortBy: 'Sort by',
            replenishmentOrderHistory: 'Replenishment Order History',
            replenishmentOrderId: 'Replenishment #',
            purchaseOrderNumber: 'PO #',
            startOn: 'Start On',
            frequency: 'Frequency',
            nextOrderDate: 'Next Order Date',
            cancel: 'Cancel',
            cancelled: 'Cancelled',
            replenishmentHistory: 'Replenishment History',
            notFound: 'No Orders Found',
        },
        closeAccount: {
            confirmAccountClosure: 'Confirm Account Closure',
            confirmAccountClosureMessage: 'Are you sure you want to close your account?',
            closeMyAccount: 'CLOSE MY ACCOUNT',
            accountClosedSuccessfully: 'Account closed with success',
            accountClosedFailure: 'Failed to close account',
        },
        updatePasswordForm: {
            oldPassword: {
                label: 'Old Password',
                placeholder: 'Old Password',
            },
            oldPasswordIsRequired: 'Old password is required.',
            newPassword: {
                label: 'New Password',
                placeholder: 'New Password',
            },
            passwordMinRequirements: 'Password must be six characters minimum, with one uppercase letter, one number, one symbol',
            confirmPassword: {
                label: 'Confirm New Password',
                placeholder: 'Confirm Password',
            },
            bothPasswordMustMatch: 'Both password must match',
            passwordUpdateSuccess: 'Password updated with success',
        },
        updateProfileForm: {
            title: '',
            none: '',
            firstName: {
                label: 'First name',
                placeholder: 'First name',
            },
            firstNameIsRequired: 'First name is required.',
            lastName: {
                label: 'Last name',
                placeholder: 'Last name',
            },
            lastNameIsRequired: 'Last name is required.',
            profileUpdateSuccess: 'Personal details successfully updated',
            customerId: 'Customer #',
        },
        consentManagementForm: {
            clearAll: 'Clear all',
            selectAll: 'Select all',
            message: {
                success: {
                    given: 'Consent successfully given.',
                    withdrawn: 'Consent successfully withdrawn.',
                },
            },
        },
        myCoupons: {
            noCouponsMessage: 'You have no coupons available.',
            effectiveTitle: 'Effective:',
            Effective: 'EFFECTIVE',
            PreSession: 'EFFECTIVE SOON',
            ExpireSoon: 'EXPIRING SOON',
            readMore: 'Read more',
            notification: 'Notification',
            findProducts: 'Find Products',
            status: 'Status:',
            dialogTitle: 'Coupon',
            claimCustomerCoupon: 'You have successfully claimed this coupon.',
            myCoupons: 'My coupons',
            startDateAsc: 'Start Date (ascending)',
            startDateDesc: 'Start Date (descending)',
            endDateAsc: 'End Date (ascending)',
            endDateDesc: 'End Date (descending)',
            sortBy: 'Sort by',
            notesPreffix: 'You can set your preferred channels for receiving coupon notifications on the ',
            notesLink: 'Notification Channels',
            notesSuffix: ' page.',
        },
        notificationPreference: {
            message: 'Select your preferred notification channels',
            note: 'Note: ',
            noteMessage: 'If you deactivate all channels you will not be able to receive any further notifications.',
            EMAIL: 'Email:',
            SMS: 'SMS:',
            SITE_MESSAGE: 'SiteMessage',
        },
        myInterests: {
            header: 'My Interests',
            item: 'ITEM',
            price: 'PRICE',
            notifications: 'NOTIFICATIONS',
            noInterests: 'You have no registered interests yet.',
            inStock: 'In Stock',
            lowStock: 'Low Stock',
            outOfStock: 'Out of Stock',
            BACK_IN_STOCK: 'Back In Stock',
            sortBy: 'Sort by',
            expirationDate: ' - Till {{ expirationDate }}',
            productId: 'ID {{ code }}',
            remove: 'REMOVE',
            sorting: {
                byNameAsc: 'Name (ascending)',
                byNameDesc: 'Name (descending)',
            },
        },
        /**
         * @deprecated since 4.2, use feature-library @spartacus/order/assets instead
         */
        AccountOrderHistoryTabContainer: {
            tabs: {
                AccountOrderHistoryComponent: 'ALL ORDERS ({{param}})',
                OrderReturnRequestListComponent: 'RETURNS ({{param}})',
            },
        },
        /**
         * @deprecated since 4.2, use feature-library @spartacus/order/assets instead
         */
        returnRequestList: {
            returnRequestId: 'Return #',
            orderId: 'Order #',
            date: 'Date Created',
            status: 'Status',
            sortBy: 'Sort by',
            statusDisplay_APPROVAL_PENDING: 'Approval Pending',
            statusDisplay_CANCELED: 'Cancelled',
            statusDisplay_CANCELLING: 'Cancelling',
            statusDisplay_WAIT: 'Wait',
            statusDisplay_RECEIVED: 'Received',
            statusDisplay_RECEIVING: 'Receiving',
            statusDisplay_APPROVING: 'Approving',
            statusDisplay_REVERSING_PAYMENT: 'Reversing Payment',
            statusDisplay_PAYMENT_REVERSED: 'Payment Reversed',
            statusDisplay_PAYMENT_REVERSAL_FAILED: 'Payment Reversal Failed',
            statusDisplay_REVERSING_TAX: 'Reversing Tax',
            statusDisplay_TAX_REVERSED: 'Tax Reversed',
            statusDisplay_TAX_REVERSAL_FAILED: 'Tax Reversal Failed',
            statusDisplay_COMPLETED: 'Completed',
        },
        /**
         * @deprecated since 4.2, use feature-library @spartacus/order/assets instead
         */
        returnRequest: {
            returnRequestId: 'Return Request #',
            orderCode: 'For Order #',
            status: 'Return status',
            cancel: 'Cancel Return Request',
            item: 'Description',
            itemPrice: 'Item Price',
            returnQty: 'Return Quantity',
            total: 'Total',
            summary: 'Return Totals',
            subtotal: 'Subtotal',
            deliveryCode: 'Delivery cost',
            estimatedRefund: 'Estimated refund',
            note: 'The totals are estimated and may not include applicable taxes or other charges.',
            cancelSuccess: 'Your return request ({{rma}}) was cancelled',
        },
        wishlist: {
            empty: 'No products in your wish list yet',
        },
    };

    var payment = {
        paymentForm: {
            payment: 'Payment',
            choosePaymentMethod: 'Choose a payment method',
            paymentType: 'Payment Type',
            accountHolderName: {
                label: 'Account Holder Name',
                placeholder: 'Account Holder Name',
            },
            cardNumber: 'Card Number',
            expirationDate: 'Expiration Date',
            securityCode: 'Security code (CVV)',
            securityCodeTitle: 'Card Verification Value',
            saveAsDefault: 'Save as default',
            setAsDefault: 'Set as default',
            billingAddress: 'Billing address',
            sameAsShippingAddress: 'Same as shipping address',
            selectOne: 'Select One...',
            monthMask: 'MM',
            yearMask: 'YYYY',
            expirationYear: 'Expiration year {{ selected }}',
            expirationMonth: 'Expiration month {{ selected }}',
            useThisPayment: 'Use this payment',
            addNewPayment: 'Add New Payment',
            changePayment: 'Change Payment',
        },
        paymentMethods: {
            paymentMethods: 'Payment methods',
            newPaymentMethodsAreAddedDuringCheckout: 'New payment methods are added during checkout.',
            invalidField: 'InvalidField: {{ field }}',
        },
        paymentCard: {
            deleteConfirmation: 'Are you sure you want to delete this payment method?',
            setAsDefault: 'Set as default',
            expires: 'Expires: {{ month }}/{{ year }}',
            defaultPaymentMethod: '✓ DEFAULT',
            selected: 'Selected',
        },
        paymentTypes: {
            title: 'Payment method',
            paymentType_CARD: 'Credit Card',
            paymentType_ACCOUNT: 'Account',
        },
    };

    var product = {
        productDetails: {
            id: 'ID',
            quantity: 'Qty',
            productDetails: 'Product Details',
            specification: 'Specs',
            reviews: 'Reviews',
            shipping: 'Shipping',
            share: 'Share',
            showReviews: 'Show reviews',
            noReviews: 'No reviews yet',
            productPrice: 'Product price',
        },
        productList: {
            filterBy: {
                label: 'Filter by',
                action: 'Filter by',
            },
            appliedFilter: 'Applied filter:',
            showLess: 'Show less...',
            showMore: 'Show more...',
            sortBy: 'Sort by',
            backToTopBtn: 'BACK TO TOP',
            showMoreBtn: 'SHOW MORE',
            productSearchPagination: 'Product search pagination',
        },
        productFacetNavigation: {
            filterBy: {
                label: 'Filter by',
                action: 'Filter by',
            },
            appliedFilter: 'Applied filter:',
            showLess: 'Show less...',
            showMore: 'Show more...',
            sortBy: 'Sort by',
        },
        productSummary: {
            id: 'ID',
            showReviews: 'Show reviews',
            showReviewsDetailed: 'Show {{count}} reviews, Rated {{rating}} out of 5 stars',
            share: 'Share',
            newItemPrice: 'New item price',
        },
        productReview: {
            overallRating: 'Overall Rating',
            reviewTitle: 'Review Title',
            writeYourComments: 'Write your comments',
            rating: 'Rating',
            reviewerName: 'Reviewer name (optional)',
            writeReview: 'Write a Review',
            more: 'Show More Reviews',
            less: 'Show Less Reviews',
            thankYouForReview: 'Thank you for the review! Note that reviews may require review before appearing here.',
        },
        addToCart: {
            itemsAddedToYourCart: 'Item(s) added to your cart',
            itemsIncrementedInYourCart: 'This item was already in your cart. The quantity was updated.',
            items: 'items',
            updatingCart: 'Updating cart...',
            addToCart: 'Add to cart',
            viewCart: 'view cart',
            proceedToCheckout: 'proceed to checkout',
            quantity: 'Qty',
            outOfStock: 'Out of stock',
            inStock: 'In stock',
            selectStyleAndSize: 'Select style and size to check stock',
            removeFromCart: 'Remove Product from Cart',
            closeModal: 'Close Modal',
        },
        TabPanelContainer: {
            tabs: {
                ProductDetailsTabComponent: 'Product Details',
                ProductSpecsTabComponent: 'Specs',
                ProductReviewsTabComponent: 'Reviews',
                deliveryTab: 'Shipping',
                SparePartsTabComponent: ' Spare Parts',
            },
        },
        addToWishList: {
            add: 'Add to Wish List',
            remove: 'Remove from Wish List',
            anonymous: 'Sign in to add to wish list',
        },
        stockNotification: {
            notifyMe: 'NOTIFY ME',
            stopNotify: 'STOP NOTIFICATION',
            getNotify: 'Get notified when this product is available.',
            getNotifySuffix: 'to get notified when this product is available.',
            activateChannelsPrefix: 'To be notified you need to activate the ',
            channelsLink: 'Notification Channels',
            activateChannelsSuffix: '.',
            notified: 'You will be notified when this product is back in stock.',
            getNotified: 'Get notified when this product is back in stock.',
            unsubscribeSuccess: 'You will not receive back-in-stock notification for this product.',
            subscriptionDialog: {
                header: 'Out of stock subscription',
                notifiedPrefix: 'You will be notified on:',
                notifiedSuffix: 'as soons as this product is back in stock.',
                manageChannelsPrefix: 'Manage your prefered notification channels at the ',
                manageChannelsLink: 'Notification Preference',
                manageChannelsSuffix: ' page.',
                manageSubscriptionsPrefix: 'You can manage your subscriptions at ',
                manageSubscriptionsLink: 'My Interests',
                manageSubscriptionsSuffix: ' page.',
                okBtn: 'OK',
                subscribing: 'Subscribing you to Out of Stock notifications for this product',
            },
        },
        itemCounter: {
            removeOne: 'Remove one',
            addOneMore: 'Add one more',
            quantity: 'Quantity',
        },
        productView: {
            gridView: 'Select to change to Grid View',
            listView: 'Select to change to List View',
        },
    };

    var pwa = {
        pwa: {
            addToHomeScreenDescription: 'Add SAP storefront to your device homescreen for a faster return visit',
            noInstallationNeeded: 'No installation needed',
            fastAccessToApplication: 'Fast access to application',
            addToHomeScreen: 'Add to home screen',
            addedToHomeScreen: 'SAP Storefront was added to your home screen',
        },
    };

    var user = {
        anonymousConsents: {
            preferences: 'Consent Preferences',
            dialog: {
                title: 'Consent Management',
                legalDescription: "We use cookies/browser's storage to personalize the content and improve user experience. We also might share the data about your site usage with our social media. For more, please review our privacy policy.",
                selectAll: 'Select all',
                clearAll: 'Clear all',
            },
            banner: {
                title: 'This website uses cookies',
                description: "We use cookies/browser's storage to personalize the content and improve user experience.",
                allowAll: 'Allow All',
                viewDetails: 'View Details',
            },
        },
        checkoutLogin: {
            emailAddress: {
                label: 'Email address',
                placeholder: 'Enter email',
            },
            confirmEmail: {
                label: 'Confirm email',
                placeholder: 'Confirm email',
            },
            continue: 'Continue',
            emailIsRequired: 'Invalid email format',
            emailsMustMatch: 'Email does not match',
        },
    };

    var en = {
        address: address,
        cart: cart,
        common: common,
        myAccount: myAccount,
        payment: payment,
        product: product,
        pwa: pwa,
        user: user,
    };

    var translations = {
        en: en,
    };

    /*
     * Public API Surface of assets
     */

    /**
     * Generated bundle index. Do not edit.
     */

    exports.translationChunksConfig = translationChunksConfig;
    exports.translations = translations;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=spartacus-assets.umd.js.map
