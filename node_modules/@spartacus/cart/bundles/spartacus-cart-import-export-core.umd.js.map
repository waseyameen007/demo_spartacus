{"version":3,"file":"spartacus-cart-import-export-core.umd.js","sources":["../../../feature-libs/cart/import-export/core/config/import-export-config.ts","../../../feature-libs/cart/import-export/core/model/import-entries.config.ts","../../../feature-libs/cart/import-export/core/config/default-import-export-config.ts","../../../feature-libs/cart/import-export/core/import-export-core.module.ts","../../../feature-libs/cart/import-export/core/spartacus-cart-import-export-core.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { ExportConfig } from '../model/export-entries.model';\nimport { ImportConfig } from '../model/import-entries.config';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class ImportExportConfig {\n  cartImportExport?: {\n    file: { separator: string };\n    import?: ImportConfig;\n    export: ExportConfig;\n  };\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends ImportExportConfig {}\n}\n","import { OrderEntriesSource } from '@spartacus/storefront';\n\n/**\n * Indicates from which source the new saved cart name\n * should be taken.\n */\nexport enum CartNameSource {\n  FILE_NAME = 'fileName',\n  DATE_TIME = 'dateTime',\n}\n\n/**\n * Specifies cart name generation details.\n */\nexport interface CartNameGeneration {\n  /**\n   *  If `source` is set as `DATE_TIME`, it means that by default\n   *  new saved cart name will be set as current date according to `fromDateOptions` property.\n   */\n  source?: CartNameSource;\n  fromDateOptions?: {\n    /**\n     * Adds text before the import date.\n     */\n    prefix?: string;\n\n    /**\n     * Adds text after the import date.\n     */\n    suffix?: string;\n\n    /**\n     * Transforms current date according to specified format.\n     */\n    mask?: string;\n  };\n}\n\n/**\n * Allows to specify file validation attributes.\n */\nexport interface FileValidity {\n  /**\n   * Maximum imported file size in megabytes.\n   */\n  maxSize?: number;\n\n  /**\n   * Maximum number for imported entries per place specified as key from `OrderEntriesSource`.\n   */\n  maxEntries?: {\n    [key in OrderEntriesSource]?: number;\n  };\n\n  /**\n   * String array with file types/extensions allowed for import.\n   */\n  allowedTypes?: string[];\n}\n/**\n * Interface for import config.\n */\nexport interface ImportConfig {\n  fileValidity?: FileValidity;\n  cartNameGeneration?: CartNameGeneration;\n}\n","import { OrderEntriesSource } from '@spartacus/storefront';\nimport { CartNameSource } from '../model/import-entries.config';\nimport { ImportExportConfig } from './import-export-config';\n\nexport const defaultImportExportConfig: ImportExportConfig = {\n  cartImportExport: {\n    file: {\n      separator: ',',\n    },\n    import: {\n      fileValidity: {\n        maxSize: 1,\n        maxEntries: {\n          [OrderEntriesSource.NEW_SAVED_CART]: 100,\n          [OrderEntriesSource.SAVED_CART]: 100,\n          [OrderEntriesSource.ACTIVE_CART]: 10,\n          [OrderEntriesSource.QUICK_ORDER]: 10,\n        },\n        allowedTypes: [\n          'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n          'application/vnd.ms-excel',\n          'text/csv',\n          '.csv',\n        ],\n      },\n      cartNameGeneration: {\n        source: CartNameSource.FILE_NAME,\n      },\n    },\n    export: {\n      additionalColumns: [\n        {\n          name: {\n            key: 'name',\n          },\n          value: 'product.name',\n        },\n        {\n          name: {\n            key: 'price',\n          },\n          value: 'totalPrice.formattedValue',\n        },\n      ],\n      messageEnabled: true,\n      downloadDelay: 1000,\n      maxEntries: 1000,\n      fileOptions: {\n        fileName: 'cart',\n        extension: 'csv',\n        type: 'text/csv',\n      },\n    },\n  },\n};\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultImportExportConfig } from './config/default-import-export-config';\n\n@NgModule({})\nexport class ImportExportCoreModule {\n  static forRoot(): ModuleWithProviders<ImportExportCoreModule> {\n    return {\n      ngModule: ImportExportCoreModule,\n      providers: [provideDefaultConfig(defaultImportExportConfig)],\n    };\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["Config","Injectable","CartNameSource","OrderEntriesSource","provideDefaultConfig","NgModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;YASA;;;;6IAAsB,kBAAkB;iJAAlB,kBAAkB,cAH1B,MAAM,eACLA,WAAM;yHAEC,kBAAkB;0BAJvCC,aAAU;2BAAC;4BACV,UAAU,EAAE,MAAM;4BAClB,WAAW,EAAED,WAAM;yBACpB;;;QCND;;;;AAIYE;QAAZ,WAAY,cAAc;YACxB,wCAAsB,CAAA;YACtB,wCAAsB,CAAA;QACxB,CAAC,EAHWA,sBAAc,KAAdA,sBAAc;;;YCFb,yBAAyB,GAAuB;YAC3D,gBAAgB,EAAE;gBAChB,IAAI,EAAE;oBACJ,SAAS,EAAE,GAAG;iBACf;gBACD,MAAM,EAAE;oBACN,YAAY,EAAE;wBACZ,OAAO,EAAE,CAAC;wBACV,UAAU;4BACR,GAACC,6BAAkB,CAAC,cAAc,IAAG,GAAG;4BACxC,GAACA,6BAAkB,CAAC,UAAU,IAAG,GAAG;4BACpC,GAACA,6BAAkB,CAAC,WAAW,IAAG,EAAE;4BACpC,GAACA,6BAAkB,CAAC,WAAW,IAAG,EAAE;+BACrC;wBACD,YAAY,EAAE;4BACZ,mEAAmE;4BACnE,0BAA0B;4BAC1B,UAAU;4BACV,MAAM;yBACP;qBACF;oBACD,kBAAkB,EAAE;wBAClB,MAAM,EAAED,sBAAc,CAAC,SAAS;qBACjC;iBACF;gBACD,MAAM,EAAE;oBACN,iBAAiB,EAAE;wBACjB;4BACE,IAAI,EAAE;gCACJ,GAAG,EAAE,MAAM;6BACZ;4BACD,KAAK,EAAE,cAAc;yBACtB;wBACD;4BACE,IAAI,EAAE;gCACJ,GAAG,EAAE,OAAO;6BACb;4BACD,KAAK,EAAE,2BAA2B;yBACnC;qBACF;oBACD,cAAc,EAAE,IAAI;oBACpB,aAAa,EAAE,IAAI;oBACnB,UAAU,EAAE,IAAI;oBAChB,WAAW,EAAE;wBACX,QAAQ,EAAE,MAAM;wBAChB,SAAS,EAAE,KAAK;wBAChB,IAAI,EAAE,UAAU;qBACjB;iBACF;aACF;;;;YChDH;;YACS,8BAAO,GAAd;gBACE,OAAO;oBACL,QAAQ,EAAE,sBAAsB;oBAChC,SAAS,EAAE,CAACE,yBAAoB,CAAC,yBAAyB,CAAC,CAAC;iBAC7D,CAAC;aACH;;;iJANU,sBAAsB;kJAAtB,sBAAsB;kJAAtB,sBAAsB;yHAAtB,sBAAsB;0BADlCC,WAAQ;2BAAC,EAAE;;;QCJZ;;;;;;;;;;;;;;"}