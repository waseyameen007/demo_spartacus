(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@spartacus/cart/quick-order/root'), require('@spartacus/core'), require('rxjs'), require('rxjs/operators')) :
    typeof define === 'function' && define.amd ? define('@spartacus/cart/quick-order/core', ['exports', '@angular/core', '@spartacus/cart/quick-order/root', '@spartacus/core', 'rxjs', 'rxjs/operators'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory((global.spartacus = global.spartacus || {}, global.spartacus.cart = global.spartacus.cart || {}, global.spartacus.cart['quick-order'] = global.spartacus.cart['quick-order'] || {}, global.spartacus.cart['quick-order'].core = {}), global.ng.core, global.spartacus.cart['quick-order'].root, global.core, global.rxjs, global.rxjs.operators));
}(this, (function (exports, i0, i1, i1$1, rxjs, operators) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);
    var i1__namespace$1 = /*#__PURE__*/_interopNamespace(i1);
    var i1__namespace = /*#__PURE__*/_interopNamespace(i1$1);

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (Object.prototype.hasOwnProperty.call(b, p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }
    var __assign = function () {
        __assign = Object.assign || function __assign(t) {
            for (var s, i = 1, n = arguments.length; i < n; i++) {
                s = arguments[i];
                for (var p in s)
                    if (Object.prototype.hasOwnProperty.call(s, p))
                        t[p] = s[p];
            }
            return t;
        };
        return __assign.apply(this, arguments);
    };
    function __rest(s, e) {
        var t = {};
        for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
                t[p] = s[p];
        if (s != null && typeof Object.getOwnPropertySymbols === "function")
            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                    t[p[i]] = s[p[i]];
            }
        return t;
    }
    function __decorate(decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function")
            r = Reflect.decorate(decorators, target, key, desc);
        else
            for (var i = decorators.length - 1; i >= 0; i--)
                if (d = decorators[i])
                    r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    }
    function __param(paramIndex, decorator) {
        return function (target, key) { decorator(target, key, paramIndex); };
    }
    function __metadata(metadataKey, metadataValue) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function")
            return Reflect.metadata(metadataKey, metadataValue);
    }
    function __awaiter(thisArg, _arguments, P, generator) {
        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
        return new (P || (P = Promise))(function (resolve, reject) {
            function fulfilled(value) { try {
                step(generator.next(value));
            }
            catch (e) {
                reject(e);
            } }
            function rejected(value) { try {
                step(generator["throw"](value));
            }
            catch (e) {
                reject(e);
            } }
            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
            step((generator = generator.apply(thisArg, _arguments || [])).next());
        });
    }
    function __generator(thisArg, body) {
        var _ = { label: 0, sent: function () { if (t[0] & 1)
                throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
        return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
        function verb(n) { return function (v) { return step([n, v]); }; }
        function step(op) {
            if (f)
                throw new TypeError("Generator is already executing.");
            while (_)
                try {
                    if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done)
                        return t;
                    if (y = 0, t)
                        op = [op[0] & 2, t.value];
                    switch (op[0]) {
                        case 0:
                        case 1:
                            t = op;
                            break;
                        case 4:
                            _.label++;
                            return { value: op[1], done: false };
                        case 5:
                            _.label++;
                            y = op[1];
                            op = [0];
                            continue;
                        case 7:
                            op = _.ops.pop();
                            _.trys.pop();
                            continue;
                        default:
                            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
                                _ = 0;
                                continue;
                            }
                            if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) {
                                _.label = op[1];
                                break;
                            }
                            if (op[0] === 6 && _.label < t[1]) {
                                _.label = t[1];
                                t = op;
                                break;
                            }
                            if (t && _.label < t[2]) {
                                _.label = t[2];
                                _.ops.push(op);
                                break;
                            }
                            if (t[2])
                                _.ops.pop();
                            _.trys.pop();
                            continue;
                    }
                    op = body.call(thisArg, _);
                }
                catch (e) {
                    op = [6, e];
                    y = 0;
                }
                finally {
                    f = t = 0;
                }
            if (op[0] & 5)
                throw op[1];
            return { value: op[0] ? op[1] : void 0, done: true };
        }
    }
    var __createBinding = Object.create ? (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        Object.defineProperty(o, k2, { enumerable: true, get: function () { return m[k]; } });
    }) : (function (o, m, k, k2) {
        if (k2 === undefined)
            k2 = k;
        o[k2] = m[k];
    });
    function __exportStar(m, o) {
        for (var p in m)
            if (p !== "default" && !Object.prototype.hasOwnProperty.call(o, p))
                __createBinding(o, m, p);
    }
    function __values(o) {
        var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
        if (m)
            return m.call(o);
        if (o && typeof o.length === "number")
            return {
                next: function () {
                    if (o && i >= o.length)
                        o = void 0;
                    return { value: o && o[i++], done: !o };
                }
            };
        throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
    }
    function __read(o, n) {
        var m = typeof Symbol === "function" && o[Symbol.iterator];
        if (!m)
            return o;
        var i = m.call(o), r, ar = [], e;
        try {
            while ((n === void 0 || n-- > 0) && !(r = i.next()).done)
                ar.push(r.value);
        }
        catch (error) {
            e = { error: error };
        }
        finally {
            try {
                if (r && !r.done && (m = i["return"]))
                    m.call(i);
            }
            finally {
                if (e)
                    throw e.error;
            }
        }
        return ar;
    }
    /** @deprecated */
    function __spread() {
        for (var ar = [], i = 0; i < arguments.length; i++)
            ar = ar.concat(__read(arguments[i]));
        return ar;
    }
    /** @deprecated */
    function __spreadArrays() {
        for (var s = 0, i = 0, il = arguments.length; i < il; i++)
            s += arguments[i].length;
        for (var r = Array(s), k = 0, i = 0; i < il; i++)
            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
                r[k] = a[j];
        return r;
    }
    function __spreadArray(to, from, pack) {
        if (pack || arguments.length === 2)
            for (var i = 0, l = from.length, ar; i < l; i++) {
                if (ar || !(i in from)) {
                    if (!ar)
                        ar = Array.prototype.slice.call(from, 0, i);
                    ar[i] = from[i];
                }
            }
        return to.concat(ar || from);
    }
    function __await(v) {
        return this instanceof __await ? (this.v = v, this) : new __await(v);
    }
    function __asyncGenerator(thisArg, _arguments, generator) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var g = generator.apply(thisArg, _arguments || []), i, q = [];
        return i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i;
        function verb(n) { if (g[n])
            i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }
        function resume(n, v) { try {
            step(g[n](v));
        }
        catch (e) {
            settle(q[0][3], e);
        } }
        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }
        function fulfill(value) { resume("next", value); }
        function reject(value) { resume("throw", value); }
        function settle(f, v) { if (f(v), q.shift(), q.length)
            resume(q[0][0], q[0][1]); }
    }
    function __asyncDelegator(o) {
        var i, p;
        return i = {}, verb("next"), verb("throw", function (e) { throw e; }), verb("return"), i[Symbol.iterator] = function () { return this; }, i;
        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === "return" } : f ? f(v) : v; } : f; }
    }
    function __asyncValues(o) {
        if (!Symbol.asyncIterator)
            throw new TypeError("Symbol.asyncIterator is not defined.");
        var m = o[Symbol.asyncIterator], i;
        return m ? m.call(o) : (o = typeof __values === "function" ? __values(o) : o[Symbol.iterator](), i = {}, verb("next"), verb("throw"), verb("return"), i[Symbol.asyncIterator] = function () { return this; }, i);
        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }
        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function (v) { resolve({ value: v, done: d }); }, reject); }
    }
    function __makeTemplateObject(cooked, raw) {
        if (Object.defineProperty) {
            Object.defineProperty(cooked, "raw", { value: raw });
        }
        else {
            cooked.raw = raw;
        }
        return cooked;
    }
    ;
    var __setModuleDefault = Object.create ? (function (o, v) {
        Object.defineProperty(o, "default", { enumerable: true, value: v });
    }) : function (o, v) {
        o["default"] = v;
    };
    function __importStar(mod) {
        if (mod && mod.__esModule)
            return mod;
        var result = {};
        if (mod != null)
            for (var k in mod)
                if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
                    __createBinding(result, mod, k);
        __setModuleDefault(result, mod);
        return result;
    }
    function __importDefault(mod) {
        return (mod && mod.__esModule) ? mod : { default: mod };
    }
    function __classPrivateFieldGet(receiver, state, kind, f) {
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a getter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
    }
    function __classPrivateFieldSet(receiver, state, value, kind, f) {
        if (kind === "m")
            throw new TypeError("Private method is not writable");
        if (kind === "a" && !f)
            throw new TypeError("Private accessor was defined without a setter");
        if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver))
            throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
    }

    var QuickOrderService = /** @class */ (function () {
        function QuickOrderService(activeCartService, productAdapter, // TODO(#14059): Remove this service
        eventService, productSearchConnector //TODO(#14059): Make it required
        ) {
            this.activeCartService = activeCartService;
            this.productAdapter = productAdapter;
            this.eventService = eventService;
            this.productSearchConnector = productSearchConnector;
            this.productAdded$ = new rxjs.Subject();
            this.entries$ = new rxjs.BehaviorSubject([]);
            this.softDeletedEntries$ = new rxjs.BehaviorSubject({});
            this.nonPurchasableProductError$ = new rxjs.BehaviorSubject(null);
            this.hardDeleteTimeout = 5000;
            this.quickOrderListLimit = 0;
            this.clearDeleteTimeouts = {};
        }
        QuickOrderService.prototype.ngOnDestroy = function () {
            this.clearDeletedEntries();
        };
        /**
         * Get entries
         */
        QuickOrderService.prototype.getEntries = function () {
            return this.entries$;
        };
        /**
         * @deprecated since 4.2 - use searchProducts instead
         * Search product using SKU
         */
        QuickOrderService.prototype.search = function (productCode) {
            return this.productAdapter.load(productCode);
        };
        /**
         * Search products using query
         */
        QuickOrderService.prototype.searchProducts = function (query, maxProducts) {
            var _a, _b;
            // TODO(#14059): Remove condition
            if (this.productSearchConnector) {
                var searchConfig = {
                    pageSize: maxProducts ||
                        ((_b = (_a = i1.defaultQuickOrderConfig.quickOrder) === null || _a === void 0 ? void 0 : _a.searchForm) === null || _b === void 0 ? void 0 : _b.maxProducts),
                };
                return this.productSearchConnector
                    .search(query, searchConfig)
                    .pipe(operators.map(function (searchPage) { return searchPage.products || []; }));
            }
            else {
                return rxjs.of([]);
            }
        };
        /**
         * Clear a list of added entries
         */
        QuickOrderService.prototype.clearList = function () {
            this.entries$.next([]);
        };
        /**
         * Get information about the possibility to add the next product
         */
        QuickOrderService.prototype.canAdd = function (code) {
            if (code) {
                return rxjs.of(this.isProductOnTheList(code) || !this.isLimitExceeded());
            }
            else {
                return rxjs.of(!this.isLimitExceeded());
            }
        };
        /**
         * Set quick order list limit property
         */
        QuickOrderService.prototype.setListLimit = function (limit) {
            this.quickOrderListLimit = limit;
        };
        /**
         * Load a list of entries
         */
        QuickOrderService.prototype.loadEntries = function (entries) {
            if (entries === void 0) { entries = []; }
            this.entries$.next(entries);
        };
        /**
         * Load a list of entries
         */
        QuickOrderService.prototype.updateEntryQuantity = function (entryIndex, quantity) {
            var entries = this.entries$.getValue() || [];
            entries[entryIndex].quantity = quantity;
            this.entries$.next(entries);
        };
        /**
         * Delete single entry from the list
         */
        QuickOrderService.prototype.softDeleteEntry = function (index) {
            var _this = this;
            this.entries$.pipe(operators.take(1)).subscribe(function (entries) {
                var entriesList = entries;
                _this.addSoftEntryDeletion(entriesList[index], true);
                entriesList.splice(index, 1);
                _this.entries$.next(entriesList);
            });
        };
        /**
         * @deprecated since 4.2 - use softDeleteEntry instead
         */
        QuickOrderService.prototype.removeEntry = function (index) {
            this.softDeleteEntry(index);
        };
        /**
         * Add product to the quick order list
         */
        QuickOrderService.prototype.addProduct = function (product, quantity) {
            if (quantity === void 0) { quantity = 1; }
            var entry = this.generateOrderEntry(product, quantity);
            this.addEntry(entry);
        };
        /**
         * Return product added subject
         */
        QuickOrderService.prototype.getProductAdded = function () {
            return this.productAdded$;
        };
        /**
         * Set product added subject
         */
        QuickOrderService.prototype.setProductAdded = function (productCode) {
            this.productAdded$.next(productCode);
        };
        /**
         * Adding to cart all products from the list
         */
        QuickOrderService.prototype.addToCart = function () {
            var _this = this;
            var entries = [];
            var events = [];
            var subscription = this.eventService
                .get(i1$1.CartAddEntrySuccessEvent)
                .subscribe(function (cartEvent) {
                if (cartEvent.quantityAdded === 0 ||
                    (!!cartEvent.quantityAdded &&
                        cartEvent.quantityAdded < cartEvent.quantity)) {
                    events.push(_this.createQuickOrderResultEvent(cartEvent));
                }
            });
            subscription.add(this.eventService
                .get(i1$1.CartAddEntryFailEvent)
                .subscribe(function (cartEvent) {
                events.push(_this.createQuickOrderResultEvent(cartEvent));
            }));
            return this.getEntries().pipe(operators.first(), operators.switchMap(function (elements) {
                entries = elements;
                _this.activeCartService.addEntries(elements);
                _this.clearList();
                return _this.activeCartService.isStable();
            }), operators.filter(function (isStable) { return isStable; }), operators.map(function () { return [entries, events]; }), operators.tap(function () { return subscription.unsubscribe(); }));
        };
        /**
         * Return soft deleted entries
         */
        QuickOrderService.prototype.getSoftDeletedEntries = function () {
            return this.softDeletedEntries$;
        };
        /**
         * Restore soft deleted entry
         */
        QuickOrderService.prototype.restoreSoftDeletedEntry = function (productCode) {
            var entry = this.getSoftDeletedEntry(productCode);
            this.addEntry(entry);
            this.hardDeleteEntry(productCode);
        };
        /**
         * Clear deleted entry from the list
         */
        QuickOrderService.prototype.hardDeleteEntry = function (productCode) {
            var entry = this.getSoftDeletedEntry(productCode);
            var deletedEntries = this.softDeletedEntries$.getValue();
            if (entry) {
                delete deletedEntries[productCode];
                this.softDeletedEntries$.next(deletedEntries);
            }
            this.clearDeleteTimeout(productCode);
        };
        /**
         * Clear all deleted entries and timeout subscriptions
         */
        QuickOrderService.prototype.clearDeletedEntries = function () {
            Object.values(this.clearDeleteTimeouts).forEach(function (subscription) { return subscription.unsubscribe(); });
            this.softDeletedEntries$.next({});
            this.clearDeleteTimeouts = {};
        };
        /**
         *  Return non purchasable product error
         */
        QuickOrderService.prototype.getNonPurchasableProductError = function () {
            return this.nonPurchasableProductError$;
        };
        /**
         * Set error that selected product is not purchasable
         */
        QuickOrderService.prototype.setNonPurchasableProductError = function (product) {
            this.nonPurchasableProductError$.next(product);
        };
        /**
         * Clear not purchasable product error
         */
        QuickOrderService.prototype.clearNonPurchasableProductError = function () {
            this.nonPurchasableProductError$.next(null);
        };
        /**
         * Add soft deleted entry to the cached list
         */
        QuickOrderService.prototype.addSoftEntryDeletion = function (entry, clearTimeout) {
            var _this = this;
            if (clearTimeout === void 0) { clearTimeout = true; }
            var _a;
            var deletedEntries = this.softDeletedEntries$.getValue();
            var productCode = (_a = entry === null || entry === void 0 ? void 0 : entry.product) === null || _a === void 0 ? void 0 : _a.code;
            if (productCode) {
                deletedEntries[productCode] = entry;
                this.softDeletedEntries$.next(deletedEntries);
                if (clearTimeout) {
                    var subscription = rxjs.timer(this.hardDeleteTimeout).subscribe(function () {
                        _this.hardDeleteEntry(productCode);
                    });
                    this.clearDeleteTimeouts[productCode] = subscription;
                }
            }
        };
        /**
         * Get soft deletion entry
         */
        QuickOrderService.prototype.getSoftDeletedEntry = function (productCode) {
            var deletedEntries = this.softDeletedEntries$.getValue();
            return deletedEntries[productCode];
        };
        /**
         * Generate Order Entry from Product
         */
        QuickOrderService.prototype.generateOrderEntry = function (product, quantity) {
            return {
                basePrice: product.price,
                product: product,
                quantity: quantity,
                totalPrice: product.price,
            };
        };
        /**
         * Add single entry to the list
         */
        QuickOrderService.prototype.addEntry = function (entry) {
            var _a, _b, _c, _d, _e;
            if (((_a = entry === null || entry === void 0 ? void 0 : entry.product) === null || _a === void 0 ? void 0 : _a.code) &&
                !this.isProductOnTheList(entry.product.code) &&
                this.isLimitExceeded()) {
                return;
            }
            var entries = this.entries$.getValue() || [];
            var entryStockLevel = (_c = (_b = entry.product) === null || _b === void 0 ? void 0 : _b.stock) === null || _c === void 0 ? void 0 : _c.stockLevel;
            if (entryStockLevel && entry.quantity && entry.quantity > entryStockLevel) {
                entry.quantity = entryStockLevel;
            }
            if (((_d = entry.product) === null || _d === void 0 ? void 0 : _d.code) && this.isProductOnTheList(entry.product.code)) {
                var entryIndex = entries.findIndex(function (item) { var _a, _b; return ((_a = item.product) === null || _a === void 0 ? void 0 : _a.code) === ((_b = entry.product) === null || _b === void 0 ? void 0 : _b.code); });
                var quantity = entries[entryIndex].quantity;
                if (quantity && entry.quantity) {
                    entries[entryIndex].quantity = quantity + (entry === null || entry === void 0 ? void 0 : entry.quantity);
                    var newQuantity = entries[entryIndex].quantity;
                    if (newQuantity && entryStockLevel && newQuantity > entryStockLevel) {
                        entries[entryIndex].quantity = entryStockLevel;
                    }
                    this.entries$.next(__spreadArray([], __read(entries)));
                }
            }
            else {
                this.entries$.next(__spreadArray(__spreadArray([], __read(entries)), [entry]));
            }
            this.productAdded$.next((_e = entry.product) === null || _e === void 0 ? void 0 : _e.code);
        };
        /**
         * Verify if product is already on the list
         */
        QuickOrderService.prototype.isProductOnTheList = function (productCode) {
            var entries = this.entries$.getValue() || [];
            return !!entries.find(function (item) { var _a; return ((_a = item.product) === null || _a === void 0 ? void 0 : _a.code) === productCode; });
        };
        QuickOrderService.prototype.isLimitExceeded = function () {
            var entries = this.entries$.getValue() || [];
            return entries.length >= this.quickOrderListLimit;
        };
        QuickOrderService.prototype.createQuickOrderResultEvent = function (cartEvent) {
            var _a, _b, _c;
            var evt = {
                productCode: cartEvent.productCode,
                quantity: cartEvent.quantity,
            };
            if ('entry' in cartEvent) {
                evt.entry = cartEvent.entry;
            }
            if ('quantityAdded' in cartEvent) {
                evt.quantityAdded = cartEvent.quantityAdded;
            }
            if ('error' in cartEvent && cartEvent.error instanceof i1$1.HttpErrorModel) {
                evt.error = cartEvent.error;
            }
            if ((_b = (_a = evt.error) === null || _a === void 0 ? void 0 : _a.details) === null || _b === void 0 ? void 0 : _b.length) {
                var isOutOfStock = (_c = evt.error) === null || _c === void 0 ? void 0 : _c.details.some(function (e) { return e.type === 'InsufficientStockError'; });
                evt.quantityAdded = isOutOfStock ? 0 : evt.quantity;
            }
            return evt;
        };
        QuickOrderService.prototype.clearDeleteTimeout = function (productCode) {
            var clearMessageTimout = this.clearDeleteTimeouts[productCode];
            if (clearMessageTimout) {
                clearMessageTimout.unsubscribe();
                delete this.clearDeleteTimeouts[productCode];
            }
        };
        return QuickOrderService;
    }());
    QuickOrderService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: QuickOrderService, deps: [{ token: i1__namespace.ActiveCartService }, { token: i1__namespace.ProductAdapter }, { token: i1__namespace.EventService }, { token: i1__namespace.ProductSearchConnector }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    QuickOrderService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: QuickOrderService });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: QuickOrderService, decorators: [{
                type: i0.Injectable
            }], ctorParameters: function () { return [{ type: i1__namespace.ActiveCartService }, { type: i1__namespace.ProductAdapter }, { type: i1__namespace.EventService }, { type: i1__namespace.ProductSearchConnector }]; } });

    var facadeProviders = [
        QuickOrderService,
        {
            provide: i1.QuickOrderFacade,
            useExisting: QuickOrderService,
        },
    ];

    var QuickOrderStatePersistenceService = /** @class */ (function () {
        function QuickOrderStatePersistenceService(quickOrderService, siteContextParamsService, statePersistenceService) {
            this.quickOrderService = quickOrderService;
            this.siteContextParamsService = siteContextParamsService;
            this.statePersistenceService = statePersistenceService;
            this.subscription = new rxjs.Subscription();
            /**
             * Identifier used for storage key.
             */
            this.key = 'quick-order';
        }
        /**
         * Initializes the synchronization between state and browser storage.
         */
        QuickOrderStatePersistenceService.prototype.initSync = function () {
            var _this = this;
            this.subscription.add(this.statePersistenceService.syncWithStorage({
                key: this.key,
                state$: this.quickOrderService.getEntries(),
                context$: this.siteContextParamsService.getValues([
                    i1$1.BASE_SITE_CONTEXT_ID,
                ]),
                storageType: i1$1.StorageSyncType.SESSION_STORAGE,
                onRead: function (state) { return _this.onRead(state); },
            }));
        };
        QuickOrderStatePersistenceService.prototype.onRead = function (state) {
            if (state) {
                this.quickOrderService.loadEntries(state);
            }
        };
        QuickOrderStatePersistenceService.prototype.ngOnDestroy = function () {
            this.subscription.unsubscribe();
        };
        return QuickOrderStatePersistenceService;
    }());
    QuickOrderStatePersistenceService.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: QuickOrderStatePersistenceService, deps: [{ token: i1__namespace$1.QuickOrderFacade }, { token: i1__namespace.SiteContextParamsService }, { token: i1__namespace.StatePersistenceService }], target: i0__namespace.ɵɵFactoryTarget.Injectable });
    QuickOrderStatePersistenceService.ɵprov = i0__namespace.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: QuickOrderStatePersistenceService, providedIn: 'root' });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: QuickOrderStatePersistenceService, decorators: [{
                type: i0.Injectable,
                args: [{
                        providedIn: 'root',
                    }]
            }], ctorParameters: function () { return [{ type: i1__namespace$1.QuickOrderFacade }, { type: i1__namespace.SiteContextParamsService }, { type: i1__namespace.StatePersistenceService }]; } });

    var QuickOrderCoreModule = /** @class */ (function () {
        function QuickOrderCoreModule() {
        }
        QuickOrderCoreModule.forRoot = function () {
            return {
                ngModule: QuickOrderCoreModule,
            };
        };
        return QuickOrderCoreModule;
    }());
    QuickOrderCoreModule.ɵfac = i0__namespace.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: QuickOrderCoreModule, deps: [], target: i0__namespace.ɵɵFactoryTarget.NgModule });
    QuickOrderCoreModule.ɵmod = i0__namespace.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: QuickOrderCoreModule });
    QuickOrderCoreModule.ɵinj = i0__namespace.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: QuickOrderCoreModule, providers: __spreadArray(__spreadArray([], __read(facadeProviders)), [QuickOrderStatePersistenceService]) });
    i0__namespace.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0__namespace, type: QuickOrderCoreModule, decorators: [{
                type: i0.NgModule,
                args: [{
                        providers: __spreadArray(__spreadArray([], __read(facadeProviders)), [QuickOrderStatePersistenceService]),
                    }]
            }] });

    /**
     * Generated bundle index. Do not edit.
     */

    exports.QuickOrderCoreModule = QuickOrderCoreModule;
    exports.QuickOrderService = QuickOrderService;
    exports.QuickOrderStatePersistenceService = QuickOrderStatePersistenceService;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=spartacus-cart-quick-order-core.umd.js.map
