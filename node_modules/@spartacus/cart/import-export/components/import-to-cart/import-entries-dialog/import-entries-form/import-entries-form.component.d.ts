import { EventEmitter, OnInit } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { ImportExportConfig } from '@spartacus/cart/import-export/core';
import { OrderEntriesSource, FilesFormValidators, ImportCsvFileService, LaunchDialogService, ProductData } from '@spartacus/storefront';
import { Subject } from 'rxjs';
import { ImportProductsFromCsvService } from '../../import-products-from-csv.service';
import * as i0 from "@angular/core";
export declare class ImportEntriesFormComponent implements OnInit {
    protected launchDialogService: LaunchDialogService;
    protected importToCartService: ImportProductsFromCsvService;
    protected importCsvService: ImportCsvFileService;
    protected filesFormValidators: FilesFormValidators;
    protected importExportConfig: ImportExportConfig;
    form: FormGroup;
    loadedFile: string[][] | null;
    formSubmitSubject$: Subject<unknown>;
    submitEvent: EventEmitter<{
        products: ProductData[];
    }>;
    type: OrderEntriesSource;
    constructor(launchDialogService: LaunchDialogService, importToCartService: ImportProductsFromCsvService, importCsvService: ImportCsvFileService, filesFormValidators: FilesFormValidators, importExportConfig: ImportExportConfig);
    ngOnInit(): void;
    close(reason: string): void;
    save(): void;
    protected buildForm(): FormGroup;
    get allowedTypes(): string[] | undefined;
    protected get maxSize(): number | undefined;
    protected get maxEntries(): number | undefined;
    protected get separator(): string | undefined;
    static ɵfac: i0.ɵɵFactoryDeclaration<ImportEntriesFormComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ImportEntriesFormComponent, "cx-import-entries-form", never, { "type": "type"; }, { "submitEvent": "submitEvent"; }, never, never>;
}
