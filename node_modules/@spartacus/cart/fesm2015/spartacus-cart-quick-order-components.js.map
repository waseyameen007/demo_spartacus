{"version":3,"file":"spartacus-cart-quick-order-components.js","sources":["../../../feature-libs/cart/quick-order/components/cart-quick-order-form/cart-quick-order-form.component.ts","../../../feature-libs/cart/quick-order/components/cart-quick-order-form/cart-quick-order-form.component.html","../../../feature-libs/cart/quick-order/components/cart-quick-order-form/cart-quick-order-form.module.ts","../../../feature-libs/cart/quick-order/components/quick-order/form/quick-order-form.component.ts","../../../feature-libs/cart/quick-order/components/quick-order/form/quick-order-form.component.html","../../../feature-libs/cart/quick-order/components/quick-order/table/item/quick-order-item.component.ts","../../../feature-libs/cart/quick-order/components/quick-order/table/item/quick-order-item.component.html","../../../feature-libs/cart/quick-order/components/quick-order/table/quick-order-table.component.ts","../../../feature-libs/cart/quick-order/components/quick-order/table/quick-order-table.component.html","../../../feature-libs/cart/quick-order/components/quick-order/quick-order.component.ts","../../../feature-libs/cart/quick-order/components/quick-order/quick-order.component.html","../../../feature-libs/cart/quick-order/components/quick-order/quick-order-list.module.ts","../../../feature-libs/cart/quick-order/components/quick-order-components.module.ts","../../../feature-libs/cart/quick-order/components/spartacus-cart-quick-order-components.ts"],"sourcesContent":["import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  ActiveCartService,\n  Cart,\n  CartAddEntryFailEvent,\n  CartAddEntrySuccessEvent,\n  EventService,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { first, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-quick-order-form',\n  templateUrl: './cart-quick-order-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartQuickOrderFormComponent implements OnInit, OnDestroy {\n  quickOrderForm: FormGroup;\n  cartIsLoading$: Observable<boolean> = this.activeCartService\n    .isStable()\n    .pipe(map((loaded) => !loaded));\n  cart$: Observable<Cart> = this.activeCartService.getActive();\n  min = 1;\n\n  protected subscription: Subscription = new Subscription();\n  protected cartEventsSubscription: Subscription = new Subscription();\n  protected minQuantityValue: number = 1;\n\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected eventService: EventService,\n    protected formBuilder: FormBuilder,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.buildForm();\n    this.watchQuantityChange();\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n    this.cartEventsSubscription?.unsubscribe();\n  }\n\n  applyQuickOrder(): void {\n    if (this.quickOrderForm.invalid) {\n      this.quickOrderForm.markAllAsTouched();\n      return;\n    }\n\n    const productCode = this.quickOrderForm.get('productCode')?.value;\n    const quantity = this.quickOrderForm.get('quantity')?.value;\n\n    this.watchAddEntrySuccessEvent();\n    this.watchAddEntryFailEvent();\n\n    if (productCode && quantity) {\n      this.activeCartService.addEntry(productCode, quantity);\n    }\n  }\n\n  protected buildForm(): void {\n    this.quickOrderForm = this.formBuilder.group({\n      productCode: ['', [Validators.required]],\n      quantity: [\n        this.minQuantityValue,\n        { updateOn: 'blur', validators: [Validators.required] },\n      ],\n    });\n  }\n\n  protected watchQuantityChange(): void {\n    this.subscription.add(\n      this.quickOrderForm\n        .get('quantity')\n        ?.valueChanges.subscribe((value) =>\n          this.quickOrderForm\n            .get('quantity')\n            ?.setValue(this.getValidCount(value), { emitEvent: false })\n        )\n    );\n  }\n\n  protected watchAddEntrySuccessEvent(): void {\n    this.cartEventsSubscription.add(\n      this.eventService\n        .get(CartAddEntrySuccessEvent)\n        .pipe(first())\n        .subscribe((data: CartAddEntrySuccessEvent) => {\n          let key = 'quickOrderCartForm.stockLevelReached';\n          let productTranslation;\n          let messageType = GlobalMessageType.MSG_TYPE_WARNING;\n\n          if (data.quantityAdded) {\n            key =\n              data.quantityAdded > 1\n                ? 'quickOrderCartForm.entriesWereAdded'\n                : 'quickOrderCartForm.entryWasAdded';\n\n            productTranslation =\n              data.quantityAdded > 1\n                ? 'quickOrderCartForm.products'\n                : 'quickOrderCartForm.product';\n\n            messageType = GlobalMessageType.MSG_TYPE_CONFIRMATION;\n          }\n\n          this.globalMessageService.add(\n            {\n              key,\n              params: {\n                product: data?.entry?.product?.name || productTranslation,\n                quantity: data.quantityAdded,\n              },\n            },\n            messageType\n          );\n          this.resetForm();\n        })\n    );\n  }\n\n  protected watchAddEntryFailEvent(): void {\n    this.cartEventsSubscription.add(\n      this.eventService\n        .get(CartAddEntryFailEvent)\n        .pipe(first())\n        .subscribe(() => {\n          this.globalMessageService.add(\n            {\n              key: 'quickOrderCartForm.noResults',\n            },\n            GlobalMessageType.MSG_TYPE_ERROR\n          );\n        })\n    );\n  }\n\n  protected getValidCount(value: number) {\n    if (value < this.min || !value) {\n      value = this.min;\n    }\n\n    return value;\n  }\n\n  protected resetForm(): void {\n    this.quickOrderForm.reset();\n  }\n}\n","<ng-container *ngIf=\"cart$ | async as cart\">\n  <div class=\"cx-cart-quick-order-form-title\">\n    {{ 'quickOrderCartForm.title' | cxTranslate }}\n  </div>\n  <div class=\"form-group\">\n    <form (ngSubmit)=\"applyQuickOrder()\" [formGroup]=\"quickOrderForm\">\n      <div class=\"cx-cart-quick-order-form-container\">\n        <span class=\"cx-cart-quick-order-form-productID\">\n          <label class=\"cx-cart-quick-order-form-label\">\n            {{ 'quickOrderCartForm.productCodeLabel' | cxTranslate }}\n          </label>\n          <input\n            aria-required=\"true\"\n            class=\"form-control input-product-code\"\n            formControlName=\"productCode\"\n            placeholder=\"{{\n              'quickOrderCartForm.productCodePlaceholder' | cxTranslate\n            }}\"\n            type=\"text\"\n          />\n        </span>\n\n        <span class=\"cx-cart-quick-order-form-qty\">\n          <label class=\"cx-cart-quick-order-form-label\">\n            {{ 'quickOrderCartForm.quantityLabel' | cxTranslate }}\n          </label>\n          <input\n            aria-required=\"true\"\n            class=\"form-control input-quantity\"\n            formControlName=\"quantity\"\n            type=\"number\"\n          />\n        </span>\n        <button\n          [class.disabled]=\"cartIsLoading$ | async\"\n          [disabled]=\"cartIsLoading$ | async\"\n          class=\"btn btn-block btn-action apply-quick-order-button\"\n          type=\"submit\"\n        >\n          {{ 'quickOrderCartForm.addToCart' | cxTranslate }}\n        </button>\n        <cx-form-errors\n          aria-live=\"assertive\"\n          aria-atomic=\"true\"\n          [control]=\"quickOrderForm.get('productCode')\"\n        ></cx-form-errors>\n        <cx-form-errors\n          aria-live=\"assertive\"\n          aria-atomic=\"true\"\n          [control]=\"quickOrderForm.get('quantity')\"\n        ></cx-form-errors>\n      </div>\n    </form></div\n></ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { FormErrorsModule } from '@spartacus/storefront';\nimport { CartQuickOrderFormComponent } from './cart-quick-order-form.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, I18nModule, FormErrorsModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartQuickOrderFormComponent: {\n          component: CartQuickOrderFormComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CartQuickOrderFormComponent],\n  exports: [CartQuickOrderFormComponent],\n})\nexport class CartQuickOrderFormModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { QuickOrderFacade } from '@spartacus/cart/quick-order/root';\nimport {\n  Config,\n  GlobalMessageService,\n  Product,\n  WindowRef,\n} from '@spartacus/core';\nimport { ICON_TYPE } from '@spartacus/storefront';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  switchMap,\n  take,\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-quick-order-form',\n  templateUrl: './quick-order-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickOrderFormComponent implements OnInit, OnDestroy {\n  form: FormGroup;\n  iconTypes = ICON_TYPE;\n  isSearching: boolean = false;\n  noResults: boolean = false;\n  results: Product[] = [];\n\n  protected subscription = new Subscription();\n  protected searchSubscription = new Subscription();\n\n  /**\n   * @deprecated since version 4.2\n   * Use constructor(globalMessageService: GlobalMessageService, quickOrderService: QuickOrderFacade, config: Config, cd: ChangeDetectorRef, winRef: WindowRef); instead\n   */\n  // TODO(#14058): Remove deprecated constructor\n  constructor(\n    globalMessageService: GlobalMessageService,\n    quickOrderService: QuickOrderFacade\n  );\n\n  constructor(\n    protected globalMessageService: GlobalMessageService, // TODO(#14058): Remove it as it is not in use anymore\n    protected quickOrderService: QuickOrderFacade,\n    public config?: Config, // TODO(#14058): Make it required\n    protected cd?: ChangeDetectorRef, // TODO(#14058): Make it required\n    protected winRef?: WindowRef // TODO(#14058): Make it required\n  ) {}\n\n  ngOnInit(): void {\n    this.buildForm();\n    this.subscription.add(this.watchProductAdd());\n    this.subscription.add(this.watchQueryChange());\n  }\n\n  onBlur(event: UIEvent): void {\n    // Use timeout to detect changes\n    setTimeout(() => {\n      if (!this.isSuggestionFocused()) {\n        this.blurSuggestionBox(event);\n      }\n    });\n  }\n\n  clear(event?: Event): void {\n    event?.preventDefault();\n\n    if (this.isResultsBoxOpen()) {\n      this.toggleBodyClass('quick-order-searchbox-is-active', false);\n    }\n\n    let product = this.form.get('product')?.value;\n\n    if (!!product) {\n      this.form.reset();\n    }\n\n    // We have to call 'close' method every time to make sure results list is empty and call detectChanges to change icon type in form\n    this.close();\n    this.cd?.detectChanges();\n  }\n\n  add(product: Product, event: Event): void {\n    event?.preventDefault();\n\n    // TODO change to nonpurchasable flag once we will support multidimensional products in search and when the purchasable flag will be available in search product response\n\n    // Check if product is purchasable / non multidimensional\n    if (product.multidimensional) {\n      this.quickOrderService.setNonPurchasableProductError(product);\n      this.clear();\n      return;\n    } else {\n      this.quickOrderService.clearNonPurchasableProductError();\n    }\n\n    this.quickOrderService.addProduct(product);\n  }\n\n  addProduct(event: Event): void {\n    this.quickOrderService\n      .canAdd()\n      .pipe(take(1))\n      .subscribe((canAdd: boolean) => {\n        if (canAdd) {\n          // Add product if there is only one in the result list\n          if (this.results.length === 1) {\n            this.add(this.results[0], event);\n            // Add product if there is focus on it\n          } else if (this.getFocusedIndex() !== -1) {\n            const product = this.results[this.getFocusedIndex()];\n            this.add(product, event);\n          }\n        }\n      });\n  }\n\n  focusNextChild(event: UIEvent): void {\n    event.preventDefault(); // Negate normal keyscroll\n    if (!this.results.length) {\n      return;\n    }\n\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n\n    // Focus on first index moving to last\n    if (results.length) {\n      if (focusedIndex >= results.length - 1) {\n        results[0].focus();\n      } else {\n        results[focusedIndex + 1].focus();\n      }\n    }\n  }\n\n  focusPreviousChild(event: UIEvent): void {\n    event.preventDefault(); // Negate normal keyscroll\n    if (!this.results.length) {\n      return;\n    }\n\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n\n    // Focus on last index moving to first\n    if (results.length) {\n      if (focusedIndex < 1) {\n        results[results.length - 1].focus();\n      } else {\n        results[focusedIndex - 1].focus();\n      }\n    }\n  }\n\n  isResultsBoxOpen(): boolean {\n    return this.winRef\n      ? !!this.winRef.document.querySelector('.quick-order-searchbox-is-active')\n      : false;\n  }\n\n  canAddProduct(): Observable<boolean> {\n    return this.quickOrderService.canAdd();\n  }\n\n  open(): void {\n    this.toggleBodyClass('quick-order-searchbox-is-active', true);\n  }\n\n  // Return result list as HTMLElement array\n  protected getResultElements(): HTMLElement[] {\n    if (this.winRef) {\n      return Array.from(\n        this.winRef.document.querySelectorAll(\n          '.quick-order-results-products > li button'\n        )\n      );\n    } else {\n      return [];\n    }\n  }\n\n  protected blurSuggestionBox(event: UIEvent): void {\n    this.toggleBodyClass('quick-order-searchbox-is-active', false);\n\n    if (event && event.target) {\n      (<HTMLElement>event.target).blur();\n    }\n  }\n\n  // Return focused element as HTMLElement\n  protected getFocusedElement(): HTMLElement | any {\n    if (this.winRef) {\n      return <HTMLElement>this.winRef.document.activeElement;\n    }\n  }\n\n  protected getFocusedIndex(): number {\n    return this.getResultElements().indexOf(this.getFocusedElement());\n  }\n\n  protected isSuggestionFocused(): boolean {\n    return this.getResultElements().includes(this.getFocusedElement());\n  }\n\n  protected toggleBodyClass(className: string, add?: boolean) {\n    // TODO(#14058): Remove condition\n    if (this.winRef) {\n      if (add === undefined) {\n        this.winRef.document.body.classList.toggle(className);\n      } else {\n        add\n          ? this.winRef.document.body.classList.add(className)\n          : this.winRef.document.body.classList.remove(className);\n      }\n    }\n  }\n\n  protected buildForm() {\n    const form = new FormGroup({});\n    form.setControl('product', new FormControl(null));\n\n    this.form = form;\n  }\n\n  protected isEmpty(string?: string): boolean {\n    return string?.trim() === '' || string == null;\n  }\n\n  protected watchQueryChange(): Subscription {\n    return this.form.valueChanges\n      .pipe(\n        distinctUntilChanged(),\n        debounceTime(300),\n        filter((value) => {\n          if (this.config?.quickOrder?.searchForm) {\n            //Check if input to quick order is an empty after deleting input manually\n            if (this.isEmpty(value.product)) {\n              //Clear recommendation results on empty string\n              this.clear();\n              return false;\n            }\n            return (\n              !!value.product &&\n              value.product.length >=\n                this.config.quickOrder?.searchForm?.minCharactersBeforeRequest\n            );\n          }\n\n          return value;\n        })\n      )\n      .subscribe((value) => {\n        this.searchProducts(value.product);\n      });\n  }\n\n  protected searchProducts(query: string): void {\n    this.searchSubscription.add(\n      this.canAddProduct()\n        .pipe(\n          filter(Boolean),\n          switchMap(() =>\n            this.quickOrderService\n              .searchProducts(\n                query,\n                this.config?.quickOrder?.searchForm?.maxProducts\n              )\n              .pipe(take(1))\n          )\n        )\n        .subscribe((products) => {\n          this.results = products;\n\n          if (this.results.length) {\n            this.noResults = false;\n            this.open();\n          } else {\n            this.noResults = true;\n          }\n\n          this.cd?.detectChanges();\n        })\n    );\n  }\n\n  protected clearResults(): void {\n    this.results = [];\n  }\n\n  protected close(): void {\n    this.resetSearchSubscription();\n    this.clearResults();\n    this.noResults = false;\n  }\n\n  protected resetSearchSubscription(): void {\n    this.searchSubscription.unsubscribe();\n    this.searchSubscription = new Subscription();\n  }\n\n  protected watchProductAdd(): Subscription {\n    return this.quickOrderService\n      .getProductAdded()\n      .subscribe(() => this.clear());\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<form [formGroup]=\"form\" class=\"quick-order-form-container\">\n  <div class=\"quick-order-form-input\">\n    <input\n      (blur)=\"onBlur($event)\"\n      (focus)=\"open()\"\n      (keydown.arrowdown)=\"focusNextChild($event)\"\n      (keydown.arrowup)=\"focusPreviousChild($event)\"\n      (keydown.enter)=\"addProduct($event)\"\n      (keydown.escape)=\"clear($event)\"\n      [attr.aria-label]=\"'common.search' | cxTranslate\"\n      class=\"form-control\"\n      formControlName=\"product\"\n      placeholder=\"{{ 'quickOrderForm.placeholder' | cxTranslate }}\"\n      type=\"text\"\n    />\n\n    <button\n      *ngIf=\"form.get('product')?.value; else searchIcon\"\n      (click)=\"clear($event)\"\n      (keydown.enter)=\"clear($event)\"\n      [attr.aria-label]=\"'common.reset' | cxTranslate\"\n      class=\"quick-order-form-reset-icon\"\n    >\n      <cx-icon [type]=\"iconTypes.RESET\"></cx-icon>\n    </button>\n\n    <ng-template #searchIcon>\n      <button\n        [attr.aria-label]=\"'common.search' | cxTranslate\"\n        class=\"quick-order-form-search-icon\"\n        tabindex=\"-1\"\n      >\n        <cx-icon [type]=\"iconTypes.SEARCH\"></cx-icon>\n      </button>\n    </ng-template>\n\n    <span\n      *ngIf=\"!(canAddProduct() | async) && form.get('product')?.dirty\"\n      class=\"list-limit-reached-text\"\n    >\n      {{ 'quickOrderForm.listLimitReached' | cxTranslate }}\n    </span>\n  </div>\n\n  <div *ngIf=\"isResultsBoxOpen()\" role=\"listbox\" class=\"quick-order-results\">\n    <ul *ngIf=\"results.length\" class=\"quick-order-results-products\">\n      <li\n        *ngFor=\"let product of results; let i = index\"\n        class=\"quick-order-results-product-container\"\n      >\n        <button\n          (blur)=\"onBlur($event)\"\n          (click)=\"add(product, $event)\"\n          (keydown.arrowdown)=\"focusNextChild($event)\"\n          (keydown.arrowup)=\"focusPreviousChild($event)\"\n          (keydown.enter)=\"add(product, $event)\"\n          (keydown.escape)=\"clear($event)\"\n          [attr.aria-label]=\"\n            'quickOrderForm.addProduct' | cxTranslate: { product: product.name }\n          \"\n          [class.has-media]=\"\n            config?.quickOrder?.searchForm?.displayProductImages\n          \"\n          class=\"quick-order-results-product\"\n        >\n          <cx-media\n            *ngIf=\"config?.quickOrder?.searchForm?.displayProductImages\"\n            [container]=\"product.images?.PRIMARY\"\n            class=\"media\"\n            format=\"thumbnail\"\n            role=\"presentation\"\n          ></cx-media>\n          <div class=\"name\" [innerHTML]=\"product.name\"></div>\n          <span class=\"id\">\n            {{\n              'quickOrderForm.id'\n                | cxTranslate\n                  : {\n                      id: product.code\n                    }\n            }}\n          </span>\n          <span class=\"price\">{{ product.price?.formattedValue }}</span>\n        </button>\n      </li>\n    </ul>\n\n    <span *ngIf=\"noResults\" class=\"quick-order-no-results\">\n      {{ 'quickOrderForm.noResults' | cxTranslate }}\n    </span>\n  </div>\n</form>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { QuickOrderFacade } from '@spartacus/cart/quick-order/root';\nimport { OrderEntry } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'cx-quick-order-item',\n  templateUrl: './quick-order-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickOrderItemComponent implements OnInit, OnDestroy {\n  quantityControl: FormControl;\n\n  get entry(): OrderEntry {\n    return this._entry;\n  }\n\n  @Input('entry') set entry(value: OrderEntry) {\n    this._entry = value;\n    this.quantityControl = new FormControl(this.entry.quantity, {\n      updateOn: 'blur',\n    });\n  }\n\n  @Input()\n  index: number;\n\n  @Input()\n  loading: boolean = false;\n\n  protected _entry: OrderEntry;\n  protected subscription = new Subscription();\n\n  constructor(\n    protected cd: ChangeDetectorRef,\n    protected quickOrderService: QuickOrderFacade\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.quantityControl.valueChanges.subscribe(() => {\n        this.quickOrderService.updateEntryQuantity(\n          this.index,\n          this.quantityControl.value\n        );\n      })\n    );\n\n    this.subscription.add(this.watchProductAdd());\n  }\n\n  removeEntry(): void {\n    this.quickOrderService.softDeleteEntry(this.index);\n    this.cd.detectChanges();\n  }\n\n  protected watchProductAdd(): Subscription {\n    return this.quickOrderService.getProductAdded().subscribe((productCode) => {\n      if (productCode === this.entry.product?.code) {\n        this.quantityControl = new FormControl(this.entry.quantity);\n        this.cd.detectChanges();\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","<div class=\"cx-quick-order-table-item\">\n  <div class=\"row\">\n    <div class=\"col-2 col-md-1 cx-quick-order-image-container\">\n      <div class=\"cx-quick-order-table-item-product-image\">\n        <a\n          [ngClass]=\"{ disabled: loading }\"\n          [routerLink]=\"{ cxRoute: 'product', params: entry.product } | cxUrl\"\n          tabindex=\"-1\"\n        >\n          <cx-media\n            [container]=\"entry?.product?.images?.PRIMARY\"\n            format=\"cartIcon\"\n          ></cx-media>\n        </a>\n      </div>\n    </div>\n\n    <div class=\"col-10 col-md-11 cx-quick-order-info-container\">\n      <div class=\"row\">\n        <div\n          class=\"\n            cx-quick-order-table-item-product-information\n            col-md-4 col-lg-4 col-xl-4\n          \"\n        >\n          <div class=\"cx-name\">\n            <a\n              [ngClass]=\"{ disabled: loading }\"\n              [routerLink]=\"\n                { cxRoute: 'product', params: entry.product } | cxUrl\n              \"\n              class=\"cx-link\"\n              >{{ entry.product?.name || '-' }}\n            </a>\n          </div>\n\n          <div class=\"cx-code\">\n            {{ 'quickOrderTable.id' | cxTranslate }} {{ entry.product?.code }}\n          </div>\n        </div>\n\n        <div class=\"cx-quick-order-table-item-price col-md-2 col-lg-2 col-xl-2\">\n          <span class=\"cx-label\">\n            {{ 'quickOrderTable.itemPrice' | cxTranslate }}\n          </span>\n          <div class=\"cx-value\">\n            {{ entry.basePrice?.formattedValue || '-' }}\n          </div>\n        </div>\n\n        <div\n          class=\"cx-quick-order-table-item-quantity col-md-4 col-lg-4 col-xl-4\"\n        >\n          <span class=\"cx-label\">\n            {{ 'quickOrderTable.qty' | cxTranslate }}\n          </span>\n          <cx-item-counter\n            [control]=\"quantityControl\"\n            [max]=\"entry.product?.stock?.stockLevel\"\n            [readonly]=\"loading\"\n          ></cx-item-counter>\n        </div>\n\n        <div\n          class=\"cx-quick-order-table-item-action col-md-2 col-lg-2 col-xl-2\"\n        >\n          <button\n            (click)=\"removeEntry()\"\n            [disabled]=\"loading\"\n            class=\"link cx-action-link\"\n          >\n            {{ 'common.remove' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-quick-order-table',\n  templateUrl: './quick-order-table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickOrderTableComponent {\n  @Input()\n  entries: OrderEntry[] = [];\n\n  @Input()\n  loading: boolean = false;\n}\n","<div *ngIf=\"entries?.length > 0\" class=\"cx-quick-order-table-wrapper\">\n  <div class=\"cx-quick-order-table-header\">\n    <div class=\"row\">\n      <div class=\"col-2 col-md-1 cx-quick-order-image-header\"></div>\n\n      <div class=\"col-10 col-md-11 cx-quick-order-info-header\">\n        <div class=\"row\">\n          <div\n            class=\"cx-quick-order-table-item-product col-md-4 col-lg-4 col-xl-4\"\n          >\n            {{ 'quickOrderTable.product' | cxTranslate }}\n          </div>\n          <div\n            class=\"cx-quick-order-table-item-price col-md-2 col-lg-2 col-xl-2\"\n          >\n            {{ 'quickOrderTable.price' | cxTranslate }}\n          </div>\n          <div\n            class=\"\n              cx-quick-order-table-item-quantity\n              col-md-4 col-lg-4 col-xl-4\n            \"\n          >\n            {{ 'quickOrderTable.quantity' | cxTranslate }}\n          </div>\n          <div\n            class=\"cx-quick-order-table-item-action col-md-2 col-lg-2 col-xl-2\"\n          ></div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div\n    *ngFor=\"let entry of entries; let i = index\"\n    class=\"cx-quick-order-table-row\"\n  >\n    <cx-quick-order-item\n      [entry]=\"entry\"\n      [index]=\"i\"\n      [loading]=\"loading\"\n    ></cx-quick-order-item>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport {\n  CmsQuickOrderComponent,\n  QuickOrderStatePersistenceService,\n} from '@spartacus/cart/quick-order/core';\nimport {\n  QuickOrderAddEntryEvent,\n  QuickOrderFacade,\n} from '@spartacus/cart/quick-order/root';\nimport {\n  ActiveCartService,\n  GlobalMessageService,\n  GlobalMessageType,\n  OrderEntry,\n  Product,\n} from '@spartacus/core';\nimport { CmsComponentData } from '@spartacus/storefront';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { first, map, tap } from 'rxjs/operators';\nimport { QuickOrderFormComponent } from './form/quick-order-form.component';\n\n@Component({\n  selector: 'cx-quick-order',\n  templateUrl: './quick-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class QuickOrderComponent implements OnInit, OnDestroy {\n  cartId$: Observable<string>;\n  entries$: Observable<OrderEntry[]>;\n  quickOrderListLimit$: Observable<number | undefined> =\n    this.component.data$.pipe(\n      map((data) => data.quickOrderListLimit),\n      tap((limit) => {\n        if (!!limit) {\n          this.quickOrderService.setListLimit(limit);\n        }\n      })\n    );\n  isCartStable$: Observable<boolean> = combineLatest([\n    this.activeCartService.getActiveCartId(),\n    this.activeCartService.isStable(),\n  ]).pipe(map(([activeCartId, isStable]) => (!activeCartId ? true : isStable)));\n  globalMessageType = GlobalMessageType;\n  listLimitReached$: Observable<boolean>;\n\n  @ViewChild('quickOrderForm')\n  quickOrderForm: QuickOrderFormComponent;\n\n  protected cartErrors$ = new BehaviorSubject<QuickOrderAddEntryEvent[]>([]);\n  protected cartWarnings$ = new BehaviorSubject<QuickOrderAddEntryEvent[]>([]);\n  protected cartSuccesses$ = new BehaviorSubject<OrderEntry[]>([]);\n  protected showAddToCartInformation$ = new BehaviorSubject<boolean>(false);\n  protected nonPurchasableProductError$ = new BehaviorSubject<Product | null>(\n    null\n  );\n\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected component: CmsComponentData<CmsQuickOrderComponent>,\n    protected globalMessageService: GlobalMessageService,\n    protected quickOrderService: QuickOrderFacade,\n    protected quickOrderStatePersistenceService: QuickOrderStatePersistenceService\n  ) {}\n\n  ngOnInit(): void {\n    this.cartId$ = this.activeCartService.getActiveCartId();\n    this.entries$ = this.quickOrderService.getEntries();\n    this.quickOrderStatePersistenceService.initSync();\n  }\n\n  ngOnDestroy(): void {\n    this.quickOrderService.clearDeletedEntries();\n  }\n\n  get errors$(): Observable<QuickOrderAddEntryEvent[]> {\n    return this.cartErrors$.asObservable();\n  }\n\n  get warnings$(): Observable<QuickOrderAddEntryEvent[]> {\n    return this.cartWarnings$.asObservable();\n  }\n\n  get successes$(): Observable<OrderEntry[]> {\n    return this.cartSuccesses$.asObservable();\n  }\n\n  get nonPurchasableError$(): Observable<Product | null> {\n    return this.quickOrderService.getNonPurchasableProductError();\n  }\n\n  get addToCartInformation$(): Observable<boolean> {\n    return this.showAddToCartInformation$.asObservable();\n  }\n\n  get softDeletedEntries$(): Observable<Record<string, OrderEntry>> {\n    return this.quickOrderService.getSoftDeletedEntries();\n  }\n\n  clear(): void {\n    this.quickOrderService.clearList();\n    this.globalMessageService.add(\n      {\n        key: 'quickOrderTable.listCleared',\n      },\n      GlobalMessageType.MSG_TYPE_INFO\n    );\n  }\n\n  addToCart(orderEntries: OrderEntry[]): void {\n    if (!orderEntries.length) {\n      this.showAddToCartInformation$.next(true);\n      return;\n    }\n\n    this.clearStatuses();\n\n    this.quickOrderService\n      .addToCart()\n      .pipe(first())\n      .subscribe(([entries, errors]) => {\n        errors.forEach((err) => {\n          if (!err.entry) {\n            err.entry = orderEntries.find(\n              (e) => e.product?.code === err.productCode\n            );\n          }\n        });\n\n        this.extractErrors(errors);\n        this.extractWarnings(errors);\n\n        if (!errors.length) {\n          this.showAddedToCartSuccessMessage();\n        } else {\n          this.extractSuccesses(errors, entries);\n        }\n      });\n  }\n\n  clearErrors(): void {\n    this.cartErrors$.next([]);\n  }\n\n  clearWarnings(): void {\n    this.cartWarnings$.next([]);\n  }\n\n  clearSuccesses(): void {\n    this.cartSuccesses$.next([]);\n  }\n\n  clearAddToCartInformation(): void {\n    this.showAddToCartInformation$.next(false);\n  }\n\n  undoDeletion(entry: OrderEntry): void {\n    if (entry.product?.code) {\n      this.quickOrderService.restoreSoftDeletedEntry(entry.product.code);\n    }\n  }\n\n  clearDeletion(entry: OrderEntry): void {\n    if (entry.product?.code) {\n      this.quickOrderService.hardDeleteEntry(entry.product.code);\n    }\n  }\n\n  clearNonPurchasableError(): void {\n    this.quickOrderService.clearNonPurchasableProductError();\n  }\n\n  canAddProduct(): Observable<boolean> {\n    return this.quickOrderService.canAdd();\n  }\n\n  protected extractErrors(errors: QuickOrderAddEntryEvent[]): void {\n    const noAddedEntries = errors.filter((error) => error.quantityAdded === 0);\n\n    this.setErrors(noAddedEntries);\n  }\n\n  protected extractWarnings(errors: QuickOrderAddEntryEvent[]): void {\n    const warnings = errors.filter((error) => error.quantityAdded !== 0);\n\n    this.setWarnings(warnings);\n  }\n\n  protected extractSuccesses(\n    errors: QuickOrderAddEntryEvent[],\n    entries: OrderEntry[]\n  ): void {\n    const successAddedEntries: OrderEntry[] = [];\n\n    entries.forEach((entry) => {\n      const element = errors.find(\n        (error) => error.productCode === entry.product?.code\n      );\n      if (!element) {\n        successAddedEntries.push(entry);\n      }\n    });\n\n    this.setSuccesses(successAddedEntries);\n  }\n\n  protected clearStatuses(): void {\n    this.clearErrors();\n    this.clearWarnings();\n    this.clearSuccesses();\n  }\n\n  protected showAddedToCartSuccessMessage(): void {\n    this.globalMessageService.add(\n      {\n        key: 'quickOrderTable.addedtoCart',\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n  }\n\n  protected setErrors(errors: QuickOrderAddEntryEvent[]): void {\n    this.cartErrors$.next(errors);\n  }\n\n  protected setWarnings(warnings: QuickOrderAddEntryEvent[]): void {\n    this.cartWarnings$.next(warnings);\n  }\n\n  protected setSuccesses(entries: OrderEntry[]): void {\n    this.cartSuccesses$.next(entries);\n  }\n}\n","<ng-container *ngIf=\"entries$ | async as entries\">\n  <ng-container *ngIf=\"!(canAddProduct() | async)\">\n    <ng-container *ngIf=\"quickOrderForm?.form?.get('product')?.dirty\">\n      <cx-message\n        [text]=\"\n          'quickOrderList.errors.listIsFull'\n            | cxTranslate: { count: entries.length }\n        \"\n        [isVisibleCloseButton]=\"false\"\n        [type]=\"globalMessageType.MSG_TYPE_ERROR\"\n        class=\"quick-order-list-limit-message\"\n      >\n      </cx-message>\n    </ng-container>\n  </ng-container>\n</ng-container>\n\n<ng-container *ngIf=\"addToCartInformation$ | async\">\n  <cx-message\n    (closeMessage)=\"clearAddToCartInformation()\"\n    [text]=\"\n      'quickOrderList.informations.addProductBeforeAddingToCart' | cxTranslate\n    \"\n    [type]=\"globalMessageType.MSG_TYPE_ERROR\"\n    class=\"quick-order-add-to-cart-information-message\"\n  >\n  </cx-message>\n</ng-container>\n\n<ng-container *ngIf=\"nonPurchasableError$ | async as nonPurchasableError\">\n  <cx-message\n    (closeMessage)=\"clearNonPurchasableError()\"\n    [text]=\"\n      'quickOrderList.errors.nonPurchasableError'\n        | cxTranslate: { name: nonPurchasableError.name }\n    \"\n    [type]=\"globalMessageType.MSG_TYPE_ERROR\"\n    class=\"quick-order-non-purchasable-product-error-message\"\n  >\n  </cx-message>\n</ng-container>\n\n<ng-container *ngIf=\"softDeletedEntries$ | async as deletedEntries\">\n  <cx-message\n    *ngFor=\"let deletedEntry of deletedEntries | keyvalue\"\n    (buttonAction)=\"undoDeletion(deletedEntry.value)\"\n    (closeMessage)=\"clearDeletion(deletedEntry.value)\"\n    [actionButtonText]=\"'quickOrderList.undo' | cxTranslate\"\n    [text]=\"\n      'quickOrderList.productWasDeleted'\n        | cxTranslate: { name: deletedEntry.value.product?.name }\n    \"\n    [type]=\"globalMessageType.MSG_TYPE_CONFIRMATION\"\n    class=\"quick-order-deletions-message\"\n  >\n  </cx-message>\n</ng-container>\n\n<ng-container *ngIf=\"errors$ | async as errors\">\n  <cx-message\n    *ngIf=\"errors.length\"\n    (closeMessage)=\"clearErrors()\"\n    [accordionText]=\"'quickOrderList.errors.reviewErrors' | cxTranslate\"\n    [text]=\"'quickOrderList.errorProceedingToCart' | cxTranslate\"\n    [type]=\"globalMessageType.MSG_TYPE_ERROR\"\n    class=\"quick-order-errors-message\"\n  >\n    <ul class=\"quick-order-errors\">\n      <li *ngFor=\"let error of errors\" class=\"quick-order-error-item\">\n        <span>\n          {{\n            'quickOrderList.errors.productIsOutOfStock'\n              | cxTranslate\n                : {\n                    name: error.entry.product.name,\n                    code: error.entry.product.code\n                  }\n          }}\n        </span>\n      </li>\n    </ul>\n  </cx-message>\n</ng-container>\n\n<ng-container *ngIf=\"warnings$ | async as warnings\">\n  <cx-message\n    *ngIf=\"warnings.length\"\n    (closeMessage)=\"clearWarnings()\"\n    [accordionText]=\"'quickOrderList.warnings.reviewWarnings' | cxTranslate\"\n    [text]=\"'quickOrderList.warningProceedingToCart' | cxTranslate\"\n    [type]=\"globalMessageType.MSG_TYPE_WARNING\"\n    class=\"quick-order-warnings-message\"\n  >\n    <ul class=\"quick-order-warnings\">\n      <li *ngFor=\"let warning of warnings\" class=\"quick-order-warning-item\">\n        <span>\n          {{\n            'quickOrderList.warnings.productWasReduced'\n              | cxTranslate\n                : {\n                    name: warning.entry.product.name,\n                    code: warning.entry.product.code,\n                    quantityAdded: warning.quantityAdded\n                  }\n          }}\n        </span>\n      </li>\n    </ul>\n  </cx-message>\n</ng-container>\n\n<ng-container *ngIf=\"successes$ | async as successes\">\n  <cx-message\n    *ngIf=\"successes.length\"\n    (closeMessage)=\"clearSuccesses()\"\n    [text]=\"'quickOrderList.successfullyAddedToCart' | cxTranslate\"\n    [type]=\"globalMessageType.MSG_TYPE_CONFIRMATION\"\n    class=\"quick-order-successes-message\"\n  >\n    <ul class=\"quick-order-successes\">\n      <li *ngFor=\"let entry of successes\" class=\"quick-order-success-item\">\n        <span>{{\n          'quickOrderList.successes.productAddedToCart'\n            | cxTranslate\n              : {\n                  name: entry.product.name,\n                  code: entry.product.code\n                }\n        }}</span>\n      </li>\n    </ul>\n  </cx-message>\n</ng-container>\n\n<ng-container *ngIf=\"quickOrderListLimit$ | async as quickOrderListLimit\">\n  <ng-container *ngIf=\"entries$ | async as entries\">\n    <div class=\"quick-order-header\">\n      <h3>{{ 'quickOrderList.header' | cxTranslate }}</h3>\n      <p>\n        {{\n          'quickOrderList.subHeader'\n            | cxTranslate: { limit: quickOrderListLimit }\n        }}\n      </p>\n    </div>\n\n    <div class=\"quick-order-form-body\">\n      <cx-quick-order-form #quickOrderForm> </cx-quick-order-form>\n    </div>\n\n    <div class=\"quick-order-table-body\">\n      <cx-quick-order-table\n        [entries]=\"entries\"\n        [loading]=\"!(isCartStable$ | async)\"\n      ></cx-quick-order-table>\n    </div>\n\n    <div class=\"quick-order-footer row\">\n      <div class=\"col-xs-12 col-md-5 col-lg-4\">\n        <button\n          *ngIf=\"entries.length\"\n          (click)=\"clear()\"\n          [attr.aria-label]=\"'quickOrderList.emptyList' | cxTranslate\"\n          [disabled]=\"!(isCartStable$ | async)\"\n          class=\"btn btn-block btn-action clear-button\"\n          type=\"button\"\n        >\n          {{ 'quickOrderList.emptyList' | cxTranslate }}\n        </button>\n      </div>\n\n      <div class=\"col-xs-12 col-md-5 col-lg-4\">\n        <cx-progress-button\n          (clikEvent)=\"addToCart(entries)\"\n          [ariaLabel]=\"'quickOrderList.addToCart' | cxTranslate\"\n          [class]=\"'btn-block add-button'\"\n          [loading]=\"!(isCartStable$ | async)\"\n        >\n          {{ 'quickOrderList.addToCart' | cxTranslate }}\n        </cx-progress-button>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  FormErrorsModule,\n  IconModule,\n  ItemCounterModule,\n  MediaModule,\n  MessageComponentModule,\n  ProgressButtonModule,\n} from '@spartacus/storefront';\nimport { QuickOrderComponent } from './quick-order.component';\nimport { QuickOrderFormComponent } from './form/quick-order-form.component';\nimport { QuickOrderItemComponent } from './table/item/quick-order-item.component';\nimport { QuickOrderTableComponent } from './table/quick-order-table.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    RouterModule,\n    FormErrorsModule,\n    I18nModule,\n    IconModule,\n    ItemCounterModule,\n    MediaModule,\n    UrlModule,\n    ProgressButtonModule,\n    MessageComponentModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        QuickOrderComponent: {\n          component: QuickOrderComponent,\n          data: {\n            quickOrderListLimit: 10,\n          },\n        },\n      },\n    }),\n  ],\n  declarations: [\n    QuickOrderComponent,\n    QuickOrderFormComponent,\n    QuickOrderItemComponent,\n    QuickOrderTableComponent,\n  ],\n  exports: [\n    QuickOrderComponent,\n    QuickOrderFormComponent,\n    QuickOrderItemComponent,\n    QuickOrderTableComponent,\n  ],\n})\nexport class QuickOrderListModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CartQuickOrderFormModule } from './cart-quick-order-form/cart-quick-order-form.module';\nimport { QuickOrderListModule } from './quick-order/quick-order-list.module';\n\n@NgModule({\n  imports: [RouterModule, QuickOrderListModule, CartQuickOrderFormModule],\n})\nexport class QuickOrderComponentsModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}