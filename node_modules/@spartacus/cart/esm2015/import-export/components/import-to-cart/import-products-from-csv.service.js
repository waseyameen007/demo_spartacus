import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class ImportProductsFromCsvService {
    constructor() { }
    csvDataToProduct(csvData) {
        return csvData.map((row) => ({
            productCode: row[0],
            quantity: Number(row[1]),
        }));
    }
    isDataParsableToProducts(data) {
        const patternRegex = new RegExp(/(?:\s|^)\d+(?=\s|$)/);
        return data.length > 0 && data.every((row) => patternRegex.test(row[1]));
    }
}
ImportProductsFromCsvService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ImportProductsFromCsvService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
ImportProductsFromCsvService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ImportProductsFromCsvService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ImportProductsFromCsvService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root',
                }]
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wb3J0LXByb2R1Y3RzLWZyb20tY3N2LnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvY2FydC9pbXBvcnQtZXhwb3J0L2NvbXBvbmVudHMvaW1wb3J0LXRvLWNhcnQvaW1wb3J0LXByb2R1Y3RzLWZyb20tY3N2LnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFNM0MsTUFBTSxPQUFPLDRCQUE0QjtJQUN2QyxnQkFBZSxDQUFDO0lBRWhCLGdCQUFnQixDQUFDLE9BQW1CO1FBQ2xDLE9BQU8sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQWEsRUFBRSxFQUFFLENBQUMsQ0FBQztZQUNyQyxXQUFXLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNuQixRQUFRLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUN6QixDQUFDLENBQUMsQ0FBQztJQUNOLENBQUM7SUFFRCx3QkFBd0IsQ0FBQyxJQUFnQjtRQUN2QyxNQUFNLFlBQVksR0FBRyxJQUFJLE1BQU0sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO1FBQ3ZELE9BQU8sSUFBSSxDQUFDLE1BQU0sR0FBRyxDQUFDLElBQUksSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsRUFBRSxFQUFFLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0lBQzNFLENBQUM7O3lIQWJVLDRCQUE0Qjs2SEFBNUIsNEJBQTRCLGNBRjNCLE1BQU07MkZBRVAsNEJBQTRCO2tCQUh4QyxVQUFVO21CQUFDO29CQUNWLFVBQVUsRUFBRSxNQUFNO2lCQUNuQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IFByb2R1Y3REYXRhIH0gZnJvbSAnQHNwYXJ0YWN1cy9zdG9yZWZyb250JztcblxuQEluamVjdGFibGUoe1xuICBwcm92aWRlZEluOiAncm9vdCcsXG59KVxuZXhwb3J0IGNsYXNzIEltcG9ydFByb2R1Y3RzRnJvbUNzdlNlcnZpY2Uge1xuICBjb25zdHJ1Y3RvcigpIHt9XG5cbiAgY3N2RGF0YVRvUHJvZHVjdChjc3ZEYXRhOiBzdHJpbmdbXVtdKTogUHJvZHVjdERhdGFbXSB7XG4gICAgcmV0dXJuIGNzdkRhdGEubWFwKChyb3c6IHN0cmluZ1tdKSA9PiAoe1xuICAgICAgcHJvZHVjdENvZGU6IHJvd1swXSxcbiAgICAgIHF1YW50aXR5OiBOdW1iZXIocm93WzFdKSxcbiAgICB9KSk7XG4gIH1cblxuICBpc0RhdGFQYXJzYWJsZVRvUHJvZHVjdHMoZGF0YTogc3RyaW5nW11bXSk6IGJvb2xlYW4ge1xuICAgIGNvbnN0IHBhdHRlcm5SZWdleCA9IG5ldyBSZWdFeHAoLyg/Olxcc3xeKVxcZCsoPz1cXHN8JCkvKTtcbiAgICByZXR1cm4gZGF0YS5sZW5ndGggPiAwICYmIGRhdGEuZXZlcnkoKHJvdykgPT4gcGF0dGVyblJlZ2V4LnRlc3Qocm93WzFdKSk7XG4gIH1cbn1cbiJdfQ==