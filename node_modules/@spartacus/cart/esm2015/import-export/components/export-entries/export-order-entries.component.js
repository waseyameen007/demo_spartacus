import { ChangeDetectionStrategy, Component } from '@angular/core';
import { ORDER_ENTRIES_CONTEXT, } from '@spartacus/storefront';
import { of } from 'rxjs';
import { switchMap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "./export-order-entries-to-csv.service";
import * as i2 from "@spartacus/storefront";
import * as i3 from "@angular/common";
import * as i4 from "@spartacus/core";
export class ExportOrderEntriesComponent {
    constructor(exportEntriesService, contextService) {
        this.exportEntriesService = exportEntriesService;
        this.contextService = contextService;
        this.orderEntriesContext$ = this.contextService.get(ORDER_ENTRIES_CONTEXT);
        this.entries$ = this.orderEntriesContext$.pipe(switchMap((orderEntriesContext) => { var _a, _b; return (_b = (_a = orderEntriesContext === null || orderEntriesContext === void 0 ? void 0 : orderEntriesContext.getEntries) === null || _a === void 0 ? void 0 : _a.call(orderEntriesContext)) !== null && _b !== void 0 ? _b : of(undefined); }));
    }
    exportCsv(entries) {
        this.exportEntriesService.downloadCsv(entries);
    }
}
ExportOrderEntriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ExportOrderEntriesComponent, deps: [{ token: i1.ExportOrderEntriesToCsvService }, { token: i2.ContextService }], target: i0.ɵɵFactoryTarget.Component });
ExportOrderEntriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ExportOrderEntriesComponent, selector: "cx-export-order-entries", ngImport: i0, template: "<button\n  *ngIf=\"(entries$ | async)?.length > 0 && (entries$ | async) as entries\"\n  class=\"link cx-action-link\"\n  (click)=\"exportCsv(entries)\"\n>\n  {{ 'exportEntries.exportToCsv' | cxTranslate }}\n</button>\n", directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i3.AsyncPipe, "cxTranslate": i4.TranslatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ExportOrderEntriesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-export-order-entries',
                    templateUrl: './export-order-entries.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.ExportOrderEntriesToCsvService }, { type: i2.ContextService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXhwb3J0LW9yZGVyLWVudHJpZXMuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vZmVhdHVyZS1saWJzL2NhcnQvaW1wb3J0LWV4cG9ydC9jb21wb25lbnRzL2V4cG9ydC1lbnRyaWVzL2V4cG9ydC1vcmRlci1lbnRyaWVzLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9jYXJ0L2ltcG9ydC1leHBvcnQvY29tcG9uZW50cy9leHBvcnQtZW50cmllcy9leHBvcnQtb3JkZXItZW50cmllcy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsU0FBUyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRW5FLE9BQU8sRUFHTCxxQkFBcUIsR0FDdEIsTUFBTSx1QkFBdUIsQ0FBQztBQUMvQixPQUFPLEVBQWMsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3RDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQzs7Ozs7O0FBUTNDLE1BQU0sT0FBTywyQkFBMkI7SUFDdEMsWUFDWSxvQkFBb0QsRUFDcEQsY0FBOEI7UUFEOUIseUJBQW9CLEdBQXBCLG9CQUFvQixDQUFnQztRQUNwRCxtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFHaEMseUJBQW9CLEdBQzVCLElBQUksQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFzQixxQkFBcUIsQ0FBQyxDQUFDO1FBRXRFLGFBQVEsR0FDTixJQUFJLENBQUMsb0JBQW9CLENBQUMsSUFBSSxDQUM1QixTQUFTLENBQ1AsQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLGVBQ3RCLE9BQUEsTUFBQSxNQUFBLG1CQUFtQixhQUFuQixtQkFBbUIsdUJBQW5CLG1CQUFtQixDQUFFLFVBQVUsK0NBQS9CLG1CQUFtQixDQUFnQixtQ0FBSSxFQUFFLENBQUMsU0FBUyxDQUFDLENBQUEsRUFBQSxDQUN2RCxDQUNGLENBQUM7SUFYRCxDQUFDO0lBYUosU0FBUyxDQUFDLE9BQXFCO1FBQzdCLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxXQUFXLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDakQsQ0FBQzs7d0hBbkJVLDJCQUEyQjs0R0FBM0IsMkJBQTJCLCtEQ2hCeEMsNE5BT0E7MkZEU2EsMkJBQTJCO2tCQUx2QyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx5QkFBeUI7b0JBQ25DLFdBQVcsRUFBRSx1Q0FBdUM7b0JBQ3BELGVBQWUsRUFBRSx1QkFBdUIsQ0FBQyxNQUFNO2lCQUNoRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9yZGVyRW50cnkgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHtcbiAgQ29udGV4dFNlcnZpY2UsXG4gIE9yZGVyRW50cmllc0NvbnRleHQsXG4gIE9SREVSX0VOVFJJRVNfQ09OVEVYVCxcbn0gZnJvbSAnQHNwYXJ0YWN1cy9zdG9yZWZyb250JztcbmltcG9ydCB7IE9ic2VydmFibGUsIG9mIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBzd2l0Y2hNYXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XG5pbXBvcnQgeyBFeHBvcnRPcmRlckVudHJpZXNUb0NzdlNlcnZpY2UgfSBmcm9tICcuL2V4cG9ydC1vcmRlci1lbnRyaWVzLXRvLWNzdi5zZXJ2aWNlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3gtZXhwb3J0LW9yZGVyLWVudHJpZXMnLFxuICB0ZW1wbGF0ZVVybDogJy4vZXhwb3J0LW9yZGVyLWVudHJpZXMuY29tcG9uZW50Lmh0bWwnLFxuICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5Lk9uUHVzaCxcbn0pXG5leHBvcnQgY2xhc3MgRXhwb3J0T3JkZXJFbnRyaWVzQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJvdGVjdGVkIGV4cG9ydEVudHJpZXNTZXJ2aWNlOiBFeHBvcnRPcmRlckVudHJpZXNUb0NzdlNlcnZpY2UsXG4gICAgcHJvdGVjdGVkIGNvbnRleHRTZXJ2aWNlOiBDb250ZXh0U2VydmljZVxuICApIHt9XG5cbiAgcHJvdGVjdGVkIG9yZGVyRW50cmllc0NvbnRleHQkOiBPYnNlcnZhYmxlPE9yZGVyRW50cmllc0NvbnRleHQgfCB1bmRlZmluZWQ+ID1cbiAgICB0aGlzLmNvbnRleHRTZXJ2aWNlLmdldDxPcmRlckVudHJpZXNDb250ZXh0PihPUkRFUl9FTlRSSUVTX0NPTlRFWFQpO1xuXG4gIGVudHJpZXMkOiBPYnNlcnZhYmxlPE9yZGVyRW50cnlbXSB8IHVuZGVmaW5lZD4gPVxuICAgIHRoaXMub3JkZXJFbnRyaWVzQ29udGV4dCQucGlwZShcbiAgICAgIHN3aXRjaE1hcChcbiAgICAgICAgKG9yZGVyRW50cmllc0NvbnRleHQpID0+XG4gICAgICAgICAgb3JkZXJFbnRyaWVzQ29udGV4dD8uZ2V0RW50cmllcz8uKCkgPz8gb2YodW5kZWZpbmVkKVxuICAgICAgKVxuICAgICk7XG5cbiAgZXhwb3J0Q3N2KGVudHJpZXM6IE9yZGVyRW50cnlbXSk6IHZvaWQge1xuICAgIHRoaXMuZXhwb3J0RW50cmllc1NlcnZpY2UuZG93bmxvYWRDc3YoZW50cmllcyk7XG4gIH1cbn1cbiIsIjxidXR0b25cbiAgKm5nSWY9XCIoZW50cmllcyQgfCBhc3luYyk/Lmxlbmd0aCA+IDAgJiYgKGVudHJpZXMkIHwgYXN5bmMpIGFzIGVudHJpZXNcIlxuICBjbGFzcz1cImxpbmsgY3gtYWN0aW9uLWxpbmtcIlxuICAoY2xpY2spPVwiZXhwb3J0Q3N2KGVudHJpZXMpXCJcbj5cbiAge3sgJ2V4cG9ydEVudHJpZXMuZXhwb3J0VG9Dc3YnIHwgY3hUcmFuc2xhdGUgfX1cbjwvYnV0dG9uPlxuIl19