import { ChangeDetectionStrategy, Component } from '@angular/core';
import { ORDER_ENTRIES_CONTEXT, } from '@spartacus/storefront';
import { of } from 'rxjs';
import { map, switchMap } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/storefront";
import * as i2 from "../import-to-cart/import-entries/import-order-entries.component";
import * as i3 from "../export-entries/export-order-entries.component";
import * as i4 from "@angular/common";
export class ImportExportOrderEntriesComponent {
    constructor(contextService) {
        this.contextService = contextService;
        this.context$ = this.contextService.get(ORDER_ENTRIES_CONTEXT);
        this.shouldDisplayImport$ = this.context$.pipe(map((orderEntriesContext) => !!(orderEntriesContext === null || orderEntriesContext === void 0 ? void 0 : orderEntriesContext.addEntries)));
        this.shouldDisplayExport$ = this.context$.pipe(switchMap((orderEntriesContext) => { var _a, _b; return (_b = (_a = orderEntriesContext === null || orderEntriesContext === void 0 ? void 0 : orderEntriesContext.getEntries) === null || _a === void 0 ? void 0 : _a.call(orderEntriesContext)) !== null && _b !== void 0 ? _b : of([]); }), map((entries) => !!(entries === null || entries === void 0 ? void 0 : entries.length)));
    }
}
ImportExportOrderEntriesComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ImportExportOrderEntriesComponent, deps: [{ token: i1.ContextService }], target: i0.ɵɵFactoryTarget.Component });
ImportExportOrderEntriesComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ImportExportOrderEntriesComponent, selector: "cx-import-export-order-entries", ngImport: i0, template: "<cx-import-order-entries\n  *ngIf=\"shouldDisplayImport$ | async\"\n></cx-import-order-entries>\n<cx-export-order-entries\n  *ngIf=\"shouldDisplayExport$ | async\"\n></cx-export-order-entries>\n", components: [{ type: i2.ImportOrderEntriesComponent, selector: "cx-import-order-entries" }, { type: i3.ExportOrderEntriesComponent, selector: "cx-export-order-entries" }], directives: [{ type: i4.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i4.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ImportExportOrderEntriesComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-import-export-order-entries',
                    templateUrl: './import-export-order-entries.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.ContextService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1wb3J0LWV4cG9ydC1vcmRlci1lbnRyaWVzLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL2ZlYXR1cmUtbGlicy9jYXJ0L2ltcG9ydC1leHBvcnQvY29tcG9uZW50cy9pbXBvcnQtZXhwb3J0L2ltcG9ydC1leHBvcnQtb3JkZXItZW50cmllcy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9mZWF0dXJlLWxpYnMvY2FydC9pbXBvcnQtZXhwb3J0L2NvbXBvbmVudHMvaW1wb3J0LWV4cG9ydC9pbXBvcnQtZXhwb3J0LW9yZGVyLWVudHJpZXMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNuRSxPQUFPLEVBR0wscUJBQXFCLEdBQ3RCLE1BQU0sdUJBQXVCLENBQUM7QUFDL0IsT0FBTyxFQUFjLEVBQUUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUN0QyxPQUFPLEVBQUUsR0FBRyxFQUFFLFNBQVMsRUFBRSxNQUFNLGdCQUFnQixDQUFDOzs7Ozs7QUFPaEQsTUFBTSxPQUFPLGlDQUFpQztJQUM1QyxZQUFzQixjQUE4QjtRQUE5QixtQkFBYyxHQUFkLGNBQWMsQ0FBZ0I7UUFFMUMsYUFBUSxHQUNoQixJQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsQ0FBc0IscUJBQXFCLENBQUMsQ0FBQztRQUV0RSx5QkFBb0IsR0FBd0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQzVELEdBQUcsQ0FBQyxDQUFDLG1CQUFtQixFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQSxtQkFBbUIsYUFBbkIsbUJBQW1CLHVCQUFuQixtQkFBbUIsQ0FBRSxVQUFVLENBQUEsQ0FBQyxDQUNoRSxDQUFDO1FBRUYseUJBQW9CLEdBQXdCLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUM1RCxTQUFTLENBQ1AsQ0FBQyxtQkFBbUIsRUFBRSxFQUFFLGVBQUMsT0FBQSxNQUFBLE1BQUEsbUJBQW1CLGFBQW5CLG1CQUFtQix1QkFBbkIsbUJBQW1CLENBQUUsVUFBVSwrQ0FBL0IsbUJBQW1CLENBQWdCLG1DQUFJLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQSxFQUFBLENBQ3ZFLEVBQ0QsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQSxPQUFPLGFBQVAsT0FBTyx1QkFBUCxPQUFPLENBQUUsTUFBTSxDQUFBLENBQUMsQ0FDcEMsQ0FBQztJQWRxRCxDQUFDOzs4SEFEN0MsaUNBQWlDO2tIQUFqQyxpQ0FBaUMsc0VDZDlDLG9NQU1BOzJGRFFhLGlDQUFpQztrQkFMN0MsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsZ0NBQWdDO29CQUMxQyxXQUFXLEVBQUUsOENBQThDO29CQUMzRCxlQUFlLEVBQUUsdUJBQXVCLENBQUMsTUFBTTtpQkFDaEQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ29tcG9uZW50IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQge1xuICBDb250ZXh0U2VydmljZSxcbiAgT3JkZXJFbnRyaWVzQ29udGV4dCxcbiAgT1JERVJfRU5UUklFU19DT05URVhULFxufSBmcm9tICdAc3BhcnRhY3VzL3N0b3JlZnJvbnQnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgb2YgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCwgc3dpdGNoTWFwIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1pbXBvcnQtZXhwb3J0LW9yZGVyLWVudHJpZXMnLFxuICB0ZW1wbGF0ZVVybDogJy4vaW1wb3J0LWV4cG9ydC1vcmRlci1lbnRyaWVzLmNvbXBvbmVudC5odG1sJyxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIEltcG9ydEV4cG9ydE9yZGVyRW50cmllc0NvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjb250ZXh0U2VydmljZTogQ29udGV4dFNlcnZpY2UpIHt9XG5cbiAgcHJvdGVjdGVkIGNvbnRleHQkOiBPYnNlcnZhYmxlPE9yZGVyRW50cmllc0NvbnRleHQgfCB1bmRlZmluZWQ+ID1cbiAgICB0aGlzLmNvbnRleHRTZXJ2aWNlLmdldDxPcmRlckVudHJpZXNDb250ZXh0PihPUkRFUl9FTlRSSUVTX0NPTlRFWFQpO1xuXG4gIHNob3VsZERpc3BsYXlJbXBvcnQkOiBPYnNlcnZhYmxlPGJvb2xlYW4+ID0gdGhpcy5jb250ZXh0JC5waXBlKFxuICAgIG1hcCgob3JkZXJFbnRyaWVzQ29udGV4dCkgPT4gISFvcmRlckVudHJpZXNDb250ZXh0Py5hZGRFbnRyaWVzKVxuICApO1xuXG4gIHNob3VsZERpc3BsYXlFeHBvcnQkOiBPYnNlcnZhYmxlPGJvb2xlYW4+ID0gdGhpcy5jb250ZXh0JC5waXBlKFxuICAgIHN3aXRjaE1hcChcbiAgICAgIChvcmRlckVudHJpZXNDb250ZXh0KSA9PiBvcmRlckVudHJpZXNDb250ZXh0Py5nZXRFbnRyaWVzPy4oKSA/PyBvZihbXSlcbiAgICApLFxuICAgIG1hcCgoZW50cmllcykgPT4gISFlbnRyaWVzPy5sZW5ndGgpXG4gICk7XG59XG4iLCI8Y3gtaW1wb3J0LW9yZGVyLWVudHJpZXNcbiAgKm5nSWY9XCJzaG91bGREaXNwbGF5SW1wb3J0JCB8IGFzeW5jXCJcbj48L2N4LWltcG9ydC1vcmRlci1lbnRyaWVzPlxuPGN4LWV4cG9ydC1vcmRlci1lbnRyaWVzXG4gICpuZ0lmPVwic2hvdWxkRGlzcGxheUV4cG9ydCQgfCBhc3luY1wiXG4+PC9jeC1leHBvcnQtb3JkZXItZW50cmllcz5cbiJdfQ==