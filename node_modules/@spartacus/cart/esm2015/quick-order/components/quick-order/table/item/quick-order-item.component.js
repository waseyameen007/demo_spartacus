import { ChangeDetectionStrategy, Component, Input, } from '@angular/core';
import { FormControl } from '@angular/forms';
import { Subscription } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "@spartacus/cart/quick-order/root";
import * as i2 from "@spartacus/storefront";
import * as i3 from "@angular/router";
import * as i4 from "@angular/common";
import * as i5 from "@spartacus/core";
export class QuickOrderItemComponent {
    constructor(cd, quickOrderService) {
        this.cd = cd;
        this.quickOrderService = quickOrderService;
        this.loading = false;
        this.subscription = new Subscription();
    }
    get entry() {
        return this._entry;
    }
    set entry(value) {
        this._entry = value;
        this.quantityControl = new FormControl(this.entry.quantity, {
            updateOn: 'blur',
        });
    }
    ngOnInit() {
        this.subscription.add(this.quantityControl.valueChanges.subscribe(() => {
            this.quickOrderService.updateEntryQuantity(this.index, this.quantityControl.value);
        }));
        this.subscription.add(this.watchProductAdd());
    }
    removeEntry() {
        this.quickOrderService.softDeleteEntry(this.index);
        this.cd.detectChanges();
    }
    watchProductAdd() {
        return this.quickOrderService.getProductAdded().subscribe((productCode) => {
            var _a;
            if (productCode === ((_a = this.entry.product) === null || _a === void 0 ? void 0 : _a.code)) {
                this.quantityControl = new FormControl(this.entry.quantity);
                this.cd.detectChanges();
            }
        });
    }
    ngOnDestroy() {
        var _a;
        (_a = this.subscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();
    }
}
QuickOrderItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: QuickOrderItemComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i1.QuickOrderFacade }], target: i0.ɵɵFactoryTarget.Component });
QuickOrderItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: QuickOrderItemComponent, selector: "cx-quick-order-item", inputs: { entry: "entry", index: "index", loading: "loading" }, ngImport: i0, template: "<div class=\"cx-quick-order-table-item\">\n  <div class=\"row\">\n    <div class=\"col-2 col-md-1 cx-quick-order-image-container\">\n      <div class=\"cx-quick-order-table-item-product-image\">\n        <a\n          [ngClass]=\"{ disabled: loading }\"\n          [routerLink]=\"{ cxRoute: 'product', params: entry.product } | cxUrl\"\n          tabindex=\"-1\"\n        >\n          <cx-media\n            [container]=\"entry?.product?.images?.PRIMARY\"\n            format=\"cartIcon\"\n          ></cx-media>\n        </a>\n      </div>\n    </div>\n\n    <div class=\"col-10 col-md-11 cx-quick-order-info-container\">\n      <div class=\"row\">\n        <div\n          class=\"\n            cx-quick-order-table-item-product-information\n            col-md-4 col-lg-4 col-xl-4\n          \"\n        >\n          <div class=\"cx-name\">\n            <a\n              [ngClass]=\"{ disabled: loading }\"\n              [routerLink]=\"\n                { cxRoute: 'product', params: entry.product } | cxUrl\n              \"\n              class=\"cx-link\"\n              >{{ entry.product?.name || '-' }}\n            </a>\n          </div>\n\n          <div class=\"cx-code\">\n            {{ 'quickOrderTable.id' | cxTranslate }} {{ entry.product?.code }}\n          </div>\n        </div>\n\n        <div class=\"cx-quick-order-table-item-price col-md-2 col-lg-2 col-xl-2\">\n          <span class=\"cx-label\">\n            {{ 'quickOrderTable.itemPrice' | cxTranslate }}\n          </span>\n          <div class=\"cx-value\">\n            {{ entry.basePrice?.formattedValue || '-' }}\n          </div>\n        </div>\n\n        <div\n          class=\"cx-quick-order-table-item-quantity col-md-4 col-lg-4 col-xl-4\"\n        >\n          <span class=\"cx-label\">\n            {{ 'quickOrderTable.qty' | cxTranslate }}\n          </span>\n          <cx-item-counter\n            [control]=\"quantityControl\"\n            [max]=\"entry.product?.stock?.stockLevel\"\n            [readonly]=\"loading\"\n          ></cx-item-counter>\n        </div>\n\n        <div\n          class=\"cx-quick-order-table-item-action col-md-2 col-lg-2 col-xl-2\"\n        >\n          <button\n            (click)=\"removeEntry()\"\n            [disabled]=\"loading\"\n            class=\"link cx-action-link\"\n          >\n            {{ 'common.remove' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n", components: [{ type: i2.MediaComponent, selector: "cx-media", inputs: ["container", "format", "alt", "role", "loading"], outputs: ["loaded"] }, { type: i2.ItemCounterComponent, selector: "cx-item-counter", inputs: ["control", "min", "max", "step", "allowZero", "readonly"] }], directives: [{ type: i3.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i4.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }], pipes: { "cxUrl": i5.UrlPipe, "cxTranslate": i5.TranslatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: QuickOrderItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-quick-order-item',
                    templateUrl: './quick-order-item.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }, { type: i1.QuickOrderFacade }]; }, propDecorators: { entry: [{
                type: Input,
                args: ['entry']
            }], index: [{
                type: Input
            }], loading: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,