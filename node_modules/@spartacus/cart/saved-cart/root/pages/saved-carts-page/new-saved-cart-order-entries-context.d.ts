import { ActionsSubject } from '@ngrx/store';
import { MultiCartService, UserIdService } from '@spartacus/core';
import { CartOrderEntriesContext, OrderEntriesSource, AddOrderEntriesContext, ProductData, ProductImportInfo } from '@spartacus/storefront';
import { Observable } from 'rxjs';
import { SavedCartFacade } from '../../facade/saved-cart.facade';
import * as i0 from "@angular/core";
export declare class NewSavedCartOrderEntriesContext extends CartOrderEntriesContext implements AddOrderEntriesContext {
    protected actionsSubject: ActionsSubject;
    protected userIdService: UserIdService;
    protected multiCartService: MultiCartService;
    protected savedCartService: SavedCartFacade;
    readonly type = OrderEntriesSource.NEW_SAVED_CART;
    constructor(actionsSubject: ActionsSubject, userIdService: UserIdService, multiCartService: MultiCartService, savedCartService: SavedCartFacade);
    addEntries(products: ProductData[], savedCartInfo?: {
        name: string;
        description: string;
    }): Observable<ProductImportInfo>;
    protected add(products: ProductData[], savedCartInfo?: {
        name: string;
        description: string;
    }): Observable<string>;
    static ɵfac: i0.ɵɵFactoryDeclaration<NewSavedCartOrderEntriesContext, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<NewSavedCartOrderEntriesContext>;
}
