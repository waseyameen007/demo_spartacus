import { ActionsSubject } from '@ngrx/store';
import { MultiCartService, OrderEntry, RoutingService, UserIdService } from '@spartacus/core';
import { CartOrderEntriesContext, OrderEntriesSource, GetOrderEntriesContext, AddOrderEntriesContext, ProductData } from '@spartacus/storefront';
import { Observable } from 'rxjs';
import { SavedCartFacade } from '../../facade/saved-cart.facade';
import * as i0 from "@angular/core";
export declare class SavedCartOrderEntriesContext extends CartOrderEntriesContext implements AddOrderEntriesContext, GetOrderEntriesContext {
    protected actionsSubject: ActionsSubject;
    protected userIdService: UserIdService;
    protected multiCartService: MultiCartService;
    protected savedCartService: SavedCartFacade;
    protected routingService: RoutingService;
    readonly type = OrderEntriesSource.SAVED_CART;
    constructor(actionsSubject: ActionsSubject, userIdService: UserIdService, multiCartService: MultiCartService, savedCartService: SavedCartFacade, routingService: RoutingService);
    protected savedCartId$: Observable<any>;
    getEntries(): Observable<OrderEntry[]>;
    protected add(products: ProductData[]): Observable<string>;
    static ɵfac: i0.ɵɵFactoryDeclaration<SavedCartOrderEntriesContext, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<SavedCartOrderEntriesContext>;
}
