import { HttpErrorResponse } from '@angular/common/http';
import { Observable, Subject } from 'rxjs';
import { OrderEntry, Product, ProductConnector } from '@spartacus/core';
import { OrderEntriesSource, GetOrderEntriesContext, AddOrderEntriesContext, ProductData, ProductImportInfo } from '@spartacus/storefront';
import { QuickOrderFacade } from '../facade/quick-order.facade';
import * as i0 from "@angular/core";
export declare class QuickOrderOrderEntriesContext implements AddOrderEntriesContext, GetOrderEntriesContext {
    protected quickOrderService: QuickOrderFacade;
    protected productConnector: ProductConnector;
    readonly type = OrderEntriesSource.QUICK_ORDER;
    constructor(quickOrderService: QuickOrderFacade, productConnector: ProductConnector);
    getEntries(): Observable<OrderEntry[]>;
    addEntries(productsData: ProductData[]): Observable<ProductImportInfo>;
    protected handleResults(product: Product, productData: ProductData, results$: Subject<ProductImportInfo>): void;
    protected handleErrors(response: HttpErrorResponse, productCode: string, results$: Subject<ProductImportInfo>): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<QuickOrderOrderEntriesContext, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<QuickOrderOrderEntriesContext>;
}
