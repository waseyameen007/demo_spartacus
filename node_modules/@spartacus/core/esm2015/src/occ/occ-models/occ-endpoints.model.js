export const DEFAULT_SCOPE = 'default';
//# sourceMappingURL=data:application/json;base64,{"version":3,"file":"occ-endpoints.model.js","sourceRoot":"","sources":["../../../../../../projects/core/src/occ/occ-models/occ-endpoints.model.ts"],"names":[],"mappings":"AAAA,MAAM,CAAC,MAAM,aAAa,GAAG,SAAS,CAAC","sourcesContent":["export const DEFAULT_SCOPE = 'default';\n\nexport interface OccEndpoint {\n  default?: string;\n  [scope: string]: string | undefined;\n}\n\nexport interface ProductOccEndpoint extends OccEndpoint {\n  list?: string;\n  details?: string;\n  attributes?: string;\n  variants?: string;\n}\n\nexport interface OccEndpoints {\n  /**\n   * Get product details for scope\n   *\n   * @member Object\n   */\n  product?: string | ProductOccEndpoint;\n  /**\n   * Get reviews for a product\n   *\n   * @member {string}\n   */\n  productReviews?: string | OccEndpoint;\n  /**\n   * Get a list of product references\n   *\n   * @member {string}\n   */\n  productReferences?: string | OccEndpoint;\n  /**\n   * Get a list of products and additional data\n   *\n   * @member {string}\n   */\n  productSearch?: string | OccEndpoint;\n  /**\n   * Get a list of available suggestions\n   *\n   * @member {string}\n   */\n  productSuggestions?: string | OccEndpoint;\n  /**\n   * Get CMS component details\n   *\n   * @member {string}\n   */\n  component?: string | OccEndpoint;\n  /**\n   * Get a list of CMS component details\n   *\n   * @member {string}\n   */\n  components?: string | OccEndpoint;\n  /**\n   * Get page data with list of cms content slots\n   *\n   * @member {string}\n   */\n  pages?: string | OccEndpoint;\n  /**\n   * Get page data with list of cms content slots\n   *\n   * @member {string}\n   */\n  page?: string | OccEndpoint;\n  /**\n   * Get all carts\n   *\n   * @member {string} [carts]\n   */\n  carts?: string | OccEndpoint;\n  /**\n   * Get a cart with a given identifier\n   *\n   * @member {string} [cart]\n   */\n  cart?: string | OccEndpoint;\n  /**\n   * Creates or restore a cart for a user\n   *\n   * @member {string} [createCart]\n   */\n  createCart?: string | OccEndpoint;\n  /**\n   * Deletes a cart with a given cart id\n   *\n   * @member {string} [deleteCart]\n   */\n  deleteCart?: string | OccEndpoint;\n  /**\n   * Adds a product to the cart\n   *\n   * @member {string} [addEntries]\n   */\n  addEntries?: string | OccEndpoint;\n  /**\n   * Update quantity and store the details of a cart entry\n   *\n   * @member {string} [updateEntries]\n   */\n  updateEntries?: string | OccEndpoint;\n  /**\n   * Deletes cart entry\n   *\n   * @member {string} [removeEntries]\n   */\n  removeEntries?: string | OccEndpoint;\n  /**\n   * Assign email to cart\n   *\n   * @member {string} [addEmail]\n   */\n  addEmail?: string | OccEndpoint;\n  /**\n   * Get a list of available languages\n   *\n   * @member {string}\n   */\n  languages?: string | OccEndpoint;\n  /**\n   * Get a list of available currencies\n   *\n   * @member {string}\n   */\n  currencies?: string | OccEndpoint;\n  /**\n   * Get a list of countries\n   *\n   * @member {string}\n   */\n  countries?: string | OccEndpoint;\n  /**\n   * Fetch the list of regions for the provided country\n   *\n   * @member {string}\n   */\n  regions?: string | OccEndpoint;\n  /**\n   * Titles used for user's personal info.\n   *\n   * @member {string}\n   */\n  /**\n   * Payment details root endpoint.\n   *\n   * @member {string}\n   */\n  paymentDetailsAll?: string | OccEndpoint;\n  /**\n   * Endpoint for a specific payment method.\n   *\n   * @member {string}\n   */\n  paymentDetail?: string | OccEndpoint;\n  /**\n   * Endpoint for the list of one user's orders\n   * @deprecated since 4.2 - use order lib instead\n   *\n   * @member {string}\n   */\n  orderHistory?: string | OccEndpoint;\n  /**\n   * Endpoint for the details of one user's order\n   * @deprecated since 4.2 - use order lib instead\n   *\n   * @member {string}\n   */\n  orderDetail?: string | OccEndpoint;\n  /**\n   * Endpoint for anonymous consent templates\n   *\n   * @member {string}\n   */\n  anonymousConsentTemplates?: string | OccEndpoint;\n  /**\n   * Endpoint for consent templates\n   *\n   * @member {string}\n   */\n  consentTemplates?: string | OccEndpoint;\n  /**\n   * Endpoint for a user's consents\n   *\n   * @member {string}\n   */\n  consents?: string | OccEndpoint;\n  /**\n   * Endpoint for a user's specific previously given consent.\n   *\n   * @member {string}\n   */\n  consentDetail?: string | OccEndpoint;\n  /**\n   * Endpoint for a user's addresses\n   *\n   * @member {string}\n   */\n  addresses?: string | OccEndpoint;\n  /**\n   * Endpoint for a user's specific address\n   *\n   * @member {string}\n   */\n  addressDetail?: string | OccEndpoint;\n  /**\n   * Endpoint for address verification\n   *\n   * @member {string}\n   */\n  addressVerification?: string | OccEndpoint;\n  /**\n   * Endpoint for create configuration\n   *\n   * @member {string}\n   */\n  createVariantConfiguration?: string;\n  /**\n   * Endpoint for create configuration for the textfield configurator\n   *\n   * @member {string}\n   */\n  createTextfieldConfiguration?: string;\n  /**\n   * Endpoint for add textfield configuration to cart\n   *\n   * @member {string}\n   */\n  addTextfieldConfigurationToCart?: string;\n  /**\n   * Endpoint for reading textfield configuration attached to the cart entry\n   */\n  readTextfieldConfigurationForCartEntry?: string;\n  /**\n   * Endpoint for updating textfield configuration attached to the cart entry\n   */\n  updateTextfieldConfigurationForCartEntry?: string;\n  /**\n   * Endpoint to read configuration\n   *\n   * @member {string}\n   */\n  readVariantConfiguration?: string;\n  /**\n   * Endpoint to update configuration\n   *\n   * @member {string}\n   */\n  updateVariantConfiguration?: string;\n  /**\n   * Endpoint to add configuration to cart\n   *\n   * @member {string}\n   */\n  addVariantConfigurationToCart?: string;\n  /**\n   * Endpoint for reading configuration attached to the cart entry\n   */\n  readVariantConfigurationForCartEntry?: string;\n  /**\n   * Endpoint for updating configuration attached to the cart entry\n   */\n  updateVariantConfigurationForCartEntry?: string;\n  /**\n   * Endpoint for reading configuration overview attached to the order entry\n   */\n  readVariantConfigurationOverviewForOrderEntry?: string;\n  /**\n   * Endpoint to read configuration price\n   *\n   * @member {string}\n   */\n  readVariantConfigurationPriceSummary?: string;\n  /**\n   * Endpoint to get configuration Overview\n   *\n   * @member {string}\n   */\n  getVariantConfigurationOverview?: string;\n  /**\n   * Endpoint for consignment tracking\n   * @deprecated since 4.2 - use order lib instead\n   *\n   * @member {string}\n   */\n  consignmentTracking?: string | OccEndpoint;\n  /**\n   * Endpoint for cart voucher\n   *\n   * @member {string}\n   */\n  cartVoucher?: string | OccEndpoint;\n  /**\n   * Endpoint for coupons\n   *\n   * @member {string}\n   */\n  customerCoupons?: string | OccEndpoint;\n  /**\n   * Endpoint for claiming coupon\n   *\n   * @member {string}\n   */\n  claimCoupon?: string | OccEndpoint;\n  /**\n   * Endpoint for coupons\n   *\n   * @member {string}\n   */\n  couponNotification?: string | OccEndpoint;\n  /**\n   * Endpoint for notification preference\n   *\n   * @member {string}\n   */\n  notificationPreference?: string | OccEndpoint;\n  /**\n   * Endpoint for product interests\n   *\n   * @member {string}\n   */\n  productInterests?: string | OccEndpoint;\n  /**\n   * Endpoint for getting product interests\n   *\n   * @member {string}\n   */\n  getProductInterests?: string | OccEndpoint;\n  /**\n   * Endpoint for cancel an order\n   * @deprecated since 4.2 - use order lib instead\n   */\n  cancelOrder?: string | OccEndpoint;\n  /**\n   * Endpoint for creating order return request\n   * @deprecated since 4.2 - use order lib instead\n   */\n  returnOrder?: string | OccEndpoint;\n  /**\n   * Endpoint for user's order return requests\n   * @deprecated since 4.2 - use order lib instead\n   */\n  orderReturns?: string | OccEndpoint;\n  /**\n   * Endpoint for order return request details\n   * @deprecated since 4.2 - use order lib instead\n   */\n  orderReturnDetail?: string | OccEndpoint;\n  /**\n   * Endpoint for cancelling return request\n   * @deprecated since 4.2 - use order lib instead\n   */\n  cancelReturn?: string | OccEndpoint;\n  /**\n   * Endpoint to schedule a replenishment order\n   * @deprecated since 4.2 - use order lib instead\n   *\n   * @member {string}\n   */\n  scheduleReplenishmentOrder?: string | OccEndpoint;\n  /**\n   * Endpoint for the list of one user's replenishment orders\n   * @deprecated since 4.2 - use order lib instead\n   *\n   * @member {string}\n   */\n  replenishmentOrderHistory?: string | OccEndpoint;\n  /**\n   * Endpoint to get a replenishment order details\n   * @deprecated since 4.2 - use order lib instead\n   *\n   * @member {string}\n   */\n  replenishmentOrderDetails?: string | OccEndpoint;\n  /**\n   * Endpoint to get a replenishment order history for a replenishment\n   * @deprecated since 4.2 - use order lib instead\n   *\n   * @member {string}\n   */\n  replenishmentOrderDetailsHistory?: string | OccEndpoint;\n  /**\n   * Endpoint to get a replenishment order history for a replenishment\n   * @deprecated since 4.2 - use order lib instead\n   *\n   * @member {string}\n   */\n  cancelReplenishmentOrder?: string | OccEndpoint;\n  /**\n   * Endpoint for getting all base sites\n   *\n   * @member {string}\n   */\n  baseSites?: string | OccEndpoint;\n  /** Endpoint to returns active cost centers\n   *\n   * @member {string}\n   */\n  getActiveCostCenters?: string | OccEndpoint;\n  /**\n   * Get cart validation results\n   */\n  validate?: string | OccEndpoint;\n\n  // TODO @deprecation for 3.2 DEPRECATION START - The endpoint bellow were moved to separate feature libraries\n  /**\n   * Get a store location\n   *\n   * @member {string} [page]\n   */\n  store?: string | OccEndpoint;\n  /**\n   * Get a list of store locations\n   *\n   * @member {string} [page]\n   */\n  stores?: string | OccEndpoint;\n  /**\n   * Gets a store location count per country and regions\n   *\n   * @member {string} [page]\n   */\n  storescounts?: string | OccEndpoint;\n  /**\n   * Endpoint for userGroupOrderApprovalPermission\n   *\n   * @member {string}\n   */\n  budget?: string | OccEndpoint;\n  /**\n   * Endpoint for budgets list\n   *\n   * @member {string}\n   */\n  budgets?: string | OccEndpoint;\n  /**\n   * Endpoint for organizations\n   *\n   * @member {string}\n   */\n  orgUnits?: string | OccEndpoint;\n  /**\n   * Endpoint for organizations list\n   *\n   * @member {string}\n   */\n  orgUnitsAvailable?: string | OccEndpoint;\n  /**\n   * Endpoint for organization units tree\n   *\n   * @member {string}\n   */\n  orgUnitsTree?: string | OccEndpoint;\n  /**\n   * Endpoint for approval processes for organization units\n   *\n   * @member {string}\n   */\n  orgUnitsApprovalProcesses?: string | OccEndpoint;\n  /**\n   * Endpoint for organization\n   *\n   * @member {string}\n   */\n  orgUnit?: string | OccEndpoint;\n  /**\n   * Endpoint for orgUnitUsers:\n   *\n   * @member {string}\n   */\n  orgUnitUsers?: string | OccEndpoint;\n  /**\n   * Endpoint for add orgUnitUserRoles (except approver):\n   *\n   * @member {string}\n   */\n  orgUnitUserRoles?: string | OccEndpoint;\n  /**\n   * Endpoint for remove orgUnitUserRole (except approver):\n   *\n   * @member {string}\n   */\n  orgUnitUserRole?: string | OccEndpoint;\n  /**\n   * Endpoint for add orgUnitApprovers:\n   *\n   * @member {string}\n   */\n  orgUnitApprovers?: string | OccEndpoint;\n  /**\n   * Endpoint for delete orgUnitApprover:\n   *\n   * @member {string}\n   */\n  orgUnitApprover?: string | OccEndpoint;\n  /**\n   * Endpoint for organizational unit addresses\n   *\n   * @member {string}\n   */\n  orgUnitsAddresses?: string | OccEndpoint;\n  /**\n   * Endpoint for organizational unit address\n   *\n   * @member {string}\n   */\n  orgUnitsAddress?: string | OccEndpoint;\n  /**\n   * Endpoint for organizational unit user groups list\n   *\n   * @member {string}\n   */\n  userGroups?: string | OccEndpoint;\n  /**\n   * Endpoint for organizational unit user group\n   *\n   * @member {string}\n   */\n  userGroup?: string | OccEndpoint;\n  /**\n   * Endpoint for costCenter list\n   *\n   * @member {string}\n   */\n  userGroupAvailableOrderApprovalPermissions?: string | OccEndpoint;\n  /**\n   * Endpoint for userGroupAvailableOrderApprovalPermissions list\n   *\n   * @member {string}\n   */\n  userGroupAvailableOrgCustomers?: string | OccEndpoint;\n  /**\n   * Endpoint for userGroupAvailableOrgCustomers list\n   *\n   * @member {string}\n   */\n  userGroupMembers?: string | OccEndpoint;\n  /**\n   * Endpoint for userGroupMembers list\n   *\n   * @member {string}\n   */\n  userGroupMember?: string | OccEndpoint;\n  /**\n   * Endpoint for userGroupMember\n   *\n   * @member {string}\n   */\n  userGroupOrderApprovalPermissions?: string | OccEndpoint;\n  /**\n   * Endpoint for userGroupOrderApprovalPermissions list\n   *\n   * @member {string}\n   */\n  userGroupOrderApprovalPermission?: string | OccEndpoint;\n  /**\n   * Endpoint for userGroupOrderApprovalPermission\n   *\n   * @member {string}\n   */\n  costCenters?: string | OccEndpoint;\n  /**\n   * Endpoint for all costCenters\n   *\n   * @member {string}\n   */\n  costCentersAll?: string | OccEndpoint;\n  /**\n   * Endpoint for costCenter\n   *\n   * @member {string}\n   */\n  costCenter?: string | OccEndpoint;\n  /**\n   * Endpoint for budgets assigned to costCenter\n   *\n   * @member {string}\n   */\n  costCenterBudgets?: string | OccEndpoint;\n  /**\n   * Endpoint for budget assigned to costCenter\n   *\n   * @member {string}\n   */\n  costCenterBudget?: string | OccEndpoint;\n  /**\n   * Endpoint for permission list\n   *\n   * @member {string}\n   */\n  permissions?: string | OccEndpoint;\n  /**\n   * Endpoint for permission\n   *\n   * @member {string}\n   */\n  permission?: string | OccEndpoint;\n  /**\n   * Endpoint for order approval permission types\n   *\n   * @member {string}\n   */\n  orderApprovalPermissionTypes?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customers\n   *\n   * @member {string}\n   */\n  b2bUsers?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customer\n   *\n   * @member {string}\n   */\n  b2bUser?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customer approvers\n   *\n   * @member {string}\n   */\n  b2bUserApprovers?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customer approver\n   *\n   * @member {string}\n   */\n  b2bUserApprover?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customer user groups\n   *\n   * @member {string}\n   */\n  b2bUserUserGroups?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customer user group\n   *\n   * @member {string}\n   */\n  b2bUserUserGroup?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customer permissions\n   *\n   * @member {string}\n   */\n  b2bUserPermissions?: string | OccEndpoint;\n  /**\n   * Endpoint for organization customer permission\n   *\n   * @member {string}\n   */\n  b2bUserPermission?: string | OccEndpoint;\n  /**\n   * Endpoint for order approvals\n   *\n   * @member {string}\n   */\n  orderApprovals?: string | OccEndpoint;\n  /**\n   * Endpoint for order approval\n   *\n   * @member {string}\n   */\n  orderApproval?: string | OccEndpoint;\n  /**\n   * Endpoint for order approval decision\n   *\n   * @member {string}\n   */\n  orderApprovalDecision?: string | OccEndpoint;\n  /**\n   * Explicitly saves a cart\n   *\n   * @member {string}\n   */\n  saveCart?: string | OccEndpoint;\n  // DEPRECATION END\n}\n"]}