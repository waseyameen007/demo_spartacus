export const defaultOccProductConfig = {
    backend: {
        occ: {
            endpoints: {
                product: {
                    default: 'products/${productCode}?fields=DEFAULT,averageRating,images(FULL),classifications,manufacturer,numberOfReviews,categories(FULL),baseOptions,baseProduct,variantOptions,variantType',
                    list: 'products/${productCode}?fields=code,name,summary,price(formattedValue),images(DEFAULT,galleryIndex),baseProduct',
                    details: 'products/${productCode}?fields=averageRating,stock(DEFAULT),description,availableForPickup,code,url,price(DEFAULT),numberOfReviews,manufacturer,categories(FULL),priceRange,multidimensional,tags,images(FULL)',
                    attributes: 'products/${productCode}?fields=classifications',
                    price: 'products/${productCode}?fields=price(formattedValue)',
                },
                productReviews: 'products/${productCode}/reviews',
                // Uncomment this when occ gets configured
                // productReferences:
                //   'products/${productCode}/references?fields=DEFAULT,references(target(images(FULL)))&referenceType=${referenceType}',
                productReferences: 'products/${productCode}/references?fields=DEFAULT,references(target(images(FULL)))',
                /* eslint-disable max-len */
                productSearch: 'products/search?fields=products(code,name,summary,configurable,configuratorType,multidimensional,price(FULL),images(DEFAULT),stock(FULL),averageRating,variantOptions),facets,breadcrumbs,pagination(DEFAULT),sorts(DEFAULT),freeTextSearch,currentQuery',
                /* eslint-enable */
                productSuggestions: 'products/suggestions',
            },
        },
        loadingScopes: {
            product: {
                details: {
                    include: ["list" /* LIST */, "variants" /* VARIANTS */],
                },
            },
        },
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1vY2MtcHJvZHVjdC1jb25maWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9vY2MvYWRhcHRlcnMvcHJvZHVjdC9kZWZhdWx0LW9jYy1wcm9kdWN0LWNvbmZpZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQSxNQUFNLENBQUMsTUFBTSx1QkFBdUIsR0FBYztJQUNoRCxPQUFPLEVBQUU7UUFDUCxHQUFHLEVBQUU7WUFDSCxTQUFTLEVBQUU7Z0JBQ1QsT0FBTyxFQUFFO29CQUNQLE9BQU8sRUFDTCxvTEFBb0w7b0JBQ3RMLElBQUksRUFBRSxpSEFBaUg7b0JBQ3ZILE9BQU8sRUFDTCxnTkFBZ047b0JBQ2xOLFVBQVUsRUFBRSxnREFBZ0Q7b0JBQzVELEtBQUssRUFBRSxzREFBc0Q7aUJBQzlEO2dCQUVELGNBQWMsRUFBRSxpQ0FBaUM7Z0JBQ2pELDBDQUEwQztnQkFDMUMscUJBQXFCO2dCQUNyQix5SEFBeUg7Z0JBQ3pILGlCQUFpQixFQUNmLG9GQUFvRjtnQkFDdEYsNEJBQTRCO2dCQUM1QixhQUFhLEVBQ1gsMFBBQTBQO2dCQUM1UCxtQkFBbUI7Z0JBQ25CLGtCQUFrQixFQUFFLHNCQUFzQjthQUMzQztTQUNGO1FBQ0QsYUFBYSxFQUFFO1lBQ2IsT0FBTyxFQUFFO2dCQUNQLE9BQU8sRUFBRTtvQkFDUCxPQUFPLEVBQUUsOENBQTBDO2lCQUNwRDthQUNGO1NBQ0Y7S0FDRjtDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQcm9kdWN0U2NvcGUgfSBmcm9tICcuLi8uLi8uLi9wcm9kdWN0L21vZGVsL3Byb2R1Y3Qtc2NvcGUnO1xuaW1wb3J0IHsgT2NjQ29uZmlnIH0gZnJvbSAnLi4vLi4vY29uZmlnL29jYy1jb25maWcnO1xuXG5leHBvcnQgY29uc3QgZGVmYXVsdE9jY1Byb2R1Y3RDb25maWc6IE9jY0NvbmZpZyA9IHtcbiAgYmFja2VuZDoge1xuICAgIG9jYzoge1xuICAgICAgZW5kcG9pbnRzOiB7XG4gICAgICAgIHByb2R1Y3Q6IHtcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgJ3Byb2R1Y3RzLyR7cHJvZHVjdENvZGV9P2ZpZWxkcz1ERUZBVUxULGF2ZXJhZ2VSYXRpbmcsaW1hZ2VzKEZVTEwpLGNsYXNzaWZpY2F0aW9ucyxtYW51ZmFjdHVyZXIsbnVtYmVyT2ZSZXZpZXdzLGNhdGVnb3JpZXMoRlVMTCksYmFzZU9wdGlvbnMsYmFzZVByb2R1Y3QsdmFyaWFudE9wdGlvbnMsdmFyaWFudFR5cGUnLFxuICAgICAgICAgIGxpc3Q6ICdwcm9kdWN0cy8ke3Byb2R1Y3RDb2RlfT9maWVsZHM9Y29kZSxuYW1lLHN1bW1hcnkscHJpY2UoZm9ybWF0dGVkVmFsdWUpLGltYWdlcyhERUZBVUxULGdhbGxlcnlJbmRleCksYmFzZVByb2R1Y3QnLFxuICAgICAgICAgIGRldGFpbHM6XG4gICAgICAgICAgICAncHJvZHVjdHMvJHtwcm9kdWN0Q29kZX0/ZmllbGRzPWF2ZXJhZ2VSYXRpbmcsc3RvY2soREVGQVVMVCksZGVzY3JpcHRpb24sYXZhaWxhYmxlRm9yUGlja3VwLGNvZGUsdXJsLHByaWNlKERFRkFVTFQpLG51bWJlck9mUmV2aWV3cyxtYW51ZmFjdHVyZXIsY2F0ZWdvcmllcyhGVUxMKSxwcmljZVJhbmdlLG11bHRpZGltZW5zaW9uYWwsdGFncyxpbWFnZXMoRlVMTCknLFxuICAgICAgICAgIGF0dHJpYnV0ZXM6ICdwcm9kdWN0cy8ke3Byb2R1Y3RDb2RlfT9maWVsZHM9Y2xhc3NpZmljYXRpb25zJyxcbiAgICAgICAgICBwcmljZTogJ3Byb2R1Y3RzLyR7cHJvZHVjdENvZGV9P2ZpZWxkcz1wcmljZShmb3JtYXR0ZWRWYWx1ZSknLFxuICAgICAgICB9LFxuXG4gICAgICAgIHByb2R1Y3RSZXZpZXdzOiAncHJvZHVjdHMvJHtwcm9kdWN0Q29kZX0vcmV2aWV3cycsXG4gICAgICAgIC8vIFVuY29tbWVudCB0aGlzIHdoZW4gb2NjIGdldHMgY29uZmlndXJlZFxuICAgICAgICAvLyBwcm9kdWN0UmVmZXJlbmNlczpcbiAgICAgICAgLy8gICAncHJvZHVjdHMvJHtwcm9kdWN0Q29kZX0vcmVmZXJlbmNlcz9maWVsZHM9REVGQVVMVCxyZWZlcmVuY2VzKHRhcmdldChpbWFnZXMoRlVMTCkpKSZyZWZlcmVuY2VUeXBlPSR7cmVmZXJlbmNlVHlwZX0nLFxuICAgICAgICBwcm9kdWN0UmVmZXJlbmNlczpcbiAgICAgICAgICAncHJvZHVjdHMvJHtwcm9kdWN0Q29kZX0vcmVmZXJlbmNlcz9maWVsZHM9REVGQVVMVCxyZWZlcmVuY2VzKHRhcmdldChpbWFnZXMoRlVMTCkpKScsXG4gICAgICAgIC8qIGVzbGludC1kaXNhYmxlIG1heC1sZW4gKi9cbiAgICAgICAgcHJvZHVjdFNlYXJjaDpcbiAgICAgICAgICAncHJvZHVjdHMvc2VhcmNoP2ZpZWxkcz1wcm9kdWN0cyhjb2RlLG5hbWUsc3VtbWFyeSxjb25maWd1cmFibGUsY29uZmlndXJhdG9yVHlwZSxtdWx0aWRpbWVuc2lvbmFsLHByaWNlKEZVTEwpLGltYWdlcyhERUZBVUxUKSxzdG9jayhGVUxMKSxhdmVyYWdlUmF0aW5nLHZhcmlhbnRPcHRpb25zKSxmYWNldHMsYnJlYWRjcnVtYnMscGFnaW5hdGlvbihERUZBVUxUKSxzb3J0cyhERUZBVUxUKSxmcmVlVGV4dFNlYXJjaCxjdXJyZW50UXVlcnknLFxuICAgICAgICAvKiBlc2xpbnQtZW5hYmxlICovXG4gICAgICAgIHByb2R1Y3RTdWdnZXN0aW9uczogJ3Byb2R1Y3RzL3N1Z2dlc3Rpb25zJyxcbiAgICAgIH0sXG4gICAgfSxcbiAgICBsb2FkaW5nU2NvcGVzOiB7XG4gICAgICBwcm9kdWN0OiB7XG4gICAgICAgIGRldGFpbHM6IHtcbiAgICAgICAgICBpbmNsdWRlOiBbUHJvZHVjdFNjb3BlLkxJU1QsIFByb2R1Y3RTY29wZS5WQVJJQU5UU10sXG4gICAgICAgIH0sXG4gICAgICB9LFxuICAgIH0sXG4gIH0sXG59O1xuIl19