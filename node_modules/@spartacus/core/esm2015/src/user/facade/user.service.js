import { Injectable, Optional } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@ngrx/store";
import * as i2 from "../../auth/user-auth/facade/user-id.service";
import * as i3 from "../user-transitional-tokens";
export class UserService {
    constructor(store, userIdService, 
    // TODO: Remove transitional tokens in 4.0 with #11607
    userAccountFacade, userProfileFacade) {
        this.store = store;
        this.userIdService = userIdService;
        this.userAccountFacade = userAccountFacade;
        this.userProfileFacade = userProfileFacade;
    }
    /**
     * Returns a user.
     *
     * @deprecated since 3.2, use `UserAccountFacade.get()` from `@spartacus/user` package.
     */
    get() {
        if (this.userAccountFacade) {
            return this.userAccountFacade.get();
        }
        throw Error('Cannot get a user. Install `@spartacus/user` library which provides required services.');
    }
    /**
     * Returns titles.
     *
     * @deprecated since 3.2, use `UserProfileFacade.getTitles()` from `@spartacus/user` package.
     */
    getTitles() {
        if (this.userProfileFacade) {
            return this.userProfileFacade.getTitles();
        }
        throw Error('Cannot get a titles. Install `@spartacus/user` library which provides required services.');
    }
}
UserService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UserService, deps: [{ token: i1.Store }, { token: i2.UserIdService }, { token: i3.UserAccountFacadeTransitionalToken, optional: true }, { token: i3.UserProfileFacadeTransitionalToken, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });
UserService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UserService, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: UserService, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }], ctorParameters: function () { return [{ type: i1.Store }, { type: i2.UserIdService }, { type: i3.UserAccountFacadeTransitionalToken, decorators: [{
                    type: Optional
                }] }, { type: i3.UserProfileFacadeTransitionalToken, decorators: [{
                    type: Optional
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9zcmMvdXNlci9mYWNhZGUvdXNlci5zZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDOzs7OztBQWFyRCxNQUFNLE9BQU8sV0FBVztJQUN0QixZQUNZLEtBQW9ELEVBQ3BELGFBQTRCO0lBQ3RDLHNEQUFzRDtJQUU1QyxpQkFBc0QsRUFFdEQsaUJBQXNEO1FBTnRELFVBQUssR0FBTCxLQUFLLENBQStDO1FBQ3BELGtCQUFhLEdBQWIsYUFBYSxDQUFlO1FBRzVCLHNCQUFpQixHQUFqQixpQkFBaUIsQ0FBcUM7UUFFdEQsc0JBQWlCLEdBQWpCLGlCQUFpQixDQUFxQztJQUMvRCxDQUFDO0lBRUo7Ozs7T0FJRztJQUNILEdBQUc7UUFDRCxJQUFJLElBQUksQ0FBQyxpQkFBaUIsRUFBRTtZQUMxQixPQUFPLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsQ0FBQztTQUNyQztRQUNELE1BQU0sS0FBSyxDQUNULHdGQUF3RixDQUN6RixDQUFDO0lBQ0osQ0FBQztJQUVEOzs7O09BSUc7SUFDSCxTQUFTO1FBQ1AsSUFBSSxJQUFJLENBQUMsaUJBQWlCLEVBQUU7WUFDMUIsT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsU0FBUyxFQUFFLENBQUM7U0FDM0M7UUFDRCxNQUFNLEtBQUssQ0FDVCwwRkFBMEYsQ0FDM0YsQ0FBQztJQUNKLENBQUM7O3dHQXJDVSxXQUFXOzRHQUFYLFdBQVcsY0FERSxNQUFNOzJGQUNuQixXQUFXO2tCQUR2QixVQUFVO21CQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRTs7MEJBTTdCLFFBQVE7OzBCQUVSLFFBQVEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgU3RvcmUgfSBmcm9tICdAbmdyeC9zdG9yZSc7XG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBVc2VySWRTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vYXV0aC91c2VyLWF1dGgvZmFjYWRlL3VzZXItaWQuc2VydmljZSc7XG5pbXBvcnQgeyBUaXRsZSwgVXNlciB9IGZyb20gJy4uLy4uL21vZGVsL21pc2MubW9kZWwnO1xuaW1wb3J0IHsgU3RhdGVXaXRoUHJvY2VzcyB9IGZyb20gJy4uLy4uL3Byb2Nlc3Mvc3RvcmUvcHJvY2Vzcy1zdGF0ZSc7XG5pbXBvcnQgeyBTdGF0ZVdpdGhVc2VyIH0gZnJvbSAnLi4vc3RvcmUvdXNlci1zdGF0ZSc7XG5pbXBvcnQge1xuICBVc2VyQWNjb3VudEZhY2FkZVRyYW5zaXRpb25hbFRva2VuLFxuICBVc2VyUHJvZmlsZUZhY2FkZVRyYW5zaXRpb25hbFRva2VuLFxufSBmcm9tICcuLi91c2VyLXRyYW5zaXRpb25hbC10b2tlbnMnO1xuXG5ASW5qZWN0YWJsZSh7IHByb3ZpZGVkSW46ICdyb290JyB9KVxuZXhwb3J0IGNsYXNzIFVzZXJTZXJ2aWNlIHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJvdGVjdGVkIHN0b3JlOiBTdG9yZTxTdGF0ZVdpdGhVc2VyIHwgU3RhdGVXaXRoUHJvY2Vzczx2b2lkPj4sXG4gICAgcHJvdGVjdGVkIHVzZXJJZFNlcnZpY2U6IFVzZXJJZFNlcnZpY2UsXG4gICAgLy8gVE9ETzogUmVtb3ZlIHRyYW5zaXRpb25hbCB0b2tlbnMgaW4gNC4wIHdpdGggIzExNjA3XG4gICAgQE9wdGlvbmFsKClcbiAgICBwcm90ZWN0ZWQgdXNlckFjY291bnRGYWNhZGU/OiBVc2VyQWNjb3VudEZhY2FkZVRyYW5zaXRpb25hbFRva2VuLFxuICAgIEBPcHRpb25hbCgpXG4gICAgcHJvdGVjdGVkIHVzZXJQcm9maWxlRmFjYWRlPzogVXNlclByb2ZpbGVGYWNhZGVUcmFuc2l0aW9uYWxUb2tlblxuICApIHt9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgYSB1c2VyLlxuICAgKlxuICAgKiBAZGVwcmVjYXRlZCBzaW5jZSAzLjIsIHVzZSBgVXNlckFjY291bnRGYWNhZGUuZ2V0KClgIGZyb20gYEBzcGFydGFjdXMvdXNlcmAgcGFja2FnZS5cbiAgICovXG4gIGdldCgpOiBPYnNlcnZhYmxlPFVzZXIgfCB1bmRlZmluZWQ+IHtcbiAgICBpZiAodGhpcy51c2VyQWNjb3VudEZhY2FkZSkge1xuICAgICAgcmV0dXJuIHRoaXMudXNlckFjY291bnRGYWNhZGUuZ2V0KCk7XG4gICAgfVxuICAgIHRocm93IEVycm9yKFxuICAgICAgJ0Nhbm5vdCBnZXQgYSB1c2VyLiBJbnN0YWxsIGBAc3BhcnRhY3VzL3VzZXJgIGxpYnJhcnkgd2hpY2ggcHJvdmlkZXMgcmVxdWlyZWQgc2VydmljZXMuJ1xuICAgICk7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0aXRsZXMuXG4gICAqXG4gICAqIEBkZXByZWNhdGVkIHNpbmNlIDMuMiwgdXNlIGBVc2VyUHJvZmlsZUZhY2FkZS5nZXRUaXRsZXMoKWAgZnJvbSBgQHNwYXJ0YWN1cy91c2VyYCBwYWNrYWdlLlxuICAgKi9cbiAgZ2V0VGl0bGVzKCk6IE9ic2VydmFibGU8VGl0bGVbXT4ge1xuICAgIGlmICh0aGlzLnVzZXJQcm9maWxlRmFjYWRlKSB7XG4gICAgICByZXR1cm4gdGhpcy51c2VyUHJvZmlsZUZhY2FkZS5nZXRUaXRsZXMoKTtcbiAgICB9XG4gICAgdGhyb3cgRXJyb3IoXG4gICAgICAnQ2Fubm90IGdldCBhIHRpdGxlcy4gSW5zdGFsbCBgQHNwYXJ0YWN1cy91c2VyYCBsaWJyYXJ5IHdoaWNoIHByb3ZpZGVzIHJlcXVpcmVkIHNlcnZpY2VzLidcbiAgICApO1xuICB9XG59XG4iXX0=