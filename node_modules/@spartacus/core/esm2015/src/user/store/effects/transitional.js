import { BillingCountriesEffect } from './billing-countries.effect';
import { ClearMiscsDataEffect } from './clear-miscs-data.effect';
import { ConsignmentTrackingEffects } from './consignment-tracking.effect';
import { CustomerCouponEffects } from './customer-coupon.effect';
import { DeliveryCountriesEffects } from './delivery-countries.effect';
import { NotificationPreferenceEffects } from './notification-preference.effect';
import { OrderDetailsEffect } from './order-details.effect';
import { OrderReturnRequestEffect } from './order-return-request.effect';
import { UserPaymentMethodsEffects } from './payment-methods.effect';
import { ProductInterestsEffect } from './product-interests.effect';
import { RegionsEffects } from './regions.effect';
import { ReplenishmentOrderDetailsEffect } from './replenishment-order-details.effect';
import { UserAddressesEffects } from './user-addresses.effect';
import { UserConsentsEffect } from './user-consents.effect';
import { UserCostCenterEffects } from './user-cost-center.effect';
import { UserOrdersEffect } from './user-orders.effect';
import { UserReplenishmentOrdersEffect } from './user-replenishment-orders.effect';
/**
 * @deprecated since 4.2 - use effectsTransitional_4_2 with order lib instead
 */
export const effectsTransitional = [
    ClearMiscsDataEffect,
    DeliveryCountriesEffects,
    RegionsEffects,
    UserAddressesEffects,
    UserPaymentMethodsEffects,
    UserOrdersEffect,
    OrderDetailsEffect,
    BillingCountriesEffect,
    UserConsentsEffect,
    ConsignmentTrackingEffects,
    CustomerCouponEffects,
    NotificationPreferenceEffects,
    ProductInterestsEffect,
    OrderReturnRequestEffect,
    UserCostCenterEffects,
    ReplenishmentOrderDetailsEffect,
    UserReplenishmentOrdersEffect,
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNpdGlvbmFsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvY29yZS9zcmMvdXNlci9zdG9yZS9lZmZlY3RzL3RyYW5zaXRpb25hbC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsMEJBQTBCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUMzRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNqRSxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw2QkFBNkIsQ0FBQztBQUN2RSxPQUFPLEVBQUUsNkJBQTZCLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUNqRixPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSwrQkFBK0IsQ0FBQztBQUN6RSxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUNyRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUNwRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbEQsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDdkYsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLHFCQUFxQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFDbEUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLDZCQUE2QixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFFbkY7O0dBRUc7QUFDSCxNQUFNLENBQUMsTUFBTSxtQkFBbUIsR0FBVTtJQUN4QyxvQkFBb0I7SUFDcEIsd0JBQXdCO0lBQ3hCLGNBQWM7SUFDZCxvQkFBb0I7SUFDcEIseUJBQXlCO0lBQ3pCLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQiwwQkFBMEI7SUFDMUIscUJBQXFCO0lBQ3JCLDZCQUE2QjtJQUM3QixzQkFBc0I7SUFDdEIsd0JBQXdCO0lBQ3hCLHFCQUFxQjtJQUNyQiwrQkFBK0I7SUFDL0IsNkJBQTZCO0NBQzlCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCaWxsaW5nQ291bnRyaWVzRWZmZWN0IH0gZnJvbSAnLi9iaWxsaW5nLWNvdW50cmllcy5lZmZlY3QnO1xuaW1wb3J0IHsgQ2xlYXJNaXNjc0RhdGFFZmZlY3QgfSBmcm9tICcuL2NsZWFyLW1pc2NzLWRhdGEuZWZmZWN0JztcbmltcG9ydCB7IENvbnNpZ25tZW50VHJhY2tpbmdFZmZlY3RzIH0gZnJvbSAnLi9jb25zaWdubWVudC10cmFja2luZy5lZmZlY3QnO1xuaW1wb3J0IHsgQ3VzdG9tZXJDb3Vwb25FZmZlY3RzIH0gZnJvbSAnLi9jdXN0b21lci1jb3Vwb24uZWZmZWN0JztcbmltcG9ydCB7IERlbGl2ZXJ5Q291bnRyaWVzRWZmZWN0cyB9IGZyb20gJy4vZGVsaXZlcnktY291bnRyaWVzLmVmZmVjdCc7XG5pbXBvcnQgeyBOb3RpZmljYXRpb25QcmVmZXJlbmNlRWZmZWN0cyB9IGZyb20gJy4vbm90aWZpY2F0aW9uLXByZWZlcmVuY2UuZWZmZWN0JztcbmltcG9ydCB7IE9yZGVyRGV0YWlsc0VmZmVjdCB9IGZyb20gJy4vb3JkZXItZGV0YWlscy5lZmZlY3QnO1xuaW1wb3J0IHsgT3JkZXJSZXR1cm5SZXF1ZXN0RWZmZWN0IH0gZnJvbSAnLi9vcmRlci1yZXR1cm4tcmVxdWVzdC5lZmZlY3QnO1xuaW1wb3J0IHsgVXNlclBheW1lbnRNZXRob2RzRWZmZWN0cyB9IGZyb20gJy4vcGF5bWVudC1tZXRob2RzLmVmZmVjdCc7XG5pbXBvcnQgeyBQcm9kdWN0SW50ZXJlc3RzRWZmZWN0IH0gZnJvbSAnLi9wcm9kdWN0LWludGVyZXN0cy5lZmZlY3QnO1xuaW1wb3J0IHsgUmVnaW9uc0VmZmVjdHMgfSBmcm9tICcuL3JlZ2lvbnMuZWZmZWN0JztcbmltcG9ydCB7IFJlcGxlbmlzaG1lbnRPcmRlckRldGFpbHNFZmZlY3QgfSBmcm9tICcuL3JlcGxlbmlzaG1lbnQtb3JkZXItZGV0YWlscy5lZmZlY3QnO1xuaW1wb3J0IHsgVXNlckFkZHJlc3Nlc0VmZmVjdHMgfSBmcm9tICcuL3VzZXItYWRkcmVzc2VzLmVmZmVjdCc7XG5pbXBvcnQgeyBVc2VyQ29uc2VudHNFZmZlY3QgfSBmcm9tICcuL3VzZXItY29uc2VudHMuZWZmZWN0JztcbmltcG9ydCB7IFVzZXJDb3N0Q2VudGVyRWZmZWN0cyB9IGZyb20gJy4vdXNlci1jb3N0LWNlbnRlci5lZmZlY3QnO1xuaW1wb3J0IHsgVXNlck9yZGVyc0VmZmVjdCB9IGZyb20gJy4vdXNlci1vcmRlcnMuZWZmZWN0JztcbmltcG9ydCB7IFVzZXJSZXBsZW5pc2htZW50T3JkZXJzRWZmZWN0IH0gZnJvbSAnLi91c2VyLXJlcGxlbmlzaG1lbnQtb3JkZXJzLmVmZmVjdCc7XG5cbi8qKlxuICogQGRlcHJlY2F0ZWQgc2luY2UgNC4yIC0gdXNlIGVmZmVjdHNUcmFuc2l0aW9uYWxfNF8yIHdpdGggb3JkZXIgbGliIGluc3RlYWRcbiAqL1xuZXhwb3J0IGNvbnN0IGVmZmVjdHNUcmFuc2l0aW9uYWw6IGFueVtdID0gW1xuICBDbGVhck1pc2NzRGF0YUVmZmVjdCxcbiAgRGVsaXZlcnlDb3VudHJpZXNFZmZlY3RzLFxuICBSZWdpb25zRWZmZWN0cyxcbiAgVXNlckFkZHJlc3Nlc0VmZmVjdHMsXG4gIFVzZXJQYXltZW50TWV0aG9kc0VmZmVjdHMsXG4gIFVzZXJPcmRlcnNFZmZlY3QsXG4gIE9yZGVyRGV0YWlsc0VmZmVjdCxcbiAgQmlsbGluZ0NvdW50cmllc0VmZmVjdCxcbiAgVXNlckNvbnNlbnRzRWZmZWN0LFxuICBDb25zaWdubWVudFRyYWNraW5nRWZmZWN0cyxcbiAgQ3VzdG9tZXJDb3Vwb25FZmZlY3RzLFxuICBOb3RpZmljYXRpb25QcmVmZXJlbmNlRWZmZWN0cyxcbiAgUHJvZHVjdEludGVyZXN0c0VmZmVjdCxcbiAgT3JkZXJSZXR1cm5SZXF1ZXN0RWZmZWN0LFxuICBVc2VyQ29zdENlbnRlckVmZmVjdHMsXG4gIFJlcGxlbmlzaG1lbnRPcmRlckRldGFpbHNFZmZlY3QsXG4gIFVzZXJSZXBsZW5pc2htZW50T3JkZXJzRWZmZWN0LFxuXTtcbiJdfQ==