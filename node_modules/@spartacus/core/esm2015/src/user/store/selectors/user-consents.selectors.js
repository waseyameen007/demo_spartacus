import { createSelector } from '@ngrx/store';
import { StateUtils } from '../../../state/utils/index';
import { getUserState } from './feature.selector';
export const getConsentsState = createSelector(getUserState, (state) => state.consents);
export const getConsentsValue = createSelector(getConsentsState, StateUtils.loaderValueSelector);
export const getConsentByTemplateId = (templateId) => createSelector(getConsentsValue, (templates) => templates.find((template) => template.id === templateId));
export const getConsentsLoading = createSelector(getConsentsState, StateUtils.loaderLoadingSelector);
export const getConsentsSuccess = createSelector(getConsentsState, StateUtils.loaderSuccessSelector);
export const getConsentsError = createSelector(getConsentsState, StateUtils.loaderErrorSelector);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXNlci1jb25zZW50cy5zZWxlY3RvcnMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy91c2VyL3N0b3JlL3NlbGVjdG9ycy91c2VyLWNvbnNlbnRzLnNlbGVjdG9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsY0FBYyxFQUFvQixNQUFNLGFBQWEsQ0FBQztBQUUvRCxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFHeEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRWxELE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUd6QixjQUFjLENBQUMsWUFBWSxFQUFFLENBQUMsS0FBZ0IsRUFBRSxFQUFFLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0FBRXZFLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUd6QixjQUFjLENBQUMsZ0JBQWdCLEVBQUUsVUFBVSxDQUFDLG1CQUFtQixDQUFDLENBQUM7QUFFckUsTUFBTSxDQUFDLE1BQU0sc0JBQXNCLEdBQUcsQ0FDcEMsVUFBa0IsRUFDZ0MsRUFBRSxDQUNwRCxjQUFjLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxTQUFTLEVBQUUsRUFBRSxDQUM3QyxTQUFTLENBQUMsSUFBSSxDQUFDLENBQUMsUUFBUSxFQUFFLEVBQUUsQ0FBQyxRQUFRLENBQUMsRUFBRSxLQUFLLFVBQVUsQ0FBQyxDQUN6RCxDQUFDO0FBRUosTUFBTSxDQUFDLE1BQU0sa0JBQWtCLEdBQzdCLGNBQWMsQ0FBQyxnQkFBZ0IsRUFBRSxVQUFVLENBQUMscUJBQXFCLENBQUMsQ0FBQztBQUVyRSxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FDN0IsY0FBYyxDQUFDLGdCQUFnQixFQUFFLFVBQVUsQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDO0FBRXJFLE1BQU0sQ0FBQyxNQUFNLGdCQUFnQixHQUMzQixjQUFjLENBQUMsZ0JBQWdCLEVBQUUsVUFBVSxDQUFDLG1CQUFtQixDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjcmVhdGVTZWxlY3RvciwgTWVtb2l6ZWRTZWxlY3RvciB9IGZyb20gJ0BuZ3J4L3N0b3JlJztcbmltcG9ydCB7IENvbnNlbnRUZW1wbGF0ZSB9IGZyb20gJy4uLy4uLy4uL21vZGVsL2NvbnNlbnQubW9kZWwnO1xuaW1wb3J0IHsgU3RhdGVVdGlscyB9IGZyb20gJy4uLy4uLy4uL3N0YXRlL3V0aWxzL2luZGV4JztcbmltcG9ydCB7IExvYWRlclN0YXRlIH0gZnJvbSAnLi4vLi4vLi4vc3RhdGUvdXRpbHMvbG9hZGVyL2xvYWRlci1zdGF0ZSc7XG5pbXBvcnQgeyBTdGF0ZVdpdGhVc2VyLCBVc2VyU3RhdGUgfSBmcm9tICcuLi91c2VyLXN0YXRlJztcbmltcG9ydCB7IGdldFVzZXJTdGF0ZSB9IGZyb20gJy4vZmVhdHVyZS5zZWxlY3Rvcic7XG5cbmV4cG9ydCBjb25zdCBnZXRDb25zZW50c1N0YXRlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhVc2VyLFxuICBMb2FkZXJTdGF0ZTxDb25zZW50VGVtcGxhdGVbXT5cbj4gPSBjcmVhdGVTZWxlY3RvcihnZXRVc2VyU3RhdGUsIChzdGF0ZTogVXNlclN0YXRlKSA9PiBzdGF0ZS5jb25zZW50cyk7XG5cbmV4cG9ydCBjb25zdCBnZXRDb25zZW50c1ZhbHVlOiBNZW1vaXplZFNlbGVjdG9yPFxuICBTdGF0ZVdpdGhVc2VyLFxuICBDb25zZW50VGVtcGxhdGVbXVxuPiA9IGNyZWF0ZVNlbGVjdG9yKGdldENvbnNlbnRzU3RhdGUsIFN0YXRlVXRpbHMubG9hZGVyVmFsdWVTZWxlY3Rvcik7XG5cbmV4cG9ydCBjb25zdCBnZXRDb25zZW50QnlUZW1wbGF0ZUlkID0gKFxuICB0ZW1wbGF0ZUlkOiBzdHJpbmdcbik6IE1lbW9pemVkU2VsZWN0b3I8U3RhdGVXaXRoVXNlciwgQ29uc2VudFRlbXBsYXRlPiA9PlxuICBjcmVhdGVTZWxlY3RvcihnZXRDb25zZW50c1ZhbHVlLCAodGVtcGxhdGVzKSA9PlxuICAgIHRlbXBsYXRlcy5maW5kKCh0ZW1wbGF0ZSkgPT4gdGVtcGxhdGUuaWQgPT09IHRlbXBsYXRlSWQpXG4gICk7XG5cbmV4cG9ydCBjb25zdCBnZXRDb25zZW50c0xvYWRpbmc6IE1lbW9pemVkU2VsZWN0b3I8U3RhdGVXaXRoVXNlciwgYm9vbGVhbj4gPVxuICBjcmVhdGVTZWxlY3RvcihnZXRDb25zZW50c1N0YXRlLCBTdGF0ZVV0aWxzLmxvYWRlckxvYWRpbmdTZWxlY3Rvcik7XG5cbmV4cG9ydCBjb25zdCBnZXRDb25zZW50c1N1Y2Nlc3M6IE1lbW9pemVkU2VsZWN0b3I8U3RhdGVXaXRoVXNlciwgYm9vbGVhbj4gPVxuICBjcmVhdGVTZWxlY3RvcihnZXRDb25zZW50c1N0YXRlLCBTdGF0ZVV0aWxzLmxvYWRlclN1Y2Nlc3NTZWxlY3Rvcik7XG5cbmV4cG9ydCBjb25zdCBnZXRDb25zZW50c0Vycm9yOiBNZW1vaXplZFNlbGVjdG9yPFN0YXRlV2l0aFVzZXIsIGJvb2xlYW4+ID1cbiAgY3JlYXRlU2VsZWN0b3IoZ2V0Q29uc2VudHNTdGF0ZSwgU3RhdGVVdGlscy5sb2FkZXJFcnJvclNlbGVjdG9yKTtcbiJdfQ==