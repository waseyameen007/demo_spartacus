import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { Effect, ofType } from '@ngrx/effects';
import { map } from 'rxjs/operators';
import { CartActions } from '../actions/index';
import * as i0 from "@angular/core";
import * as i1 from "@ngrx/effects";
export class MultiCartEffects {
    constructor(actions$) {
        this.actions$ = actions$;
        this.setTempCart$ = this.actions$.pipe(ofType(CartActions.SET_TEMP_CART), map((action) => {
            return new CartActions.RemoveCart({ cartId: action.payload.tempCartId });
        }));
        // TODO(#7241): Remove when we drop ADD_VOUCHER process and we sort out checkout and cart dependencies
        this.processesIncrement$ = this.actions$.pipe(ofType(CartActions.CART_ADD_VOUCHER), map((action) => action.payload), map((payload) => new CartActions.CartProcessesIncrement(payload.cartId)));
    }
}
MultiCartEffects.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: MultiCartEffects, deps: [{ token: i1.Actions }], target: i0.ɵɵFactoryTarget.Injectable });
MultiCartEffects.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: MultiCartEffects });
__decorate([
    Effect()
], MultiCartEffects.prototype, "setTempCart$", void 0);
__decorate([
    Effect()
], MultiCartEffects.prototype, "processesIncrement$", void 0);
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: MultiCartEffects, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.Actions }]; }, propDecorators: { setTempCart$: [], processesIncrement$: [] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibXVsdGktY2FydC5lZmZlY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9jb3JlL3NyYy9jYXJ0L3N0b3JlL2VmZmVjdHMvbXVsdGktY2FydC5lZmZlY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFXLE1BQU0sRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFeEQsT0FBTyxFQUFFLEdBQUcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQ3JDLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQzs7O0FBRy9DLE1BQU0sT0FBTyxnQkFBZ0I7SUFpQjNCLFlBQW9CLFFBQWlCO1FBQWpCLGFBQVEsR0FBUixRQUFRLENBQVM7UUFmckMsaUJBQVksR0FBRyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FDL0IsTUFBTSxDQUFDLFdBQVcsQ0FBQyxhQUFhLENBQUMsRUFDakMsR0FBRyxDQUFDLENBQUMsTUFBK0IsRUFBRSxFQUFFO1lBQ3RDLE9BQU8sSUFBSSxXQUFXLENBQUMsVUFBVSxDQUFDLEVBQUUsTUFBTSxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQztRQUMzRSxDQUFDLENBQUMsQ0FDSCxDQUFDO1FBRUYsc0dBQXNHO1FBRXRHLHdCQUFtQixHQUFtRCxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksQ0FDdEYsTUFBTSxDQUFDLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUNwQyxHQUFHLENBQUMsQ0FBQyxNQUFrQyxFQUFFLEVBQUUsQ0FBQyxNQUFNLENBQUMsT0FBTyxDQUFDLEVBQzNELEdBQUcsQ0FBQyxDQUFDLE9BQU8sRUFBRSxFQUFFLENBQUMsSUFBSSxXQUFXLENBQUMsc0JBQXNCLENBQUMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLENBQ3pFLENBQUM7SUFFc0MsQ0FBQzs7NkdBakI5QixnQkFBZ0I7aUhBQWhCLGdCQUFnQjtBQUUzQjtJQURDLE1BQU0sRUFBRTtzREFNUDtBQUlGO0lBREMsTUFBTSxFQUFFOzZEQUtQOzJGQWZTLGdCQUFnQjtrQkFENUIsVUFBVTs4RkFHVCxZQUFZLE1BU1osbUJBQW1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQWN0aW9ucywgRWZmZWN0LCBvZlR5cGUgfSBmcm9tICdAbmdyeC9lZmZlY3RzJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IENhcnRBY3Rpb25zIH0gZnJvbSAnLi4vYWN0aW9ucy9pbmRleCc7XG5cbkBJbmplY3RhYmxlKClcbmV4cG9ydCBjbGFzcyBNdWx0aUNhcnRFZmZlY3RzIHtcbiAgQEVmZmVjdCgpXG4gIHNldFRlbXBDYXJ0JCA9IHRoaXMuYWN0aW9ucyQucGlwZShcbiAgICBvZlR5cGUoQ2FydEFjdGlvbnMuU0VUX1RFTVBfQ0FSVCksXG4gICAgbWFwKChhY3Rpb246IENhcnRBY3Rpb25zLlNldFRlbXBDYXJ0KSA9PiB7XG4gICAgICByZXR1cm4gbmV3IENhcnRBY3Rpb25zLlJlbW92ZUNhcnQoeyBjYXJ0SWQ6IGFjdGlvbi5wYXlsb2FkLnRlbXBDYXJ0SWQgfSk7XG4gICAgfSlcbiAgKTtcblxuICAvLyBUT0RPKCM3MjQxKTogUmVtb3ZlIHdoZW4gd2UgZHJvcCBBRERfVk9VQ0hFUiBwcm9jZXNzIGFuZCB3ZSBzb3J0IG91dCBjaGVja291dCBhbmQgY2FydCBkZXBlbmRlbmNpZXNcbiAgQEVmZmVjdCgpXG4gIHByb2Nlc3Nlc0luY3JlbWVudCQ6IE9ic2VydmFibGU8Q2FydEFjdGlvbnMuQ2FydFByb2Nlc3Nlc0luY3JlbWVudD4gPSB0aGlzLmFjdGlvbnMkLnBpcGUoXG4gICAgb2ZUeXBlKENhcnRBY3Rpb25zLkNBUlRfQUREX1ZPVUNIRVIpLFxuICAgIG1hcCgoYWN0aW9uOiBDYXJ0QWN0aW9ucy5DYXJ0QWRkVm91Y2hlcikgPT4gYWN0aW9uLnBheWxvYWQpLFxuICAgIG1hcCgocGF5bG9hZCkgPT4gbmV3IENhcnRBY3Rpb25zLkNhcnRQcm9jZXNzZXNJbmNyZW1lbnQocGF5bG9hZC5jYXJ0SWQpKVxuICApO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgYWN0aW9ucyQ6IEFjdGlvbnMpIHt9XG59XG4iXX0=