import { NgModule } from '@angular/core';
import { CmsModule } from './cms/cms.module';
import { ConfigInitializerModule } from './config/config-initializer/config-initializer.module';
import { ConfigValidatorModule } from './config/config-validator/config-validator.module';
import { ConfigModule } from './config/config.module';
import { FeaturesConfigModule } from './features-config/features-config.module';
import { GlobalMessageModule } from './global-message/global-message.module';
import { I18nModule } from './i18n/i18n.module';
import { LazyLoadingModule } from './lazy-loading/lazy-loading.module';
import { BaseOccModule } from './occ/base-occ.module';
import { MetaTagConfigModule } from './occ/config/meta-tag-config.module';
import { ProcessModule } from './process/process.module';
import { SiteContextModule } from './site-context/site-context.module';
import { StateModule } from './state/state.module';
import * as i0 from "@angular/core";
import * as i1 from "./state/state.module";
import * as i2 from "./config/config.module";
import * as i3 from "./config/config-initializer/config-initializer.module";
import * as i4 from "./config/config-validator/config-validator.module";
import * as i5 from "./i18n/i18n.module";
import * as i6 from "./cms/cms.module";
import * as i7 from "./global-message/global-message.module";
import * as i8 from "./process/process.module";
import * as i9 from "./features-config/features-config.module";
import * as i10 from "./site-context/site-context.module";
import * as i11 from "./occ/config/meta-tag-config.module";
import * as i12 from "./occ/base-occ.module";
import * as i13 from "./lazy-loading/lazy-loading.module";
export class BaseCoreModule {
    static forRoot() {
        return {
            ngModule: BaseCoreModule,
        };
    }
}
BaseCoreModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: BaseCoreModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
BaseCoreModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: BaseCoreModule, imports: [i1.StateModule, i2.ConfigModule, i3.ConfigInitializerModule, i4.ConfigValidatorModule, i5.I18nModule, i6.CmsModule, i7.GlobalMessageModule, i8.ProcessModule, i9.FeaturesConfigModule, i10.SiteContextModule, i11.MetaTagConfigModule, i12.BaseOccModule, i13.LazyLoadingModule] });
BaseCoreModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: BaseCoreModule, imports: [[
            StateModule.forRoot(),
            ConfigModule.forRoot(),
            ConfigInitializerModule.forRoot(),
            ConfigValidatorModule.forRoot(),
            I18nModule.forRoot(),
            CmsModule.forRoot(),
            GlobalMessageModule.forRoot(),
            ProcessModule.forRoot(),
            FeaturesConfigModule.forRoot(),
            SiteContextModule.forRoot(),
            MetaTagConfigModule.forRoot(),
            BaseOccModule.forRoot(),
            LazyLoadingModule.forRoot(),
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: BaseCoreModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        StateModule.forRoot(),
                        ConfigModule.forRoot(),
                        ConfigInitializerModule.forRoot(),
                        ConfigValidatorModule.forRoot(),
                        I18nModule.forRoot(),
                        CmsModule.forRoot(),
                        GlobalMessageModule.forRoot(),
                        ProcessModule.forRoot(),
                        FeaturesConfigModule.forRoot(),
                        SiteContextModule.forRoot(),
                        MetaTagConfigModule.forRoot(),
                        BaseOccModule.forRoot(),
                        LazyLoadingModule.forRoot(),
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFzZS1jb3JlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2NvcmUvc3JjL2Jhc2UtY29yZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQzdDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBQ2hHLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQzFGLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUN0RCxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSwwQ0FBMEMsQ0FBQztBQUNoRixPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUM3RSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDaEQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sb0NBQW9DLENBQUM7QUFDdkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3RELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQzFFLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUN2RSxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7Ozs7Ozs7Ozs7Ozs7OztBQW1CbkQsTUFBTSxPQUFPLGNBQWM7SUFDekIsTUFBTSxDQUFDLE9BQU87UUFDWixPQUFPO1lBQ0wsUUFBUSxFQUFFLGNBQWM7U0FDekIsQ0FBQztJQUNKLENBQUM7OzJHQUxVLGNBQWM7NEdBQWQsY0FBYzs0R0FBZCxjQUFjLFlBaEJoQjtZQUNQLFdBQVcsQ0FBQyxPQUFPLEVBQUU7WUFDckIsWUFBWSxDQUFDLE9BQU8sRUFBRTtZQUN0Qix1QkFBdUIsQ0FBQyxPQUFPLEVBQUU7WUFDakMscUJBQXFCLENBQUMsT0FBTyxFQUFFO1lBQy9CLFVBQVUsQ0FBQyxPQUFPLEVBQUU7WUFDcEIsU0FBUyxDQUFDLE9BQU8sRUFBRTtZQUNuQixtQkFBbUIsQ0FBQyxPQUFPLEVBQUU7WUFDN0IsYUFBYSxDQUFDLE9BQU8sRUFBRTtZQUN2QixvQkFBb0IsQ0FBQyxPQUFPLEVBQUU7WUFDOUIsaUJBQWlCLENBQUMsT0FBTyxFQUFFO1lBQzNCLG1CQUFtQixDQUFDLE9BQU8sRUFBRTtZQUM3QixhQUFhLENBQUMsT0FBTyxFQUFFO1lBQ3ZCLGlCQUFpQixDQUFDLE9BQU8sRUFBRTtTQUM1QjsyRkFFVSxjQUFjO2tCQWpCMUIsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsV0FBVyxDQUFDLE9BQU8sRUFBRTt3QkFDckIsWUFBWSxDQUFDLE9BQU8sRUFBRTt3QkFDdEIsdUJBQXVCLENBQUMsT0FBTyxFQUFFO3dCQUNqQyxxQkFBcUIsQ0FBQyxPQUFPLEVBQUU7d0JBQy9CLFVBQVUsQ0FBQyxPQUFPLEVBQUU7d0JBQ3BCLFNBQVMsQ0FBQyxPQUFPLEVBQUU7d0JBQ25CLG1CQUFtQixDQUFDLE9BQU8sRUFBRTt3QkFDN0IsYUFBYSxDQUFDLE9BQU8sRUFBRTt3QkFDdkIsb0JBQW9CLENBQUMsT0FBTyxFQUFFO3dCQUM5QixpQkFBaUIsQ0FBQyxPQUFPLEVBQUU7d0JBQzNCLG1CQUFtQixDQUFDLE9BQU8sRUFBRTt3QkFDN0IsYUFBYSxDQUFDLE9BQU8sRUFBRTt3QkFDdkIsaUJBQWlCLENBQUMsT0FBTyxFQUFFO3FCQUM1QjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDbXNNb2R1bGUgfSBmcm9tICcuL2Ntcy9jbXMubW9kdWxlJztcbmltcG9ydCB7IENvbmZpZ0luaXRpYWxpemVyTW9kdWxlIH0gZnJvbSAnLi9jb25maWcvY29uZmlnLWluaXRpYWxpemVyL2NvbmZpZy1pbml0aWFsaXplci5tb2R1bGUnO1xuaW1wb3J0IHsgQ29uZmlnVmFsaWRhdG9yTW9kdWxlIH0gZnJvbSAnLi9jb25maWcvY29uZmlnLXZhbGlkYXRvci9jb25maWctdmFsaWRhdG9yLm1vZHVsZSc7XG5pbXBvcnQgeyBDb25maWdNb2R1bGUgfSBmcm9tICcuL2NvbmZpZy9jb25maWcubW9kdWxlJztcbmltcG9ydCB7IEZlYXR1cmVzQ29uZmlnTW9kdWxlIH0gZnJvbSAnLi9mZWF0dXJlcy1jb25maWcvZmVhdHVyZXMtY29uZmlnLm1vZHVsZSc7XG5pbXBvcnQgeyBHbG9iYWxNZXNzYWdlTW9kdWxlIH0gZnJvbSAnLi9nbG9iYWwtbWVzc2FnZS9nbG9iYWwtbWVzc2FnZS5tb2R1bGUnO1xuaW1wb3J0IHsgSTE4bk1vZHVsZSB9IGZyb20gJy4vaTE4bi9pMThuLm1vZHVsZSc7XG5pbXBvcnQgeyBMYXp5TG9hZGluZ01vZHVsZSB9IGZyb20gJy4vbGF6eS1sb2FkaW5nL2xhenktbG9hZGluZy5tb2R1bGUnO1xuaW1wb3J0IHsgQmFzZU9jY01vZHVsZSB9IGZyb20gJy4vb2NjL2Jhc2Utb2NjLm1vZHVsZSc7XG5pbXBvcnQgeyBNZXRhVGFnQ29uZmlnTW9kdWxlIH0gZnJvbSAnLi9vY2MvY29uZmlnL21ldGEtdGFnLWNvbmZpZy5tb2R1bGUnO1xuaW1wb3J0IHsgUHJvY2Vzc01vZHVsZSB9IGZyb20gJy4vcHJvY2Vzcy9wcm9jZXNzLm1vZHVsZSc7XG5pbXBvcnQgeyBTaXRlQ29udGV4dE1vZHVsZSB9IGZyb20gJy4vc2l0ZS1jb250ZXh0L3NpdGUtY29udGV4dC5tb2R1bGUnO1xuaW1wb3J0IHsgU3RhdGVNb2R1bGUgfSBmcm9tICcuL3N0YXRlL3N0YXRlLm1vZHVsZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBTdGF0ZU1vZHVsZS5mb3JSb290KCksXG4gICAgQ29uZmlnTW9kdWxlLmZvclJvb3QoKSxcbiAgICBDb25maWdJbml0aWFsaXplck1vZHVsZS5mb3JSb290KCksXG4gICAgQ29uZmlnVmFsaWRhdG9yTW9kdWxlLmZvclJvb3QoKSxcbiAgICBJMThuTW9kdWxlLmZvclJvb3QoKSxcbiAgICBDbXNNb2R1bGUuZm9yUm9vdCgpLFxuICAgIEdsb2JhbE1lc3NhZ2VNb2R1bGUuZm9yUm9vdCgpLFxuICAgIFByb2Nlc3NNb2R1bGUuZm9yUm9vdCgpLFxuICAgIEZlYXR1cmVzQ29uZmlnTW9kdWxlLmZvclJvb3QoKSxcbiAgICBTaXRlQ29udGV4dE1vZHVsZS5mb3JSb290KCksIC8vIHNob3VsZCBiZSBpbXBvcnRlZCBhZnRlciBSb3V0ZXJNb2R1bGUuZm9yUm9vdCwgYmVjYXVzZSBpdCBvdmVyd3JpdGVzIFVybFNlcmlhbGl6ZXJcbiAgICBNZXRhVGFnQ29uZmlnTW9kdWxlLmZvclJvb3QoKSxcbiAgICBCYXNlT2NjTW9kdWxlLmZvclJvb3QoKSxcbiAgICBMYXp5TG9hZGluZ01vZHVsZS5mb3JSb290KCksXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIEJhc2VDb3JlTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxCYXNlQ29yZU1vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogQmFzZUNvcmVNb2R1bGUsXG4gICAgfTtcbiAgfVxufVxuIl19