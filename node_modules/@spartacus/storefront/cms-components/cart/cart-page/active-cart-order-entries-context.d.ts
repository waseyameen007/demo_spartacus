import { ActionsSubject } from '@ngrx/store';
import { ActiveCartService, OrderEntry } from '@spartacus/core';
import { Observable } from 'rxjs';
import { CartOrderEntriesContext } from '../order-entries-context/cart-order-entries.context';
import { OrderEntriesSource } from '../order-entries-context/import-export.model';
import { ProductData } from '../order-entries-context/import-to-cart.model';
import { AddOrderEntriesContext } from '../order-entries-context/add-order-entries.context';
import { GetOrderEntriesContext } from '../order-entries-context/get-order-entries.context';
import * as i0 from "@angular/core";
export declare class ActiveCartOrderEntriesContext extends CartOrderEntriesContext implements AddOrderEntriesContext, GetOrderEntriesContext {
    protected actionsSubject: ActionsSubject;
    protected activeCartService: ActiveCartService;
    readonly type = OrderEntriesSource.ACTIVE_CART;
    constructor(actionsSubject: ActionsSubject, activeCartService: ActiveCartService);
    getEntries(): Observable<OrderEntry[]>;
    protected add(products: ProductData[]): Observable<string>;
    protected mapProductsToOrderEntries(products: ProductData[]): OrderEntry[];
    static ɵfac: i0.ɵɵFactoryDeclaration<ActiveCartOrderEntriesContext, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<ActiveCartOrderEntriesContext>;
}
