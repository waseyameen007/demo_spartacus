import { Component, Input } from '@angular/core';
import { PromotionLocation } from '@spartacus/core';
import { ICON_TYPE } from '../../../misc/icon/icon.model';
import { CartOutlets } from '../../cart-outlets.model';
import { CartItemContextSource } from './model/cart-item-context-source.model';
import { CartItemContext } from './model/cart-item-context.model';
import * as i0 from "@angular/core";
import * as i1 from "./model/cart-item-context-source.model";
import * as i2 from "../../validation/cart-item-warning/cart-item-validation-warning.component";
import * as i3 from "../../../../shared/components/media/media.component";
import * as i4 from "../../../../shared/components/item-counter/item-counter.component";
import * as i5 from "../../../misc/promotions/promotions.component";
import * as i6 from "../../../../cms-structure/outlet/outlet.directive";
import * as i7 from "@spartacus/core";
import * as i8 from "@angular/common";
import * as i9 from "@angular/router";
import * as i10 from "../../../../shared/components/modal/modal.directive";
export class CartItemComponent {
    constructor(cartItemContextSource) {
        this.cartItemContextSource = cartItemContextSource;
        this.compact = false;
        this.readonly = false;
        this.promotionLocation = PromotionLocation.ActiveCart;
        // TODO: evaluate whether this is generic enough
        this.options = {
            isSaveForLater: false,
            optionalBtn: null,
        };
        this.iconTypes = ICON_TYPE;
        this.CartOutlets = CartOutlets;
    }
    ngOnChanges(changes) {
        if (changes === null || changes === void 0 ? void 0 : changes.compact) {
            this.cartItemContextSource.compact$.next(this.compact);
        }
        if (changes === null || changes === void 0 ? void 0 : changes.readonly) {
            this.cartItemContextSource.readonly$.next(this.readonly);
        }
        if (changes === null || changes === void 0 ? void 0 : changes.item) {
            this.cartItemContextSource.item$.next(this.item);
        }
        if (changes === null || changes === void 0 ? void 0 : changes.quantityControl) {
            this.cartItemContextSource.quantityControl$.next(this.quantityControl);
        }
        if (changes === null || changes === void 0 ? void 0 : changes.promotionLocation) {
            this.cartItemContextSource.location$.next(this.promotionLocation);
        }
        if (changes === null || changes === void 0 ? void 0 : changes.options) {
            this.cartItemContextSource.options$.next(this.options);
        }
    }
    isProductOutOfStock(product) {
        // TODO Move stocklevelstatuses across the app to an enum
        return (product &&
            product.stock &&
            product.stock.stockLevelStatus === 'outOfStock');
    }
    removeItem() {
        this.quantityControl.setValue(0);
        this.quantityControl.markAsDirty();
    }
}
CartItemComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CartItemComponent, deps: [{ token: i1.CartItemContextSource }], target: i0.ɵɵFactoryTarget.Component });
CartItemComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: CartItemComponent, selector: "cx-cart-item", inputs: { compact: "compact", item: "item", readonly: "readonly", quantityControl: "quantityControl", promotionLocation: "promotionLocation", options: "options" }, providers: [
        CartItemContextSource,
        { provide: CartItemContext, useExisting: CartItemContextSource },
    ], usesOnChanges: true, ngImport: i0, template: "<!-- Item Start Outlet -->\n<ng-template [cxOutlet]=\"CartOutlets.ITEM\">\n  <ng-container *cxFeatureLevel=\"'4.2'\">\n    <cx-cart-item-validation-warning\n      [code]=\"item.product.code\"\n    ></cx-cart-item-validation-warning>\n  </ng-container>\n  <div [ngClass]=\"compact ? 'cx-compact row' : 'row'\">\n    <!-- Item Image -->\n    <div class=\"col-2 cx-image-container\">\n      <a\n        [routerLink]=\"{ cxRoute: 'product', params: item.product } | cxUrl\"\n        cxModal=\"dismiss\"\n        tabindex=\"-1\"\n      >\n        <cx-media\n          [container]=\"item.product.images?.PRIMARY\"\n          format=\"cartIcon\"\n        ></cx-media>\n      </a>\n    </div>\n    <!-- Item Information -->\n    <div class=\"cx-info col-10\">\n      <div class=\"cx-info-container row\">\n        <!-- Item Description -->\n        <div [ngClass]=\"compact ? '' : ' col-md-3 col-lg-3 col-xl-5'\">\n          <div *ngIf=\"item.product.name\" class=\"cx-name\">\n            <a\n              class=\"cx-link\"\n              [routerLink]=\"\n                { cxRoute: 'product', params: item.product } | cxUrl\n              \"\n              cxModal=\"dismiss\"\n              ><h2>{{ item.product.name }}</h2></a\n            >\n          </div>\n          <div *ngIf=\"item.product.code\" class=\"cx-code\">\n            {{ 'cartItems.id' | cxTranslate }} {{ item.product.code }}\n          </div>\n\n          <!-- Item Details Outlet -->\n          <ng-template [cxOutlet]=\"CartOutlets.ITEM_DETAILS\"> </ng-template>\n\n          <!-- Variants -->\n          <ng-container *ngIf=\"item.product.baseOptions?.length\">\n            <div\n              *ngFor=\"\n                let variant of item.product.baseOptions[0]?.selected\n                  ?.variantOptionQualifiers\n              \"\n              class=\"cx-property\"\n            >\n              <div class=\"cx-label\" *ngIf=\"variant.name && variant.value\">\n                {{ variant.name }}: {{ variant.value }}\n              </div>\n            </div>\n          </ng-container>\n        </div>\n        <!-- Item Price -->\n        <div\n          *ngIf=\"item.basePrice\"\n          class=\"cx-price\"\n          [ngClass]=\"compact ? '' : ' col-md-3 col-lg-3 col-xl-2'\"\n        >\n          <div\n            class=\"cx-label\"\n            [ngClass]=\"compact ? '' : ' d-block d-md-none d-lg-none d-xl-none'\"\n          >\n            {{ 'cartItems.itemPrice' | cxTranslate }}\n          </div>\n          <div *ngIf=\"item.basePrice\" class=\"cx-value\">\n            {{ item.basePrice?.formattedValue }}\n          </div>\n        </div>\n        <!-- Item Quantity -->\n        <div class=\"cx-quantity\" [ngClass]=\"compact ? '' : ' col-3'\">\n          <div\n            class=\"cx-label\"\n            [ngClass]=\"compact ? '' : ' d-block d-md-none d-lg-none d-xl-none'\"\n            placement=\"left\"\n            title=\"{{ 'cartItems.quantityTitle' | cxTranslate }}\"\n          >\n            {{ 'cartItems.quantity' | cxTranslate }}\n          </div>\n          <div class=\"cx-value\" [class.readonly-value]=\"readonly\">\n            <cx-item-counter\n              [control]=\"quantityControl\"\n              [readonly]=\"\n                !item.updateable || readonly || options.isSaveForLater\n              \"\n              [max]=\"item.product.stock?.stockLevel\"\n              [allowZero]=\"true\"\n            >\n            </cx-item-counter>\n          </div>\n        </div>\n        <!-- Total -->\n        <ng-container *ngIf=\"options.isSaveForLater; else total\">\n          <div\n            class=\"cx-total\"\n            [ngClass]=\"compact ? '' : ' col-md-3 col-lg-3 col-xl-2'\"\n          >\n            <div\n              class=\"cx-label\"\n              [ngClass]=\"\n                compact ? '' : ' d-block d-md-none d-lg-none d-xl-none'\n              \"\n            >\n              {{ 'saveForLaterItems.stock' | cxTranslate }}\n            </div>\n            <div\n              *ngIf=\"item.product?.stock?.stockLevel >= 0; else forceInstock\"\n              class=\"cx-value\"\n            >\n              {{ item.product.stock.stockLevel }}\n            </div>\n            <ng-template #forceInstock>\n              <div class=\"cx-value\">\n                {{ 'saveForLaterItems.forceInStock' | cxTranslate }}\n              </div>\n            </ng-template>\n          </div>\n        </ng-container>\n      </div>\n      <!-- Availability -->\n      <div\n        *ngIf=\"isProductOutOfStock(item.product)\"\n        class=\"cx-availability col-12\"\n      >\n        {{ 'addToCart.outOfStock' | cxTranslate }}\n      </div>\n\n      <!-- Item Bundle Details Outlet -->\n      <ng-template [cxOutlet]=\"CartOutlets.ITEM_BUNDLE_DETAILS\"> </ng-template>\n\n      <!-- Promotion -->\n\n      <cx-promotions [promotions]=\"item.promotions\"></cx-promotions>\n\n      <!-- Actions -->\n      <div\n        *ngIf=\"(!readonly || options.isSaveForLater) && item.updateable\"\n        class=\"cx-actions col-12\"\n      >\n        <ng-container *ngIf=\"!isProductOutOfStock(item.product)\">\n          <ng-container\n            *ngTemplateOutlet=\"\n              options.optionalBtn;\n              context: {\n                $implicit: { loading: quantityControl.disabled, item: item }\n              }\n            \"\n          ></ng-container>\n        </ng-container>\n\n        <div class=\"col-md-3 cx-remove-btn\">\n          <button\n            class=\"link cx-action-link\"\n            [disabled]=\"quantityControl.disabled\"\n            (click)=\"removeItem()\"\n            attr.aria-label=\"{{ 'addToCart.removeFromCart' | cxTranslate }}\"\n          >\n            {{ 'common.remove' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #total>\n    <div\n      *ngIf=\"item.totalPrice\"\n      class=\"cx-total\"\n      [ngClass]=\"compact ? '' : ' col-md-3 col-xl-2'\"\n    >\n      <div\n        class=\"cx-label\"\n        [ngClass]=\"compact ? '' : ' d-block d-md-none d-lg-none d-xl-none'\"\n      >\n        {{ 'cartItems.total' | cxTranslate }}\n      </div>\n      <div class=\"cx-value\">{{ item.totalPrice.formattedValue }}</div>\n    </div>\n  </ng-template>\n</ng-template>\n", components: [{ type: i2.CartItemValidationWarningComponent, selector: "cx-cart-item-validation-warning", inputs: ["code"] }, { type: i3.MediaComponent, selector: "cx-media", inputs: ["container", "format", "alt", "role", "loading"], outputs: ["loaded"] }, { type: i4.ItemCounterComponent, selector: "cx-item-counter", inputs: ["control", "min", "max", "step", "allowZero", "readonly"] }, { type: i5.PromotionsComponent, selector: "cx-promotions", inputs: ["promotions"] }], directives: [{ type: i6.OutletDirective, selector: "[cxOutlet]", inputs: ["cxOutlet", "cxOutletContext", "cxOutletDefer"], outputs: ["loaded"] }, { type: i7.FeatureLevelDirective, selector: "[cxFeatureLevel]", inputs: ["cxFeatureLevel"] }, { type: i8.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i9.RouterLinkWithHref, selector: "a[routerLink],area[routerLink]", inputs: ["routerLink", "target", "queryParams", "fragment", "queryParamsHandling", "preserveFragment", "skipLocationChange", "replaceUrl", "state", "relativeTo"] }, { type: i10.ModalDirective, selector: "[cxModal]", inputs: ["cxModal", "cxModalReason"] }, { type: i8.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i8.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i8.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }], pipes: { "cxUrl": i7.UrlPipe, "cxTranslate": i7.TranslatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: CartItemComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-cart-item',
                    templateUrl: './cart-item.component.html',
                    providers: [
                        CartItemContextSource,
                        { provide: CartItemContext, useExisting: CartItemContextSource },
                    ],
                }]
        }], ctorParameters: function () { return [{ type: i1.CartItemContextSource }]; }, propDecorators: { compact: [{
                type: Input
            }], item: [{
                type: Input
            }], readonly: [{
                type: Input
            }], quantityControl: [{
                type: Input
            }], promotionLocation: [{
                type: Input
            }], options: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,