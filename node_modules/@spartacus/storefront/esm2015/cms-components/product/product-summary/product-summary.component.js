import { ChangeDetectionStrategy, Component } from '@angular/core';
import { ProductDetailOutlets } from '../product-outlets.model';
import * as i0 from "@angular/core";
import * as i1 from "../current-product.service";
import * as i2 from "@angular/common";
import * as i3 from "../../../cms-structure/outlet/outlet.directive";
import * as i4 from "@spartacus/core";
export class ProductSummaryComponent {
    constructor(currentProductService) {
        this.currentProductService = currentProductService;
        this.outlets = ProductDetailOutlets;
        this.product$ = this.currentProductService.getProduct([
            "details" /* DETAILS */,
            "price" /* PRICE */,
        ]);
    }
}
ProductSummaryComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ProductSummaryComponent, deps: [{ token: i1.CurrentProductService }], target: i0.ɵɵFactoryTarget.Component });
ProductSummaryComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: ProductSummaryComponent, selector: "cx-product-summary", ngImport: i0, template: "<ng-container *ngIf=\"product$ | async as product\">\n  <ng-template\n    [cxOutlet]=\"outlets.PRICE\"\n    [cxOutletContext]=\"{ product: product }\"\n  >\n    <div\n      [attr.aria-label]=\"'productSummary.newItemPrice' | cxTranslate\"\n      class=\"price\"\n    >\n      {{ product?.price?.formattedValue }}\n    </div>\n  </ng-template>\n\n  <ng-template\n    [cxOutlet]=\"outlets.SUMMARY\"\n    [cxOutletContext]=\"{ product: product }\"\n  >\n    <p [innerHTML]=\"product?.summary\" class=\"summary\"></p>\n  </ng-template>\n\n  <!-- @TODO: Temp. Comment out share link while not in use by CMS -->\n  <!-- <ng-container *cxOutlet=\"outlets.SHARE\">\n        <div>\n          <a href=\"#\" class=\"share btn-link\">\n            {{ 'productSummary.share' | cxTranslate }}\n          </a>\n        </div>\n      </ng-container> -->\n</ng-container>\n", directives: [{ type: i2.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i3.OutletDirective, selector: "[cxOutlet]", inputs: ["cxOutlet", "cxOutletContext", "cxOutletDefer"], outputs: ["loaded"] }], pipes: { "async": i2.AsyncPipe, "cxTranslate": i4.TranslatePipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: ProductSummaryComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-product-summary',
                    templateUrl: './product-summary.component.html',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                }]
        }], ctorParameters: function () { return [{ type: i1.CurrentProductService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJvZHVjdC1zdW1tYXJ5LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3N0b3JlZnJvbnRsaWIvY21zLWNvbXBvbmVudHMvcHJvZHVjdC9wcm9kdWN0LXN1bW1hcnkvcHJvZHVjdC1zdW1tYXJ5LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3N0b3JlZnJvbnRsaWIvY21zLWNvbXBvbmVudHMvcHJvZHVjdC9wcm9kdWN0LXN1bW1hcnkvcHJvZHVjdC1zdW1tYXJ5LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFJbkUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7Ozs7OztBQU9oRSxNQUFNLE9BQU8sdUJBQXVCO0lBUWxDLFlBQXNCLHFCQUE0QztRQUE1QywwQkFBcUIsR0FBckIscUJBQXFCLENBQXVCO1FBUGxFLFlBQU8sR0FBRyxvQkFBb0IsQ0FBQztRQUUvQixhQUFRLEdBQXdCLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxVQUFVLENBQUM7OztTQUdyRSxDQUFDLENBQUM7SUFFa0UsQ0FBQzs7b0hBUjNELHVCQUF1Qjt3R0FBdkIsdUJBQXVCLDBEQ1hwQywwMUJBNkJBOzJGRGxCYSx1QkFBdUI7a0JBTG5DLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLG9CQUFvQjtvQkFDOUIsV0FBVyxFQUFFLGtDQUFrQztvQkFDL0MsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07aUJBQ2hEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUHJvZHVjdCwgUHJvZHVjdFNjb3BlIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IEN1cnJlbnRQcm9kdWN0U2VydmljZSB9IGZyb20gJy4uL2N1cnJlbnQtcHJvZHVjdC5zZXJ2aWNlJztcbmltcG9ydCB7IFByb2R1Y3REZXRhaWxPdXRsZXRzIH0gZnJvbSAnLi4vcHJvZHVjdC1vdXRsZXRzLm1vZGVsJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnY3gtcHJvZHVjdC1zdW1tYXJ5JyxcbiAgdGVtcGxhdGVVcmw6ICcuL3Byb2R1Y3Qtc3VtbWFyeS5jb21wb25lbnQuaHRtbCcsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxufSlcbmV4cG9ydCBjbGFzcyBQcm9kdWN0U3VtbWFyeUNvbXBvbmVudCB7XG4gIG91dGxldHMgPSBQcm9kdWN0RGV0YWlsT3V0bGV0cztcblxuICBwcm9kdWN0JDogT2JzZXJ2YWJsZTxQcm9kdWN0PiA9IHRoaXMuY3VycmVudFByb2R1Y3RTZXJ2aWNlLmdldFByb2R1Y3QoW1xuICAgIFByb2R1Y3RTY29wZS5ERVRBSUxTLFxuICAgIFByb2R1Y3RTY29wZS5QUklDRSxcbiAgXSk7XG5cbiAgY29uc3RydWN0b3IocHJvdGVjdGVkIGN1cnJlbnRQcm9kdWN0U2VydmljZTogQ3VycmVudFByb2R1Y3RTZXJ2aWNlKSB7fVxufVxuIiwiPG5nLWNvbnRhaW5lciAqbmdJZj1cInByb2R1Y3QkIHwgYXN5bmMgYXMgcHJvZHVjdFwiPlxuICA8bmctdGVtcGxhdGVcbiAgICBbY3hPdXRsZXRdPVwib3V0bGV0cy5QUklDRVwiXG4gICAgW2N4T3V0bGV0Q29udGV4dF09XCJ7IHByb2R1Y3Q6IHByb2R1Y3QgfVwiXG4gID5cbiAgICA8ZGl2XG4gICAgICBbYXR0ci5hcmlhLWxhYmVsXT1cIidwcm9kdWN0U3VtbWFyeS5uZXdJdGVtUHJpY2UnIHwgY3hUcmFuc2xhdGVcIlxuICAgICAgY2xhc3M9XCJwcmljZVwiXG4gICAgPlxuICAgICAge3sgcHJvZHVjdD8ucHJpY2U/LmZvcm1hdHRlZFZhbHVlIH19XG4gICAgPC9kaXY+XG4gIDwvbmctdGVtcGxhdGU+XG5cbiAgPG5nLXRlbXBsYXRlXG4gICAgW2N4T3V0bGV0XT1cIm91dGxldHMuU1VNTUFSWVwiXG4gICAgW2N4T3V0bGV0Q29udGV4dF09XCJ7IHByb2R1Y3Q6IHByb2R1Y3QgfVwiXG4gID5cbiAgICA8cCBbaW5uZXJIVE1MXT1cInByb2R1Y3Q/LnN1bW1hcnlcIiBjbGFzcz1cInN1bW1hcnlcIj48L3A+XG4gIDwvbmctdGVtcGxhdGU+XG5cbiAgPCEtLSBAVE9ETzogVGVtcC4gQ29tbWVudCBvdXQgc2hhcmUgbGluayB3aGlsZSBub3QgaW4gdXNlIGJ5IENNUyAtLT5cbiAgPCEtLSA8bmctY29udGFpbmVyICpjeE91dGxldD1cIm91dGxldHMuU0hBUkVcIj5cbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8YSBocmVmPVwiI1wiIGNsYXNzPVwic2hhcmUgYnRuLWxpbmtcIj5cbiAgICAgICAgICAgIHt7ICdwcm9kdWN0U3VtbWFyeS5zaGFyZScgfCBjeFRyYW5zbGF0ZSB9fVxuICAgICAgICAgIDwvYT5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L25nLWNvbnRhaW5lcj4gLS0+XG48L25nLWNvbnRhaW5lcj5cbiJdfQ==