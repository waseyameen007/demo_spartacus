import { Component, ViewChild, } from '@angular/core';
import { take } from 'rxjs/operators';
import * as i0 from "@angular/core";
import * as i1 from "../../../layout/launch-dialog/services/launch-dialog.service";
import * as i2 from "@spartacus/core";
export class AnonymousConsentOpenDialogComponent {
    constructor(vcr, launchDialogService) {
        this.vcr = vcr;
        this.launchDialogService = launchDialogService;
    }
    openDialog() {
        const dialog = this.launchDialogService.openDialog("ANONYMOUS_CONSENT" /* ANONYMOUS_CONSENT */, this.openElement, this.vcr);
        if (dialog) {
            dialog.pipe(take(1)).subscribe();
        }
    }
}
AnonymousConsentOpenDialogComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: AnonymousConsentOpenDialogComponent, deps: [{ token: i0.ViewContainerRef }, { token: i1.LaunchDialogService }], target: i0.ɵɵFactoryTarget.Component });
AnonymousConsentOpenDialogComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: AnonymousConsentOpenDialogComponent, selector: "cx-anonymous-consent-open-dialog", viewQueries: [{ propertyName: "openElement", first: true, predicate: ["open"], descendants: true }], ngImport: i0, template: "<button #open class=\"btn btn-link\" (click)=\"openDialog()\">\n  {{ 'anonymousConsents.preferences' | cxTranslate }}\n</button>\n", pipes: { "cxTranslate": i2.TranslatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: AnonymousConsentOpenDialogComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-anonymous-consent-open-dialog',
                    templateUrl: './anonymous-consent-open-dialog.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i0.ViewContainerRef }, { type: i1.LaunchDialogService }]; }, propDecorators: { openElement: [{
                type: ViewChild,
                args: ['open']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5vbnltb3VzLWNvbnNlbnQtb3Blbi1kaWFsb2cuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc3RvcmVmcm9udGxpYi9jbXMtY29tcG9uZW50cy9hbm9ueW1vdXMtY29uc2VudC1tYW5hZ2VtZW50L29wZW4tZGlhbG9nL2Fub255bW91cy1jb25zZW50LW9wZW4tZGlhbG9nLmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3N0b3JlZnJvbnRsaWIvY21zLWNvbXBvbmVudHMvYW5vbnltb3VzLWNvbnNlbnQtbWFuYWdlbWVudC9vcGVuLWRpYWxvZy9hbm9ueW1vdXMtY29uc2VudC1vcGVuLWRpYWxvZy5jb21wb25lbnQuaHRtbCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUVULFNBQVMsR0FFVixNQUFNLGVBQWUsQ0FBQztBQUd2QixPQUFPLEVBQUUsSUFBSSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7Ozs7QUFNdEMsTUFBTSxPQUFPLG1DQUFtQztJQUc5QyxZQUNZLEdBQXFCLEVBQ3JCLG1CQUF3QztRQUR4QyxRQUFHLEdBQUgsR0FBRyxDQUFrQjtRQUNyQix3QkFBbUIsR0FBbkIsbUJBQW1CLENBQXFCO0lBQ2pELENBQUM7SUFFSixVQUFVO1FBQ1IsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLG1CQUFtQixDQUFDLFVBQVUsOENBRWhELElBQUksQ0FBQyxXQUFXLEVBQ2hCLElBQUksQ0FBQyxHQUFHLENBQ1QsQ0FBQztRQUNGLElBQUksTUFBTSxFQUFFO1lBQ1YsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxTQUFTLEVBQUUsQ0FBQztTQUNsQztJQUNILENBQUM7O2dJQWpCVSxtQ0FBbUM7b0hBQW5DLG1DQUFtQyw2S0NkaEQsb0lBR0E7MkZEV2EsbUNBQW1DO2tCQUovQyxTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxrQ0FBa0M7b0JBQzVDLFdBQVcsRUFBRSxnREFBZ0Q7aUJBQzlEO3lJQUVvQixXQUFXO3NCQUE3QixTQUFTO3VCQUFDLE1BQU0iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBDb21wb25lbnQsXG4gIEVsZW1lbnRSZWYsXG4gIFZpZXdDaGlsZCxcbiAgVmlld0NvbnRhaW5lclJlZixcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMYXVuY2hEaWFsb2dTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vLi4vbGF5b3V0L2xhdW5jaC1kaWFsb2cvc2VydmljZXMvbGF1bmNoLWRpYWxvZy5zZXJ2aWNlJztcbmltcG9ydCB7IExBVU5DSF9DQUxMRVIgfSBmcm9tICcuLi8uLi8uLi9sYXlvdXQvbGF1bmNoLWRpYWxvZy9jb25maWcvbGF1bmNoLWNvbmZpZyc7XG5pbXBvcnQgeyB0YWtlIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xuXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1hbm9ueW1vdXMtY29uc2VudC1vcGVuLWRpYWxvZycsXG4gIHRlbXBsYXRlVXJsOiAnLi9hbm9ueW1vdXMtY29uc2VudC1vcGVuLWRpYWxvZy5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIEFub255bW91c0NvbnNlbnRPcGVuRGlhbG9nQ29tcG9uZW50IHtcbiAgQFZpZXdDaGlsZCgnb3BlbicpIG9wZW5FbGVtZW50OiBFbGVtZW50UmVmO1xuXG4gIGNvbnN0cnVjdG9yKFxuICAgIHByb3RlY3RlZCB2Y3I6IFZpZXdDb250YWluZXJSZWYsXG4gICAgcHJvdGVjdGVkIGxhdW5jaERpYWxvZ1NlcnZpY2U6IExhdW5jaERpYWxvZ1NlcnZpY2VcbiAgKSB7fVxuXG4gIG9wZW5EaWFsb2coKTogdm9pZCB7XG4gICAgY29uc3QgZGlhbG9nID0gdGhpcy5sYXVuY2hEaWFsb2dTZXJ2aWNlLm9wZW5EaWFsb2coXG4gICAgICBMQVVOQ0hfQ0FMTEVSLkFOT05ZTU9VU19DT05TRU5ULFxuICAgICAgdGhpcy5vcGVuRWxlbWVudCxcbiAgICAgIHRoaXMudmNyXG4gICAgKTtcbiAgICBpZiAoZGlhbG9nKSB7XG4gICAgICBkaWFsb2cucGlwZSh0YWtlKDEpKS5zdWJzY3JpYmUoKTtcbiAgICB9XG4gIH1cbn1cbiIsIjxidXR0b24gI29wZW4gY2xhc3M9XCJidG4gYnRuLWxpbmtcIiAoY2xpY2spPVwib3BlbkRpYWxvZygpXCI+XG4gIHt7ICdhbm9ueW1vdXNDb25zZW50cy5wcmVmZXJlbmNlcycgfCBjeFRyYW5zbGF0ZSB9fVxuPC9idXR0b24+XG4iXX0=