import { Component } from '@angular/core';
import { PromotionLocation } from '@spartacus/core';
import { map } from 'rxjs/operators';
import { cancelledValues, completedValues, } from './order-consigned-entries/order-consigned-entries.model';
import * as i0 from "@angular/core";
import * as i1 from "../order-details.service";
import * as i2 from "../../../../misc/promotions/promotions.component";
import * as i3 from "./order-consigned-entries/order-consigned-entries.component";
import * as i4 from "../../../../cart/cart-shared/cart-item-list/cart-item-list.component";
import * as i5 from "@angular/common";
import * as i6 from "@spartacus/core";
/**
 * @deprecated since 4.2 - use order lib instead
 */
export class OrderDetailItemsComponent {
    constructor(orderDetailsService) {
        this.orderDetailsService = orderDetailsService;
        this.promotionLocation = PromotionLocation.Order;
        this.order$ = this.orderDetailsService.getOrderDetails();
    }
    ngOnInit() {
        this.others$ = this.getOtherStatus(...completedValues, ...cancelledValues);
        this.completed$ = this.getExactStatus(completedValues);
        this.cancel$ = this.getExactStatus(cancelledValues);
    }
    getExactStatus(consignmentStatus) {
        return this.order$.pipe(map((order) => {
            if (Boolean(order.consignments)) {
                return order.consignments.filter((consignment) => consignmentStatus.includes(consignment.status));
            }
        }));
    }
    getOtherStatus(...consignmentStatus) {
        return this.order$.pipe(map((order) => {
            if (Boolean(order.consignments)) {
                return order.consignments.filter((consignment) => !consignmentStatus.includes(consignment.status));
            }
        }));
    }
}
OrderDetailItemsComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: OrderDetailItemsComponent, deps: [{ token: i1.OrderDetailsService }], target: i0.ɵɵFactoryTarget.Component });
OrderDetailItemsComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.0.5", type: OrderDetailItemsComponent, selector: "cx-order-details-items", ngImport: i0, template: "<ng-container *ngIf=\"order$ | async as order\">\n  <ng-container\n    *ngIf=\"\n      order.consignments?.length ||\n      order.unconsignedEntries?.length ||\n      order.replenishmentOrderCode\n    \"\n  >\n    <cx-promotions\n      [promotions]=\"order.appliedOrderPromotions || []\"\n    ></cx-promotions>\n  </ng-container>\n\n  <!-- consigned entries -->\n  <ng-container *ngIf=\"order.consignments?.length\">\n    <cx-order-consigned-entries\n      *ngIf=\"others$ | async as others\"\n      [order]=\"order\"\n      [consignments]=\"others\"\n    ></cx-order-consigned-entries>\n\n    <cx-order-consigned-entries\n      *ngIf=\"completed$ | async as completed\"\n      [order]=\"order\"\n      [consignments]=\"completed\"\n    ></cx-order-consigned-entries>\n\n    <cx-order-consigned-entries\n      *ngIf=\"cancel$ | async as cancel\"\n      [order]=\"order\"\n      [consignments]=\"cancel\"\n    ></cx-order-consigned-entries>\n  </ng-container>\n\n  <!-- unconsigned entries OR any entries -->\n  <ng-container\n    *ngIf=\"\n      order?.unconsignedEntries?.length ||\n      (order?.entries && order?.replenishmentOrderCode)\n    \"\n  >\n    <div class=\"cx-list row\">\n      <div *ngIf=\"order?.statusDisplay\" class=\"cx-list-header col-12\">\n        <div class=\"cx-list-status\">\n          {{\n            'orderDetails.statusDisplay_' + order?.statusDisplay | cxTranslate\n          }}\n        </div>\n      </div>\n      <div class=\"cx-list-item col-12\">\n        <cx-cart-item-list\n          [items]=\"\n            order?.unconsignedEntries ? order.unconsignedEntries : order.entries\n          \"\n          [readonly]=\"true\"\n          [promotionLocation]=\"promotionLocation\"\n        ></cx-cart-item-list>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n", components: [{ type: i2.PromotionsComponent, selector: "cx-promotions", inputs: ["promotions"] }, { type: i3.OrderConsignedEntriesComponent, selector: "cx-order-consigned-entries", inputs: ["consignments", "order"] }, { type: i4.CartItemListComponent, selector: "cx-cart-item-list", inputs: ["readonly", "hasHeader", "options", "cartId", "items", "promotionLocation", "cartIsLoading"] }], directives: [{ type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }], pipes: { "async": i5.AsyncPipe, "cxTranslate": i6.TranslatePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: OrderDetailItemsComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'cx-order-details-items',
                    templateUrl: './order-detail-items.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.OrderDetailsService }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3JkZXItZGV0YWlsLWl0ZW1zLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3N0b3JlZnJvbnRsaWIvY21zLWNvbXBvbmVudHMvbXlhY2NvdW50L29yZGVyL29yZGVyLWRldGFpbHMvb3JkZXItZGV0YWlsLWl0ZW1zL29yZGVyLWRldGFpbC1pdGVtcy5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zdG9yZWZyb250bGliL2Ntcy1jb21wb25lbnRzL215YWNjb3VudC9vcmRlci9vcmRlci1kZXRhaWxzL29yZGVyLWRldGFpbC1pdGVtcy9vcmRlci1kZXRhaWwtaXRlbXMuY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLGVBQWUsQ0FBQztBQUNsRCxPQUFPLEVBQWUsaUJBQWlCLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUVqRSxPQUFPLEVBQUUsR0FBRyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFFckMsT0FBTyxFQUNMLGVBQWUsRUFDZixlQUFlLEdBQ2hCLE1BQU0seURBQXlELENBQUM7Ozs7Ozs7O0FBRWpFOztHQUVHO0FBS0gsTUFBTSxPQUFPLHlCQUF5QjtJQUNwQyxZQUFzQixtQkFBd0M7UUFBeEMsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUFxQjtRQUU5RCxzQkFBaUIsR0FBc0IsaUJBQWlCLENBQUMsS0FBSyxDQUFDO1FBQy9ELFdBQU0sR0FBb0IsSUFBSSxDQUFDLG1CQUFtQixDQUFDLGVBQWUsRUFBRSxDQUFDO0lBSEosQ0FBQztJQVFsRSxRQUFRO1FBQ04sSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLEdBQUcsZUFBZSxFQUFFLEdBQUcsZUFBZSxDQUFDLENBQUM7UUFDM0UsSUFBSSxDQUFDLFVBQVUsR0FBRyxJQUFJLENBQUMsY0FBYyxDQUFDLGVBQWUsQ0FBQyxDQUFDO1FBQ3ZELElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxlQUFlLENBQUMsQ0FBQztJQUN0RCxDQUFDO0lBRU8sY0FBYyxDQUNwQixpQkFBMkI7UUFFM0IsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FDckIsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7WUFDWixJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLEVBQUU7Z0JBQy9CLE9BQU8sS0FBSyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQUMsQ0FBQyxXQUFXLEVBQUUsRUFBRSxDQUMvQyxpQkFBaUIsQ0FBQyxRQUFRLENBQUMsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUMvQyxDQUFDO2FBQ0g7UUFDSCxDQUFDLENBQUMsQ0FDSCxDQUFDO0lBQ0osQ0FBQztJQUVPLGNBQWMsQ0FDcEIsR0FBRyxpQkFBMkI7UUFFOUIsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FDckIsR0FBRyxDQUFDLENBQUMsS0FBSyxFQUFFLEVBQUU7WUFDWixJQUFJLE9BQU8sQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLEVBQUU7Z0JBQy9CLE9BQU8sS0FBSyxDQUFDLFlBQVksQ0FBQyxNQUFNLENBQzlCLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDLGlCQUFpQixDQUFDLFFBQVEsQ0FBQyxXQUFXLENBQUMsTUFBTSxDQUFDLENBQ2pFLENBQUM7YUFDSDtRQUNILENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDOztzSEF6Q1UseUJBQXlCOzBHQUF6Qix5QkFBeUIsOERDakJ0QyxpeERBNkRBOzJGRDVDYSx5QkFBeUI7a0JBSnJDLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLHdCQUF3QjtvQkFDbEMsV0FBVyxFQUFFLHFDQUFxQztpQkFDbkQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29uc2lnbm1lbnQsIFByb21vdGlvbkxvY2F0aW9uIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IG1hcCB9IGZyb20gJ3J4anMvb3BlcmF0b3JzJztcbmltcG9ydCB7IE9yZGVyRGV0YWlsc1NlcnZpY2UgfSBmcm9tICcuLi9vcmRlci1kZXRhaWxzLnNlcnZpY2UnO1xuaW1wb3J0IHtcbiAgY2FuY2VsbGVkVmFsdWVzLFxuICBjb21wbGV0ZWRWYWx1ZXMsXG59IGZyb20gJy4vb3JkZXItY29uc2lnbmVkLWVudHJpZXMvb3JkZXItY29uc2lnbmVkLWVudHJpZXMubW9kZWwnO1xuXG4vKipcbiAqIEBkZXByZWNhdGVkIHNpbmNlIDQuMiAtIHVzZSBvcmRlciBsaWIgaW5zdGVhZFxuICovXG5AQ29tcG9uZW50KHtcbiAgc2VsZWN0b3I6ICdjeC1vcmRlci1kZXRhaWxzLWl0ZW1zJyxcbiAgdGVtcGxhdGVVcmw6ICcuL29yZGVyLWRldGFpbC1pdGVtcy5jb21wb25lbnQuaHRtbCcsXG59KVxuZXhwb3J0IGNsYXNzIE9yZGVyRGV0YWlsSXRlbXNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgb3JkZXJEZXRhaWxzU2VydmljZTogT3JkZXJEZXRhaWxzU2VydmljZSkge31cblxuICBwcm9tb3Rpb25Mb2NhdGlvbjogUHJvbW90aW9uTG9jYXRpb24gPSBQcm9tb3Rpb25Mb2NhdGlvbi5PcmRlcjtcbiAgb3JkZXIkOiBPYnNlcnZhYmxlPGFueT4gPSB0aGlzLm9yZGVyRGV0YWlsc1NlcnZpY2UuZ2V0T3JkZXJEZXRhaWxzKCk7XG4gIG90aGVycyQ6IE9ic2VydmFibGU8Q29uc2lnbm1lbnRbXT47XG4gIGNvbXBsZXRlZCQ6IE9ic2VydmFibGU8Q29uc2lnbm1lbnRbXT47XG4gIGNhbmNlbCQ6IE9ic2VydmFibGU8Q29uc2lnbm1lbnRbXT47XG5cbiAgbmdPbkluaXQoKSB7XG4gICAgdGhpcy5vdGhlcnMkID0gdGhpcy5nZXRPdGhlclN0YXR1cyguLi5jb21wbGV0ZWRWYWx1ZXMsIC4uLmNhbmNlbGxlZFZhbHVlcyk7XG4gICAgdGhpcy5jb21wbGV0ZWQkID0gdGhpcy5nZXRFeGFjdFN0YXR1cyhjb21wbGV0ZWRWYWx1ZXMpO1xuICAgIHRoaXMuY2FuY2VsJCA9IHRoaXMuZ2V0RXhhY3RTdGF0dXMoY2FuY2VsbGVkVmFsdWVzKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0RXhhY3RTdGF0dXMoXG4gICAgY29uc2lnbm1lbnRTdGF0dXM6IHN0cmluZ1tdXG4gICk6IE9ic2VydmFibGU8Q29uc2lnbm1lbnRbXT4ge1xuICAgIHJldHVybiB0aGlzLm9yZGVyJC5waXBlKFxuICAgICAgbWFwKChvcmRlcikgPT4ge1xuICAgICAgICBpZiAoQm9vbGVhbihvcmRlci5jb25zaWdubWVudHMpKSB7XG4gICAgICAgICAgcmV0dXJuIG9yZGVyLmNvbnNpZ25tZW50cy5maWx0ZXIoKGNvbnNpZ25tZW50KSA9PlxuICAgICAgICAgICAgY29uc2lnbm1lbnRTdGF0dXMuaW5jbHVkZXMoY29uc2lnbm1lbnQuc3RhdHVzKVxuICAgICAgICAgICk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIHByaXZhdGUgZ2V0T3RoZXJTdGF0dXMoXG4gICAgLi4uY29uc2lnbm1lbnRTdGF0dXM6IHN0cmluZ1tdXG4gICk6IE9ic2VydmFibGU8Q29uc2lnbm1lbnRbXT4ge1xuICAgIHJldHVybiB0aGlzLm9yZGVyJC5waXBlKFxuICAgICAgbWFwKChvcmRlcikgPT4ge1xuICAgICAgICBpZiAoQm9vbGVhbihvcmRlci5jb25zaWdubWVudHMpKSB7XG4gICAgICAgICAgcmV0dXJuIG9yZGVyLmNvbnNpZ25tZW50cy5maWx0ZXIoXG4gICAgICAgICAgICAoY29uc2lnbm1lbnQpID0+ICFjb25zaWdubWVudFN0YXR1cy5pbmNsdWRlcyhjb25zaWdubWVudC5zdGF0dXMpXG4gICAgICAgICAgKTtcbiAgICAgICAgfVxuICAgICAgfSlcbiAgICApO1xuICB9XG59XG4iLCI8bmctY29udGFpbmVyICpuZ0lmPVwib3JkZXIkIHwgYXN5bmMgYXMgb3JkZXJcIj5cbiAgPG5nLWNvbnRhaW5lclxuICAgICpuZ0lmPVwiXG4gICAgICBvcmRlci5jb25zaWdubWVudHM/Lmxlbmd0aCB8fFxuICAgICAgb3JkZXIudW5jb25zaWduZWRFbnRyaWVzPy5sZW5ndGggfHxcbiAgICAgIG9yZGVyLnJlcGxlbmlzaG1lbnRPcmRlckNvZGVcbiAgICBcIlxuICA+XG4gICAgPGN4LXByb21vdGlvbnNcbiAgICAgIFtwcm9tb3Rpb25zXT1cIm9yZGVyLmFwcGxpZWRPcmRlclByb21vdGlvbnMgfHwgW11cIlxuICAgID48L2N4LXByb21vdGlvbnM+XG4gIDwvbmctY29udGFpbmVyPlxuXG4gIDwhLS0gY29uc2lnbmVkIGVudHJpZXMgLS0+XG4gIDxuZy1jb250YWluZXIgKm5nSWY9XCJvcmRlci5jb25zaWdubWVudHM/Lmxlbmd0aFwiPlxuICAgIDxjeC1vcmRlci1jb25zaWduZWQtZW50cmllc1xuICAgICAgKm5nSWY9XCJvdGhlcnMkIHwgYXN5bmMgYXMgb3RoZXJzXCJcbiAgICAgIFtvcmRlcl09XCJvcmRlclwiXG4gICAgICBbY29uc2lnbm1lbnRzXT1cIm90aGVyc1wiXG4gICAgPjwvY3gtb3JkZXItY29uc2lnbmVkLWVudHJpZXM+XG5cbiAgICA8Y3gtb3JkZXItY29uc2lnbmVkLWVudHJpZXNcbiAgICAgICpuZ0lmPVwiY29tcGxldGVkJCB8IGFzeW5jIGFzIGNvbXBsZXRlZFwiXG4gICAgICBbb3JkZXJdPVwib3JkZXJcIlxuICAgICAgW2NvbnNpZ25tZW50c109XCJjb21wbGV0ZWRcIlxuICAgID48L2N4LW9yZGVyLWNvbnNpZ25lZC1lbnRyaWVzPlxuXG4gICAgPGN4LW9yZGVyLWNvbnNpZ25lZC1lbnRyaWVzXG4gICAgICAqbmdJZj1cImNhbmNlbCQgfCBhc3luYyBhcyBjYW5jZWxcIlxuICAgICAgW29yZGVyXT1cIm9yZGVyXCJcbiAgICAgIFtjb25zaWdubWVudHNdPVwiY2FuY2VsXCJcbiAgICA+PC9jeC1vcmRlci1jb25zaWduZWQtZW50cmllcz5cbiAgPC9uZy1jb250YWluZXI+XG5cbiAgPCEtLSB1bmNvbnNpZ25lZCBlbnRyaWVzIE9SIGFueSBlbnRyaWVzIC0tPlxuICA8bmctY29udGFpbmVyXG4gICAgKm5nSWY9XCJcbiAgICAgIG9yZGVyPy51bmNvbnNpZ25lZEVudHJpZXM/Lmxlbmd0aCB8fFxuICAgICAgKG9yZGVyPy5lbnRyaWVzICYmIG9yZGVyPy5yZXBsZW5pc2htZW50T3JkZXJDb2RlKVxuICAgIFwiXG4gID5cbiAgICA8ZGl2IGNsYXNzPVwiY3gtbGlzdCByb3dcIj5cbiAgICAgIDxkaXYgKm5nSWY9XCJvcmRlcj8uc3RhdHVzRGlzcGxheVwiIGNsYXNzPVwiY3gtbGlzdC1oZWFkZXIgY29sLTEyXCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjeC1saXN0LXN0YXR1c1wiPlxuICAgICAgICAgIHt7XG4gICAgICAgICAgICAnb3JkZXJEZXRhaWxzLnN0YXR1c0Rpc3BsYXlfJyArIG9yZGVyPy5zdGF0dXNEaXNwbGF5IHwgY3hUcmFuc2xhdGVcbiAgICAgICAgICB9fVxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgICAgPGRpdiBjbGFzcz1cImN4LWxpc3QtaXRlbSBjb2wtMTJcIj5cbiAgICAgICAgPGN4LWNhcnQtaXRlbS1saXN0XG4gICAgICAgICAgW2l0ZW1zXT1cIlxuICAgICAgICAgICAgb3JkZXI/LnVuY29uc2lnbmVkRW50cmllcyA/IG9yZGVyLnVuY29uc2lnbmVkRW50cmllcyA6IG9yZGVyLmVudHJpZXNcbiAgICAgICAgICBcIlxuICAgICAgICAgIFtyZWFkb25seV09XCJ0cnVlXCJcbiAgICAgICAgICBbcHJvbW90aW9uTG9jYXRpb25dPVwicHJvbW90aW9uTG9jYXRpb25cIlxuICAgICAgICA+PC9jeC1jYXJ0LWl0ZW0tbGlzdD5cbiAgICAgIDwvZGl2PlxuICAgIDwvZGl2PlxuICA8L25nLWNvbnRhaW5lcj5cbjwvbmctY29udGFpbmVyPlxuIl19