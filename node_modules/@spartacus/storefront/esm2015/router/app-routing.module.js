import { APP_INITIALIZER, NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { provideDefaultConfig } from '@spartacus/core';
import { defaultOnNavigateConfig } from './config/default-on-navigate-config';
import { OnNavigateService } from './on-navigate.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
export class AppRoutingModule {
}
AppRoutingModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: AppRoutingModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AppRoutingModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: AppRoutingModule, imports: [i1.RouterModule] });
AppRoutingModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: AppRoutingModule, providers: [
        provideDefaultConfig(defaultOnNavigateConfig),
        {
            provide: APP_INITIALIZER,
            useFactory: onNavigateFactory,
            deps: [OnNavigateService],
            multi: true,
        },
    ], imports: [[
            RouterModule.forRoot([], {
                anchorScrolling: 'enabled',
                relativeLinkResolution: 'corrected',
                initialNavigation: 'enabled',
            }),
        ]] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: AppRoutingModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [
                        RouterModule.forRoot([], {
                            anchorScrolling: 'enabled',
                            relativeLinkResolution: 'corrected',
                            initialNavigation: 'enabled',
                        }),
                    ],
                    providers: [
                        provideDefaultConfig(defaultOnNavigateConfig),
                        {
                            provide: APP_INITIALIZER,
                            useFactory: onNavigateFactory,
                            deps: [OnNavigateService],
                            multi: true,
                        },
                    ],
                }]
        }] });
export function onNavigateFactory(onNavigateService) {
    const isReady = () => onNavigateService.initializeWithConfig();
    return isReady;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBwLXJvdXRpbmcubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvc3RvcmVmcm9udGxpYi9yb3V0ZXIvYXBwLXJvdXRpbmcubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUM5RSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQzs7O0FBb0IxRCxNQUFNLE9BQU8sZ0JBQWdCOzs2R0FBaEIsZ0JBQWdCOzhHQUFoQixnQkFBZ0I7OEdBQWhCLGdCQUFnQixhQVZoQjtRQUNULG9CQUFvQixDQUFDLHVCQUF1QixDQUFDO1FBQzdDO1lBQ0UsT0FBTyxFQUFFLGVBQWU7WUFDeEIsVUFBVSxFQUFFLGlCQUFpQjtZQUM3QixJQUFJLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztZQUN6QixLQUFLLEVBQUUsSUFBSTtTQUNaO0tBQ0YsWUFmUTtZQUNQLFlBQVksQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFO2dCQUN2QixlQUFlLEVBQUUsU0FBUztnQkFDMUIsc0JBQXNCLEVBQUUsV0FBVztnQkFDbkMsaUJBQWlCLEVBQUUsU0FBUzthQUM3QixDQUFDO1NBQ0g7MkZBV1UsZ0JBQWdCO2tCQWxCNUIsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsWUFBWSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUU7NEJBQ3ZCLGVBQWUsRUFBRSxTQUFTOzRCQUMxQixzQkFBc0IsRUFBRSxXQUFXOzRCQUNuQyxpQkFBaUIsRUFBRSxTQUFTO3lCQUM3QixDQUFDO3FCQUNIO29CQUNELFNBQVMsRUFBRTt3QkFDVCxvQkFBb0IsQ0FBQyx1QkFBdUIsQ0FBQzt3QkFDN0M7NEJBQ0UsT0FBTyxFQUFFLGVBQWU7NEJBQ3hCLFVBQVUsRUFBRSxpQkFBaUI7NEJBQzdCLElBQUksRUFBRSxDQUFDLGlCQUFpQixDQUFDOzRCQUN6QixLQUFLLEVBQUUsSUFBSTt5QkFDWjtxQkFDRjtpQkFDRjs7QUFHRCxNQUFNLFVBQVUsaUJBQWlCLENBQy9CLGlCQUFvQztJQUVwQyxNQUFNLE9BQU8sR0FBRyxHQUFHLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQyxvQkFBb0IsRUFBRSxDQUFDO0lBQy9ELE9BQU8sT0FBTyxDQUFDO0FBQ2pCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBUFBfSU5JVElBTElaRVIsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xuaW1wb3J0IHsgcHJvdmlkZURlZmF1bHRDb25maWcgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgZGVmYXVsdE9uTmF2aWdhdGVDb25maWcgfSBmcm9tICcuL2NvbmZpZy9kZWZhdWx0LW9uLW5hdmlnYXRlLWNvbmZpZyc7XG5pbXBvcnQgeyBPbk5hdmlnYXRlU2VydmljZSB9IGZyb20gJy4vb24tbmF2aWdhdGUuc2VydmljZSc7XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtcbiAgICBSb3V0ZXJNb2R1bGUuZm9yUm9vdChbXSwge1xuICAgICAgYW5jaG9yU2Nyb2xsaW5nOiAnZW5hYmxlZCcsXG4gICAgICByZWxhdGl2ZUxpbmtSZXNvbHV0aW9uOiAnY29ycmVjdGVkJyxcbiAgICAgIGluaXRpYWxOYXZpZ2F0aW9uOiAnZW5hYmxlZCcsXG4gICAgfSksXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIHByb3ZpZGVEZWZhdWx0Q29uZmlnKGRlZmF1bHRPbk5hdmlnYXRlQ29uZmlnKSxcbiAgICB7XG4gICAgICBwcm92aWRlOiBBUFBfSU5JVElBTElaRVIsXG4gICAgICB1c2VGYWN0b3J5OiBvbk5hdmlnYXRlRmFjdG9yeSxcbiAgICAgIGRlcHM6IFtPbk5hdmlnYXRlU2VydmljZV0sXG4gICAgICBtdWx0aTogdHJ1ZSxcbiAgICB9LFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBBcHBSb3V0aW5nTW9kdWxlIHt9XG5cbmV4cG9ydCBmdW5jdGlvbiBvbk5hdmlnYXRlRmFjdG9yeShcbiAgb25OYXZpZ2F0ZVNlcnZpY2U6IE9uTmF2aWdhdGVTZXJ2aWNlXG4pOiAoKSA9PiB2b2lkIHtcbiAgY29uc3QgaXNSZWFkeSA9ICgpID0+IG9uTmF2aWdhdGVTZXJ2aWNlLmluaXRpYWxpemVXaXRoQ29uZmlnKCk7XG4gIHJldHVybiBpc1JlYWR5O1xufVxuIl19