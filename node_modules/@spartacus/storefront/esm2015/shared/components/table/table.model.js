/**
 * Layout orientation for the table configuration.
 */
export var TableLayout;
(function (TableLayout) {
    /**
     * Renders the table vertically, with a heading on top of the table.
     *
     * Vertical layout is most common and the default layout.
     */
    TableLayout[TableLayout["VERTICAL"] = 1] = "VERTICAL";
    /**
     * Stacks items in a tables by generating a `tbody` for each item.
     */
    TableLayout[TableLayout["VERTICAL_STACKED"] = 2] = "VERTICAL_STACKED";
    /**
     * Horizontal oriented table layout renders the table headers in the first column of the table.
     */
    TableLayout[TableLayout["HORIZONTAL"] = 3] = "HORIZONTAL";
})(TableLayout || (TableLayout = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGFibGUubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zdG9yZWZyb250bGliL3NoYXJlZC9jb21wb25lbnRzL3RhYmxlL3RhYmxlLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQTJFQTs7R0FFRztBQUNILE1BQU0sQ0FBTixJQUFZLFdBaUJYO0FBakJELFdBQVksV0FBVztJQUNyQjs7OztPQUlHO0lBQ0gscURBQVksQ0FBQTtJQUVaOztPQUVHO0lBQ0gscUVBQWdCLENBQUE7SUFFaEI7O09BRUc7SUFDSCx5REFBVSxDQUFBO0FBQ1osQ0FBQyxFQWpCVyxXQUFXLEtBQVgsV0FBVyxRQWlCdEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQYWdpbmF0aW9uTW9kZWwgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuXG4vKipcbiAqIENvbnRhaW5zIHRoZSB0YWJsZSBkYXRhIGFuZCBzdHJ1Y3R1cmUgZm9yIHRoZSBgVGFibGVDb21wb25lbnRgLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFRhYmxlPFQgPSBhbnk+IHtcbiAgLyoqXG4gICAqIFRoZSB0YWJsZSBzdHJ1Y3R1cmUgcHJvdmlkZXMgZGV0YWlscyBhYm91dCB0aGUgaGVhZGVycyBvZiB0aGUgdGFibGUuXG4gICAqL1xuICBzdHJ1Y3R1cmU6IFRhYmxlU3RydWN0dXJlO1xuXG4gIC8qKlxuICAgKiBUaGUgZGF0YSB0aGF0IGlzIGxpc3RlZCBpbiB0aGUgdGFibGUgY29tcG9uZW50LlxuICAgKi9cbiAgZGF0YTogVFtdO1xuXG4gIC8qKlxuICAgKiBUaGUgcGFnaW5hdGlvbiBjb21wb25lbnQgaXMgdXNlZCB0byBwYWdpbmF0ZSB0aHJvdWdoIHRoZSBkYXRhLlxuICAgKi9cbiAgcGFnaW5hdGlvbj86IFBhZ2luYXRpb25Nb2RlbDtcblxuICAvKipcbiAgICogVGhlIHNvcnQgb3B0aW9ucyBmb3IgdGhlIHRhYmxlLlxuICAgKi9cbiAgc29ydHM/OiBhbnlbXTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUYWJsZVN0cnVjdHVyZUNvbmZpZ3VyYXRpb24ge1xuICAvKipcbiAgICogUHJvdmlkZSB0aGUgYmFyZSBzdHJ1Y3R1cmUgb2YgdGhlIHRhYmxlLlxuICAgKi9cbiAgY2VsbHM/OiBzdHJpbmdbXTtcblxuICAvKipcbiAgICogR2xvYmFsIHRhYmxlIHN0cnVjdHVyZSBvcHRpb25zLlxuICAgKi9cbiAgb3B0aW9ucz86IFRhYmxlT3B0aW9ucztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUYWJsZU9wdGlvbnMge1xuICAvKipcbiAgICogRGVmYXVsdCBwYWdpbmF0aW9uIGZvciB0aGUgdGFibGUgdGhhdCBpcyB1c2VkIGZvciB0aGUgaW5pdGlhbCBsb2FkIG9mIHRoZSB0YWJsZSBkYXRhLlxuICAgKi9cbiAgcGFnaW5hdGlvbj86IFBhZ2luYXRpb25Nb2RlbDtcblxuICAvKipcbiAgICogVGhlIGxheW91dCBmb3IgdGhlIHRhYmxlIGNvbXBvbmVudCBjYW4gYmUgdXNlZCBmb3IgaG9yaXpvbnRhbCwgdmVydGljYWwgYW5kIHZlcnRpY2FsIHN0YWNrZWRcbiAgICogdGFibGUgbGF5b3V0cy5cbiAgICovXG4gIGxheW91dD86IFRhYmxlTGF5b3V0O1xuXG4gIC8qKlxuICAgKiBHbG9iYWwgY29tcG9uZW50IHRvIHJlbmRlciB0YWJsZSBoZWFkZXIgX2NvbnRlbnRfIChgPHRoPi4uLjwvdGg+YCkuIEEgc3BlY2lmaWMgY29tcG9uZW50IHBlclxuICAgKiBmaWVsZCBjYW4gYmUgY29uZmlndXJlZCBhbHRlcm5hdGl2ZWx5LlxuICAgKlxuICAgKiBJZiBubyBjb21wb25lbnQgaXMgYXZhaWxhYmxlLCB0aGUgdGFibGUgY29tcG9uZW50IHdpbGwgcmVuZGVyIGEgc3RhdGljIGxhYmVsIG9yIHVzZSB0aGVcbiAgICogY29uZmlndXJlZCBpMThuIGxhYmVsLlxuICAgKi9cbiAgaGVhZGVyQ29tcG9uZW50PzogVHlwZTxhbnk+O1xuXG4gIC8qKlxuICAgKiBHbG9iYWwgY29tcG9uZW50IHRvIHJlbmRlciB0YWJsZSBjZWxsIF9jb250ZW50XyAoYDx0ZD4uLi48L3RkPmApLiBBIHNwZWNpZmljIGNvbXBvbmVudCBwZXJcbiAgICogZmllbGQgY2FuIGJlIGNvbmZpZ3VyZWQgYWx0ZXJuYXRpdmVseS5cbiAgICpcbiAgICogSWYgbm8gY29tcG9uZW50IGlzIGF2YWlsYWJsZSwgdGhlIHRhYmxlIGNvbnRlbnQgd2lsbCByZW5kZXIgYXMtaXMuXG4gICAqL1xuICBkYXRhQ29tcG9uZW50PzogVHlwZTxhbnk+O1xuXG4gIC8vIGZpZWxkIHNwZWNpZmljIG9wdGlvbnNcbiAgY2VsbHM/OiB7XG4gICAgW2ZpZWxkS2V5OiBzdHJpbmddOiBUYWJsZUZpZWxkT3B0aW9ucztcbiAgfTtcbn1cblxuLyoqXG4gKiBMYXlvdXQgb3JpZW50YXRpb24gZm9yIHRoZSB0YWJsZSBjb25maWd1cmF0aW9uLlxuICovXG5leHBvcnQgZW51bSBUYWJsZUxheW91dCB7XG4gIC8qKlxuICAgKiBSZW5kZXJzIHRoZSB0YWJsZSB2ZXJ0aWNhbGx5LCB3aXRoIGEgaGVhZGluZyBvbiB0b3Agb2YgdGhlIHRhYmxlLlxuICAgKlxuICAgKiBWZXJ0aWNhbCBsYXlvdXQgaXMgbW9zdCBjb21tb24gYW5kIHRoZSBkZWZhdWx0IGxheW91dC5cbiAgICovXG4gIFZFUlRJQ0FMID0gMSxcblxuICAvKipcbiAgICogU3RhY2tzIGl0ZW1zIGluIGEgdGFibGVzIGJ5IGdlbmVyYXRpbmcgYSBgdGJvZHlgIGZvciBlYWNoIGl0ZW0uXG4gICAqL1xuICBWRVJUSUNBTF9TVEFDS0VELFxuXG4gIC8qKlxuICAgKiBIb3Jpem9udGFsIG9yaWVudGVkIHRhYmxlIGxheW91dCByZW5kZXJzIHRoZSB0YWJsZSBoZWFkZXJzIGluIHRoZSBmaXJzdCBjb2x1bW4gb2YgdGhlIHRhYmxlLlxuICAgKi9cbiAgSE9SSVpPTlRBTCxcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUYWJsZUZpZWxkT3B0aW9ucyB7XG4gIC8qKlxuICAgKiBPcHRpb25hbCBsYWJlbCB0byBhZGQgc3RhdGljIG9yIGxvY2FsaXplZCBoZWFkZXJzLiBJZiB0aGUgbGFiZWwgaXMgbm90IHByZXNlbnQsIHRoZVxuICAgKiBmaWVsZCBrZXkgaXMgbWFwcGVkIHRvIGEgaTE4biBwcm9wZXJ0eS5cbiAgICovXG4gIGxhYmVsPzogc3RyaW5nIHwgVGFibGVIZWFkZXI7XG5cbiAgLyoqXG4gICAqIEluZGljYXRlcyB3ZXRoZXIgdGhlIGNlbGwgaXMgbGlua2FibGUuXG4gICAqXG4gICAqIElmIHRoZSBjZWxscyBpcyBsaW5rYWJsZSwgYW4gYW5jaG9yIGxpbmsgY2FuIGJlIGdlbmVyYXRlZCBpbiB0aGUgdGFibGUgZGF0YSBlbGVtZW50LlxuICAgKi9cbiAgbGlua2FibGU/OiBib29sZWFuO1xuXG4gIC8qKlxuICAgKiBDb21wb25lbnQgdG8gcmVuZGVyIHRhYmxlIGhlYWRlciBfY29udGVudF8gKGA8dGg+Li4uPC90aD5gKSBmb3IgdGhlIHRhYmxlIGZpZWxkLlxuICAgKlxuICAgKiBJZiBubyBjb21wb25lbnQgaXMgY29uZmlndXJlZCwgdGhlIGdsb2JhbCB0YWJsZSBjb21wb25lbnQgZm9yIHRoZSBoZWFkZXIgd2lsbCBiZSB1c2VkXG4gICAqIGluc3RlYWQuXG4gICAqL1xuICBoZWFkZXJDb21wb25lbnQ/OiBUeXBlPGFueT47XG5cbiAgLyoqXG4gICAqIENvbXBvbmVudCB0byByZW5kZXIgdGFibGUgZGF0YSBfY29udGVudF8gKGA8dGQ+Li4uPC90ZD5gKSBmb3IgdGhlIHRhYmxlIGZpZWxkLlxuICAgKlxuICAgKiBJZiBubyBjb21wb25lbnQgaXMgY29uZmlndXJlZCwgdGhlIGdsb2JhbCB0YWJsZSBjb21wb25lbnQgZm9yIHRoZSBjZWxsIGRhdGEgd2lsbCBiZSB1c2VkXG4gICAqIGluc3RlYWQuXG4gICAqL1xuICBkYXRhQ29tcG9uZW50PzogVHlwZTxhbnk+O1xufVxuXG4vKipcbiAqIFRoZSBUYWJsZVN0cnVjdHVyZSBob2xkcyB0aGUgaGVhZGVyIHN0cnVjdHVyZSBvZiB0aGUgdGFibGUuXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgVGFibGVTdHJ1Y3R1cmUgZXh0ZW5kcyBUYWJsZVN0cnVjdHVyZUNvbmZpZ3VyYXRpb24ge1xuICAvKipcbiAgICogVGhlIHRhYmxlIHR5cGUgaXMgYSBtYW5kYXRvcnkgcHJvcGVydHkuIFRoZSB0eXBlIGlzIHVzZWQgdG8gaWRlbnRpZnkgdGhlIHRhYmxlXG4gICAqIGNvbmZpZ3VyYXRpb24gYW5kIGlzIHVzZWQgdG8gZ2VuZXJhdGUgYSB1bmlxdWUgb3V0bGV0IHJlZmVyZW5jZS5cbiAgICovXG4gIHR5cGU6IHN0cmluZztcbn1cblxuLyoqXG4gKiBQcm92aWRlcyB0aGUgY29yZSB0YWJsZSBzdHJ1Y3R1cmUsIHR5cGljYWxseSBiZWluZyB1c2VkIHRvIHJlbmRlciB0YWJsZSBjb2x1bW5zLlxuICovXG5leHBvcnQgaW50ZXJmYWNlIFRhYmxlSGVhZGVyIHtcbiAgLyoqXG4gICAqIFRoZSBoZWFkZXIga2V5IGlzIHVzZWQgdG86XG4gICAqIC0gZ2VuZXJhdGUgYSB1bmlxdWUgY2xhc3Mgb24gZWFjaCB0YWJsZSByb3dcbiAgICogLSBnZW5lcmF0ZSBhIHRlbXBsYXRlIGZvciBlYWNoIHRhYmxlIGhlYWRlciBjZWxsIGFuZCBkYXRhIGNlbGxcbiAgICogLSB0cmFuc2xhdGUgdGhlIGtleSB1c2luZyB0aGUgdHJhbnNsYXRlIG1vZHVsZVxuICAgKiAgIChmYWxsYmFjayBpbiBjYXNlIHRoZXJlIGlzIG5vIGxhYmVsIGF2YWlsYWJsZSlcbiAgICovXG4gIGkxOG5LZXk/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgVGFibGVIZWFkZXJPdXRsZXRDb250ZXh0IHtcbiAgX3R5cGU6IHN0cmluZztcbiAgX2ZpZWxkOiBzdHJpbmc7XG4gIF9vcHRpb25zPzogVGFibGVPcHRpb25zO1xuICAvKipcbiAgICogVGhlIGkxOG5Sb290IGlzIHVzZWQgdG8gYnVpbGQgbG9jYWxpemVkIHRhYmxlIGhlYWRlcnMuIFRoZSBpMThuUm9vdFxuICAgKiBpcyB1c2VkIGFzIGEgcHJlZml4IGZvciB0aGUgYF9maWVsZGAuIFRhYmxlIGhlYWRlciBsYWJlbHMgd2lsIHVzZSB0aGVcbiAgICogZm9sbG93aW5nIGxvY2FsZXM6XG4gICAqXG4gICAqIGBbaTE4blJvb3RdLltfZmllbGRdYFxuICAgKi9cbiAgX2kxOG5Sb290Pzogc3RyaW5nO1xufVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWludGVyZmFjZVxuZXhwb3J0IGludGVyZmFjZSBUYWJsZURhdGFPdXRsZXRDb250ZXh0IGV4dGVuZHMgVGFibGVIZWFkZXJPdXRsZXRDb250ZXh0IHtcbiAgW3Byb3BlcnR5OiBzdHJpbmddOiBhbnk7XG59XG4iXX0=