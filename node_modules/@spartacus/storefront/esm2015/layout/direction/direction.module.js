import { APP_INITIALIZER, NgModule } from '@angular/core';
import { FeatureConfigService, provideDefaultConfig } from '@spartacus/core';
import { defaultDirectionConfig } from './config/default-direction.config';
import { DirectionService } from './direction.service';
import * as i0 from "@angular/core";
export function initHtmlDirAttribute(directionService, featureConfigService) {
    const result = () => {
        if (featureConfigService.isLevel('2.1')) {
            return directionService.initialize();
        }
    };
    return result;
}
/**
 * Provides a configuration and APP_INITIALIZER to add the correct (language drive) html direction.
 */
export class DirectionModule {
}
DirectionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: DirectionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
DirectionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: DirectionModule });
DirectionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: DirectionModule, providers: [
        {
            provide: APP_INITIALIZER,
            multi: true,
            useFactory: initHtmlDirAttribute,
            deps: [DirectionService, FeatureConfigService],
        },
        provideDefaultConfig(defaultDirectionConfig),
    ] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: DirectionModule, decorators: [{
            type: NgModule,
            args: [{
                    providers: [
                        {
                            provide: APP_INITIALIZER,
                            multi: true,
                            useFactory: initHtmlDirAttribute,
                            deps: [DirectionService, FeatureConfigService],
                        },
                        provideDefaultConfig(defaultDirectionConfig),
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlyZWN0aW9uLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3N0b3JlZnJvbnRsaWIvbGF5b3V0L2RpcmVjdGlvbi9kaXJlY3Rpb24ubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxlQUFlLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzdFLE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLG1DQUFtQyxDQUFDO0FBQzNFLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFCQUFxQixDQUFDOztBQUV2RCxNQUFNLFVBQVUsb0JBQW9CLENBQ2xDLGdCQUFrQyxFQUNsQyxvQkFBMEM7SUFFMUMsTUFBTSxNQUFNLEdBQUcsR0FBRyxFQUFFO1FBQ2xCLElBQUksb0JBQW9CLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxFQUFFO1lBQ3ZDLE9BQU8sZ0JBQWdCLENBQUMsVUFBVSxFQUFFLENBQUM7U0FDdEM7SUFDSCxDQUFDLENBQUM7SUFDRixPQUFPLE1BQU0sQ0FBQztBQUNoQixDQUFDO0FBRUQ7O0dBRUc7QUFZSCxNQUFNLE9BQU8sZUFBZTs7NEdBQWYsZUFBZTs2R0FBZixlQUFlOzZHQUFmLGVBQWUsYUFWZjtRQUNUO1lBQ0UsT0FBTyxFQUFFLGVBQWU7WUFDeEIsS0FBSyxFQUFFLElBQUk7WUFDWCxVQUFVLEVBQUUsb0JBQW9CO1lBQ2hDLElBQUksRUFBRSxDQUFDLGdCQUFnQixFQUFFLG9CQUFvQixDQUFDO1NBQy9DO1FBQ0Qsb0JBQW9CLENBQUMsc0JBQXNCLENBQUM7S0FDN0M7MkZBRVUsZUFBZTtrQkFYM0IsUUFBUTttQkFBQztvQkFDUixTQUFTLEVBQUU7d0JBQ1Q7NEJBQ0UsT0FBTyxFQUFFLGVBQWU7NEJBQ3hCLEtBQUssRUFBRSxJQUFJOzRCQUNYLFVBQVUsRUFBRSxvQkFBb0I7NEJBQ2hDLElBQUksRUFBRSxDQUFDLGdCQUFnQixFQUFFLG9CQUFvQixDQUFDO3lCQUMvQzt3QkFDRCxvQkFBb0IsQ0FBQyxzQkFBc0IsQ0FBQztxQkFDN0M7aUJBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBUFBfSU5JVElBTElaRVIsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBGZWF0dXJlQ29uZmlnU2VydmljZSwgcHJvdmlkZURlZmF1bHRDb25maWcgfSBmcm9tICdAc3BhcnRhY3VzL2NvcmUnO1xuaW1wb3J0IHsgZGVmYXVsdERpcmVjdGlvbkNvbmZpZyB9IGZyb20gJy4vY29uZmlnL2RlZmF1bHQtZGlyZWN0aW9uLmNvbmZpZyc7XG5pbXBvcnQgeyBEaXJlY3Rpb25TZXJ2aWNlIH0gZnJvbSAnLi9kaXJlY3Rpb24uc2VydmljZSc7XG5cbmV4cG9ydCBmdW5jdGlvbiBpbml0SHRtbERpckF0dHJpYnV0ZShcbiAgZGlyZWN0aW9uU2VydmljZTogRGlyZWN0aW9uU2VydmljZSxcbiAgZmVhdHVyZUNvbmZpZ1NlcnZpY2U6IEZlYXR1cmVDb25maWdTZXJ2aWNlXG4pOiAoKSA9PiB2b2lkIHtcbiAgY29uc3QgcmVzdWx0ID0gKCkgPT4ge1xuICAgIGlmIChmZWF0dXJlQ29uZmlnU2VydmljZS5pc0xldmVsKCcyLjEnKSkge1xuICAgICAgcmV0dXJuIGRpcmVjdGlvblNlcnZpY2UuaW5pdGlhbGl6ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuLyoqXG4gKiBQcm92aWRlcyBhIGNvbmZpZ3VyYXRpb24gYW5kIEFQUF9JTklUSUFMSVpFUiB0byBhZGQgdGhlIGNvcnJlY3QgKGxhbmd1YWdlIGRyaXZlKSBodG1sIGRpcmVjdGlvbi5cbiAqL1xuQE5nTW9kdWxlKHtcbiAgcHJvdmlkZXJzOiBbXG4gICAge1xuICAgICAgcHJvdmlkZTogQVBQX0lOSVRJQUxJWkVSLFxuICAgICAgbXVsdGk6IHRydWUsXG4gICAgICB1c2VGYWN0b3J5OiBpbml0SHRtbERpckF0dHJpYnV0ZSxcbiAgICAgIGRlcHM6IFtEaXJlY3Rpb25TZXJ2aWNlLCBGZWF0dXJlQ29uZmlnU2VydmljZV0sXG4gICAgfSxcbiAgICBwcm92aWRlRGVmYXVsdENvbmZpZyhkZWZhdWx0RGlyZWN0aW9uQ29uZmlnKSxcbiAgXSxcbn0pXG5leHBvcnQgY2xhc3MgRGlyZWN0aW9uTW9kdWxlIHt9XG4iXX0=