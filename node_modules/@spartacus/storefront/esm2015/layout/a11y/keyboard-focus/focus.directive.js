import { Directive, Input } from '@angular/core';
import { LockFocusDirective } from './lock/lock-focus.directive';
import * as i0 from "@angular/core";
import * as i1 from "./services/keyboard-focus.service";
export class FocusDirective extends LockFocusDirective {
    constructor(elementRef, service, renderer) {
        super(elementRef, service, renderer);
        this.elementRef = elementRef;
        this.service = service;
        this.renderer = renderer;
        this.defaultConfig = {};
        this.config = {};
    }
}
FocusDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: FocusDirective, deps: [{ token: i0.ElementRef }, { token: i1.KeyboardFocusService }, { token: i0.Renderer2 }], target: i0.ɵɵFactoryTarget.Directive });
FocusDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "12.0.0", version: "12.0.5", type: FocusDirective, selector: "[cxFocus]", inputs: { config: ["cxFocus", "config"] }, usesInheritance: true, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: FocusDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[cxFocus]',
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i1.KeyboardFocusService }, { type: i0.Renderer2 }]; }, propDecorators: { config: [{
                type: Input,
                args: ['cxFocus']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9jdXMuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvc3RvcmVmcm9udGxpYi9sYXlvdXQvYTExeS9rZXlib2FyZC1mb2N1cy9mb2N1cy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBYyxLQUFLLEVBQWEsTUFBTSxlQUFlLENBQUM7QUFFeEUsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7OztBQU1qRSxNQUFNLE9BQU8sY0FBZSxTQUFRLGtCQUFrQjtJQUtwRCxZQUNZLFVBQXNCLEVBQ3RCLE9BQTZCLEVBQzdCLFFBQW1CO1FBRTdCLEtBQUssQ0FBQyxVQUFVLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBSjNCLGVBQVUsR0FBVixVQUFVLENBQVk7UUFDdEIsWUFBTyxHQUFQLE9BQU8sQ0FBc0I7UUFDN0IsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQVByQixrQkFBYSxHQUFnQixFQUFFLENBQUM7UUFFeEIsV0FBTSxHQUFnQixFQUFFLENBQUM7SUFRM0MsQ0FBQzs7MkdBWFUsY0FBYzsrRkFBZCxjQUFjOzJGQUFkLGNBQWM7a0JBSDFCLFNBQVM7bUJBQUM7b0JBQ1QsUUFBUSxFQUFFLFdBQVc7aUJBQ3RCOzRKQUltQixNQUFNO3NCQUF2QixLQUFLO3VCQUFDLFNBQVMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEVsZW1lbnRSZWYsIElucHV0LCBSZW5kZXJlcjIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEZvY3VzQ29uZmlnIH0gZnJvbSAnLi9rZXlib2FyZC1mb2N1cy5tb2RlbCc7XG5pbXBvcnQgeyBMb2NrRm9jdXNEaXJlY3RpdmUgfSBmcm9tICcuL2xvY2svbG9jay1mb2N1cy5kaXJlY3RpdmUnO1xuaW1wb3J0IHsgS2V5Ym9hcmRGb2N1c1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2tleWJvYXJkLWZvY3VzLnNlcnZpY2UnO1xuXG5ARGlyZWN0aXZlKHtcbiAgc2VsZWN0b3I6ICdbY3hGb2N1c10nLFxufSlcbmV4cG9ydCBjbGFzcyBGb2N1c0RpcmVjdGl2ZSBleHRlbmRzIExvY2tGb2N1c0RpcmVjdGl2ZSB7XG4gIHByb3RlY3RlZCBkZWZhdWx0Q29uZmlnOiBGb2N1c0NvbmZpZyA9IHt9O1xuXG4gIEBJbnB1dCgnY3hGb2N1cycpIGNvbmZpZzogRm9jdXNDb25maWcgPSB7fTtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcm90ZWN0ZWQgZWxlbWVudFJlZjogRWxlbWVudFJlZixcbiAgICBwcm90ZWN0ZWQgc2VydmljZTogS2V5Ym9hcmRGb2N1c1NlcnZpY2UsXG4gICAgcHJvdGVjdGVkIHJlbmRlcmVyOiBSZW5kZXJlcjJcbiAgKSB7XG4gICAgc3VwZXIoZWxlbWVudFJlZiwgc2VydmljZSwgcmVuZGVyZXIpO1xuICB9XG59XG4iXX0=