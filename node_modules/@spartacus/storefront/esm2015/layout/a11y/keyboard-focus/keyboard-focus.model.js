/** The element attribute used to store the focus state */
export const FOCUS_ATTR = 'data-cx-focus';
/** The element attribute used to store the focus group state */
export const FOCUS_GROUP_ATTR = 'data-cx-focus-group';
export var TrapFocus;
(function (TrapFocus) {
    /**
     * Will trap the focus at the start of the focus group.
     */
    TrapFocus["start"] = "start";
    /**
     * Will trap the focus only at the end of the focus group.
     */
    TrapFocus["end"] = "end";
    /**
     * Will not trap the focus in both directions. This is actually not are
     * a great example of focus trap, but it will give the benefit of keyboard
     * tabbing by arrows.
     */
    TrapFocus["both"] = "both";
})(TrapFocus || (TrapFocus = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoia2V5Ym9hcmQtZm9jdXMubW9kZWwuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9zdG9yZWZyb250bGliL2xheW91dC9hMTF5L2tleWJvYXJkLWZvY3VzL2tleWJvYXJkLWZvY3VzLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLDBEQUEwRDtBQUMxRCxNQUFNLENBQUMsTUFBTSxVQUFVLEdBQUcsZUFBZSxDQUFDO0FBQzFDLGdFQUFnRTtBQUNoRSxNQUFNLENBQUMsTUFBTSxnQkFBZ0IsR0FBRyxxQkFBcUIsQ0FBQztBQTBFdEQsTUFBTSxDQUFOLElBQVksU0FlWDtBQWZELFdBQVksU0FBUztJQUNuQjs7T0FFRztJQUNILDRCQUFlLENBQUE7SUFDZjs7T0FFRztJQUNILHdCQUFXLENBQUE7SUFDWDs7OztPQUlHO0lBQ0gsMEJBQWEsQ0FBQTtBQUNmLENBQUMsRUFmVyxTQUFTLEtBQVQsU0FBUyxRQWVwQiIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBUaGUgZWxlbWVudCBhdHRyaWJ1dGUgdXNlZCB0byBzdG9yZSB0aGUgZm9jdXMgc3RhdGUgKi9cbmV4cG9ydCBjb25zdCBGT0NVU19BVFRSID0gJ2RhdGEtY3gtZm9jdXMnO1xuLyoqIFRoZSBlbGVtZW50IGF0dHJpYnV0ZSB1c2VkIHRvIHN0b3JlIHRoZSBmb2N1cyBncm91cCBzdGF0ZSAqL1xuZXhwb3J0IGNvbnN0IEZPQ1VTX0dST1VQX0FUVFIgPSAnZGF0YS1jeC1mb2N1cy1ncm91cCc7XG5cbmV4cG9ydCBjb25zdCBlbnVtIE1PVkVfRk9DVVMge1xuICBORVhUID0gMSxcbiAgUFJFViA9IC0xLFxufVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWludGVyZmFjZVxuZXhwb3J0IGludGVyZmFjZSBCYXNlRm9jdXNDb25maWcge31cblxuZXhwb3J0IGludGVyZmFjZSBWaXNpYmxlRm9jdXNDb25maWcge1xuICAvKipcbiAgICogV2hlbiBzZXQgdG8gdHJ1ZSwgdGhlIGBtb3VzZS1mb2N1c2AgY2xhc3MgaXMgYWRkZWQgdG8gdGhlIGhvc3QgZWxlbWVudCxcbiAgICogaW5kaWNhdGluZyB0aGF0IHRoZSBlbGVtZW50IGZvY3VzIHNob3VsZCBub3QgYmUgbWFkZSB2aXNpYmxlLlxuICAgKi9cbiAgZGlzYWJsZU1vdXNlRm9jdXM/OiBib29sZWFuO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEJsb2NrRm9jdXNDb25maWcgZXh0ZW5kcyBWaXNpYmxlRm9jdXNDb25maWcge1xuICBibG9jaz86IGJvb2xlYW47XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGVyc2lzdEZvY3VzQ29uZmlnIGV4dGVuZHMgQmxvY2tGb2N1c0NvbmZpZyB7XG4gIC8qKlxuICAgKiBBIGtleSB0byBtYWludGFpbiB0aGUgZm9jdXMgb2YgYW4gZWxlbWVudCBpbiBjYXNlIHRoZSBjb21wb25lbnQgaXNcbiAgICogcmVjcmVhdGVkICh3aGljaCBvZnRlbiBpcyB0aGUgY2FzZSB3aGVuIGFuIGAqbmdJZmAgb3IgYCpuZ0ZvcmAgaXMgdXNlZCkuXG4gICAqL1xuICBrZXk/OiBzdHJpbmc7XG5cbiAgLyoqXG4gICAqIE9wdGlvbmFsIGdyb3VwIGlkZW50aWZpZXIgdGhhdCBjYW4gYmUgdXNlZCB0byBwZXJzaXN0IHRoZSBmb2N1cy4gVGhpcyBhbGxvd3NcbiAgICogdG8gaGF2ZSBzZXBhcmF0ZSBwZXJzaXN0ZWQgZm9jdXMgYXZhaWxhYmxlIHdoZW4gdGhlIERPTSBpcyBwYXJ0aWFsbHkgcmVidWlsZC5cbiAgICovXG4gIGdyb3VwPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIEVzY2FwZUZvY3VzQ29uZmlnIGV4dGVuZHMgUGVyc2lzdEZvY3VzQ29uZmlnIHtcbiAgZm9jdXNPbkVzY2FwZT86IGJvb2xlYW47XG4gIC8qKlxuICAgKiBGb3JjZSBhbiBhdXRvZm9jdXMgaW4gY2FzZSBvZiBkb3VibGUtZXNjYXBlXG4gICAqL1xuICBmb2N1c09uRG91YmxlRXNjYXBlPzogYm9vbGVhbjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBdXRvRm9jdXNDb25maWcgZXh0ZW5kcyBFc2NhcGVGb2N1c0NvbmZpZyB7XG4gIC8qKlxuICAgKiBBdXRvZm9jdXMgaXMgZW5hYmxlZCBieSBkZWZhdWx0LCBhbmQgd2lsbCB0cnkgdG8gZm9jdXMgYW4gX2F1dG9mb2N1c18gZWxlbWVudC5cbiAgICogSW4gY2FzZSB0aGUgZm9jdXMgaXMgZXhwbGljaXRseSBzZXQgdG8gYHRydWVgLCB0aGUgZmlyc3QgYWNjZXNzaWJsZSBlbGVtZW50XG4gICAqIGlzIGZvY3Vzc2VkIGluIGNhc2UgdGhlcmUgaXMgbm8gX2F1dG9mb2N1c18gZWxlbWVudCBmb3VuZC5cbiAgICogSWYgdGhlIGZvY3VzIGlzIHNldCB0byBmYWxzZSwgYXV0b2ZvY3VzIHdpbGwgYmUgZGlzYWJsZWQgY29tcGxldGVseS5cbiAgICpcbiAgICogSWYgYSBzdHJpbmcgdmFsdWUgaXMgZ2l2ZW4sIHRoZSBhdXRvZm9jdXMgd2lsbCBiZSByZXN0b3JlZCBiYXNlZCBvbiB0aGUgcGVyc2lzdGVkXG4gICAqIGZvY3VzIGdyb3VwLCB3aGljaCBpcyBkcml2ZW4gYnkgYFBlcnNpc3RGb2N1c0NvbmZpZy5rZXlgIGFuZCBgUGVyc2lzdEZvY3VzQ29uZmlnLmdyb3VwYC5cbiAgICpcbiAgICogRGVmYXVsdHMgdG8gYHRydWVgLlxuICAgKi9cbiAgYXV0b2ZvY3VzPzogYm9vbGVhbiB8IHN0cmluZztcblxuICAvKipcbiAgICogd2hlbmV2ZXIgdGhlIGZvY3VzIHNob3VsZCBiZSBhcHBsaWVkIGJhc2VkIG9uIGEgc3BlY2lmaWMgdHJpZ2dlciwgeW91IGNhbiB1c2VyXG4gICAqIHRoZSByZWZyZXNoRm9jdXMgcHJvcGVydHkuIFRoaXMgcHJvcGVydHkgY2FuIGJlIGR5bmFtaWNhbGx5IGFwcGxpZWQgc28gdGhhdCB0aGUgcmVmcmVzaFxuICAgKiBvbmx5IGhhcHBlbnMgb24gc3BlY2lmaWMgb2NjYXNpb25zLlxuICAgKlxuICAgKiBUaGUgcmVmcmVzaEZvY3VzIHRva2VuIGRvZXNuJ3QgaGF2ZSBhIHNwZWNpZmljIGZvcm1hdCwgaXQgYWN0cyBhcyBhIG1lYW5pbmcgbGVzcyB0b2tlbiB0aGF0XG4gICAqIHdpbGwgZWZmZWN0IHRoZSBuZ09uQ2hhbmdlIGxpZmVjeWNsZSBob29rIG9mIHRoZSBhdXRvIGZvY3VzIGxvZ2ljLiBBbnkgdHJ1dGh5IHZhbHVlIHdpbGxcbiAgICogYXV0b2ZvY3VzIHRoZSBlbGVtZW50IGR5bmFtaWNhbGx5LlxuICAgKi9cbiAgcmVmcmVzaEZvY3VzPzogdW5rbm93bjtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBUYWJGb2N1c0NvbmZpZyBleHRlbmRzIEF1dG9Gb2N1c0NvbmZpZyB7XG4gIHRhYj86IGJvb2xlYW4gfCAnc2Nyb2xsJyB8IHN0cmluZztcbn1cblxuZXhwb3J0IGVudW0gVHJhcEZvY3VzIHtcbiAgLyoqXG4gICAqIFdpbGwgdHJhcCB0aGUgZm9jdXMgYXQgdGhlIHN0YXJ0IG9mIHRoZSBmb2N1cyBncm91cC5cbiAgICovXG4gIHN0YXJ0ID0gJ3N0YXJ0JyxcbiAgLyoqXG4gICAqIFdpbGwgdHJhcCB0aGUgZm9jdXMgb25seSBhdCB0aGUgZW5kIG9mIHRoZSBmb2N1cyBncm91cC5cbiAgICovXG4gIGVuZCA9ICdlbmQnLFxuICAvKipcbiAgICogV2lsbCBub3QgdHJhcCB0aGUgZm9jdXMgaW4gYm90aCBkaXJlY3Rpb25zLiBUaGlzIGlzIGFjdHVhbGx5IG5vdCBhcmVcbiAgICogYSBncmVhdCBleGFtcGxlIG9mIGZvY3VzIHRyYXAsIGJ1dCBpdCB3aWxsIGdpdmUgdGhlIGJlbmVmaXQgb2Yga2V5Ym9hcmRcbiAgICogdGFiYmluZyBieSBhcnJvd3MuXG4gICAqL1xuICBib3RoID0gJ2JvdGgnLFxufVxuXG5leHBvcnQgdHlwZSBUcmFwRm9jdXNUeXBlID1cbiAgfCBib29sZWFuXG4gIHwgVHJhcEZvY3VzLnN0YXJ0XG4gIHwgVHJhcEZvY3VzLmVuZFxuICB8IFRyYXBGb2N1cy5ib3RoO1xuXG4vKipcbiAqIFRoZSBrZXlib2FyZCBuYXZpZ2F0aW9uICh0YWIsIHNoaWZ0LXRhYiBhbmQgdXAgZG93biBrZXlzKSBpcyBfdHJhcHBlZF9cbiAqIGZvciB0aGUgbmVzdGVkIGZvY3VzYWJsZSBlbGVtZW50cy4gVGhpcyBtZWFucyB0aGF0IHRoZSBmb2N1cyBjYW4gbm90XG4gKiBcImxlYXZlXCIgdGhlIGVsZW1lbnRzLiBJZiB0aGUgbGFzdCBlbGVtZW50IGlzIGZvY3VzZWQsIHRoZSBrZXlib2FyZCB3aWxsXG4gKiBuYXZpZ2F0ZSB0byB0aGUgZmlyc3QgZWxlbWVudCBhbmQgdmlzYSB2ZXJzYS5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBUcmFwRm9jdXNDb25maWcgZXh0ZW5kcyBUYWJGb2N1c0NvbmZpZyB7XG4gIC8qKiB0cmFwcyB0aGUgZm9jdXMgKi9cbiAgdHJhcD86IFRyYXBGb2N1c1R5cGU7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgTG9ja0ZvY3VzQ29uZmlnIGV4dGVuZHMgVHJhcEZvY3VzQ29uZmlnIHtcbiAgLyoqXG4gICAqIEluZGljYXRlcyB0aGF0IHRoZSBuZXN0ZWQgRE9NIGlzIGxvY2tlZCBmb3Iga2V5Ym9hcmRpbmcgKGBUQUJgKS5cbiAgICovXG4gIGxvY2s/OiBib29sZWFuO1xufVxuXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWVtcHR5LWludGVyZmFjZVxuZXhwb3J0IGludGVyZmFjZSBGb2N1c0NvbmZpZyBleHRlbmRzIExvY2tGb2N1c0NvbmZpZyB7fVxuIl19