import { NgModule } from '@angular/core';
import { BreadcrumbSchemaBuilder } from './breadcrumb/index';
import { JsonLdBaseProductBuilder, JsonLdProductOfferBuilder, JsonLdProductReviewBuilder, ProductSchemaBuilder, } from './product/index';
import { JSONLD_PRODUCT_BUILDER, SCHEMA_BUILDER } from './tokens';
import * as i0 from "@angular/core";
/**
 * Provides several standard json-ld builders that contribute
 * to collecting and building json-ld data.
 */
export class JsonLdBuilderModule {
}
JsonLdBuilderModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: JsonLdBuilderModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
JsonLdBuilderModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: JsonLdBuilderModule });
JsonLdBuilderModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: JsonLdBuilderModule, providers: [
        {
            provide: SCHEMA_BUILDER,
            useExisting: ProductSchemaBuilder,
            multi: true,
        },
        {
            provide: SCHEMA_BUILDER,
            useExisting: BreadcrumbSchemaBuilder,
            multi: true,
        },
        // lower level json-ld builder classes offering fine-grained control
        // for product related schemas
        {
            provide: JSONLD_PRODUCT_BUILDER,
            useExisting: JsonLdBaseProductBuilder,
            multi: true,
        },
        {
            provide: JSONLD_PRODUCT_BUILDER,
            useExisting: JsonLdProductOfferBuilder,
            multi: true,
        },
        {
            provide: JSONLD_PRODUCT_BUILDER,
            useExisting: JsonLdProductReviewBuilder,
            multi: true,
        },
    ] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.0.5", ngImport: i0, type: JsonLdBuilderModule, decorators: [{
            type: NgModule,
            args: [{
                    providers: [
                        {
                            provide: SCHEMA_BUILDER,
                            useExisting: ProductSchemaBuilder,
                            multi: true,
                        },
                        {
                            provide: SCHEMA_BUILDER,
                            useExisting: BreadcrumbSchemaBuilder,
                            multi: true,
                        },
                        // lower level json-ld builder classes offering fine-grained control
                        // for product related schemas
                        {
                            provide: JSONLD_PRODUCT_BUILDER,
                            useExisting: JsonLdBaseProductBuilder,
                            multi: true,
                        },
                        {
                            provide: JSONLD_PRODUCT_BUILDER,
                            useExisting: JsonLdProductOfferBuilder,
                            multi: true,
                        },
                        {
                            provide: JSONLD_PRODUCT_BUILDER,
                            useExisting: JsonLdProductReviewBuilder,
                            multi: true,
                        },
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoianNvbi1sZC1idWlsZGVyLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3N0b3JlZnJvbnRsaWIvY21zLXN0cnVjdHVyZS9zZW8vc3RydWN0dXJlZC1kYXRhL2J1aWxkZXJzL2pzb24tbGQtYnVpbGRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUM3RCxPQUFPLEVBQ0wsd0JBQXdCLEVBQ3hCLHlCQUF5QixFQUN6QiwwQkFBMEIsRUFDMUIsb0JBQW9CLEdBQ3JCLE1BQU0saUJBQWlCLENBQUM7QUFDekIsT0FBTyxFQUFFLHNCQUFzQixFQUFFLGNBQWMsRUFBRSxNQUFNLFVBQVUsQ0FBQzs7QUFFbEU7OztHQUdHO0FBZ0NILE1BQU0sT0FBTyxtQkFBbUI7O2dIQUFuQixtQkFBbUI7aUhBQW5CLG1CQUFtQjtpSEFBbkIsbUJBQW1CLGFBOUJuQjtRQUNUO1lBQ0UsT0FBTyxFQUFFLGNBQWM7WUFDdkIsV0FBVyxFQUFFLG9CQUFvQjtZQUNqQyxLQUFLLEVBQUUsSUFBSTtTQUNaO1FBQ0Q7WUFDRSxPQUFPLEVBQUUsY0FBYztZQUN2QixXQUFXLEVBQUUsdUJBQXVCO1lBQ3BDLEtBQUssRUFBRSxJQUFJO1NBQ1o7UUFDRCxvRUFBb0U7UUFDcEUsOEJBQThCO1FBQzlCO1lBQ0UsT0FBTyxFQUFFLHNCQUFzQjtZQUMvQixXQUFXLEVBQUUsd0JBQXdCO1lBQ3JDLEtBQUssRUFBRSxJQUFJO1NBQ1o7UUFDRDtZQUNFLE9BQU8sRUFBRSxzQkFBc0I7WUFDL0IsV0FBVyxFQUFFLHlCQUF5QjtZQUN0QyxLQUFLLEVBQUUsSUFBSTtTQUNaO1FBQ0Q7WUFDRSxPQUFPLEVBQUUsc0JBQXNCO1lBQy9CLFdBQVcsRUFBRSwwQkFBMEI7WUFDdkMsS0FBSyxFQUFFLElBQUk7U0FDWjtLQUNGOzJGQUVVLG1CQUFtQjtrQkEvQi9CLFFBQVE7bUJBQUM7b0JBQ1IsU0FBUyxFQUFFO3dCQUNUOzRCQUNFLE9BQU8sRUFBRSxjQUFjOzRCQUN2QixXQUFXLEVBQUUsb0JBQW9COzRCQUNqQyxLQUFLLEVBQUUsSUFBSTt5QkFDWjt3QkFDRDs0QkFDRSxPQUFPLEVBQUUsY0FBYzs0QkFDdkIsV0FBVyxFQUFFLHVCQUF1Qjs0QkFDcEMsS0FBSyxFQUFFLElBQUk7eUJBQ1o7d0JBQ0Qsb0VBQW9FO3dCQUNwRSw4QkFBOEI7d0JBQzlCOzRCQUNFLE9BQU8sRUFBRSxzQkFBc0I7NEJBQy9CLFdBQVcsRUFBRSx3QkFBd0I7NEJBQ3JDLEtBQUssRUFBRSxJQUFJO3lCQUNaO3dCQUNEOzRCQUNFLE9BQU8sRUFBRSxzQkFBc0I7NEJBQy9CLFdBQVcsRUFBRSx5QkFBeUI7NEJBQ3RDLEtBQUssRUFBRSxJQUFJO3lCQUNaO3dCQUNEOzRCQUNFLE9BQU8sRUFBRSxzQkFBc0I7NEJBQy9CLFdBQVcsRUFBRSwwQkFBMEI7NEJBQ3ZDLEtBQUssRUFBRSxJQUFJO3lCQUNaO3FCQUNGO2lCQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IEJyZWFkY3J1bWJTY2hlbWFCdWlsZGVyIH0gZnJvbSAnLi9icmVhZGNydW1iL2luZGV4JztcbmltcG9ydCB7XG4gIEpzb25MZEJhc2VQcm9kdWN0QnVpbGRlcixcbiAgSnNvbkxkUHJvZHVjdE9mZmVyQnVpbGRlcixcbiAgSnNvbkxkUHJvZHVjdFJldmlld0J1aWxkZXIsXG4gIFByb2R1Y3RTY2hlbWFCdWlsZGVyLFxufSBmcm9tICcuL3Byb2R1Y3QvaW5kZXgnO1xuaW1wb3J0IHsgSlNPTkxEX1BST0RVQ1RfQlVJTERFUiwgU0NIRU1BX0JVSUxERVIgfSBmcm9tICcuL3Rva2Vucyc7XG5cbi8qKlxuICogUHJvdmlkZXMgc2V2ZXJhbCBzdGFuZGFyZCBqc29uLWxkIGJ1aWxkZXJzIHRoYXQgY29udHJpYnV0ZVxuICogdG8gY29sbGVjdGluZyBhbmQgYnVpbGRpbmcganNvbi1sZCBkYXRhLlxuICovXG5ATmdNb2R1bGUoe1xuICBwcm92aWRlcnM6IFtcbiAgICB7XG4gICAgICBwcm92aWRlOiBTQ0hFTUFfQlVJTERFUixcbiAgICAgIHVzZUV4aXN0aW5nOiBQcm9kdWN0U2NoZW1hQnVpbGRlcixcbiAgICAgIG11bHRpOiB0cnVlLFxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogU0NIRU1BX0JVSUxERVIsXG4gICAgICB1c2VFeGlzdGluZzogQnJlYWRjcnVtYlNjaGVtYUJ1aWxkZXIsXG4gICAgICBtdWx0aTogdHJ1ZSxcbiAgICB9LFxuICAgIC8vIGxvd2VyIGxldmVsIGpzb24tbGQgYnVpbGRlciBjbGFzc2VzIG9mZmVyaW5nIGZpbmUtZ3JhaW5lZCBjb250cm9sXG4gICAgLy8gZm9yIHByb2R1Y3QgcmVsYXRlZCBzY2hlbWFzXG4gICAge1xuICAgICAgcHJvdmlkZTogSlNPTkxEX1BST0RVQ1RfQlVJTERFUixcbiAgICAgIHVzZUV4aXN0aW5nOiBKc29uTGRCYXNlUHJvZHVjdEJ1aWxkZXIsXG4gICAgICBtdWx0aTogdHJ1ZSxcbiAgICB9LFxuICAgIHtcbiAgICAgIHByb3ZpZGU6IEpTT05MRF9QUk9EVUNUX0JVSUxERVIsXG4gICAgICB1c2VFeGlzdGluZzogSnNvbkxkUHJvZHVjdE9mZmVyQnVpbGRlcixcbiAgICAgIG11bHRpOiB0cnVlLFxuICAgIH0sXG4gICAge1xuICAgICAgcHJvdmlkZTogSlNPTkxEX1BST0RVQ1RfQlVJTERFUixcbiAgICAgIHVzZUV4aXN0aW5nOiBKc29uTGRQcm9kdWN0UmV2aWV3QnVpbGRlcixcbiAgICAgIG11bHRpOiB0cnVlLFxuICAgIH0sXG4gIF0sXG59KVxuZXhwb3J0IGNsYXNzIEpzb25MZEJ1aWxkZXJNb2R1bGUge31cbiJdfQ==