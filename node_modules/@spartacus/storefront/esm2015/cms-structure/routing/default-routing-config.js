export const defaultStorefrontRoutesConfig = {
    home: { paths: [''] },
    notFound: { paths: ['not-found'] },
    cart: { paths: ['cart'] },
    // semantic links for login related pages
    login: {
        paths: ['login'],
        protected: false,
        authFlow: true,
    },
    register: {
        paths: ['login/register'],
        protected: false,
        authFlow: true,
    },
    forgotPassword: {
        paths: ['login/forgot-password'],
        protected: false,
        authFlow: true,
    },
    resetPassword: {
        paths: ['login/pw/change'],
        protected: false,
        authFlow: true,
    },
    logout: { paths: ['logout'], protected: false, authFlow: true },
    // plp routes
    search: { paths: ['search/:query'] },
    category: {
        paths: ['category/:categoryCode'],
        paramsMapping: { categoryCode: 'code' },
    },
    brand: { paths: ['Brands/:brandName/c/:brandCode'] },
    // pdp routes
    product: {
        paths: ['product/:productCode/:name'],
        paramsMapping: { productCode: 'code' },
    },
    termsAndConditions: { paths: ['terms-and-conditions'] },
    /** @deprecated since 4.2, use order lib instead */
    orders: {
        paths: ['my-account/orders'],
    },
    /** @deprecated since 4.2, use order lib instead */
    orderDetails: {
        paths: ['my-account/order/:orderCode'],
        paramsMapping: { orderCode: 'code' },
    },
    /** @deprecated since 4.2, use order lib instead */
    orderGuest: {
        paths: ['guest/order/:orderCode'],
        paramsMapping: { orderCode: 'code' },
    },
    /** @deprecated since 4.2, use order lib instead */
    orderReturn: {
        paths: ['my-account/order/return/:orderCode'],
        paramsMapping: { orderCode: 'code' },
    },
    /** @deprecated since 4.2, use order lib instead */
    orderReturnConfirmation: {
        paths: ['my-account/order/return/confirmation/:orderCode'],
        paramsMapping: { orderCode: 'code' },
    },
    /** @deprecated since 4.2, use order lib instead */
    orderCancel: {
        paths: ['my-account/order/cancel/:orderCode'],
        paramsMapping: { orderCode: 'code' },
    },
    /** @deprecated since 4.2, use order lib instead */
    orderCancelConfirmation: {
        paths: ['my-account/order/cancel/confirmation/:orderCode'],
        paramsMapping: { orderCode: 'code' },
    },
    /** @deprecated since 4.2, use order lib instead */
    returnRequestDetails: {
        paths: ['my-account/return-request/:returnCode'],
        paramsMapping: { returnCode: 'rma' },
    },
    coupons: { paths: ['my-account/coupons'] },
    couponClaim: {
        paths: ['my-account/coupon/claim/:couponCode'],
        paramsMapping: { couponCode: 'code' },
    },
    /** @deprecated since 4.2, use order lib instead */
    replenishmentOrders: {
        paths: ['my-account/my-replenishments'],
    },
    /** @deprecated since 4.2, use order lib instead */
    replenishmentDetails: {
        paths: ['my-account/my-replenishment/:replenishmentOrderCode'],
        paramsMapping: { replenishmentOrderCode: 'replenishmentOrderCode' },
    },
};
export const defaultRoutingConfig = {
    routing: {
        routes: defaultStorefrontRoutesConfig,
    },
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVmYXVsdC1yb3V0aW5nLWNvbmZpZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL3N0b3JlZnJvbnRsaWIvY21zLXN0cnVjdHVyZS9yb3V0aW5nL2RlZmF1bHQtcm91dGluZy1jb25maWcudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBRUEsTUFBTSxDQUFDLE1BQU0sNkJBQTZCLEdBQWlCO0lBQ3pELElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFO0lBQ3JCLFFBQVEsRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLFdBQVcsQ0FBQyxFQUFFO0lBQ2xDLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLE1BQU0sQ0FBQyxFQUFFO0lBRXpCLHlDQUF5QztJQUN6QyxLQUFLLEVBQUU7UUFDTCxLQUFLLEVBQUUsQ0FBQyxPQUFPLENBQUM7UUFDaEIsU0FBUyxFQUFFLEtBQUs7UUFDaEIsUUFBUSxFQUFFLElBQUk7S0FDZjtJQUNELFFBQVEsRUFBRTtRQUNSLEtBQUssRUFBRSxDQUFDLGdCQUFnQixDQUFDO1FBQ3pCLFNBQVMsRUFBRSxLQUFLO1FBQ2hCLFFBQVEsRUFBRSxJQUFJO0tBQ2Y7SUFDRCxjQUFjLEVBQUU7UUFDZCxLQUFLLEVBQUUsQ0FBQyx1QkFBdUIsQ0FBQztRQUNoQyxTQUFTLEVBQUUsS0FBSztRQUNoQixRQUFRLEVBQUUsSUFBSTtLQUNmO0lBQ0QsYUFBYSxFQUFFO1FBQ2IsS0FBSyxFQUFFLENBQUMsaUJBQWlCLENBQUM7UUFDMUIsU0FBUyxFQUFFLEtBQUs7UUFDaEIsUUFBUSxFQUFFLElBQUk7S0FDZjtJQUNELE1BQU0sRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLFFBQVEsQ0FBQyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsUUFBUSxFQUFFLElBQUksRUFBRTtJQUUvRCxhQUFhO0lBQ2IsTUFBTSxFQUFFLEVBQUUsS0FBSyxFQUFFLENBQUMsZUFBZSxDQUFDLEVBQUU7SUFDcEMsUUFBUSxFQUFFO1FBQ1IsS0FBSyxFQUFFLENBQUMsd0JBQXdCLENBQUM7UUFDakMsYUFBYSxFQUFFLEVBQUUsWUFBWSxFQUFFLE1BQU0sRUFBRTtLQUN4QztJQUNELEtBQUssRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLGdDQUFnQyxDQUFDLEVBQUU7SUFFcEQsYUFBYTtJQUNiLE9BQU8sRUFBRTtRQUNQLEtBQUssRUFBRSxDQUFDLDRCQUE0QixDQUFDO1FBQ3JDLGFBQWEsRUFBRSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUU7S0FDdkM7SUFFRCxrQkFBa0IsRUFBRSxFQUFFLEtBQUssRUFBRSxDQUFDLHNCQUFzQixDQUFDLEVBQUU7SUFFdkQsbURBQW1EO0lBQ25ELE1BQU0sRUFBRTtRQUNOLEtBQUssRUFBRSxDQUFDLG1CQUFtQixDQUFDO0tBQzdCO0lBQ0QsbURBQW1EO0lBQ25ELFlBQVksRUFBRTtRQUNaLEtBQUssRUFBRSxDQUFDLDZCQUE2QixDQUFDO1FBQ3RDLGFBQWEsRUFBRSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUU7S0FDckM7SUFDRCxtREFBbUQ7SUFDbkQsVUFBVSxFQUFFO1FBQ1YsS0FBSyxFQUFFLENBQUMsd0JBQXdCLENBQUM7UUFDakMsYUFBYSxFQUFFLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRTtLQUNyQztJQUNELG1EQUFtRDtJQUNuRCxXQUFXLEVBQUU7UUFDWCxLQUFLLEVBQUUsQ0FBQyxvQ0FBb0MsQ0FBQztRQUM3QyxhQUFhLEVBQUUsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFO0tBQ3JDO0lBQ0QsbURBQW1EO0lBQ25ELHVCQUF1QixFQUFFO1FBQ3ZCLEtBQUssRUFBRSxDQUFDLGlEQUFpRCxDQUFDO1FBQzFELGFBQWEsRUFBRSxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUU7S0FDckM7SUFDRCxtREFBbUQ7SUFDbkQsV0FBVyxFQUFFO1FBQ1gsS0FBSyxFQUFFLENBQUMsb0NBQW9DLENBQUM7UUFDN0MsYUFBYSxFQUFFLEVBQUUsU0FBUyxFQUFFLE1BQU0sRUFBRTtLQUNyQztJQUNELG1EQUFtRDtJQUNuRCx1QkFBdUIsRUFBRTtRQUN2QixLQUFLLEVBQUUsQ0FBQyxpREFBaUQsQ0FBQztRQUMxRCxhQUFhLEVBQUUsRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFO0tBQ3JDO0lBQ0QsbURBQW1EO0lBQ25ELG9CQUFvQixFQUFFO1FBQ3BCLEtBQUssRUFBRSxDQUFDLHVDQUF1QyxDQUFDO1FBQ2hELGFBQWEsRUFBRSxFQUFFLFVBQVUsRUFBRSxLQUFLLEVBQUU7S0FDckM7SUFDRCxPQUFPLEVBQUUsRUFBRSxLQUFLLEVBQUUsQ0FBQyxvQkFBb0IsQ0FBQyxFQUFFO0lBQzFDLFdBQVcsRUFBRTtRQUNYLEtBQUssRUFBRSxDQUFDLHFDQUFxQyxDQUFDO1FBQzlDLGFBQWEsRUFBRSxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUU7S0FDdEM7SUFDRCxtREFBbUQ7SUFDbkQsbUJBQW1CLEVBQUU7UUFDbkIsS0FBSyxFQUFFLENBQUMsOEJBQThCLENBQUM7S0FDeEM7SUFDRCxtREFBbUQ7SUFDbkQsb0JBQW9CLEVBQUU7UUFDcEIsS0FBSyxFQUFFLENBQUMscURBQXFELENBQUM7UUFDOUQsYUFBYSxFQUFFLEVBQUUsc0JBQXNCLEVBQUUsd0JBQXdCLEVBQUU7S0FDcEU7Q0FDRixDQUFDO0FBRUYsTUFBTSxDQUFDLE1BQU0sb0JBQW9CLEdBQWtCO0lBQ2pELE9BQU8sRUFBRTtRQUNQLE1BQU0sRUFBRSw2QkFBNkI7S0FDdEM7Q0FDRixDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUm91dGVzQ29uZmlnLCBSb3V0aW5nQ29uZmlnIH0gZnJvbSAnQHNwYXJ0YWN1cy9jb3JlJztcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRTdG9yZWZyb250Um91dGVzQ29uZmlnOiBSb3V0ZXNDb25maWcgPSB7XG4gIGhvbWU6IHsgcGF0aHM6IFsnJ10gfSxcbiAgbm90Rm91bmQ6IHsgcGF0aHM6IFsnbm90LWZvdW5kJ10gfSxcbiAgY2FydDogeyBwYXRoczogWydjYXJ0J10gfSxcblxuICAvLyBzZW1hbnRpYyBsaW5rcyBmb3IgbG9naW4gcmVsYXRlZCBwYWdlc1xuICBsb2dpbjoge1xuICAgIHBhdGhzOiBbJ2xvZ2luJ10sXG4gICAgcHJvdGVjdGVkOiBmYWxzZSxcbiAgICBhdXRoRmxvdzogdHJ1ZSxcbiAgfSxcbiAgcmVnaXN0ZXI6IHtcbiAgICBwYXRoczogWydsb2dpbi9yZWdpc3RlciddLFxuICAgIHByb3RlY3RlZDogZmFsc2UsXG4gICAgYXV0aEZsb3c6IHRydWUsXG4gIH0sXG4gIGZvcmdvdFBhc3N3b3JkOiB7XG4gICAgcGF0aHM6IFsnbG9naW4vZm9yZ290LXBhc3N3b3JkJ10sXG4gICAgcHJvdGVjdGVkOiBmYWxzZSxcbiAgICBhdXRoRmxvdzogdHJ1ZSxcbiAgfSxcbiAgcmVzZXRQYXNzd29yZDoge1xuICAgIHBhdGhzOiBbJ2xvZ2luL3B3L2NoYW5nZSddLFxuICAgIHByb3RlY3RlZDogZmFsc2UsXG4gICAgYXV0aEZsb3c6IHRydWUsXG4gIH0sXG4gIGxvZ291dDogeyBwYXRoczogWydsb2dvdXQnXSwgcHJvdGVjdGVkOiBmYWxzZSwgYXV0aEZsb3c6IHRydWUgfSxcblxuICAvLyBwbHAgcm91dGVzXG4gIHNlYXJjaDogeyBwYXRoczogWydzZWFyY2gvOnF1ZXJ5J10gfSxcbiAgY2F0ZWdvcnk6IHtcbiAgICBwYXRoczogWydjYXRlZ29yeS86Y2F0ZWdvcnlDb2RlJ10sXG4gICAgcGFyYW1zTWFwcGluZzogeyBjYXRlZ29yeUNvZGU6ICdjb2RlJyB9LFxuICB9LFxuICBicmFuZDogeyBwYXRoczogWydCcmFuZHMvOmJyYW5kTmFtZS9jLzpicmFuZENvZGUnXSB9LFxuXG4gIC8vIHBkcCByb3V0ZXNcbiAgcHJvZHVjdDoge1xuICAgIHBhdGhzOiBbJ3Byb2R1Y3QvOnByb2R1Y3RDb2RlLzpuYW1lJ10sXG4gICAgcGFyYW1zTWFwcGluZzogeyBwcm9kdWN0Q29kZTogJ2NvZGUnIH0sXG4gIH0sXG5cbiAgdGVybXNBbmRDb25kaXRpb25zOiB7IHBhdGhzOiBbJ3Rlcm1zLWFuZC1jb25kaXRpb25zJ10gfSxcblxuICAvKiogQGRlcHJlY2F0ZWQgc2luY2UgNC4yLCB1c2Ugb3JkZXIgbGliIGluc3RlYWQgKi9cbiAgb3JkZXJzOiB7XG4gICAgcGF0aHM6IFsnbXktYWNjb3VudC9vcmRlcnMnXSxcbiAgfSxcbiAgLyoqIEBkZXByZWNhdGVkIHNpbmNlIDQuMiwgdXNlIG9yZGVyIGxpYiBpbnN0ZWFkICovXG4gIG9yZGVyRGV0YWlsczoge1xuICAgIHBhdGhzOiBbJ215LWFjY291bnQvb3JkZXIvOm9yZGVyQ29kZSddLFxuICAgIHBhcmFtc01hcHBpbmc6IHsgb3JkZXJDb2RlOiAnY29kZScgfSxcbiAgfSxcbiAgLyoqIEBkZXByZWNhdGVkIHNpbmNlIDQuMiwgdXNlIG9yZGVyIGxpYiBpbnN0ZWFkICovXG4gIG9yZGVyR3Vlc3Q6IHtcbiAgICBwYXRoczogWydndWVzdC9vcmRlci86b3JkZXJDb2RlJ10sXG4gICAgcGFyYW1zTWFwcGluZzogeyBvcmRlckNvZGU6ICdjb2RlJyB9LFxuICB9LFxuICAvKiogQGRlcHJlY2F0ZWQgc2luY2UgNC4yLCB1c2Ugb3JkZXIgbGliIGluc3RlYWQgKi9cbiAgb3JkZXJSZXR1cm46IHtcbiAgICBwYXRoczogWydteS1hY2NvdW50L29yZGVyL3JldHVybi86b3JkZXJDb2RlJ10sXG4gICAgcGFyYW1zTWFwcGluZzogeyBvcmRlckNvZGU6ICdjb2RlJyB9LFxuICB9LFxuICAvKiogQGRlcHJlY2F0ZWQgc2luY2UgNC4yLCB1c2Ugb3JkZXIgbGliIGluc3RlYWQgKi9cbiAgb3JkZXJSZXR1cm5Db25maXJtYXRpb246IHtcbiAgICBwYXRoczogWydteS1hY2NvdW50L29yZGVyL3JldHVybi9jb25maXJtYXRpb24vOm9yZGVyQ29kZSddLFxuICAgIHBhcmFtc01hcHBpbmc6IHsgb3JkZXJDb2RlOiAnY29kZScgfSxcbiAgfSxcbiAgLyoqIEBkZXByZWNhdGVkIHNpbmNlIDQuMiwgdXNlIG9yZGVyIGxpYiBpbnN0ZWFkICovXG4gIG9yZGVyQ2FuY2VsOiB7XG4gICAgcGF0aHM6IFsnbXktYWNjb3VudC9vcmRlci9jYW5jZWwvOm9yZGVyQ29kZSddLFxuICAgIHBhcmFtc01hcHBpbmc6IHsgb3JkZXJDb2RlOiAnY29kZScgfSxcbiAgfSxcbiAgLyoqIEBkZXByZWNhdGVkIHNpbmNlIDQuMiwgdXNlIG9yZGVyIGxpYiBpbnN0ZWFkICovXG4gIG9yZGVyQ2FuY2VsQ29uZmlybWF0aW9uOiB7XG4gICAgcGF0aHM6IFsnbXktYWNjb3VudC9vcmRlci9jYW5jZWwvY29uZmlybWF0aW9uLzpvcmRlckNvZGUnXSxcbiAgICBwYXJhbXNNYXBwaW5nOiB7IG9yZGVyQ29kZTogJ2NvZGUnIH0sXG4gIH0sXG4gIC8qKiBAZGVwcmVjYXRlZCBzaW5jZSA0LjIsIHVzZSBvcmRlciBsaWIgaW5zdGVhZCAqL1xuICByZXR1cm5SZXF1ZXN0RGV0YWlsczoge1xuICAgIHBhdGhzOiBbJ215LWFjY291bnQvcmV0dXJuLXJlcXVlc3QvOnJldHVybkNvZGUnXSxcbiAgICBwYXJhbXNNYXBwaW5nOiB7IHJldHVybkNvZGU6ICdybWEnIH0sXG4gIH0sXG4gIGNvdXBvbnM6IHsgcGF0aHM6IFsnbXktYWNjb3VudC9jb3Vwb25zJ10gfSxcbiAgY291cG9uQ2xhaW06IHtcbiAgICBwYXRoczogWydteS1hY2NvdW50L2NvdXBvbi9jbGFpbS86Y291cG9uQ29kZSddLFxuICAgIHBhcmFtc01hcHBpbmc6IHsgY291cG9uQ29kZTogJ2NvZGUnIH0sXG4gIH0sXG4gIC8qKiBAZGVwcmVjYXRlZCBzaW5jZSA0LjIsIHVzZSBvcmRlciBsaWIgaW5zdGVhZCAqL1xuICByZXBsZW5pc2htZW50T3JkZXJzOiB7XG4gICAgcGF0aHM6IFsnbXktYWNjb3VudC9teS1yZXBsZW5pc2htZW50cyddLFxuICB9LFxuICAvKiogQGRlcHJlY2F0ZWQgc2luY2UgNC4yLCB1c2Ugb3JkZXIgbGliIGluc3RlYWQgKi9cbiAgcmVwbGVuaXNobWVudERldGFpbHM6IHtcbiAgICBwYXRoczogWydteS1hY2NvdW50L215LXJlcGxlbmlzaG1lbnQvOnJlcGxlbmlzaG1lbnRPcmRlckNvZGUnXSxcbiAgICBwYXJhbXNNYXBwaW5nOiB7IHJlcGxlbmlzaG1lbnRPcmRlckNvZGU6ICdyZXBsZW5pc2htZW50T3JkZXJDb2RlJyB9LFxuICB9LFxufTtcblxuZXhwb3J0IGNvbnN0IGRlZmF1bHRSb3V0aW5nQ29uZmlnOiBSb3V0aW5nQ29uZmlnID0ge1xuICByb3V0aW5nOiB7XG4gICAgcm91dGVzOiBkZWZhdWx0U3RvcmVmcm9udFJvdXRlc0NvbmZpZyxcbiAgfSxcbn07XG4iXX0=