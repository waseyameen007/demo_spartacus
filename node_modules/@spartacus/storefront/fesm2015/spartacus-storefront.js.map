{"version":3,"file":"spartacus-storefront.js","sources":["../../../projects/storefrontlib/layout/a11y/keyboard-focus/keyboard-focus.model.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/base/base-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/base/base-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/visible/visible-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/block/block-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/persist/persist-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/persist/persist-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/services/select-focus.util.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/escape/escape-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/escape/escape-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/autofocus/auto-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/autofocus/auto-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/tab/tab-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/tab/tab-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/trap/trap-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/trap/trap-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/lock/lock-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/lock/lock-focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/services/keyboard-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/focus.directive.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/config/default-keyboard-focus.config.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/config/keyboard-focus.config.ts","../../../projects/storefrontlib/layout/config/layout-config.ts","../../../projects/storefrontlib/layout/breakpoint/breakpoint.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/on-navigate/on-navigate-focus.service.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/keyboard-focus.module.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/focus-testing.module.ts","../../../projects/storefrontlib/layout/a11y/keyboard-focus/index.ts","../../../projects/storefrontlib/layout/launch-dialog/config/launch-config.ts","../../../projects/storefrontlib/layout/launch-dialog/services/launch-render.strategy.ts","../../../projects/storefrontlib/layout/launch-dialog/services/launch-dialog.service.ts","../../../projects/storefrontlib/cms-components/anonymous-consent-management/banner/anonymous-consent-management-banner.component.ts","../../../projects/storefrontlib/cms-components/anonymous-consent-management/banner/anonymous-consent-management-banner.component.html","../../../projects/storefrontlib/layout/launch-dialog/services/inline-render.strategy.ts","../../../projects/storefrontlib/layout/launch-dialog/services/inline-root-render.strategy.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet.model.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet.service.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet-ref/outlet-ref.directive.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet-ref/outlet-ref.module.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet-renderer.service.ts","../../../projects/storefrontlib/layout/loading/intersection.service.ts","../../../projects/storefrontlib/layout/loading/defer-loader.service.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet.directive.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet.providers.ts","../../../projects/storefrontlib/cms-structure/outlet/outlet.module.ts","../../../projects/storefrontlib/layout/launch-dialog/services/outlet-render.strategy.ts","../../../projects/storefrontlib/layout/launch-dialog/services/routing-render.strategy.ts","../../../projects/storefrontlib/layout/launch-dialog/launch-dialog.module.ts","../../../projects/storefrontlib/cms-components/misc/icon/icon.model.ts","../../../projects/storefrontlib/cms-components/misc/icon/fontawesome-icon.config.ts","../../../projects/storefrontlib/cms-components/misc/icon/icon-loader.service.ts","../../../projects/storefrontlib/layout/direction/config/direction.model.ts","../../../projects/storefrontlib/cms-components/misc/icon/icon.component.ts","../../../projects/storefrontlib/cms-components/misc/icon/icon.component.html","../../../projects/storefrontlib/cms-components/misc/icon/default-icon.config.ts","../../../projects/storefrontlib/cms-components/misc/icon/icon.module.ts","../../../projects/storefrontlib/cms-components/misc/icon/testing/icon-testing.module.ts","../../../projects/storefrontlib/shared/components/spinner/spinner.component.ts","../../../projects/storefrontlib/shared/components/spinner/spinner.component.html","../../../projects/storefrontlib/cms-components/myaccount/consent-management/components/consent-form/consent-management-form.component.ts","../../../projects/storefrontlib/cms-components/myaccount/consent-management/components/consent-form/consent-management-form.component.html","../../../projects/storefrontlib/shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component.ts","../../../projects/storefrontlib/shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component.html","../../../projects/storefrontlib/cms-components/anonymous-consent-management/default-anonymous-consent-layout.config.ts","../../../projects/storefrontlib/cms-components/anonymous-consent-management/open-dialog/anonymous-consent-open-dialog.component.ts","../../../projects/storefrontlib/cms-components/anonymous-consent-management/open-dialog/anonymous-consent-open-dialog.component.html","../../../projects/storefrontlib/cms-components/anonymous-consent-management/anonymous-consent-management.module.ts","../../../projects/storefrontlib/shared/components/modal/modal.service.ts","../../../projects/storefrontlib/cms-components/cart/cart-outlets.model.ts","../../../projects/storefrontlib/cms-components/cart/cart-shared/cart-item/model/cart-item-context-source.model.ts","../../../projects/storefrontlib/cms-components/cart/cart-shared/cart-item/model/cart-item-context.model.ts","../../../projects/storefrontlib/cms-components/cart/validation/cart-validation-state.service.ts","../../../projects/storefrontlib/cms-components/cart/validation/cart-item-warning/cart-item-validation-warning.component.ts","../../../projects/storefrontlib/cms-components/cart/validation/cart-item-warning/cart-item-validation-warning.component.html","../../../projects/storefrontlib/shared/components/media/media.model.ts","../../../projects/storefrontlib/shared/components/media/media.service.ts","../../../projects/storefrontlib/shared/components/media/media.component.ts","../../../projects/storefrontlib/shared/components/media/media.component.html","../../../projects/storefrontlib/shared/components/item-counter/item-counter.component.ts","../../../projects/storefrontlib/shared/components/item-counter/item-counter.component.html","../../../projects/storefrontlib/cms-components/misc/promotions/promotions.component.ts","../../../projects/storefrontlib/cms-components/misc/promotions/promotions.component.html","../../../projects/storefrontlib/shared/components/modal/modal.directive.ts","../../../projects/storefrontlib/cms-components/cart/cart-shared/cart-item/cart-item.component.ts","../../../projects/storefrontlib/cms-components/cart/cart-shared/cart-item/cart-item.component.html","../../../projects/storefrontlib/cms-components/cart/add-to-cart/added-to-cart-dialog/added-to-cart-dialog.component.ts","../../../projects/storefrontlib/cms-components/cart/add-to-cart/added-to-cart-dialog/added-to-cart-dialog.component.html","../../../projects/storefrontlib/cms-components/product/current-product.service.ts","../../../projects/storefrontlib/cms-structure/page/model/cms-component-data.ts","../../../projects/storefrontlib/cms-components/cart/add-to-cart/add-to-cart.component.ts","../../../projects/storefrontlib/cms-components/cart/add-to-cart/add-to-cart.component.html","../../../projects/storefrontlib/shared/components/spinner/spinner.module.ts","../../../projects/storefrontlib/cms-components/myaccount/consent-management/components/consent-management.component.ts","../../../projects/storefrontlib/cms-components/myaccount/consent-management/components/consent-management.component.html","../../../projects/storefrontlib/cms-components/myaccount/consent-management/consent-management.module.ts","../../../projects/storefrontlib/shared/components/anonymous-consents-dialog/anonymous-consents-dialog.module.ts","../../../projects/storefrontlib/shared/components/popover/popover.model.ts","../../../projects/storefrontlib/shared/services/positioning/positioning.service.ts","../../../projects/storefrontlib/shared/components/popover/popover.component.ts","../../../projects/storefrontlib/shared/components/popover/popover.component.html","../../../projects/storefrontlib/shared/components/popover/popover.service.ts","../../../projects/storefrontlib/shared/components/popover/popover.directive.ts","../../../projects/storefrontlib/shared/components/truncate-text-popover/truncate.pipe.ts","../../../projects/storefrontlib/shared/components/truncate-text-popover/truncate-text-popover.component.ts","../../../projects/storefrontlib/shared/components/truncate-text-popover/truncate-text-popover.component.html","../../../projects/storefrontlib/shared/components/card/card.component.ts","../../../projects/storefrontlib/shared/components/card/card.component.html","../../../projects/storefrontlib/shared/components/popover/popover.module.ts","../../../projects/storefrontlib/shared/components/truncate-text-popover/truncate-text-popover.module.ts","../../../projects/storefrontlib/shared/components/card/card.module.ts","../../../projects/storefrontlib/shared/components/carousel/carousel.service.ts","../../../projects/storefrontlib/shared/components/carousel/carousel.component.ts","../../../projects/storefrontlib/shared/components/carousel/carousel.component.html","../../../projects/storefrontlib/shared/components/media/media.module.ts","../../../projects/storefrontlib/shared/components/carousel/carousel.module.ts","../../../projects/storefrontlib/shared/components/form/date-picker/date-picker.service.ts","../../../projects/storefrontlib/shared/components/form/form-errors/form-errors.component.ts","../../../projects/storefrontlib/shared/components/form/form-errors/form-errors.component.html","../../../projects/storefrontlib/shared/components/form/date-picker/date-picker.component.ts","../../../projects/storefrontlib/shared/components/form/date-picker/date-picker.component.html","../../../projects/storefrontlib/shared/components/form/form-errors/form-errors.module.ts","../../../projects/storefrontlib/shared/components/form/date-picker/date-picker.module.ts","../../../projects/storefrontlib/shared/components/form/file-upload/file-upload.component.ts","../../../projects/storefrontlib/shared/components/form/file-upload/file-upload.component.html","../../../projects/storefrontlib/shared/components/form/file-upload/file-upload.module.ts","../../../projects/storefrontlib/shared/components/generic-link/generic-link-component.service.ts","../../../projects/storefrontlib/shared/components/generic-link/generic-link.component.ts","../../../projects/storefrontlib/shared/components/generic-link/generic-link.component.html","../../../projects/storefrontlib/shared/components/generic-link/generic-link.module.ts","../../../projects/storefrontlib/shared/components/item-counter/item-counter.module.ts","../../../projects/storefrontlib/shared/components/list-navigation/pagination/config/default-pagination.config.ts","../../../projects/storefrontlib/shared/components/list-navigation/pagination/config/pagination.config.ts","../../../projects/storefrontlib/shared/components/list-navigation/pagination/pagination.model.ts","../../../projects/storefrontlib/shared/components/list-navigation/pagination/pagination.builder.ts","../../../projects/storefrontlib/shared/components/list-navigation/pagination/pagination.component.ts","../../../projects/storefrontlib/shared/components/list-navigation/pagination/pagination.component.html","../../../projects/storefrontlib/shared/components/list-navigation/pagination/pagination.module.ts","../../../projects/storefrontlib/shared/components/list-navigation/sorting/sorting.component.ts","../../../projects/storefrontlib/shared/components/list-navigation/sorting/sorting.component.html","../../../projects/storefrontlib/shared/components/list-navigation/list-navigation.module.ts","../../../projects/storefrontlib/shared/components/media/media.config.ts","../../../projects/storefrontlib/shared/components/modal/modal-ref.ts","../../../projects/storefrontlib/shared/components/modal/modal.module.ts","../../../projects/storefrontlib/shared/components/order-overview/order-overview.component.ts","../../../projects/storefrontlib/shared/components/order-overview/order-overview.component.html","../../../projects/storefrontlib/shared/components/order-overview/order-overview.module.ts","../../../projects/storefrontlib/shared/components/progress-button/progress-button.component.ts","../../../projects/storefrontlib/shared/components/progress-button/progress-button.component.html","../../../projects/storefrontlib/shared/components/progress-button/progress-button.module.ts","../../../projects/storefrontlib/shared/components/replenishment-order-cancellation-dialog/replenishment-order-cancellation-dialog.component.ts","../../../projects/storefrontlib/shared/components/replenishment-order-cancellation-dialog/replenishment-order-cancellation-dialog.component.html","../../../projects/storefrontlib/shared/components/replenishment-order-cancellation-dialog/replenishment-order-cancellation-dialog.module.ts","../../../projects/storefrontlib/shared/components/split-view/split-view.service.ts","../../../projects/storefrontlib/shared/components/split-view/split/split-view.component.ts","../../../projects/storefrontlib/shared/components/split-view/split/split-view.component.html","../../../projects/storefrontlib/shared/components/split-view/view/view.component.ts","../../../projects/storefrontlib/shared/components/split-view/view/view.component.html","../../../projects/storefrontlib/shared/components/split-view/split-view.module.ts","../../../projects/storefrontlib/cms-components/misc/global-message/global-message.component.ts","../../../projects/storefrontlib/cms-components/misc/global-message/global-message.component.html","../../../projects/storefrontlib/cms-components/misc/global-message/global-message.module.ts","../../../projects/storefrontlib/cms-components/misc/message/message.component.ts","../../../projects/storefrontlib/cms-components/misc/message/message.component.html","../../../projects/storefrontlib/cms-components/misc/message/message.module.ts","../../../projects/storefrontlib/cms-components/misc/promotions/promotions.module.ts","../../../projects/storefrontlib/cms-components/misc/site-context-selector/site-context-component.service.ts","../../../projects/storefrontlib/cms-components/misc/site-context-selector/site-context-selector.component.ts","../../../projects/storefrontlib/cms-components/misc/site-context-selector/site-context-selector.component.html","../../../projects/storefrontlib/cms-components/misc/site-context-selector/language-currency.component.ts","../../../projects/storefrontlib/cms-components/misc/site-context-selector/site-context-selector.module.ts","../../../projects/storefrontlib/cms-components/misc/site-context-selector/site-context.model.ts","../../../projects/storefrontlib/shared/components/star-rating/star-rating.component.ts","../../../projects/storefrontlib/shared/components/star-rating/star-rating.component.html","../../../projects/storefrontlib/shared/components/star-rating/star-rating.module.ts","../../../projects/storefrontlib/shared/components/table/table-data-cell/table-data-cell.component.ts","../../../projects/storefrontlib/shared/components/table/table-header-cell/table-header-cell.component.ts","../../../projects/storefrontlib/shared/components/table/config/default-table.config.ts","../../../projects/storefrontlib/shared/components/table/config/table.config.ts","../../../projects/storefrontlib/shared/components/table/table-data-cell/table-data-cell.module.ts","../../../projects/storefrontlib/shared/components/table/table-header-cell/table-header-cell.module.ts","../../../projects/storefrontlib/shared/components/table/table-renderer.service.ts","../../../projects/storefrontlib/shared/components/table/table.model.ts","../../../projects/storefrontlib/shared/components/table/table.component.ts","../../../projects/storefrontlib/shared/components/table/table.component.html","../../../projects/storefrontlib/shared/components/table/table.module.ts","../../../projects/storefrontlib/shared/components/table/table.service.ts","../../../projects/storefrontlib/shared/config/view-config.ts","../../../projects/storefrontlib/shared/pipes/suplement-hash-anchors/supplement-hash-anchors.pipe.ts","../../../projects/storefrontlib/shared/pipes/suplement-hash-anchors/supplement-hash-anchors.module.ts","../../../projects/storefrontlib/shared/services/file/file-download.service.ts","../../../projects/storefrontlib/shared/services/file/csv/export-csv-file.service.ts","../../../projects/storefrontlib/shared/services/file/file-reader.service.ts","../../../projects/storefrontlib/shared/services/file/csv/import-csv-file.service.ts","../../../projects/storefrontlib/shared/services/file/files-form-validators.ts","../../../projects/storefrontlib/shared/utils/validators/custom-form-validators.ts","../../../projects/storefrontlib/shared/utils/forms/title-utils.ts","../../../projects/storefrontlib/cms-components/cart/cart-coupon/applied-coupons/applied-coupons.component.ts","../../../projects/storefrontlib/cms-components/cart/cart-coupon/applied-coupons/applied-coupons.component.html","../../../projects/storefrontlib/cms-components/cart/cart-coupon/cart-coupon.component.ts","../../../projects/storefrontlib/cms-components/cart/cart-coupon/cart-coupon.component.html","../../../projects/storefrontlib/cms-components/cart/cart-coupon/cart-coupon.module.ts","../../../projects/storefrontlib/cms-components/cart/cart-shared/cart-item-list/cart-item-list.component.ts","../../../projects/storefrontlib/cms-components/cart/cart-shared/cart-item-list/cart-item-list.component.html","../../../projects/storefrontlib/cms-components/cart/cart-shared/order-summary/order-summary.component.ts","../../../projects/storefrontlib/cms-components/cart/cart-shared/order-summary/order-summary.component.html","../../../projects/storefrontlib/cms-components/cart/validation/cart-item-warning/cart-item-validation-warning.module.ts","../../../projects/storefrontlib/cms-components/cart/cart-shared/cart-shared.module.ts","../../../projects/storefrontlib/cms-components/cart/add-to-cart/add-to-cart.module.ts","../../../projects/storefrontlib/cms-components/cart/add-to-wishlist/add-to-wish-list.component.ts","../../../projects/storefrontlib/cms-components/cart/add-to-wishlist/add-to-wish-list.component.html","../../../projects/storefrontlib/cms-components/cart/add-to-wishlist/add-to-wish-list.module.ts","../../../projects/storefrontlib/cms-components/cart/validation/cart-warnings/cart-validation-warnings.component.ts","../../../projects/storefrontlib/cms-components/cart/validation/cart-warnings/cart-validation-warnings.component.html","../../../projects/storefrontlib/cms-components/cart/cart-details/cart-details.component.ts","../../../projects/storefrontlib/cms-components/cart/cart-details/cart-details.component.html","../../../projects/storefrontlib/cms-components/cart/validation/cart-warnings/cart-validation-warnings.module.ts","../../../projects/storefrontlib/cms-components/cart/cart-details/cart-details.module.ts","../../../projects/storefrontlib/cms-components/cart/cart-page-layout-handler.ts","../../../projects/storefrontlib/cms-components/cart/order-entries-context/import-to-cart.model.ts","../../../projects/storefrontlib/cms-components/cart/order-entries-context/cart-order-entries.context.ts","../../../projects/storefrontlib/cms-components/cart/order-entries-context/import-export.model.ts","../../../projects/storefrontlib/cms-components/cart/cart-page/active-cart-order-entries-context.ts","../../../projects/storefrontlib/cms-components/cart/cart-totals/cart-totals.component.ts","../../../projects/storefrontlib/cms-components/cart/cart-totals/cart-totals.component.html","../../../projects/storefrontlib/cms-components/cart/cart-totals/cart-totals.module.ts","../../../projects/storefrontlib/cms-structure/page/page-layout/page-layout-handler.ts","../../../projects/storefrontlib/cms-structure/page/page-layout/page-layout.service.ts","../../../projects/storefrontlib/cms-structure/services/cms-features.service.ts","../../../projects/storefrontlib/cms-structure/services/cms-components.service.ts","../../../projects/storefrontlib/cms-structure/page/slot/page-slot.service.ts","../../../projects/storefrontlib/cms-structure/page/component/events/component.event.ts","../../../projects/storefrontlib/cms-structure/page/component/handlers/component-handler.ts","../../../projects/storefrontlib/cms-structure/page/component/services/component-handler.service.ts","../../../projects/storefrontlib/cms-structure/page/component/services/component-data.provider.ts","../../../projects/storefrontlib/cms-structure/page/component/services/cms-injector.service.ts","../../../projects/storefrontlib/cms-structure/page/component/component-wrapper.directive.ts","../../../projects/storefrontlib/cms-structure/page/slot/page-slot.component.ts","../../../projects/storefrontlib/cms-structure/page/slot/page-slot.component.html","../../../projects/storefrontlib/cms-structure/page/page-layout/page-template.directive.ts","../../../projects/storefrontlib/cms-structure/page/page-layout/page-layout.component.ts","../../../projects/storefrontlib/cms-structure/page/page-layout/page-layout.component.html","../../../projects/storefrontlib/cms-structure/services/cms-routes-impl.service.ts","../../../projects/storefrontlib/cms-structure/services/cms-routes.service.ts","../../../projects/storefrontlib/cms-structure/services/cms-i18n.service.ts","../../../projects/storefrontlib/cms-structure/services/cms-guards.service.ts","../../../projects/storefrontlib/cms-structure/guards/cms-page-guard.service.ts","../../../projects/storefrontlib/cms-structure/guards/cms-page.guard.ts","../../../projects/storefrontlib/cms-components/cart/mini-cart/mini-cart.component.ts","../../../projects/storefrontlib/cms-components/cart/mini-cart/mini-cart.component.html","../../../projects/storefrontlib/cms-components/cart/mini-cart/mini-cart.module.ts","../../../projects/storefrontlib/cms-components/cart/order-entries-context/order-entires.context.ts","../../../projects/storefrontlib/cms-components/cart/save-for-later/save-for-later.component.ts","../../../projects/storefrontlib/cms-components/cart/save-for-later/save-for-later.component.html","../../../projects/storefrontlib/cms-components/cart/save-for-later/save-for-later.module.ts","../../../projects/storefrontlib/cms-components/cart/cart.module.ts","../../../projects/storefrontlib/cms-components/cart/validation/cart-validation-components.module.ts","../../../projects/storefrontlib/cms-components/cart/validation/guards/cart-validation.guard.ts","../../../projects/storefrontlib/cms-components/content/banner/banner.component.ts","../../../projects/storefrontlib/cms-components/content/banner/banner.component.html","../../../projects/storefrontlib/cms-components/content/banner/banner.module.ts","../../../projects/storefrontlib/cms-structure/page/component/handlers/default-component.handler.ts","../../../projects/storefrontlib/cms-structure/page/component/handlers/lazy-component.handler.ts","../../../projects/storefrontlib/cms-structure/page/component/inner-components-host.directive.ts","../../../projects/storefrontlib/cms-structure/page/component/page-component.module.ts","../../../projects/storefrontlib/cms-structure/page/slot/page-slot.module.ts","../../../projects/storefrontlib/cms-structure/page/page-layout/page-layout.module.ts","../../../projects/storefrontlib/cms-structure/pwa/pwa.module-config.ts","../../../projects/storefrontlib/cms-structure/pwa/services/add-to-home-screen.service.ts","../../../projects/storefrontlib/cms-structure/pwa/components/add-to-home-screen.component.ts","../../../projects/storefrontlib/cms-structure/pwa/components/add-to-home-screen-banner/add-to-home-screen-banner.component.ts","../../../projects/storefrontlib/cms-structure/pwa/components/add-to-home-screen-banner/add-to-home-screen-banner.component.html","../../../projects/storefrontlib/cms-structure/pwa/components/add-to-home-screen-btn/add-to-home-screen-btn.component.ts","../../../projects/storefrontlib/cms-structure/pwa/components/add-to-home-screen-btn/add-to-home-screen-btn.component.html","../../../projects/storefrontlib/cms-structure/pwa/pwa.module.ts","../../../projects/storefrontlib/cms-structure/routing/cms-route/add-cms-route.ts","../../../projects/storefrontlib/cms-structure/routing/cms-route/cms-route.module.ts","../../../projects/storefrontlib/cms-structure/routing/default-routing-config.ts","../../../projects/storefrontlib/cms-structure/routing/routing.module.ts","../../../projects/storefrontlib/cms-structure/routing/suffix-routes/suffix-url-matcher.ts","../../../projects/storefrontlib/cms-structure/seo/page-meta-link.service.ts","../../../projects/storefrontlib/cms-structure/seo/seo-meta.service.ts","../../../projects/storefrontlib/cms-structure/seo/config/default-seo.config.ts","../../../projects/storefrontlib/cms-structure/seo/config/seo.config.ts","../../../projects/storefrontlib/cms-structure/seo/html-lang-provider.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/json-ld-script.factory.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/json-ld.directive.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/tokens.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/structured-data.factory.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/structured-data.module.ts","../../../projects/storefrontlib/cms-structure/seo/seo.module.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/breadcrumb/breadcrumb-schema.builder.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/product/jsonld-base-product.builder.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/product/jsonld-product-offer.builder.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/product/jsonld-product-review.builder.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/product/product-schema.builder.ts","../../../projects/storefrontlib/cms-structure/seo/structured-data/builders/json-ld-builder.module.ts","../../../projects/storefrontlib/cms-structure/utils/cms-structure.model.ts","../../../projects/storefrontlib/cms-structure/utils/cms-structure.util.ts","../../../projects/storefrontlib/cms-components/content/banner-carousel/banner-carousel.component.ts","../../../projects/storefrontlib/cms-components/content/banner-carousel/banner-carousel.component.html","../../../projects/storefrontlib/cms-components/content/banner-carousel/banner-carousel.module.ts","../../../projects/storefrontlib/cms-components/content/link/link.component.ts","../../../projects/storefrontlib/cms-components/content/link/link.component.html","../../../projects/storefrontlib/cms-components/content/link/link.module.ts","../../../projects/storefrontlib/cms-components/content/paragraph/paragraph.component.ts","../../../projects/storefrontlib/cms-components/content/paragraph/paragraph.component.html","../../../projects/storefrontlib/cms-components/content/paragraph/paragraph.module.ts","../../../projects/storefrontlib/cms-components/content/tab-paragraph-container/tab-paragraph-container.component.ts","../../../projects/storefrontlib/cms-components/content/tab-paragraph-container/tab-paragraph-container.component.html","../../../projects/storefrontlib/cms-components/content/tab-paragraph-container/tab-paragraph-container.module.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-book.component.service.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-form/suggested-addresses-dialog/suggested-addresses-dialog.component.html","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-form/address-form.component.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-form/address-form.component.html","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-book.component.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-book.component.html","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-form/address-form.module.ts","../../../projects/storefrontlib/cms-components/myaccount/address-book/address-book.module.ts","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/my-coupons.component.service.ts","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/coupon-card/coupon-dialog/coupon-dialog.component.ts","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/coupon-card/coupon-dialog/coupon-dialog.component.html","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/coupon-card/coupon-card.component.ts","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/coupon-card/coupon-card.component.html","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/my-coupons.component.ts","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/my-coupons.component.html","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/coupon-claim/coupon-claim.component.ts","../../../projects/storefrontlib/cms-components/myaccount/my-coupons/my-coupons.module.ts","../../../projects/storefrontlib/cms-components/myaccount/my-interests/my-interests.component.ts","../../../projects/storefrontlib/cms-components/myaccount/my-interests/my-interests.component.html","../../../projects/storefrontlib/cms-components/myaccount/my-interests/my-interests.module.ts","../../../projects/storefrontlib/cms-components/myaccount/notification-preference/notification-preference.component.ts","../../../projects/storefrontlib/cms-components/myaccount/notification-preference/notification-preference.component.html","../../../projects/storefrontlib/cms-components/myaccount/notification-preference/notification-preference.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/amend-order-actions/amend-order-actions.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/amend-order.model.ts","../../../projects/storefrontlib/cms-components/myaccount/order/order-transitional-tokens.ts","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-details.service.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/amend-order.service.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/amend-order-items/amend-order-items.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.service.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.guard.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/cancellations/cancel-order-confirmation/cancel-order-confirmation.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/cancellations/cancel-order/cancel-order.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/cancellations/order-cancellation.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/returns/order-return.service.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/returns/order-return.guard.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/returns/return-order-confirmation/return-order-confirmation.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/returns/return-order/return-order.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/returns/return-order/return-order.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/returns/return-order/return-order.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/amend-order/returns/order-return.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-actions/order-detail-actions.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-actions/order-detail-actions.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/tracking-events/tracking-events.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/tracking-events/tracking-events.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-items/order-consigned-entries/order-consigned-entries.model.ts","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-items/order-detail-items.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-items/order-detail-items.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-shipping/order-detail-shipping.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-shipping/order-detail-shipping.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-totals/order-detail-totals.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-detail-totals/order-detail-totals.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/order-details/order-details.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/order-history/order-history.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/order-history/order-history.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/order-history/order-history.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/replenishment-order-details/default-replenishment-order-cancellation-layout.config.ts","../../../projects/storefrontlib/cms-components/myaccount/order/replenishment-order-details/replenishment-order-cancellation/replenishment-order-cancellation.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/replenishment-order-details/replenishment-order-cancellation/replenishment-order-cancellation.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/replenishment-order-details/replenishment-order-details.service.ts","../../../projects/storefrontlib/cms-components/myaccount/order/replenishment-order-details/replenishment-order-details.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/replenishment-order-history/replenishment-order-history.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/replenishment-order-history/replenishment-order-history.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/replenishment-order-history/replenishment-order-history.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/return-request-detail/return-request.service.ts","../../../projects/storefrontlib/cms-components/myaccount/order/return-request-detail/return-request-items/return-request-items.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/return-request-detail/return-request-items/return-request-items.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/return-request-detail/return-request-overview/return-request-overview.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/return-request-detail/return-request-overview/return-request-overview.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/return-request-detail/return-request-totals/return-request-totals.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/return-request-detail/return-request-totals/return-request-totals.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/return-request-detail/return-request-detail.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/return-request-list/order-return-request-list.component.ts","../../../projects/storefrontlib/cms-components/myaccount/order/return-request-list/order-return-request-list.component.html","../../../projects/storefrontlib/cms-components/myaccount/order/return-request-list/order-return-request-list.module.ts","../../../projects/storefrontlib/cms-components/myaccount/order/order.module.ts","../../../projects/storefrontlib/cms-components/myaccount/payment-methods/payment-methods.component.ts","../../../projects/storefrontlib/cms-components/myaccount/payment-methods/payment-methods.component.html","../../../projects/storefrontlib/cms-components/myaccount/payment-methods/payment-methods.module.ts","../../../projects/storefrontlib/cms-components/navigation/page-header/page-title.component.ts","../../../projects/storefrontlib/cms-components/navigation/page-header/page-title.component.html","../../../projects/storefrontlib/cms-components/navigation/breadcrumb/breadcrumb.component.ts","../../../projects/storefrontlib/cms-components/navigation/breadcrumb/breadcrumb.component.html","../../../projects/storefrontlib/cms-components/navigation/breadcrumb/breadcrumb.module.ts","../../../projects/storefrontlib/cms-components/navigation/navigation/navigation.service.ts","../../../projects/storefrontlib/layout/header/hamburger-menu/hamburger-menu.service.ts","../../../projects/storefrontlib/cms-components/navigation/navigation/navigation-ui.component.ts","../../../projects/storefrontlib/cms-components/navigation/navigation/navigation-ui.component.html","../../../projects/storefrontlib/cms-components/navigation/category-navigation/category-navigation.component.ts","../../../projects/storefrontlib/cms-components/navigation/category-navigation/category-navigation.component.html","../../../projects/storefrontlib/cms-components/navigation/navigation/navigation.component.ts","../../../projects/storefrontlib/cms-components/navigation/navigation/navigation.component.html","../../../projects/storefrontlib/cms-components/navigation/navigation/navigation.module.ts","../../../projects/storefrontlib/cms-components/navigation/category-navigation/category-navigation.module.ts","../../../projects/storefrontlib/cms-components/navigation/footer-navigation/footer-navigation.component.ts","../../../projects/storefrontlib/cms-components/navigation/footer-navigation/footer-navigation.component.html","../../../projects/storefrontlib/cms-components/navigation/footer-navigation/footer-navigation.module.ts","../../../projects/storefrontlib/cms-components/navigation/page-header/page-title.module.ts","../../../projects/storefrontlib/cms-components/navigation/search-box/highlight.pipe.ts","../../../projects/storefrontlib/cms-components/navigation/search-box/search-box.events.ts","../../../projects/storefrontlib/cms-components/navigation/search-box/search-box-component.service.ts","../../../projects/storefrontlib/cms-components/navigation/search-box/search-box.component.ts","../../../projects/storefrontlib/cms-components/navigation/search-box/search-box.component.html","../../../projects/storefrontlib/cms-components/navigation/search-box/search-box.module.ts","../../../projects/storefrontlib/cms-components/product/carousel/product-carousel.service.ts","../../../projects/storefrontlib/cms-components/product/carousel/product-carousel/product-carousel.component.ts","../../../projects/storefrontlib/cms-components/product/carousel/product-carousel/product-carousel.component.html","../../../projects/storefrontlib/cms-components/product/carousel/product-carousel/product-carousel.module.ts","../../../projects/storefrontlib/cms-components/product/carousel/product-references/product-references.component.ts","../../../projects/storefrontlib/cms-components/product/carousel/product-references/product-references.component.html","../../../projects/storefrontlib/cms-components/product/carousel/product-references/product-references.module.ts","../../../projects/storefrontlib/cms-components/product/config/default-view-config.ts","../../../projects/storefrontlib/cms-components/product/product-images/product-images.component.ts","../../../projects/storefrontlib/cms-components/product/product-images/product-images.component.html","../../../projects/storefrontlib/cms-components/product/product-images/product-images.module.ts","../../../projects/storefrontlib/cms-components/product/product-intro/product-intro.component.ts","../../../projects/storefrontlib/cms-components/product/product-intro/product-intro.component.html","../../../projects/storefrontlib/cms-components/product/product-intro/product-intro.module.ts","../../../projects/storefrontlib/cms-components/product/product-list/container/product-list-component.service.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-view/product-view.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-view/product-view.component.html","../../../projects/storefrontlib/cms-components/product/product-outlets.model.ts","../../../projects/storefrontlib/cms-components/product/product-list/model/product-list-item-context.model.ts","../../../projects/storefrontlib/cms-components/product/product-list/model/product-list-item-context-source.model.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-grid-item/product-grid-item.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-grid-item/product-grid-item.component.html","../../../projects/storefrontlib/cms-components/product/product-list/product-list-item/product-list-item.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-list-item/product-list-item.component.html","../../../projects/storefrontlib/cms-components/product/product-list/container/product-scroll/product-scroll.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/container/product-scroll/product-scroll.component.html","../../../projects/storefrontlib/cms-components/product/product-list/container/product-list.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/container/product-list.component.html","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet.model.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/services/product-facet.service.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/services/facet.service.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.component.html","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/active-facets/active-facets.module.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet/facet.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet/facet.component.html","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.component.html","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet/facet.module.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/facet-list/facet-list.module.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.component.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.component.html","../../../projects/storefrontlib/cms-components/product/product-list/product-facet-navigation/product-facet-navigation.module.ts","../../../projects/storefrontlib/cms-components/product/product-list/product-list.module.ts","../../../projects/storefrontlib/cms-components/product/product-summary/product-summary.component.ts","../../../projects/storefrontlib/cms-components/product/product-summary/product-summary.component.html","../../../projects/storefrontlib/cms-components/product/product-summary/product-summary.module.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/product-attributes/product-attributes.component.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/product-attributes/product-attributes.component.html","../../../projects/storefrontlib/cms-components/product/product-tabs/product-attributes/product-attributes.module.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/product-details-tab/product-details-tab.component.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/product-details-tab/product-details-tab.component.html","../../../projects/storefrontlib/cms-components/product/product-tabs/product-details-tab/product-details-tab.module.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/product-reviews/product-reviews.component.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/product-reviews/product-reviews.component.html","../../../projects/storefrontlib/cms-components/product/product-tabs/product-reviews/product-reviews.module.ts","../../../projects/storefrontlib/cms-components/product/product-tabs/product-tabs.module.ts","../../../projects/storefrontlib/cms-components/product/stock-notification/stock-notification-dialog/stock-notification-dialog.component.ts","../../../projects/storefrontlib/cms-components/product/stock-notification/stock-notification-dialog/stock-notification-dialog.component.html","../../../projects/storefrontlib/cms-components/product/stock-notification/stock-notification.component.ts","../../../projects/storefrontlib/cms-components/product/stock-notification/stock-notification.component.html","../../../projects/storefrontlib/cms-components/product/stock-notification/stock-notification.module.ts","../../../projects/storefrontlib/cms-components/user/login-route/login.guard.ts","../../../projects/storefrontlib/cms-components/user/login-route/login-route.module.ts","../../../projects/storefrontlib/cms-components/user/logout/logout.guard.ts","../../../projects/storefrontlib/cms-components/user/logout/logout.module.ts","../../../projects/storefrontlib/cms-components/user/user.module.ts","../../../projects/storefrontlib/cms-components/wish-list/components/wish-list-item/wish-list-item.component.ts","../../../projects/storefrontlib/cms-components/wish-list/components/wish-list-item/wish-list-item.component.html","../../../projects/storefrontlib/cms-components/wish-list/components/wish-list/wish-list.component.ts","../../../projects/storefrontlib/cms-components/wish-list/components/wish-list/wish-list.component.html","../../../projects/storefrontlib/cms-components/wish-list/wish-list.module.ts","../../../projects/storefrontlib/cms-pages/product-details-page/product-details-url-matcher.ts","../../../projects/storefrontlib/cms-pages/product-details-page/product-details-page.module.ts","../../../projects/storefrontlib/cms-pages/product-listing-page/product-listing-url-matcher.ts","../../../projects/storefrontlib/cms-pages/product-listing-page/product-listing-page.module.ts","../../../projects/storefrontlib/context/routing-context.service.ts","../../../projects/storefrontlib/context/context.service.ts","../../../projects/storefrontlib/events/navigation/navigation.event.ts","../../../projects/storefrontlib/events/page/page.events.ts","../../../projects/storefrontlib/events/cart/cart-page.events.ts","../../../projects/storefrontlib/events/cart/cart-page-event.builder.ts","../../../projects/storefrontlib/events/cart/cart-page-event.module.ts","../../../projects/storefrontlib/events/home/home-page.events.ts","../../../projects/storefrontlib/events/home/home-page-event.builder.ts","../../../projects/storefrontlib/events/home/home-page-event.module.ts","../../../projects/storefrontlib/events/navigation/navigation-event.builder.ts","../../../projects/storefrontlib/events/navigation/navigation-event.module.ts","../../../projects/storefrontlib/events/product/product-page.events.ts","../../../projects/storefrontlib/events/product/product-page-event.builder.ts","../../../projects/storefrontlib/events/product/product-page-event.module.ts","../../../projects/storefrontlib/layout/a11y/skip-link/config/skip-link.config.ts","../../../projects/storefrontlib/layout/a11y/skip-link/service/skip-link.service.ts","../../../projects/storefrontlib/layout/a11y/skip-link/component/skip-link.component.ts","../../../projects/storefrontlib/layout/a11y/skip-link/component/skip-link.component.html","../../../projects/storefrontlib/layout/a11y/skip-link/config/default-skip-link.config.ts","../../../projects/storefrontlib/layout/a11y/skip-link/directive/skip-link.directive.ts","../../../projects/storefrontlib/layout/a11y/skip-link/skip-link.module.ts","../../../projects/storefrontlib/layout/config/default-layout.config.ts","../../../projects/storefrontlib/layout/direction/config/direction.config.ts","../../../projects/storefrontlib/layout/direction/config/default-direction.config.ts","../../../projects/storefrontlib/layout/direction/direction.service.ts","../../../projects/storefrontlib/layout/direction/direction.module.ts","../../../projects/storefrontlib/layout/header/hamburger-menu/hamburger-menu.component.ts","../../../projects/storefrontlib/layout/header/hamburger-menu/hamburger-menu.component.html","../../../projects/storefrontlib/layout/header/hamburger-menu/hamburger-menu.module.ts","../../../projects/storefrontlib/layout/theme/theme.service.ts","../../../projects/storefrontlib/layout/theme/theme.module.ts","../../../projects/storefrontlib/layout/layout.module.ts","../../../projects/storefrontlib/layout/main/storefront-outlets.model.ts","../../../projects/storefrontlib/layout/main/storefront.component.ts","../../../projects/storefrontlib/layout/main/storefront.component.html","../../../projects/storefrontlib/layout/main/storefront-component.module.ts","../../../projects/storefrontlib/recipes/config/default-media.config.ts","../../../projects/storefrontlib/recipes/config/layout-config.ts","../../../projects/storefrontlib/recipes/config/static-cms-structure.ts","../../../projects/storefrontlib/router/config/default-on-navigate-config.ts","../../../projects/storefrontlib/router/config/on-navigate-config.ts","../../../projects/storefrontlib/router/on-navigate.service.ts","../../../projects/storefrontlib/router/app-routing.module.ts","../../../projects/storefrontlib/utils/form-utils.ts","../../../projects/storefrontlib/base-storefront.module.ts","../../../projects/storefrontlib/public_api.ts","../../../projects/storefrontlib/spartacus-storefront.ts"],"sourcesContent":["/** The element attribute used to store the focus state */\nexport const FOCUS_ATTR = 'data-cx-focus';\n/** The element attribute used to store the focus group state */\nexport const FOCUS_GROUP_ATTR = 'data-cx-focus-group';\n\nexport const enum MOVE_FOCUS {\n  NEXT = 1,\n  PREV = -1,\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface BaseFocusConfig {}\n\nexport interface VisibleFocusConfig {\n  /**\n   * When set to true, the `mouse-focus` class is added to the host element,\n   * indicating that the element focus should not be made visible.\n   */\n  disableMouseFocus?: boolean;\n}\n\nexport interface BlockFocusConfig extends VisibleFocusConfig {\n  block?: boolean;\n}\n\nexport interface PersistFocusConfig extends BlockFocusConfig {\n  /**\n   * A key to maintain the focus of an element in case the component is\n   * recreated (which often is the case when an `*ngIf` or `*ngFor` is used).\n   */\n  key?: string;\n\n  /**\n   * Optional group identifier that can be used to persist the focus. This allows\n   * to have separate persisted focus available when the DOM is partially rebuild.\n   */\n  group?: string;\n}\n\nexport interface EscapeFocusConfig extends PersistFocusConfig {\n  focusOnEscape?: boolean;\n  /**\n   * Force an autofocus in case of double-escape\n   */\n  focusOnDoubleEscape?: boolean;\n}\n\nexport interface AutoFocusConfig extends EscapeFocusConfig {\n  /**\n   * Autofocus is enabled by default, and will try to focus an _autofocus_ element.\n   * In case the focus is explicitly set to `true`, the first accessible element\n   * is focussed in case there is no _autofocus_ element found.\n   * If the focus is set to false, autofocus will be disabled completely.\n   *\n   * If a string value is given, the autofocus will be restored based on the persisted\n   * focus group, which is driven by `PersistFocusConfig.key` and `PersistFocusConfig.group`.\n   *\n   * Defaults to `true`.\n   */\n  autofocus?: boolean | string;\n\n  /**\n   * whenever the focus should be applied based on a specific trigger, you can user\n   * the refreshFocus property. This property can be dynamically applied so that the refresh\n   * only happens on specific occasions.\n   *\n   * The refreshFocus token doesn't have a specific format, it acts as a meaning less token that\n   * will effect the ngOnChange lifecycle hook of the auto focus logic. Any truthy value will\n   * autofocus the element dynamically.\n   */\n  refreshFocus?: unknown;\n}\n\nexport interface TabFocusConfig extends AutoFocusConfig {\n  tab?: boolean | 'scroll' | string;\n}\n\nexport enum TrapFocus {\n  /**\n   * Will trap the focus at the start of the focus group.\n   */\n  start = 'start',\n  /**\n   * Will trap the focus only at the end of the focus group.\n   */\n  end = 'end',\n  /**\n   * Will not trap the focus in both directions. This is actually not are\n   * a great example of focus trap, but it will give the benefit of keyboard\n   * tabbing by arrows.\n   */\n  both = 'both',\n}\n\nexport type TrapFocusType =\n  | boolean\n  | TrapFocus.start\n  | TrapFocus.end\n  | TrapFocus.both;\n\n/**\n * The keyboard navigation (tab, shift-tab and up down keys) is _trapped_\n * for the nested focusable elements. This means that the focus can not\n * \"leave\" the elements. If the last element is focused, the keyboard will\n * navigate to the first element and visa versa.\n */\nexport interface TrapFocusConfig extends TabFocusConfig {\n  /** traps the focus */\n  trap?: TrapFocusType;\n}\n\nexport interface LockFocusConfig extends TrapFocusConfig {\n  /**\n   * Indicates that the nested DOM is locked for keyboarding (`TAB`).\n   */\n  lock?: boolean;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface FocusConfig extends LockFocusConfig {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport abstract class BaseFocusService {}\n","import {\n  Directive,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n} from '@angular/core';\nimport { BaseFocusConfig } from '../keyboard-focus.model';\nimport { BaseFocusService } from './base-focus.service';\n\n/**\n * Abstract directive that provides a common interface for all focus directives:\n * - Block Focus\n * - Persist Focus\n * - Escape Focus\n * - Auto Focus\n * - Tab Focus\n * - Trap Focus\n * - Lock Focus\n */\n@Directive()\nexport abstract class BaseFocusDirective implements OnInit, OnChanges {\n  /**\n   * Optional configuration for the focus directive drives the behaviour of the keyboard\n   * focus directive.\n   */\n  protected config: BaseFocusConfig;\n\n  /**\n   * A default config can be provided for each directive if a specific focus directive\n   * is used directly. i.e. `<div cxAutoFocus></div>`\n   */\n  protected defaultConfig: BaseFocusConfig = {};\n\n  @Input() @HostBinding('attr.tabindex') tabindex: number;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    protected service: BaseFocusService\n  ) {}\n\n  ngOnInit(): void {\n    this.setDefaultConfiguration();\n    this.requiredTabindex = -1;\n  }\n\n  // empty, but sub classes might have an implementation\n  ngOnChanges(_changes: SimpleChanges): void {}\n\n  /**\n   * Override the (input) config if it undefined or an empty string, with the\n   * `defaultConfig`. The `defaultConfig` might be specified for each directive\n   * differently. If a specific directive is used (i.e. `cxAutoFocus`), the\n   * specific (inherited) defaultConfig will be used.\n   */\n  protected setDefaultConfiguration(): void {\n    if ((!this.config || this.config === '') && this.defaultConfig) {\n      this.config = this.defaultConfig;\n    }\n  }\n\n  /**\n   * Helper method to return the host element for the directive\n   * given by the `elementRef`.\n   */\n  protected get host(): HTMLElement {\n    return this.elementRef.nativeElement;\n  }\n\n  /**\n   * Force a tabindex on the host element if it is _required_ to make the element\n   * focusable. If the element is focusable by nature or by a given tabindex, the\n   * `tabindex` is not applied.\n   *\n   * Buttons, active links, etc. do no need an explicit tabindex to receive focus.\n   */\n  protected set requiredTabindex(tabindex: number) {\n    if (this.requiresExplicitTabIndex) {\n      this.tabindex = tabindex;\n    }\n  }\n\n  /**\n   * Returns true if the host element does not have a tabindex defined\n   * and it also doesn't get focus by browsers nature (i.e. button or\n   * active link).\n   */\n  protected get requiresExplicitTabIndex(): boolean {\n    return (\n      this.tabindex === undefined &&\n      ['button', 'input', 'select', 'textarea'].indexOf(\n        this.host.tagName.toLowerCase()\n      ) === -1 &&\n      !(\n        this.host.tagName === 'A' &&\n        (this.host.hasAttribute('href') ||\n          this.host.hasAttribute('routerlink') ||\n          this.host.getAttribute('ng-reflect-router-link'))\n      )\n    );\n  }\n}\n","import { Directive, HostBinding, HostListener } from '@angular/core';\nimport { BaseFocusDirective } from '../base/base-focus.directive';\nimport { VisibleFocusConfig } from '../keyboard-focus.model';\n\n/**\n * Directive implementation that adds a CSS class to the host element\n * when the moused is used to focus an element. As soon as the keyboard\n * is used, the class is removed.\n *\n * This feature must be explicitly enabled with the `disableMouseFocus` config.\n *\n * The appearance of the visual focus depends on the CSS implementation to\n * begin with. Spartacus styles add a blue border around each focusable element.\n * This can be considered annoying by keyboard users, as they won't need such a\n * strong indication of the selected element.\n */\n@Directive() // selector: '[cxVisibleFocus]'\nexport class VisibleFocusDirective extends BaseFocusDirective {\n  protected defaultConfig: VisibleFocusConfig = {\n    disableMouseFocus: true,\n  };\n\n  // @Input('cxVisibleFocus')\n  protected config: VisibleFocusConfig;\n\n  /** Controls a css class to hide focus visible CSS rules */\n  @HostBinding('class.mouse-focus') mouseFocus = false;\n\n  @HostListener('mousedown') handleMousedown() {\n    if (this.shouldFocusVisible) {\n      this.mouseFocus = true;\n    }\n  }\n\n  @HostListener('keydown', ['$event']) handleKeydown(event: KeyboardEvent) {\n    if (this.shouldFocusVisible) {\n      this.mouseFocus = !this.isNavigating(event);\n    }\n  }\n\n  /**\n   * Indicates whether the configurations setup to disable visual focus.\n   */\n  protected get shouldFocusVisible(): boolean {\n    return this.config?.disableMouseFocus;\n  }\n\n  /**\n   * Indicates whether the event is used to navigate the storefront. Some keyboard events\n   * are used by mouse users to fill a form or interact with the OS or browser.\n   */\n  protected isNavigating(event: KeyboardEvent): boolean {\n    // when the cmd or ctrl keys are used, the user doesn't navigate the storefront\n    if (event.metaKey) {\n      return false;\n    }\n    // when the tab key is used, users are for navigating away from the current (form) element\n    if (event.code === 'Tab') {\n      return true;\n    }\n    // If the user fill in a form, we don't considering it part of storefront navigation.\n    if (['INPUT', 'TEXTAREA'].includes((event.target as HTMLElement).tagName)) {\n      return false;\n    }\n    return true;\n  }\n}\n","import { Directive, ElementRef, OnInit } from '@angular/core';\nimport { BaseFocusService } from '../base/base-focus.service';\nimport { BlockFocusConfig } from '../keyboard-focus.model';\nimport { VisibleFocusDirective } from '../visible/visible-focus.directive';\n\n@Directive()\n// { selector: '[cxBlockFocus]' }\nexport class BlockFocusDirective\n  extends VisibleFocusDirective\n  implements OnInit\n{\n  protected defaultConfig: BlockFocusConfig = { block: true };\n\n  // @Input('cxBlockFocus')\n  protected config: BlockFocusConfig = {};\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: BaseFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    if (this.config.block) {\n      this.tabindex = -1;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { BaseFocusService } from '../base/base-focus.service';\nimport { FOCUS_GROUP_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\n\nconst GLOBAL_GROUP = '_g_';\n\n/**\n * Shared service to persist the focus for an element or a group\n * of elements. The persisted element focus can be used to persist\n * the focus for a DOM tree, so that the focus remains after a repaint\n * or reoccurs when a DOM tree is \"unlocked\".\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PersistFocusService extends BaseFocusService {\n  // this is going to fail as we have sub services. They will al have their own map.\n  // We must bring this to a singleton map.\n  protected focus = new Map<string, string>();\n\n  get(group?: string): string {\n    return this.focus.get(group || GLOBAL_GROUP);\n  }\n\n  /**\n   * Persist the keyboard focus state for the given key. The focus is stored globally\n   * or for the given group.\n   */\n  set(key: string, group?: string) {\n    if (key) {\n      this.focus.set(group || GLOBAL_GROUP, key);\n    }\n  }\n\n  /**\n   * Clears the persisted keyboard focus state globally or for the given group.\n   */\n  clear(group?: string) {\n    this.focus.delete(group || GLOBAL_GROUP);\n  }\n\n  /**\n   * Returns the group for the host element based on the configured group or\n   * by the `data-cx-focus-group` attribute stored on the host.\n   */\n  getPersistenceGroup(host: HTMLElement, config?: PersistFocusConfig): string {\n    return config?.group ? config.group : host.getAttribute(FOCUS_GROUP_ATTR);\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnInit,\n} from '@angular/core';\nimport { BlockFocusDirective } from '../block/block-focus.directive';\nimport { FOCUS_ATTR, PersistFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusService } from './persist-focus.service';\n\n/**\n * Directive that provides persistence of the focused state. This is useful\n * when a group of focusable elements got refocused or even recreated. That\n * happens often when the DOM is constructed with an `*ngIf` or `*ngFor`.\n *\n * The focus state is based on a configured _key_, which can be passed in the\n * config input, either by using a string primitive or `PersistFocusConfig.key`:\n *\n * ```html\n * <button cxPersistFocus=\"myKey\"></button>\n * <button cxFocus=\"myKey\"></button>\n * <button [cxFocus]=\"{{key:'myKey'}\"></button>\n * ```\n *\n * The focus state can be part of a focus _group_, so that the state is shared\n * and remember for the given group. In order to detect the persistence for a\n * given element, we store the persistence key as a data attribute (`data-cx-focus`):\n *\n * ```html\n * <button data-cx-focus=\"myKey\"></button>\n * ```\n *\n * Other keyboard focus directives can read the key to understand whether the element\n * should retrieve focus.\n *\n */\n@Directive() // selector: '[cxPersistFocus]',\nexport class PersistFocusDirective\n  extends BlockFocusDirective\n  implements OnInit, AfterViewInit\n{\n  protected defaultConfig: PersistFocusConfig = {};\n\n  /**\n   * The persistence key can be passed directly or through the `FocusConfig.key`.\n   * While this could be considered a global key, the likeliness of conflicts\n   * is very small since the key is cleared when the focus is changed.\n   */\n  // @Input('cxPersistFocus')\n  protected config: PersistFocusConfig = {};\n\n  /**\n   * The persistence key is maintained in an element attribute for other\n   * implementations. This is needed to ensure that we can resolve the focus\n   * state in case of a repaint.\n   */\n  @HostBinding(`attr.${FOCUS_ATTR}`) attr: string;\n\n  @HostListener('focus', ['$event'])\n  handleFocus(event?: KeyboardEvent) {\n    this.service.set(this.key, this.group);\n\n    event?.preventDefault();\n    event?.stopPropagation();\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: PersistFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.attr = this.key ? this.key : undefined;\n  }\n\n  protected setDefaultConfiguration() {\n    if (typeof this.config === 'string' && this.config !== '') {\n      this.config = { key: this.config };\n    }\n    super.setDefaultConfiguration();\n  }\n\n  /**\n   * Focus the element explicitly if it was focused before.\n   */\n  ngAfterViewInit() {\n    if (this.isPersisted) {\n      this.host.focus({ preventScroll: true });\n    }\n  }\n\n  protected get isPersisted(): boolean {\n    return !!this.key && this.service.get(this.group) === this.key;\n  }\n\n  /**\n   * Returns the key for the host element, which is used to persist the\n   * focus state. This is useful in cases where the DOM is rebuild.\n   */\n  protected get key(): string {\n    return (this.config as PersistFocusConfig)?.key;\n  }\n\n  /**\n   * returns the persistence group (if any) for the focusable elements.\n   */\n  protected get group(): string {\n    return this.service.getPersistenceGroup(\n      this.host,\n      this.config as PersistFocusConfig\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AutoFocusConfig } from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectFocusUtility {\n  /**\n   * Query selectors used to query focusable child elements of the host element.\n   * The selectors are supplemented with `:not([disabled])` and `:not([hidden])`.\n   */\n  protected focusableSelectors: string[] = [\n    'a[href]',\n    'button',\n    '[tabindex]',\n    'input',\n    'select',\n    'textarea',\n  ];\n\n  // like to leave out the following as we don't use it, and make this list exensible.\n  //   `[contentEditable=true]`, // very unlikely to suport as we're not a business tool\n  //   `iframe`, // we really don't like iframes...\n  //   `area[href]`, // very debatable!\n\n  protected focusableSelectorSuffix = ':not([disabled]):not([hidden])';\n\n  query(host: HTMLElement, selector: string): HTMLElement[] {\n    if (!selector || selector === '') {\n      return [];\n    }\n    return Array.from(\n      host.querySelectorAll(selector) as NodeListOf<HTMLElement>\n    );\n  }\n\n  findFirstFocusable(\n    host: HTMLElement,\n    config: AutoFocusConfig = { autofocus: true }\n  ): HTMLElement {\n    const selector =\n      typeof config?.autofocus === 'string' ? config.autofocus : '[autofocus]';\n    // fallback to first focusable\n    return (\n      this.query(host, selector).find((el) => !this.isHidden(el)) ||\n      this.findFocusable(host).find((el) => Boolean(el))\n    );\n  }\n\n  /**\n   * returns all focusable child elements of the host element. The element selectors\n   * are build from the `focusableSelectors`.\n   *\n   * @param host the `HTMLElement` used to query focusable elements\n   * @param locked indicates whether inactive (`tabindex=\"-1\"`) focusable elements should be returned\n   * @param invisible indicates whether hidden focusable elements should be returned\n   */\n  findFocusable(\n    host: HTMLElement,\n    locked = false,\n    invisible = false\n  ): HTMLElement[] {\n    let suffix = this.focusableSelectorSuffix;\n    if (!locked) {\n      suffix += `:not([tabindex='-1'])`;\n    }\n    const selector = this.focusableSelectors\n      .map((s) => (s += suffix))\n      .join(',');\n    return this.query(host, selector).filter((el) =>\n      !invisible ? !this.isHidden(el) : Boolean(el)\n    );\n  }\n\n  /**\n   * Indicates whether the element is hidden by CSS. There are various CSS rules and\n   * HTML structures which can lead to an hidden or invisible element. An `offsetParent`\n   * of null indicates that the element or any of it's decendants is hidden (`display:none`).\n   *\n   * Oother techniques use the visibility (`visibility: hidden`), opacity (`opacity`) or\n   * phyisical location on the element itself or any of it's anchestor elements. Those\n   * technique require to work with the _computed styles_, which will cause a performance\n   * downgrade. We don't do this in the standard implementaton.\n   */\n  protected isHidden(el: HTMLElement): boolean {\n    return el.offsetParent === null;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusService } from '../persist/persist-focus.service';\nimport { SelectFocusUtility } from '../services/select-focus.util';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class EscapeFocusService extends PersistFocusService {\n  constructor(protected selectFocusUtil: SelectFocusUtility) {\n    super();\n  }\n\n  shouldFocus(config: EscapeFocusConfig): boolean {\n    return !!config?.focusOnEscape;\n  }\n\n  handleEscape(\n    host: HTMLElement,\n    config: EscapeFocusConfig,\n    event: KeyboardEvent\n  ): void {\n    if (this.shouldFocus(config)) {\n      if (host !== event.target) {\n        host.focus({ preventScroll: true });\n        event.preventDefault();\n        event.stopPropagation();\n      } else {\n        if (config?.focusOnDoubleEscape) {\n          this.selectFocusUtil\n            .findFirstFocusable(host, { autofocus: true })\n            ?.focus();\n        }\n      }\n    }\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { EscapeFocusConfig } from '../keyboard-focus.model';\nimport { PersistFocusDirective } from '../persist/persist-focus.directive';\nimport { EscapeFocusService } from './escape-focus.service';\n\n/**\n * Directive to focus the host element whenever the `escape` key is captured.\n * UiEvents bubble up by nature, which is why the `cxEscGroup` can be used\n * on a tree of elements. Each time the escape key is used, the focus will\n * move up in the DOM tree.\n *\n */\n@Directive() // selector: '[cxEscFocus]',\nexport class EscapeFocusDirective\n  extends PersistFocusDirective\n  implements OnInit\n{\n  protected defaultConfig: EscapeFocusConfig = { focusOnEscape: true };\n\n  // @Input('cxEscFocus')\n  protected config: EscapeFocusConfig;\n\n  @Output() esc = new EventEmitter<boolean>();\n\n  /**\n   * Handles the escape key event.\n   * @param event the native keyboard event which contains the escape keydown event\n   */\n  @HostListener('keydown.escape', ['$event'])\n  handleEscape(event: KeyboardEvent): void {\n    if (this.service.shouldFocus(this.config)) {\n      this.service.handleEscape(this.host, this.config, event);\n    }\n    this.esc.emit(this.service.shouldFocus(this.config));\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: EscapeFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  ngOnInit() {\n    if (this.service.shouldFocus(this.config)) {\n      this.requiredTabindex = -1;\n    }\n    super.ngOnInit();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { EscapeFocusService } from '../escape/escape-focus.service';\nimport {\n  AutoFocusConfig,\n  FOCUS_ATTR,\n  PersistFocusConfig,\n} from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AutoFocusService extends EscapeFocusService {\n  /**\n   * Returns the first focusable child element of the host element.\n   */\n  findFirstFocusable(\n    host: HTMLElement,\n    config: AutoFocusConfig = { autofocus: true }\n  ): HTMLElement {\n    if (config?.autofocus === ':host') {\n      return host;\n    } else if (this.hasPersistedFocus(host, config)) {\n      return this.getPersisted(host, this.getPersistenceGroup(host, config));\n    } else {\n      return this.selectFocusUtil.findFirstFocusable(host, config) || host;\n    }\n  }\n\n  /**\n   * Indicates whether any of the focusable child elements is focused.\n   */\n  hasPersistedFocus(host: HTMLElement, config: PersistFocusConfig): boolean {\n    return !!this.getPersisted(host, this.getPersistenceGroup(host, config));\n  }\n\n  /**\n   * Returns the element that has a persisted focus state.\n   *\n   * @param host the `HTMLElement` used to query for focusable children\n   * @param group the optional group for the persistent state, to separate different focus\n   *   groups and remain the persistence\n   */\n  protected getPersisted(host: HTMLElement, group?: string): HTMLElement {\n    if (!this.get(group)) {\n      return;\n    }\n    const focussed = Array.from(\n      host.querySelectorAll(\n        `[${FOCUS_ATTR}='${this.get(group)}']`\n      ) as NodeListOf<HTMLElement>\n    );\n    return focussed.length > 0 ? focussed[0] : null;\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { EscapeFocusDirective } from '../escape/escape-focus.directive';\nimport { AutoFocusConfig } from '../keyboard-focus.model';\nimport { AutoFocusService } from './auto-focus.service';\n\n/**\n * Directive that focus the first nested _focusable_ element based on state and configuration:\n *\n * 1. focusable element that was left in a focused state (aka _persisted_ focus)\n * 2. focusable element selected by configured CSS selector (i.e. 'button[type=submit]')\n * 3. focusable element marked with the native HTML5 `autofocus` attribute\n * 4. first focusable element\n * 5. the host element, in case the configured CSS selector is `:host`.\n *\n * Example configurations:\n *\n * `<div cxAutoFocus>[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: false}\">[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: 'button.active'}\">[...]</div>`\n *\n * `<div [cxAutoFocus]=\"{autofocus: ':host'}\">[...]</div>`\n *\n * When your element is added dynamically (ie. by using an *ngIf or after a DOM change), the\n * focus can be refreshed by using the refreshFocus configuration.\n */\n@Directive() // selector: '[cxAutoFocus]'\nexport class AutoFocusDirective\n  extends EscapeFocusDirective\n  implements AfterViewInit, OnChanges\n{\n  /** The AutoFocusDirective will be using autofocus by default  */\n  protected defaultConfig: AutoFocusConfig = { autofocus: true };\n\n  // @Input('cxAutoFocus')\n  protected config: AutoFocusConfig;\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: AutoFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  /**\n   * Focus the element explicitly if it was focussed before.\n   */\n  ngAfterViewInit(): void {\n    if (this.shouldAutofocus) {\n      this.handleFocus();\n    }\n    if (!this.shouldAutofocus || this.hasPersistedFocus) {\n      super.ngAfterViewInit();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // responsible for refresh focus based on the configured refresh property name\n    if (!!(changes.config.currentValue as AutoFocusConfig)?.refreshFocus) {\n      // ensure the autofocus when it's to provided initially\n      if (!this.config.autofocus) {\n        this.config.autofocus = true;\n      }\n      this.handleFocus();\n    }\n    super.ngOnChanges(changes);\n  }\n\n  /**\n   * Mimic the focus without setting the actual focus on the host. The first\n   * focusable child element will be focussed.\n   */\n  handleFocus(event?: KeyboardEvent) {\n    if (this.shouldAutofocus) {\n      if (!event?.target || event.target === this.host) {\n        this.firstFocusable?.focus();\n      } else {\n        (event.target as HTMLElement).focus();\n      }\n    }\n    super.handleFocus(event);\n  }\n\n  /**\n   * Helper function to get the first focusable child element\n   */\n  protected get hasPersistedFocus() {\n    return this.service.hasPersistedFocus(this.host, this.config);\n  }\n\n  /**\n   * Helper function to indicate whether we should use autofocus for the\n   * child elements.\n   */\n  protected get shouldAutofocus(): boolean {\n    return !!this.config?.autofocus;\n  }\n\n  /**\n   * Helper function to get the first focusable child element.\n   *\n   * We keep this private to not pollute the API.\n   */\n  private get firstFocusable(): HTMLElement {\n    return this.service.findFirstFocusable(this.host, this.config);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AutoFocusService } from '../autofocus/auto-focus.service';\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TabFocusService extends AutoFocusService {\n  /**\n   * Moves to the next (or previous) tab.\n   */\n  moveTab(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS,\n    event: KeyboardEvent\n  ): void {\n    if (config?.tab) {\n      const next =\n        config.tab === 'scroll'\n          ? this.findNextScrollable(host, config, increment)\n          : this.findNext(host, config, increment);\n\n      next?.focus();\n\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * builds out virtual slides out of the full scrollable area, to allow\n   * for maximum flexibility for the underlying layout without using hardcoded\n   * slide sizes.\n   */\n  protected findNextScrollable(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS\n  ): HTMLElement {\n    const active = this.getActiveChild(host, config);\n\n    if (!active) {\n      return;\n    }\n    // slide count\n    const virtualSlideCount = Math.round(host.scrollWidth / host.clientWidth);\n\n    // find current virtual slide\n    const currentVirtualSlide = Math.round(\n      active.offsetLeft / (host.scrollWidth / virtualSlideCount)\n    );\n\n    let nextVirtualSlide = currentVirtualSlide + increment;\n    if (\n      increment === MOVE_FOCUS.NEXT &&\n      nextVirtualSlide >= virtualSlideCount\n    ) {\n      nextVirtualSlide = 0;\n    }\n    if (increment === MOVE_FOCUS.PREV && nextVirtualSlide < 0) {\n      nextVirtualSlide = virtualSlideCount - 1;\n    }\n\n    const firstItemOnNextSlide = this.getChildren(host, config)?.find(\n      (tab) =>\n        tab.offsetLeft >=\n        (host.scrollWidth / virtualSlideCount) * nextVirtualSlide\n    );\n\n    return firstItemOnNextSlide;\n  }\n\n  protected findNext(\n    host: HTMLElement,\n    config: TabFocusConfig,\n    increment: MOVE_FOCUS\n  ): HTMLElement {\n    const childs = this.getChildren(host, config);\n    let activeIndex = childs?.findIndex(\n      (c) => c === this.getActiveChild(host, config)\n    );\n\n    if (!activeIndex || activeIndex === -1) {\n      activeIndex = 0;\n    }\n    activeIndex += increment;\n\n    if (increment === MOVE_FOCUS.NEXT && activeIndex >= childs?.length) {\n      activeIndex = childs.length - 1;\n    }\n    if (increment === MOVE_FOCUS.PREV && activeIndex < 0) {\n      activeIndex = 0;\n    }\n    return childs ? childs[activeIndex] : undefined;\n  }\n\n  /**\n   * Returns the active focusable child element. If there's no active\n   * focusable child element, the first focusable child is returned.\n   */\n  protected getActiveChild(\n    host: HTMLElement,\n    config: TabFocusConfig\n  ): HTMLElement {\n    const persisted = this.getPersisted(host, config?.group);\n    if (persisted) {\n      return persisted;\n    }\n    const children = this.getChildren(host, config);\n    let index = children.findIndex((tab) => this.isActive(tab));\n    if (!index || index === -1) {\n      index = 0;\n    }\n    return children[index];\n  }\n\n  protected getChildren(\n    host: HTMLElement,\n    config: TabFocusConfig\n  ): HTMLElement[] {\n    if (typeof config.tab === 'string' && config.tab !== 'scroll') {\n      return this.selectFocusUtil.query(host, config.tab);\n    } else {\n      return this.findFocusable(host, true);\n    }\n  }\n\n  /**\n   * Returns all focusable child elements of the host element.\n   *\n   * @param host The host element is used to query child focusable elements.\n   * @param locked Indicates if locked elements (tabindex=-1) should be returned, defaults to false.\n   * @param invisible Indicates if invisible child elements should be returned, defaults to false.\n   */\n  findFocusable(\n    host: HTMLElement,\n    locked = false,\n    invisible = false\n  ): HTMLElement[] {\n    return this.selectFocusUtil.findFocusable(host, locked, invisible);\n  }\n\n  protected isActive(el: HTMLElement): boolean {\n    const child = document.activeElement;\n    const selector = child.tagName;\n\n    return (\n      el === child ||\n      !!Array.from(el.querySelectorAll(selector)).find((e) => e === child)\n    );\n  }\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { AutoFocusDirective } from '../autofocus/auto-focus.directive';\nimport { MOVE_FOCUS, TabFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusService } from './tab-focus.service';\n\n/**\n * Directive to move the focus of (\"locked\") child elements. This is useful\n * for a nested list of tabs, carousel slides or any group of elements that\n * requires horizontal navigation.\n */\n@Directive() // selector: '[cxTabFocus]'\nexport class TabFocusDirective extends AutoFocusDirective {\n  /** `tab` defaults to true if the directive `cxTabFocus` is used. */\n  protected defaultConfig: TabFocusConfig = { tab: true };\n\n  // @Input('cxTabFocus')\n  protected config: TabFocusConfig = {};\n\n  @HostListener('keydown.arrowRight', ['$event'])\n  handleNextTab(event: KeyboardEvent) {\n    if (this.config?.tab) {\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.NEXT, event);\n    }\n  }\n\n  @HostListener('keydown.arrowLeft', ['$event'])\n  handlePreviousTab(event: KeyboardEvent) {\n    if (this.config?.tab) {\n      this.service.moveTab(this.host, this.config, MOVE_FOCUS.PREV, event);\n    }\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: TabFocusService\n  ) {\n    super(elementRef, service);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  MOVE_FOCUS,\n  TrapFocus,\n  TrapFocusConfig,\n  TrapFocusType,\n} from '../keyboard-focus.model';\nimport { TabFocusService } from '../tab/tab-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TrapFocusService extends TabFocusService {\n  /**\n   * Indicates whether any of the child elements of the host are focusable.\n   *\n   * @param host `HTMLElement` that is used to query the focusable elements.\n   */\n  hasFocusableChildren(host: HTMLElement): boolean {\n    return this.findFocusable(host).length > 0;\n  }\n\n  /**\n   * Focus the next or previous element of all available focusable elements.\n   * The focus is _trapped_ in case there's no next or previous available element.\n   * The focus will automatically move the start or end of the list.\n   */\n  moveFocus(\n    host: HTMLElement,\n    config: TrapFocusConfig,\n    increment: MOVE_FOCUS,\n    event: UIEvent\n  ): void {\n    const focusable: HTMLElement[] = this.findFocusable(host);\n\n    let index = focusable.findIndex((v) => v === event.target) + increment;\n\n    const shouldMoveFocus =\n      (index >= 0 && index < focusable.length) ||\n      (index < 0 && this.getTrapStart(config.trap)) ||\n      (index >= focusable.length && this.getTrapEnd(config.trap));\n\n    if (shouldMoveFocus) {\n      if (index >= focusable.length) {\n        index = 0;\n      }\n      if (index < 0) {\n        index = focusable.length - 1;\n      }\n\n      event.preventDefault();\n      event.stopPropagation();\n\n      const el = focusable[index];\n\n      el.focus();\n    }\n  }\n\n  protected getTrapStart(trap: TrapFocusType): boolean {\n    return trap === true || trap === TrapFocus.start;\n  }\n\n  protected getTrapEnd(trap: TrapFocusType): boolean {\n    return trap === true || trap === TrapFocus.end;\n  }\n}\n","import { Directive, ElementRef, HostListener, OnInit } from '@angular/core';\nimport { MOVE_FOCUS, TrapFocusConfig } from '../keyboard-focus.model';\nimport { TabFocusDirective } from '../tab/tab-focus.directive';\nimport { TrapFocusService } from './trap-focus.service';\n\n/**\n * Directive that keeps the focus inside the focusable child elements,\n * also known as a _focus trap_.\n */\n@Directive() // selector: '[cxTrapFocus]'\nexport class TrapFocusDirective extends TabFocusDirective implements OnInit {\n  protected defaultConfig: TrapFocusConfig = { trap: true };\n\n  // @Input('cxTrapFocus')\n  protected config: TrapFocusConfig = {};\n\n  @HostListener('keydown.arrowdown', ['$event'])\n  @HostListener('keydown.tab', ['$event'])\n  handleTrapDown = (event: KeyboardEvent) => {\n    if (!!this.config.trap) {\n      this.moveFocus(event, MOVE_FOCUS.NEXT);\n    }\n  };\n\n  @HostListener('keydown.arrowup', ['$event'])\n  @HostListener('keydown.shift.tab', ['$event'])\n  handleTrapUp = (event: KeyboardEvent) => {\n    if (!!this.config.trap) {\n      this.moveFocus(event, MOVE_FOCUS.PREV);\n    }\n  };\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: TrapFocusService\n  ) {\n    super(elementRef, service);\n  }\n\n  /**\n   * Moves the focus of the element reference up or down, depending on the increment.\n   * The focus of the element is trapped to avoid it from going out of the group.\n   *\n   * @param event UIEvent that is used to get the target element. The event is blocked\n   *   from standard execution and further bubbling.\n   * @param increment indicates whether the next or previous is focussed.\n   */\n  protected moveFocus(event: UIEvent, increment: number) {\n    if (this.service.hasFocusableChildren(this.host)) {\n      this.service.moveFocus(\n        this.host,\n        this.config,\n        increment,\n        event as UIEvent\n      );\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { TrapFocusService } from '../trap/trap-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LockFocusService extends TrapFocusService {}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  OnInit,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { FOCUS_GROUP_ATTR, LockFocusConfig } from '../keyboard-focus.model';\nimport { TrapFocusDirective } from '../trap/trap-focus.directive';\nimport { LockFocusService } from './lock-focus.service';\n\n/**\n * Focusable elements exclude hidden elements by default, but this contradicts with\n * unlocking (hidden) elements.\n */\nconst UNLOCK_HIDDEN_ELEMENTS = true;\n/**\n * Directive that adds persistence for focussed element in case\n * the elements are being rebuild. This happens often when change\n * detection kicks in because of new data set from the backend.\n */\n@Directive() // selector: '[cxLockFocus]'\nexport class LockFocusDirective\n  extends TrapFocusDirective\n  implements OnInit, AfterViewInit\n{\n  protected defaultConfig: LockFocusConfig = { lock: true };\n\n  // @Input('cxLockFocus')\n  protected config: LockFocusConfig = {};\n\n  /**\n   * Indicates that the host is configured to use locking. This is available as a\n   * CSS class `focus-lock`.\n   */\n  @HostBinding('class.focus-lock') shouldLock: boolean;\n\n  /**\n   * Indicates that the host is locked. This is available as a CSS class `is-locked`.\n   */\n  @HostBinding('class.is-locked') isLocked: boolean;\n\n  /**\n   * Emits an event when the host is unlocked.\n   */\n  @Output() unlock = new EventEmitter<boolean>();\n\n  /**\n   * When the user selects enter or space, the focusable childs are\n   * unlocked, which means that the tabindex is set to 0.\n   */\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  handleEnter(event: KeyboardEvent) {\n    if (this.shouldLock && this.host === (event.target as HTMLElement)) {\n      this.unlockFocus(event);\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  }\n\n  /**\n   * In case any of the children elements is touched by the mouse,\n   * we unlock the group to not break the mouse-experience.\n   */\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    if (this.shouldLock && this.isLocked) {\n      this.unlockFocus(event);\n      event.stopPropagation();\n    }\n  }\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: LockFocusService,\n    protected renderer: Renderer2\n  ) {\n    super(elementRef, service);\n  }\n\n  protected lockFocus() {\n    this.addTabindexToChildren(-1);\n  }\n\n  protected unlockFocus(event?: UIEvent) {\n    this.unlock.emit(true);\n    this.addTabindexToChildren(0);\n    // we focus the host if the event was triggered from a child\n    if (event?.target === this.host) {\n      // we wait a few milliseconds, mainly because firefox will otherwise apply\n      // the mouse event on the new focused child element\n      setTimeout(() => {\n        super.handleFocus(event as KeyboardEvent);\n      }, 100);\n    }\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    this.shouldLock = this.config?.lock;\n\n    if (this.shouldLock) {\n      this.tabindex = 0;\n\n      // Locked elements will be set to `autofocus` by default if it's not\n      // been configured. This will ensure that autofocus kicks in upon unlock.\n      if (!this.config.hasOwnProperty('autofocus')) {\n        this.config.autofocus = true;\n      }\n      // Locked elements will be set to `focusOnEscape` by default if it's not\n      // been configured. This will ensure that  the host gets locked again when\n      // `escape` is pressed.\n      if (!this.config.hasOwnProperty('focusOnEscape')) {\n        this.config.focusOnEscape = !(this.config?.focusOnEscape === false);\n      }\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.shouldLock) {\n      /**\n       * If the component hosts a group of focusable children elements,\n       * we persist the group key to the children, so that they can taken this\n       * into account when they persist their focus state.\n       */\n      if (!!this.group) {\n        this.service.findFocusable(this.host).forEach((el) =>\n          // we must do this in after view init as\n          this.renderer.setAttribute(el, FOCUS_GROUP_ATTR, this.group)\n        );\n      }\n\n      if (this.shouldAutofocus) {\n        this.handleFocus();\n      }\n    }\n    super.ngAfterViewInit();\n  }\n\n  handleFocus(event?: KeyboardEvent): void {\n    if (this.shouldLock) {\n      if (this.shouldUnlockAfterAutofocus(event)) {\n        // Delay unlocking in case the host is using `ChangeDetectionStrategy.Default`\n        setTimeout(() => this.unlockFocus(event));\n      } else {\n        setTimeout(() => this.lockFocus());\n        event?.stopPropagation();\n        return;\n      }\n    }\n    super.handleFocus(event);\n  }\n\n  handleEscape(event: KeyboardEvent): void {\n    if (this.shouldLock) {\n      this.service.clear(this.config.group);\n    }\n    super.handleEscape(event);\n  }\n\n  /**\n   * When the handleFocus is called without an actual event, it's coming from Autofocus.\n   * In this case we unlock the focusable children in case there's a focusable child that\n   * was unlocked before.\n   *\n   * We keep this private to not polute the API.\n   */\n  private shouldUnlockAfterAutofocus(event?: KeyboardEvent) {\n    return !event && this.service.hasPersistedFocus(this.host, this.config);\n  }\n\n  /**\n   * Add the tabindex attribute to the focusable children elements\n   */\n  protected addTabindexToChildren(i = 0): void {\n    if (this.shouldLock) {\n      this.isLocked = i === -1;\n      if (!(this.hasFocusableChildren && i === 0) || i === 0) {\n        this.focusable.forEach((el) =>\n          this.renderer.setAttribute(el, 'tabindex', i.toString())\n        );\n      }\n    }\n  }\n\n  /**\n   * Utility method, returns all focusable children for the host element.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get hasFocusableChildren(): boolean {\n    return this.service.hasFocusableChildren(this.host);\n  }\n\n  /**\n   * Returns the focusable children of the host element. If the host element\n   * is configured to be locked, the query is restricted to child elements\n   * with a tabindex !== `-1`.\n   *\n   * We keep this private to not polute the API.\n   */\n  private get focusable(): HTMLElement[] {\n    return this.service.findFocusable(\n      this.host,\n      this.shouldLock,\n      UNLOCK_HIDDEN_ELEMENTS\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { LockFocusService } from '../lock/lock-focus.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class KeyboardFocusService extends LockFocusService {}\n","import { Directive, ElementRef, Input, Renderer2 } from '@angular/core';\nimport { FocusConfig } from './keyboard-focus.model';\nimport { LockFocusDirective } from './lock/lock-focus.directive';\nimport { KeyboardFocusService } from './services/keyboard-focus.service';\n\n@Directive({\n  selector: '[cxFocus]',\n})\nexport class FocusDirective extends LockFocusDirective {\n  protected defaultConfig: FocusConfig = {};\n\n  @Input('cxFocus') config: FocusConfig = {};\n\n  constructor(\n    protected elementRef: ElementRef,\n    protected service: KeyboardFocusService,\n    protected renderer: Renderer2\n  ) {\n    super(elementRef, service, renderer);\n  }\n}\n","import { KeyboardFocusConfig } from './keyboard-focus.config';\n\n/**\n * @deprecated since 4.2, refer to spartacus issues (#13762)\n */\nexport const defaultKeyboardFocusConfig: KeyboardFocusConfig = {\n  keyboardFocus: {\n    enableResetFocusOnNavigate: false,\n    enableResetViewOnNavigate: false,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { BREAKPOINT } from '../../../config';\n\n/**\n * @deprecated since 4.2, refer to spartacus issues (#13762)\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class KeyboardFocusConfig {\n  keyboardFocus?: {\n    /**\n     * Resets the focus back to the root `<cx-storefront>` element when a navigation is started.\n     */\n    enableResetFocusOnNavigate?: boolean | BREAKPOINT[];\n\n    /**\n     * Resets the view back to the root `<cx-storefront>` element when a navigation is started. This can also be set to a BREAKPOINT value to only reset the view up to the provided value.\n     */\n    enableResetViewOnNavigate?: boolean | BREAKPOINT[];\n  };\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends KeyboardFocusConfig {}\n}\n","import { Injectable } from '@angular/core';\nimport { Config, DeferLoadingStrategy } from '@spartacus/core';\nimport { LaunchConfig } from '../launch-dialog/index';\n\n/**\n * The `BREAKPOINT` typing defaults to five default screen names:\n * xs, sm, md, lg, xl.\n *\n * The type can be extended to allow for custom screens, such as XLL or `tablet`.\n *\n * While the screen names are fully configurable, other features might have\n * pre-configured layout settings per screen. Page layouts or table configurations,\n * for example, are driven by screen size. In case you change the screen size or\n * introduce new screen names, you might loose out on these configurations.\n */\nexport enum BREAKPOINT {\n  xs = 'xs',\n  sm = 'sm',\n  md = 'md',\n  lg = 'lg',\n  xl = 'xl',\n}\n\nexport type LayoutSections =\n  | 'header'\n  | 'footer'\n  | 'LandingPage2Template'\n  | string;\n\nexport type SlotConfig = {\n  /** The cms page slots are mapped by the `slot.position`. */\n  slots?: string[];\n\n  /**\n   * The page fold identifies the last expected page slot above-the-fold.\n   * It's perfectly fine to specify this by indication, but keep in mind that\n   * a more precise indication will gain a more positive impact on performance.\n   */\n  pageFold?: string;\n};\n\nexport type SlotGroup = {\n  /** The page slot configuration for large screens */\n  [BREAKPOINT.lg]?: SlotConfig;\n  /** The page slot configuration for medium screens */\n  [BREAKPOINT.md]?: SlotConfig;\n  /** The page slot configuration for small screens */\n  [BREAKPOINT.sm]?: SlotConfig;\n  /** The page slot configuration for extra small screens */\n  [BREAKPOINT.xs]?: SlotConfig;\n};\n\nexport type LayoutSlotConfig = {\n  [section in LayoutSections]: SlotConfig | SlotGroup | LayoutSlotConfig;\n};\n\nexport interface BreakPoint {\n  /**\n   * The minimum screen width.\n   */\n  min?: number;\n\n  /**\n   * The minimum screen width.\n   */\n  max?: number;\n}\n\n/**\n * The `LayoutBreakPoints` can be used to configure the size of a specific screen. The screen\n * are defined by breakpoints, with a min and/or max value. The breakpoint size is in pixels,\n * hence a numeric value is expected.\n */\nexport type LayoutBreakPoints = {\n  [t in BREAKPOINT]?: number | BreakPoint;\n};\n\n/**\n * The LayoutConfig supports the configuration of page slots by page templates\n * or page sections, such as headers and footers. The configuration also supports\n * adaptive design per breakpoint (not per device type), so that the DOM is (re)rendered\n * por a given breakpoint.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class LayoutConfig {\n  /**\n   * The breakpoint configuration is used to defined various screens. A specific screen name can\n   * be used to further configure certain features, such as the overall layout or specific\n   * component configurations.\n   */\n  breakpoints?: LayoutBreakPoints;\n\n  layoutSlots?: LayoutSlotConfig;\n\n  /**\n   * Deferred loading is a technique to hold of with the loading / creation\n   * of DOM elements which are not not in the initial view port.\n   * This technique wil increase performance.\n   */\n  deferredLoading?: {\n    /**\n     * The global strategy will be used as a fallback strategy for all DOM creation,\n     * but can be overridden by local configuration, i.e. for cms components.\n     */\n    strategy?: DeferLoadingStrategy;\n    /**\n     * The intersection margin contains the offset used by the Intersection Observer\n     * to observe elements outside the view port.\n     *\n     * See https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/rootMargin\n     */\n    intersectionMargin?: string;\n  };\n\n  launch?: LaunchConfig;\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends LayoutConfig {}\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\nimport {\n  BreakPoint,\n  BREAKPOINT,\n  LayoutBreakPoints,\n  LayoutConfig,\n} from '../config/layout-config';\n\n/**\n * The `BreakpointService` resolves the various screen sizes that are used in\n * the storefront. The screen sizes are globally configurable based on your\n * layout requirements. You can adjust the screen sizes by setting the minimum\n * and/or maximum size for a breakpoint, as well as extending the configuration\n * with new screens.\n *\n * By default, the `BreakpointService` is based on the breakpoints from the\n * Bootstrap ui library:\n * - `xs`: < 576px\n * - `sm`: 576px - 767px\n * - `md`: 768px - 991px\n * - `lg`: 992px - 1199px\n * - `xl`: >= 1200px\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreakpointService {\n  private _breakpoints: BREAKPOINT[];\n\n  breakpoint$: Observable<BREAKPOINT> = isPlatformBrowser(this.platform)\n    ? this.winRef.resize$.pipe(\n        map((event) => this.getBreakpoint((<Window>event.target).innerWidth)),\n        distinctUntilChanged()\n      )\n    : of(this.fallbackBreakpoint);\n\n  constructor(\n    protected winRef: WindowRef,\n    protected layoutConfig: LayoutConfig,\n    @Inject(PLATFORM_ID) protected platform: any\n  ) {}\n\n  /**\n   * Returns the breakpoints for the storefront layout.\n   *\n   * The breakpoints are driven by the `LayoutConfig.breakpoints` and sorted based on\n   * the given screen size.\n   */\n  get breakpoints(): BREAKPOINT[] {\n    if (!this._breakpoints) {\n      this._breakpoints = this.resolveBreakpointsFromConfig();\n    }\n    return this._breakpoints;\n  }\n\n  /**\n   * Returns the _maximum_ size for the breakpoint, given by the `LayoutConfig.breakpoints`\n   * configuration.\n   */\n  getSize(breakpoint: BREAKPOINT): number {\n    return (\n      this.getMaxSize(breakpoint) ??\n      // if there's no direct max value or explicit max value\n      // we must derive the max value from the previous min\n      this.getMinSize(\n        this.breakpoints?.[this.breakpoints.indexOf(breakpoint) + 1]\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the current screen size is smaller than the maximum size of the\n   * given breakpoint.\n   *\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\n   * window innerWidth is smaller than the configured size of `BREAKPOINT.md`.\n   */\n  isDown(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(\n      map((br) =>\n        this.breakpoints\n          .slice(0, this.breakpoints.indexOf(breakpoint) + 1)\n          .includes(br)\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the current screen size is larger than the minimum size of the\n   * given breakpoint.\n   *\n   * If the given breakpoint is `BREAKPOINT.md`, the method returns `true` when the\n   * window innerWidth is larger than the configured size of `BREAKPOINT.sm`.\n   */\n  isUp(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(\n      map((br) =>\n        this.breakpoints\n          .slice(this.breakpoints.indexOf(breakpoint))\n          .includes(br)\n      )\n    );\n  }\n\n  /**\n   * Indicates whether the given breakpoint fits in the current screen size.\n   */\n  isEqual(breakpoint: BREAKPOINT): Observable<boolean> {\n    return this.breakpoint$.pipe(map((br) => br === breakpoint));\n  }\n\n  /**\n   * Returns the fallback breakpoint in case no breakpoint can be resolved. This is\n   * typically the case when we're on SSR without an actual window.\n   *\n   * Returns the smallest screen size (mobile first).\n   */\n  protected get fallbackBreakpoint(): BREAKPOINT {\n    return this.breakpoints?.[0];\n  }\n\n  /**\n   * Resolves the breakpoints and sorts them according to the configured size.\n   *\n   * The sort order is by small to large screens.\n   */\n  protected resolveBreakpointsFromConfig(): BREAKPOINT[] {\n    const sortByScreenSize = (next: BREAKPOINT, prev: BREAKPOINT): number => {\n      const maxNext = Math.max(\n        this.getMinSize(next) + 1 || 0,\n        this.getMaxSize(next) || 0\n      );\n      const maxPrev = Math.max(\n        this.getMinSize(prev) + 1 || 0,\n        this.getMaxSize(prev) || 0\n      );\n      return maxNext < maxPrev ? -1 : 0;\n    };\n    return (Object.keys(this.config) as BREAKPOINT[]).sort(sortByScreenSize);\n  }\n\n  /**\n   * Returns the _maximum_ size for the breakpoint, given by the\n   * `LayoutConfig.breakpoints` configuration. We will try to resolve the\n   * max size form the current breakpoint, but if this is not available, we\n   * resolve it form the next breakpoint\n   */\n  protected getMaxSize(breakpoint: BREAKPOINT): number {\n    const breakpointConfig = this.config[breakpoint];\n\n    if (!breakpointConfig) {\n      return null;\n    }\n\n    // we treat numbers as the max number by default\n    if (typeof breakpointConfig === 'number') {\n      return breakpointConfig as number;\n    } else if (breakpointConfig.max) {\n      return breakpointConfig.max;\n    } else {\n      return null;\n    }\n  }\n\n  protected getMinSize(breakpoint: BREAKPOINT): number {\n    return (this.config[breakpoint] as BreakPoint)?.min;\n  }\n\n  /**\n   * Returns a `BREAKPOINT` for the given window size.\n   *\n   * This method tries to match the closest breakpoint for the given\n   * window size. We'll fallback to the `largest` size in case the window\n   * is greater than the largest configurable breakpoint.\n   *\n   * The windowWidth should be smaller than the maximum size of any of the\n   * screen sizes defined in the `LayoutConfig.breakpoints`.\n   */\n  protected getBreakpoint(windowWidth: number): BREAKPOINT {\n    return (\n      this.breakpoints.find((br) => windowWidth < this.getSize(br)) ??\n      this.breakpoints?.[this.breakpoints.length - 1]\n    );\n  }\n\n  /**\n   * Helper method to return the breakpoint configuration.\n   */\n  protected get config(): LayoutBreakPoints {\n    return this.layoutConfig?.breakpoints || {};\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { WindowRef } from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { filter, take } from 'rxjs/operators';\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\nimport { BREAKPOINT } from '../../../config';\nimport { KeyboardFocusConfig } from '../config';\n\n/**\n * @deprecated since 4.2, refer to spartacus issues (#13762)\n * Shared service for keyboard focus features called when the browser navigates.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OnNavigateFocusService implements OnDestroy {\n  protected resetFocusOnNavigate: Subscription;\n  protected resetViewOnNavigate: Subscription;\n\n  constructor(\n    protected config: KeyboardFocusConfig,\n    protected router: Router,\n    protected breakpointService: BreakpointService,\n    protected winRef: WindowRef\n  ) {}\n\n  ngOnDestroy(): void {\n    this.resetFocusOnNavigate?.unsubscribe();\n    this.resetViewOnNavigate?.unsubscribe();\n  }\n\n  /**\n   * Reads configuration and enables features based on flags set.\n   */\n  initializeWithConfig(): void {\n    if (!this.winRef.isBrowser()) {\n      return;\n    }\n\n    if (this.config?.keyboardFocus?.enableResetFocusOnNavigate) {\n      this.setResetFocusOnNavigate(\n        this.config.keyboardFocus.enableResetFocusOnNavigate\n      );\n    }\n\n    if (this.config?.keyboardFocus?.enableResetViewOnNavigate) {\n      this.setResetViewOnNavigate(\n        this.config.keyboardFocus.enableResetViewOnNavigate\n      );\n    }\n  }\n\n  /**\n   * Resets focus back to body element in the DOM tree when a navigation is started.\n   * @param enable Enable or disable this feature. Set this to an array of BREAKPOINTS to enable for specified screen widths.\n   */\n  setResetFocusOnNavigate(enable: boolean | BREAKPOINT[]): void {\n    this.resetFocusOnNavigate?.unsubscribe();\n\n    if (enable) {\n      this.resetFocusOnNavigate = this.router.events\n        .pipe(filter((event) => event instanceof NavigationStart))\n        .subscribe(() => {\n          if (Array.isArray(enable)) {\n            this.breakpointService.breakpoint$\n              .pipe(take(1))\n              .subscribe((breakpoint: BREAKPOINT) => {\n                if (enable.includes(breakpoint)) {\n                  this.winRef.document.body.focus();\n                }\n              });\n          } else if (typeof enable === 'boolean') {\n            this.winRef.document.body.focus();\n          }\n        });\n    }\n  }\n\n  /**\n   * Resets view back to body element in the DOM tree when a navigation is started.\n   * @param enable Enable or disable this feature. Set this to an array of BREAKPOINTS to enable for specified screen widths.\n   */\n  setResetViewOnNavigate(enable: boolean | BREAKPOINT[]): void {\n    this.resetViewOnNavigate?.unsubscribe();\n\n    if (enable) {\n      this.resetViewOnNavigate = this.router.events\n        .pipe(filter((event) => event instanceof NavigationStart))\n        .subscribe(() => {\n          if (Array.isArray(enable)) {\n            this.breakpointService.breakpoint$\n              .pipe(take(1))\n              .subscribe((breakpoint: BREAKPOINT) => {\n                if (enable.includes(breakpoint)) {\n                  this.winRef.document.body.scrollIntoView();\n                }\n              });\n          } else if (typeof enable === 'boolean') {\n            this.winRef.document.body.scrollIntoView();\n          }\n        });\n    }\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ConfigModule, provideDefaultConfig } from '@spartacus/core';\nimport { defaultKeyboardFocusConfig } from './config/default-keyboard-focus.config';\nimport { FocusDirective } from './focus.directive';\nimport { OnNavigateFocusService } from './on-navigate/on-navigate-focus.service';\n\nconst directives = [\n  // PersistFocusDirective,\n  // VisibleFocusDirective,\n  // BlockFocusDirective,\n  // AutoFocusDirective,\n  // EscapeFocusDirective,\n  // LockFocusDirective,\n  // TrapFocusDirective,\n  // TabFocusDirective,\n  FocusDirective,\n];\n\n/**\n * @deprecated since 4.2, refer to spartacus issues (#13762)\n * Remove the router module as well as it was part of the old initiative for scroll positiioning\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    ConfigModule.withConfig(defaultKeyboardFocusConfig),\n    RouterModule,\n  ],\n  declarations: [...directives],\n  providers: [\n    provideDefaultConfig(defaultKeyboardFocusConfig),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: keyboardFocusFactory,\n      deps: [OnNavigateFocusService],\n      multi: true,\n    },\n  ],\n  exports: [...directives],\n})\nexport class KeyboardFocusModule {}\n\n/**\n *  @deprecated since 4.2, refer to spartacus issues (#13762)\n *  Start keyboard focus services on app initialization.\n */\nexport function keyboardFocusFactory(\n  onNavigateFocusService: OnNavigateFocusService\n) {\n  const isReady = () => onNavigateFocusService.initializeWithConfig();\n  return isReady;\n}\n","import { Directive, Input, NgModule } from '@angular/core';\nimport { FocusConfig } from './keyboard-focus.model';\n\n@Directive({\n  selector: '[cxFocus]',\n})\nexport class MockKeyboardFocusDirective {\n  @Input('cxFocus') config: FocusConfig = {};\n}\n\n@NgModule({\n  declarations: [MockKeyboardFocusDirective],\n  exports: [MockKeyboardFocusDirective],\n})\nexport class KeyboardFocusTestingModule {}\n","// given that we're likely going to refactor the directives, we're\n// NOT exposing all it to the public API.\nexport * from './focus.directive';\nexport { FocusConfig, TrapFocus, TrapFocusType } from './keyboard-focus.model';\nexport * from './keyboard-focus.module';\nexport * from './focus-testing.module';\nexport * from './services/index';\nexport * from './config/index';\n\n// export * from './autofocus/index';\n// export * from './base/index';\n// export * from './block/index';\n// export * from './escape/index';\n// export * from './lock/index';\n// export * from './on-navigate/index';\n// export * from './persist/index';\n// export * from './tab/index';\n// export * from './trap/index';\n// export * from './visible/index';\n// export * from './keyboard-focus.model';\n","import { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\n\nexport interface LaunchConfig {\n  [key: string]: LaunchOptions;\n}\n\nexport type LaunchOptions =\n  | LaunchOutletDialog\n  | LaunchInlineDialog\n  | LaunchRoute\n  | LaunchInlineRootDialog;\n\n/**\n * Parent type for configurations that render components\n */\nexport interface LaunchDialog {\n  component: any;\n  /**\n   * Can the element be rendered multiple times\n   */\n  multi?: boolean;\n  /**\n   * Dialog type is used to apply CSS classes\n   */\n  dialogType?: DIALOG_TYPE;\n}\n\n/**\n * Configuration type to render a component in an outlet.\n * Outlet rendering should only be used for elements that open once and do not close.\n */\nexport interface LaunchOutletDialog extends LaunchDialog {\n  /**\n   * The outlet to render the element in\n   */\n  outlet: string;\n  /**\n   * Default: OutletPosition.BEFORE\n   */\n  position?: OutletPosition;\n}\n\n/**\n * Configuration type to render a component inline (next to the trigger)\n */\nexport interface LaunchInlineDialog extends LaunchDialog {\n  inline: boolean;\n}\n\n/**\n * Configuration type to render a component directly inside the cx-storefront (storefront selector).\n * Best used for global elements like dialogs.\n */\nexport interface LaunchInlineRootDialog extends LaunchDialog {\n  inlineRoot: boolean;\n}\n\n/**\n * Configuration type to render as link\n */\nexport interface LaunchRoute {\n  /**\n   * The route for the url\n   */\n  cxRoute: string;\n  /**\n   * The parameters for the route\n   */\n  params?: { [param: string]: any };\n}\n\n/**\n * Types of dialog openings supported\n */\nexport enum DIALOG_TYPE {\n  POPOVER = 'POPOVER',\n  POPOVER_CENTER = 'POPOVER_CENTER',\n  POPOVER_CENTER_BACKDROP = 'POPOVER_CENTER_BACKDROP',\n  DIALOG = 'DIALOG',\n  SIDEBAR_START = 'SIDEBAR_START',\n  SIDEBAR_END = 'SIDEBAR_END',\n}\n\n/**\n * List of available callers\n */\nexport const enum LAUNCH_CALLER {\n  ASM = 'ASM',\n  SKIP_LINKS = 'SKIP_LINKS',\n  ANONYMOUS_CONSENT = 'ANONYMOUS_CONSENT',\n  REPLENISHMENT_ORDER = 'REPLENISHMENT_ORDER',\n  PLACE_ORDER_SPINNER = 'PLACE_ORDER_SPINNER',\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ComponentRef,\n  Inject,\n  Renderer2,\n  RendererFactory2,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Applicable, Priority } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  DIALOG_TYPE,\n  LaunchDialog,\n  LaunchOptions,\n  LAUNCH_CALLER,\n} from '../config';\n\nexport abstract class LaunchRenderStrategy implements Applicable {\n  // List of called references; only used for rendered elements\n  protected renderedCallers: Array<{\n    caller: LAUNCH_CALLER | string;\n    element?: any;\n    component?: ComponentRef<any>;\n  }> = [];\n\n  /**\n   * Classes to apply to the component when the dialog is a DIALOG\n   */\n  protected dialogClasses = ['d-block', 'fade', 'modal', 'show'];\n  /**\n   * Classes to apply to the component when the dialog is a POPOVER\n   */\n  protected popoverClasses = ['cx-dialog-popover'];\n  /**\n   * Classes to apply to the component when the dialog is a POPOVER_CENTER\n   */\n  protected popoverCenterClasses = ['cx-dialog-popover-center'];\n  /**\n   * Classes to apply to the component when the dialog is a POPOVER_CENTER with a backdrop\n   */\n  protected popoverCenterBackdropClasses = [\n    'cx-dialog-popover-center-backdrop',\n  ];\n  /**\n   * Classes to apply to the component when the dialog is a SIDEBAR_END\n   */\n  protected sidebarEndClasses = ['cx-sidebar-end'];\n  /**\n   * Classes to apply to the component when the dialog is a SIDEBAR_START\n   */\n  protected sidebarStartClasses = ['cx-sidebar-start'];\n\n  protected renderer: Renderer2;\n\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2\n  ) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n  /**\n   * Render method to implement based on the strategy\n   *\n   * @param config Launch configuration\n   */\n  abstract render(\n    config: LaunchOptions,\n    caller: LAUNCH_CALLER | string,\n    vcr?: ViewContainerRef\n  ): Observable<ComponentRef<any> | undefined> | void;\n\n  /**\n   * Determines if the strategy is the right one for the provided configuration\n   *\n   * @param config\n   */\n  abstract hasMatch(config: LaunchOptions): boolean;\n\n  /**\n   * Determines if element should render\n   *\n   * @param caller\n   * @param config\n   */\n  protected shouldRender(\n    caller: LAUNCH_CALLER | string,\n    config: LaunchDialog\n  ): boolean {\n    return (\n      Boolean(config.component) &&\n      (this.renderedCallers.some((el) => el.caller === caller)\n        ? !!config.multi\n        : true)\n    );\n  }\n\n  protected applyClasses(\n    component: ComponentRef<any>,\n    dialogType: DIALOG_TYPE\n  ): void {\n    let classes = [];\n\n    // TODO: make classes configurable\n    switch (dialogType) {\n      case DIALOG_TYPE.DIALOG:\n        classes = this.dialogClasses;\n        this.renderer.addClass(this.document.body, 'modal-open');\n        break;\n      case DIALOG_TYPE.POPOVER:\n        classes = this.popoverClasses;\n        break;\n      case DIALOG_TYPE.POPOVER_CENTER:\n        classes = this.popoverCenterClasses;\n        break;\n      case DIALOG_TYPE.POPOVER_CENTER_BACKDROP:\n        classes = this.popoverCenterBackdropClasses;\n        break;\n      case DIALOG_TYPE.SIDEBAR_END:\n        classes = this.sidebarEndClasses;\n        break;\n      case DIALOG_TYPE.SIDEBAR_START:\n        classes = this.sidebarStartClasses;\n        break;\n    }\n\n    for (const newClass of classes) {\n      this.renderer.addClass(component.location.nativeElement, newClass);\n    }\n  }\n\n  /**\n   * Method to call when rendered element is destroyed\n   * The element will be removed from the list of rendered elements\n   *\n   * @param caller\n   * @param _config optional parameters used in children strategies\n   */\n  public remove(caller: LAUNCH_CALLER | string, config: LaunchOptions): void {\n    this.renderedCallers = this.renderedCallers.filter(\n      (el) => el.caller !== caller\n    );\n\n    if ((config as LaunchDialog)?.dialogType === DIALOG_TYPE.DIALOG) {\n      this.renderer.removeClass(this.document.body, 'modal-open');\n    }\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW; // low, as it's a default matcher\n  }\n}\n","import {\n  ComponentRef,\n  ElementRef,\n  Inject,\n  Injectable,\n  isDevMode,\n  ViewContainerRef,\n} from '@angular/core';\nimport { resolveApplicable } from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable } from 'rxjs';\nimport { filter, map, take, tap } from 'rxjs/operators';\nimport { LayoutConfig } from '../../config/layout-config';\nimport { LaunchOptions, LAUNCH_CALLER } from '../config/launch-config';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class LaunchDialogService {\n  private _dialogClose = new BehaviorSubject<string>(undefined);\n  private _dataSubject = new BehaviorSubject<any>(undefined);\n\n  get data$(): Observable<any> {\n    return this._dataSubject.asObservable();\n  }\n\n  constructor(\n    @Inject(LaunchRenderStrategy)\n    protected renderStrategies: LaunchRenderStrategy[],\n    protected layoutConfig: LayoutConfig\n  ) {\n    this.renderStrategies = this.renderStrategies || [];\n  }\n\n  /**\n   * Open the dialog\n   *\n   * @param caller LAUNCH_CALLER\n   * @param openElement button's Element ref\n   * @param vcr View Container Ref of the container for inline rendering\n   * @param data optional data which could be passed to dialog\n   */\n  openDialog(\n    caller: LAUNCH_CALLER | string,\n    openElement?: ElementRef,\n    vcr?: ViewContainerRef,\n    data?: any\n  ): Observable<any> | undefined {\n    const component = this.launch(caller, vcr, data);\n\n    if (component) {\n      return combineLatest([component, this.dialogClose]).pipe(\n        filter(([, close]) => close !== undefined),\n        tap(([comp]) => {\n          openElement?.nativeElement.focus();\n          this.clear(caller);\n          comp.destroy();\n        }),\n        map(([comp]) => comp)\n      );\n    }\n  }\n  /**\n   * Render the element based on the strategy from the launch configuration\n   *\n   * @param caller LAUNCH_CALLER\n   * @param vcr View Container Ref of the container for inline rendering\n   */\n  launch(\n    caller: LAUNCH_CALLER | string,\n    vcr?: ViewContainerRef,\n    data?: any\n  ): void | Observable<ComponentRef<any> | undefined> {\n    const config = this.findConfiguration(caller);\n    if (config) {\n      const renderer = this.getStrategy(config);\n\n      // Render if the strategy exists\n      if (renderer) {\n        this._dialogClose.next(undefined);\n        this._dataSubject.next(data);\n\n        return renderer.render(config, caller, vcr);\n      }\n    } else if (isDevMode()) {\n      console.warn('No configuration provided for caller ' + caller);\n    }\n  }\n\n  /**\n   * Opens dialog and subscribe in the service. Should be used if the trigger component might get destroyed while the component is open.\n   *\n   * @param caller Launch Caller\n   * @param openElement Element to open\n   * @param data Data to provide to the rendered element\n   */\n  openDialogAndSubscribe(\n    caller: LAUNCH_CALLER | string,\n    openElement?: ElementRef,\n    data?: any\n  ): void {\n    this.openDialog(caller, openElement, undefined, data)\n      ?.pipe(take(1))\n      .subscribe();\n  }\n\n  /**\n   * Util method to remove element from rendered elements list\n   *\n   * @param caller LAUNCH_CALLER\n   */\n  clear(caller: LAUNCH_CALLER | string): void {\n    const config = this.findConfiguration(caller);\n\n    if (config) {\n      const renderer = this.getStrategy(config);\n\n      // Render if the strategy exists\n      if (renderer) {\n        renderer.remove(caller, config);\n      }\n    }\n  }\n\n  get dialogClose(): Observable<string> {\n    return this._dialogClose.asObservable();\n  }\n\n  closeDialog(reason: string) {\n    this._dialogClose.next(reason);\n  }\n\n  /**\n   * Returns the configuration for the caller\n   *\n   * @param caller LAUNCH_CALLER\n   */\n  protected findConfiguration(\n    caller: LAUNCH_CALLER | string\n  ): LaunchOptions | undefined {\n    if (this.layoutConfig?.launch) {\n      return this.layoutConfig.launch[caller];\n    }\n    return undefined;\n  }\n\n  /**\n   * Returns the render strategy based on the configuration\n   *\n   * @param config Configuration for launch\n   */\n  protected getStrategy(config: LaunchOptions): LaunchRenderStrategy {\n    return resolveApplicable(this.renderStrategies, [config]);\n  }\n}\n","import { Component, OnDestroy, ViewContainerRef } from '@angular/core';\nimport { AnonymousConsentsService } from '@spartacus/core';\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\nimport { LAUNCH_CALLER } from '../../../layout/launch-dialog/config/launch-config';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-anonymous-consent-management-banner',\n  templateUrl: './anonymous-consent-management-banner.component.html',\n})\nexport class AnonymousConsentManagementBannerComponent implements OnDestroy {\n  private subscriptions = new Subscription();\n\n  bannerVisible$: Observable<boolean> =\n    this.anonymousConsentsService.isBannerVisible();\n\n  constructor(\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected vcr: ViewContainerRef,\n    protected launchDialogService: LaunchDialogService\n  ) {}\n\n  viewDetails(): void {\n    this.hideBanner();\n    const dialog = this.launchDialogService.openDialog(\n      LAUNCH_CALLER.ANONYMOUS_CONSENT,\n      null,\n      this.vcr\n    );\n    if (dialog) {\n      this.subscriptions.add(dialog.subscribe());\n    }\n  }\n\n  allowAll(): void {\n    this.subscriptions.add(\n      this.anonymousConsentsService\n        .giveAllConsents()\n        .pipe(tap(() => this.hideBanner()))\n        .subscribe()\n    );\n  }\n\n  hideBanner(): void {\n    this.anonymousConsentsService.toggleBannerDismissed(true);\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<ng-container *ngIf=\"bannerVisible$ | async as bannerVisible\">\n  <div\n    [ngClass]=\"{ 'anonymous-consent-banner-hidden': !bannerVisible }\"\n    class=\"anonymous-consent-banner\"\n  >\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-lg-8 col-xs-12\">\n          <div class=\"cx-banner-title\">\n            {{ 'anonymousConsents.banner.title' | cxTranslate }}\n          </div>\n          <div class=\"cx-banner-description\">\n            {{ 'anonymousConsents.banner.description' | cxTranslate }}\n          </div>\n        </div>\n\n        <div class=\"col-lg-4 col-xs-12 cx-banner-buttons\">\n          <button class=\"btn btn-action\" (click)=\"viewDetails()\">\n            {{ 'anonymousConsents.banner.viewDetails' | cxTranslate }}\n          </button>\n          <button class=\"btn btn-primary\" (click)=\"allowAll()\">\n            {{ 'anonymousConsents.banner.allowAll' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  isDevMode,\n  RendererFactory2,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { LaunchInlineDialog, LAUNCH_CALLER } from '../config/index';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class InlineRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2,\n    protected componentFactoryResolver: ComponentFactoryResolver\n  ) {\n    super(document, rendererFactory);\n  }\n\n  /**\n   * Renders the component from the configuration in the view container ref\n   *\n   * @param config\n   * @param caller\n   * @param vcr\n   */\n  render(\n    config: LaunchInlineDialog,\n    caller: LAUNCH_CALLER | string,\n    vcr: ViewContainerRef\n  ): Observable<ComponentRef<any>> | void {\n    // Only render if a ViewContainerRef is provided\n    if (vcr && this.shouldRender(caller, config)) {\n      const template = this.componentFactoryResolver.resolveComponentFactory(\n        config.component\n      );\n\n      const component = vcr.createComponent(template);\n\n      if (config?.dialogType) {\n        this.applyClasses(component, config?.dialogType);\n      }\n\n      this.renderedCallers.push({ caller, element: vcr.element, component });\n\n      return of(component);\n    } else if (isDevMode()) {\n      if (!vcr) {\n        console.warn(`No view container ref provided for ${caller}`);\n      } else {\n        console.warn(\n          `Element for ${caller} already rendered. To allow multi rendering add property multi: true.`\n        );\n      }\n    }\n  }\n\n  hasMatch(config: LaunchInlineDialog) {\n    return Boolean(config.inline);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  Injector,\n  RendererFactory2,\n} from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { LaunchInlineRootDialog, LAUNCH_CALLER } from '../config/launch-config';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class InlineRootRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected injector: Injector\n  ) {\n    super(document, rendererFactory);\n  }\n\n  get hostComponent() {\n    return this.injector.get(ApplicationRef)?.components?.[0];\n  }\n\n  render(\n    config: LaunchInlineRootDialog,\n    caller: LAUNCH_CALLER | string\n  ): Observable<ComponentRef<any>> | void {\n    if (this.shouldRender(caller, config)) {\n      const componentFactory =\n        this.componentFactoryResolver.resolveComponentFactory(config.component);\n\n      const contentInjector = Injector.create({\n        providers: [],\n      });\n\n      const componentRef = componentFactory.create(contentInjector);\n\n      this.injector.get(ApplicationRef)?.attachView(componentRef.hostView);\n\n      this.renderer.appendChild(\n        this.hostComponent?.location.nativeElement,\n        componentRef.location.nativeElement\n      );\n\n      if (config?.dialogType) {\n        this.applyClasses(componentRef, config?.dialogType);\n      }\n\n      this.renderedCallers.push({ caller, component: componentRef });\n\n      return of(componentRef);\n    }\n  }\n\n  hasMatch(config: LaunchInlineRootDialog) {\n    return Boolean(config.inlineRoot);\n  }\n}\n","import { Observable } from 'rxjs';\n\nexport enum OutletPosition {\n  REPLACE = 'replace',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n\nexport const AVOID_STACKED_OUTLETS = false;\nexport const USE_STACKED_OUTLETS = true;\n\n/**\n * Token for injecting outlet related context to the component rendered in the outlet\n */\nexport abstract class OutletContextData<T = any> {\n  /**\n   * Provides reference of the outlet where component is rendered in\n   */\n  reference: string;\n  /**\n   * Provides position of the outlet\n   */\n  position: OutletPosition;\n  /**\n   * Provides outlet context\n   *\n   * WARNING: Avoid using it if you need to read the latest value of the context. This property\n   *          is only the initial context value and won't be updated when the new context appears.\n   *          Use `context$` observable instead.\n   *\n   * @deprecated since 3.0 - use `context$` observable instead\n   */\n  context: T;\n  /**\n   * Provides outlet context as an observable\n   */\n  context$: Observable<T>;\n}\n","import { ComponentFactory, Injectable, TemplateRef } from '@angular/core';\nimport { AVOID_STACKED_OUTLETS, OutletPosition } from './outlet.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OutletService<T = TemplateRef<any> | ComponentFactory<any>> {\n  private templatesRefs = {\n    [OutletPosition.BEFORE]: new Map<string, T[]>(),\n    [OutletPosition.REPLACE]: new Map<string, T[]>(),\n    [OutletPosition.AFTER]: new Map<string, T[]>(),\n  };\n\n  /**\n   * Adds a template or ComponentFactory, so that UI outlets can be replaced dynamically.\n   * The UI position where this template or ComponentFactory is inserted is given by a\n   * string reference (called `outlet`) and optional `OutletPosition`. The `OutletPosition`\n   * is either before or after, or replaces the entire UI.\n   *\n   * @param outlet the UI location represented by a string\n   * @param template the `TemplateRef` that will be used to insert UI\n   * @param position the `OutletPosition` in the UI\n   */\n  add(outlet: string, template: T, position?: OutletPosition): void;\n  /**\n   * @param factory The `ComponentFactory` that will be dynamically added to the outlet UI\n   */\n  add(\n    outlet: string,\n    // eslint-disable-next-line @typescript-eslint/unified-signatures\n    factory: T,\n    position?: OutletPosition\n  ): void;\n  /**\n   * @param templateOrFactory A `ComponentFactory` that inserts a component dynamically.\n   */\n  add(\n    outlet: string,\n    templateOrFactory: T,\n    position: OutletPosition = OutletPosition.REPLACE\n  ): void {\n    const store = this.templatesRefs[position];\n    if (store) {\n      const existing = store.get(outlet) || [];\n      const newValue: T[] = existing.concat([templateOrFactory]);\n      store.set(outlet, newValue);\n    }\n  }\n\n  /**\n   *\n   * Returns a single object or multiple objects for the given outlet reference,\n   * depending on the `stacked` argument.\n   *\n   * @param outlet The outlet reference\n   * @param position the outlet position, `OutletPosition.before`, `OutletPosition.AFTER` or `OutletPosition.REPLACE`\n   * @param stacked Indicates whether an array of outlet components is returned\n   */\n  get(\n    outlet: string,\n    position: OutletPosition = OutletPosition.REPLACE,\n    stacked = AVOID_STACKED_OUTLETS\n  ): T[] | T {\n    const store =\n      this.templatesRefs[position] ||\n      this.templatesRefs[OutletPosition.REPLACE];\n\n    const templateRef: T[] = store.get(outlet);\n    if (templateRef && !stacked) {\n      return templateRef[0];\n    }\n    return templateRef;\n  }\n\n  remove(\n    outlet: string,\n    position: OutletPosition = OutletPosition.REPLACE,\n    value?: T\n  ): void {\n    const store =\n      this.templatesRefs[position] ||\n      this.templatesRefs[OutletPosition.REPLACE];\n\n    this.removeValueOrAll(store, outlet, value);\n  }\n\n  protected removeValueOrAll(\n    store: Map<string, T[]>,\n    outlet: string,\n    value?: T\n  ): void {\n    if (!value && store.has(outlet)) {\n      store.delete(outlet);\n    } else if (value && store.has(outlet)) {\n      let existing = store.get(outlet);\n\n      existing = existing.filter((val) => val !== value);\n\n      store.set(outlet, existing);\n    }\n  }\n}\n","import {\n  Directive,\n  Input,\n  OnDestroy,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { OutletPosition } from '../outlet.model';\nimport { OutletService } from '../outlet.service';\n\n@Directive({\n  selector: '[cxOutletRef]',\n})\nexport class OutletRefDirective implements OnInit, OnDestroy {\n  @Input()\n  cxOutletRef: string;\n  @Input()\n  cxOutletPos: OutletPosition;\n\n  constructor(\n    private tpl: TemplateRef<any>,\n    private outletService: OutletService\n  ) {}\n\n  ngOnInit() {\n    this.outletService.add(this.cxOutletRef, this.tpl, this.cxOutletPos);\n  }\n\n  ngOnDestroy() {\n    this.outletService.remove(this.cxOutletRef, this.cxOutletPos, this.tpl);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { OutletRefDirective } from './outlet-ref.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletRefDirective],\n  exports: [OutletRefDirective],\n})\nexport class OutletRefModule {}\n","import { Injectable } from '@angular/core';\nimport { isNotNullable } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { OutletDirective } from './outlet.directive';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OutletRendererService {\n  private outletRefs = new BehaviorSubject(new Map<string, OutletDirective>());\n\n  /**\n   * Dynamically render the templates in the specified array\n   *\n   * @param outlet\n   */\n  render(outlet: string): void {\n    if (this.outletRefs.value.size !== 0) {\n      this.outletRefs.value.get(outlet).render();\n    }\n  }\n\n  /**\n   * Register outlet to be available to render dynamically\n   *\n   * @param cxOutlet\n   * @param context\n   */\n  register(cxOutlet: string, context: OutletDirective): void {\n    this.outletRefs.next(this.outletRefs.value.set(cxOutlet, context));\n  }\n  /**\n   * Returns map of outlets\n   *\n   */\n  getOutletRef(outlet: string): Observable<OutletDirective> {\n    return this.outletRefs.asObservable().pipe(\n      map((val) => val.get(outlet)),\n      filter(isNotNullable)\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, first, flatMap, map } from 'rxjs/operators';\nimport { LayoutConfig } from '../config/layout-config';\nimport { IntersectionOptions } from './intersection.model';\n\n/**\n * The IntersectionService uses the native IntersectionObserver (v2), which\n * can be used to implement pre-loading and deferred loading of DOM content.\n *\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class IntersectionService {\n  constructor(protected config: LayoutConfig) {}\n\n  /**\n   * Returns an Observable that emits only once a boolean value whenever\n   * the given element has shown in the view port.\n   *\n   * The returned observable will only emit the first value. The\n   * observable must be cleaned up either way, since the value might never emit; it\n   *  depends on whether the element appears in the view port.\n   */\n  isIntersected(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    return this.intersects(element, options).pipe(first((v) => v === true));\n  }\n\n  /**\n   * Indicates whenever the element intersects the view port. An optional margin\n   * is used to intersects before the element shows up in the viewport.\n   * A value is emitted each time the element intersects.\n   *\n   * This is private for now, but could be exposed as a public API\n   * to introduce additional (css) render effects to the UI.\n   */\n  private intersects(\n    element: HTMLElement,\n    options: IntersectionOptions = {}\n  ): Observable<boolean> {\n    const elementVisible$ = new Observable((observer) => {\n      const rootMargin = this.getRootMargin(options);\n      const intersectOptions = { rootMargin, threshold: options.threshold };\n      const intersectionObserver = new IntersectionObserver((entries) => {\n        observer.next(entries);\n      }, intersectOptions);\n      intersectionObserver.observe(element);\n      return () => {\n        intersectionObserver.disconnect();\n      };\n    }).pipe(\n      flatMap((entries: IntersectionObserverEntry[]) => entries),\n      map((entry: IntersectionObserverEntry) => entry.isIntersecting),\n      distinctUntilChanged()\n    );\n\n    return elementVisible$;\n  }\n\n  private getRootMargin(options: IntersectionOptions = {}): string {\n    if (options.rootMargin) {\n      return options.rootMargin;\n    }\n    const layoutConfig = this.config as LayoutConfig;\n    if (\n      layoutConfig.deferredLoading &&\n      layoutConfig.deferredLoading.intersectionMargin\n    ) {\n      return layoutConfig.deferredLoading.intersectionMargin;\n    }\n  }\n}\n","import { isPlatformServer } from '@angular/common';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { DeferLoadingStrategy } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { LayoutConfig } from '../config/layout-config';\nimport { IntersectionOptions } from './intersection.model';\nimport { IntersectionService } from './intersection.service';\n\n/**\n * The defer loading serivce is used to defer loading of DOM elements\n * until the elements are required for the user experience.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DeferLoaderService {\n  globalLoadStrategy: DeferLoadingStrategy;\n\n  constructor(\n    @Inject(PLATFORM_ID) private platformId: Object,\n    protected config: LayoutConfig,\n    protected intersectionService: IntersectionService\n  ) {\n    this.globalLoadStrategy = config.deferredLoading\n      ? config.deferredLoading.strategy\n      : DeferLoadingStrategy.INSTANT;\n  }\n\n  /**\n   * Defer loading till the element intersects the viewport.\n   *\n   * We evaluate whether we instantly load the element for different reasons:\n   * - we run in SSR mode\n   * - there's no global strategy given\n   * - the global loading strategy is set to INSTANT loading,\n   *   and the loading strategy in the given is not set to DEFER\n   * - the loading strategy in the given options is set to INSTANT\n   */\n  load(\n    element: HTMLElement,\n    options?: IntersectionOptions\n  ): Observable<boolean> {\n    if (this.shouldLoadInstantly((options || {}).deferLoading)) {\n      return of(true);\n    } else {\n      return this.intersectionService.isIntersected(element, options);\n    }\n  }\n\n  private shouldLoadInstantly(\n    elementLoadingStrategy: DeferLoadingStrategy\n  ): boolean {\n    return (\n      isPlatformServer(this.platformId) ||\n      elementLoadingStrategy === DeferLoadingStrategy.INSTANT ||\n      (elementLoadingStrategy !== DeferLoadingStrategy.DEFER &&\n        this.globalLoadStrategy === DeferLoadingStrategy.INSTANT)\n    );\n  }\n}\n","import {\n  ComponentFactory,\n  ComponentRef,\n  Directive,\n  EmbeddedViewRef,\n  EventEmitter,\n  Injector,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Output,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ReplaySubject, Subscription } from 'rxjs';\nimport { DeferLoaderService } from '../../layout/loading/defer-loader.service';\nimport { IntersectionOptions } from '../../layout/loading/intersection.model';\nimport { OutletRendererService } from './outlet-renderer.service';\nimport {\n  OutletContextData,\n  OutletPosition,\n  USE_STACKED_OUTLETS,\n} from './outlet.model';\nimport { OutletService } from './outlet.service';\n\n@Directive({\n  selector: '[cxOutlet]',\n})\nexport class OutletDirective<T = any> implements OnDestroy, OnChanges {\n  private renderedTemplate = [];\n  public renderedComponents = new Map<\n    OutletPosition,\n    Array<ComponentRef<any> | EmbeddedViewRef<any>>\n  >();\n\n  @Input() cxOutlet: string;\n\n  /**\n   * Context data to be provided to child view of the outlet\n   */\n  @Input() cxOutletContext: T;\n\n  /**\n   * Observable with current outlet context\n   */\n  private readonly outletContext$ = new ReplaySubject<T>(1);\n\n  /**\n   * Defers loading options for the the templates of this outlet.\n   */\n  @Input() cxOutletDefer: IntersectionOptions;\n\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>(true);\n\n  subscription = new Subscription();\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private templateRef: TemplateRef<any>,\n    private outletService: OutletService,\n    private deferLoaderService: DeferLoaderService,\n    private outletRendererService: OutletRendererService\n  ) {}\n\n  /**\n   * Renders view for outlet or defers it, depending on the input `cxOutletDefer`\n   */\n  public render(): void {\n    this.vcr.clear();\n    this.renderedTemplate = [];\n    this.renderedComponents.clear();\n    this.subscription.unsubscribe();\n    this.subscription = new Subscription();\n\n    if (this.cxOutletDefer) {\n      this.deferLoading();\n    } else {\n      this.build();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.cxOutlet) {\n      this.render();\n      this.outletRendererService.register(this.cxOutlet, this);\n    }\n    if (changes.cxOutletContext) {\n      this.outletContext$.next(this.cxOutletContext);\n    }\n  }\n\n  private deferLoading(): void {\n    this.loaded.emit(false);\n    const hostElement = this.getHostElement(this.vcr.element.nativeElement);\n    // Although the deferLoaderService might emit only once, as long as the hostElement\n    // isn't being loaded, there's no value being emitted. Therefore we need to clean up\n    // the subscription on destroy.\n    this.subscription.add(\n      this.deferLoaderService\n        .load(hostElement, this.cxOutletDefer)\n        .subscribe(() => {\n          this.build();\n          this.loaded.emit(true);\n        })\n    );\n  }\n\n  /**\n   * Renders view for outlet\n   */\n  private build() {\n    this.buildOutlet(OutletPosition.BEFORE);\n    this.buildOutlet(OutletPosition.REPLACE);\n    this.buildOutlet(OutletPosition.AFTER);\n  }\n\n  /**\n   * Renders view in a given position for outlet\n   */\n  private buildOutlet(position: OutletPosition): void {\n    let templates: any[] = <any[]>(\n      this.outletService.get(this.cxOutlet, position, USE_STACKED_OUTLETS)\n    );\n\n    templates = templates?.filter((el) => !this.renderedTemplate.includes(el));\n\n    if (!templates && position === OutletPosition.REPLACE) {\n      templates = [this.templateRef];\n    }\n\n    // Just in case someone extended the `OutletService` and\n    // returns a singular object.\n    if (!Array.isArray(templates)) {\n      templates = [templates];\n    }\n\n    const components = [];\n    templates.forEach((obj) => {\n      const component = this.create(obj, position);\n      components.push(component);\n    });\n\n    this.renderedComponents.set(position, components);\n  }\n\n  /**\n   * Renders view based on the given template or component factory\n   */\n  private create(\n    tmplOrFactory: any,\n    position: OutletPosition\n  ): ComponentRef<any> | EmbeddedViewRef<any> {\n    this.renderedTemplate.push(tmplOrFactory);\n\n    if (tmplOrFactory instanceof ComponentFactory) {\n      const component = this.vcr.createComponent(\n        tmplOrFactory,\n        undefined,\n        this.getComponentInjector(position)\n      );\n      return component;\n    } else if (tmplOrFactory instanceof TemplateRef) {\n      const view = this.vcr.createEmbeddedView(\n        <TemplateRef<any>>tmplOrFactory,\n        {\n          $implicit: this.cxOutletContext,\n        }\n      );\n\n      // we do not know if content is created dynamically or not\n      // so we apply change detection anyway\n      view.markForCheck();\n      return view;\n    }\n  }\n\n  /**\n   * Returns injector with OutletContextData that can be injected to the component\n   * rendered in the outlet\n   */\n  private getComponentInjector(position: OutletPosition): Injector {\n    const contextData: OutletContextData<T> = {\n      reference: this.cxOutlet,\n      position,\n      context: this.cxOutletContext,\n      context$: this.outletContext$.asObservable(),\n    };\n\n    return Injector.create({\n      providers: [\n        {\n          provide: OutletContextData,\n          useValue: contextData,\n        },\n      ],\n      parent: this.vcr.injector,\n    });\n  }\n\n  /**\n   * Returns the closest `HtmlElement`, by iterating over the\n   * parent nodes of the given element.\n   *\n   * We avoid traversing the parent _elements_, as this is blocking\n   * ie11 implementations. One of the spare exclusions we make to not\n   * supporting ie11.\n   *\n   * @param element\n   */\n  private getHostElement(element: Node): HTMLElement {\n    if (element instanceof HTMLElement) {\n      return element;\n    }\n    return this.getHostElement(element.parentNode);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n    this.outletContext$.complete();\n  }\n}\n","import { InjectionToken, StaticProvider, Type } from '@angular/core';\nimport { OutletPosition } from './outlet.model';\n\n/**\n * @private We plan to drive the outlets by standard configuration\n */\nexport const PROVIDE_OUTLET_OPTIONS = new InjectionToken<ProvideOutletOptions>(\n  'PROVIDE_OUTLET_OPTIONS'\n);\n\nexport interface ProvideOutletOptions {\n  /**\n   *  Unique id of the outlet\n   */\n  id: string;\n\n  /**\n   * Component to be registered for the outlet\n   */\n  component: Type<any>;\n\n  /**\n   * Component's position in the outlet\n   */\n  position?: OutletPosition;\n}\n\n/**\n * Helper function to register a component for an outlet.\n *\n * @param options.id unique id of the outlet\n * @param options.component Component to be registered for the outlet\n * @param options.position Component's position in the outlet (default: `OutletPosition.AFTER`)\n */\nexport function provideOutlet(options: ProvideOutletOptions): StaticProvider {\n  return {\n    provide: PROVIDE_OUTLET_OPTIONS,\n    useValue: options,\n    multi: true,\n  };\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  APP_INITIALIZER,\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  Type,\n} from '@angular/core';\nimport { OutletDirective } from './outlet.directive';\nimport { OutletPosition } from './outlet.model';\nimport {\n  PROVIDE_OUTLET_OPTIONS,\n  ProvideOutletOptions,\n} from './outlet.providers';\nimport { OutletService } from './outlet.service';\n\n/**\n * @private\n */\nexport function registerOutletsFactory(\n  providedOutletOptions: ProvideOutletOptions[],\n  componentFactoryResolver: ComponentFactoryResolver,\n  outletService: OutletService<ComponentFactory<Type<any>>>\n): () => void {\n  const result = () => {\n    (providedOutletOptions ?? []).forEach((options) => {\n      const factory = componentFactoryResolver.resolveComponentFactory(\n        options.component\n      );\n      outletService.add(\n        options.id,\n        factory,\n        options.position ?? OutletPosition.AFTER\n      );\n    });\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [OutletDirective],\n  exports: [OutletDirective],\n})\nexport class OutletModule {\n  static forRoot(): ModuleWithProviders<OutletModule> {\n    return {\n      ngModule: OutletModule,\n      providers: [\n        {\n          provide: APP_INITIALIZER,\n          useFactory: registerOutletsFactory,\n          deps: [\n            [new Optional(), PROVIDE_OUTLET_OPTIONS],\n            ComponentFactoryResolver,\n            OutletService,\n          ],\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport {\n  ComponentFactory,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Inject,\n  Injectable,\n  RendererFactory2,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport {\n  OutletPosition,\n  OutletService,\n} from '../../../cms-structure/outlet/index';\nimport { OutletRendererService } from '../../../cms-structure/outlet/outlet-renderer.service';\nimport { LaunchOutletDialog, LAUNCH_CALLER } from '../config/index';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class OutletRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2,\n    protected outletService: OutletService<ComponentFactory<any>>,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected outletRendererService: OutletRendererService\n  ) {\n    super(document, rendererFactory);\n  }\n\n  /**\n   * Renders the element in the configured outlet\n   *\n   * @param config\n   * @param caller\n   * @param vcr\n   */\n  render(\n    config: LaunchOutletDialog,\n    caller: LAUNCH_CALLER | string\n  ): Observable<ComponentRef<any> | undefined> | void {\n    if (this.shouldRender(caller, config)) {\n      const template = this.componentFactoryResolver.resolveComponentFactory(\n        config.component\n      );\n      this.outletService.add(\n        config.outlet,\n        template,\n        config.position ? config.position : OutletPosition.BEFORE\n      );\n      this.outletRendererService.render(config.outlet);\n      this.renderedCallers.push({ caller });\n\n      return this.outletRendererService.getOutletRef(config.outlet).pipe(\n        map((outletDirective) => {\n          const components = outletDirective.renderedComponents.get(\n            config.position ? config.position : OutletPosition.BEFORE\n          ) as ComponentRef<any>[];\n\n          return components\n            .reverse()\n            .find(\n              (component) => component.componentType === template.componentType\n            );\n        }),\n        tap((component) => {\n          if (config?.dialogType && component) {\n            this.applyClasses(component, config?.dialogType);\n          }\n        })\n      );\n    }\n  }\n\n  hasMatch(config: LaunchOutletDialog) {\n    return Boolean(config.outlet);\n  }\n\n  remove(caller: LAUNCH_CALLER | string, config: LaunchOutletDialog): void {\n    const template = this.componentFactoryResolver.resolveComponentFactory(\n      config.component\n    );\n\n    this.outletService.remove(\n      config.outlet,\n      config.position ? config.position : OutletPosition.BEFORE,\n      template\n    );\n\n    super.remove(caller, config);\n  }\n}\n","import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable, RendererFactory2 } from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { LaunchRoute, LAUNCH_CALLER } from '../config/index';\nimport { LaunchRenderStrategy } from './launch-render.strategy';\n\n@Injectable({ providedIn: 'root' })\nexport class RoutingRenderStrategy extends LaunchRenderStrategy {\n  constructor(\n    @Inject(DOCUMENT) protected document: any,\n    protected rendererFactory: RendererFactory2,\n    protected routingService: RoutingService\n  ) {\n    super(document, rendererFactory);\n  }\n  /**\n   * Navigates to the route configured for the caller\n   */\n  render(config: LaunchRoute, _caller: LAUNCH_CALLER | string) {\n    this.routingService.go(config);\n  }\n\n  hasMatch(config: LaunchRoute) {\n    return Boolean(config.cxRoute);\n  }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { LayoutConfig } from '../config/layout-config';\nimport {\n  InlineRenderStrategy,\n  LaunchRenderStrategy,\n  OutletRenderStrategy,\n  RoutingRenderStrategy,\n} from './services/index';\nimport { InlineRootRenderStrategy } from './services/inline-root-render.strategy';\n\n@NgModule({\n  providers: [\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: OutletRenderStrategy,\n      multi: true,\n    },\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: InlineRenderStrategy,\n      multi: true,\n    },\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: RoutingRenderStrategy,\n      multi: true,\n    },\n    {\n      provide: LaunchRenderStrategy,\n      useExisting: InlineRootRenderStrategy,\n      multi: true,\n    },\n  ],\n})\nexport class LaunchDialogModule {\n  static forRoot(): ModuleWithProviders<LaunchDialogModule> {\n    return {\n      ngModule: LaunchDialogModule,\n      providers: [{ provide: LayoutConfig, useExisting: Config }],\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { DirectionMode } from '../../../layout/direction/config/direction.model';\n\nexport enum ICON_TYPE {\n  STAR = 'STAR',\n  SEARCH = 'SEARCH',\n  CART = 'CART',\n  INFO = 'INFO',\n  GRID = 'GRID',\n  LIST = 'LIST',\n  CARET_DOWN = 'CARET_DOWN',\n  CARET_UP = 'CARET_UP',\n  CARET_LEFT = 'CARET_LEFT',\n  CARET_RIGHT = 'CARET_RIGHT',\n  CLOSE = 'CLOSE',\n  ERROR = 'ERROR',\n  WARNING = 'WARNING',\n  SUCCESS = 'SUCCESS',\n  VISA = 'VISA',\n  MASTER_CARD = 'MASTER_CARD',\n  AMEX = 'AMEX',\n  DINERS_CLUB = 'DINERS_CLUB',\n  CREDIT_CARD = 'CREDIT_CARD',\n  EXPAND = 'EXPAND',\n  COLLAPSE = 'COLLAPSE',\n  RESET = 'RESET',\n  CIRCLE = 'CIRCLE',\n  HEART = 'HEART',\n  EMPTY_HEART = 'EMPTY_HEART',\n  FILTER = 'FILTER',\n  PENCIL = 'PENCIL',\n  CLOCK = 'CLOCK',\n  TRASH = 'TRASH',\n  ACTIVE = 'ACTIVE',\n  SORT_DOWN = 'SORT_DOWN',\n  SORT = 'SORT',\n  ON = 'ON',\n  OFF = 'OFF',\n  LINK_OUT = 'LINK_OUT',\n  EXPAND_ARROWS = 'EXPAND_ARROWS',\n}\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class IconConfig {\n  icon?: IconOptions;\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends IconConfig {}\n}\n\nexport interface IconOptions {\n  /**\n   * Each icon type can be configured with a so-called symbol. The symbol will\n   * be used to map the icon to an SVG `symbol` (id) or to the style classes of\n   * a font based icon. The following configuration would map to a fontawesome\n   * icon:\n   *\n   * icon: {\n   *   symbols: {\n   *     CART: 'fas fa-shopping-cart'\n   *   }\n   * }\n   */\n  symbols?: {\n    [ICON_TYPE: string]: string;\n  };\n\n  /**\n   * Resources are used to map icon types to certain asset, such as an SVG (sprite) image.\n   * The resource type (`IconResourceType`) dictates whether an SVG image is used. The URL\n   * is used for the SVG xlink reference.\n   */\n  resources?: IconConfigResource[];\n\n  /**\n   * Lists icons that should be flipped for a specific direction.\n   */\n  flipDirection?: {\n    [ICON_TYPE: string]: DirectionMode;\n  };\n}\n\nexport interface IconConfigResource {\n  type: IconResourceType | string;\n  url?: string;\n  types?: (ICON_TYPE | string)[];\n}\n\n/**\n * Each ICON type can have an companied resource type, such as SVG, LINK (font) or just TEXT.\n * The resources will be automatically loaded in case they're required for the `ICON_TYPE`.\n */\nexport enum IconResourceType {\n  /**\n   * An svg based icon requires an SVG resource that must be loaded,\n   * this is typically a sprite svg file.\n   */\n  SVG = 'svg',\n\n  /**\n   * A font based ICON might require an additional CSS file to be loaded.\n   */\n  LINK = 'link',\n  /**\n   * Text based icons will simply add the ICON string to the DOM. Text icons do not need an image\n   * or CSS pseudo class (i.e. :before), as the text itself is the icon (i.e. +)\n   */\n  TEXT = 'text',\n}\n","import { IconConfig, IconResourceType } from './icon.model';\n\nexport const fontawesomeIconConfig: IconConfig = {\n  icon: {\n    symbols: {\n      SEARCH: 'fas fa-search',\n      CART: 'fas fa-shopping-cart',\n      INFO: 'fas fa-info-circle',\n      STAR: 'fas fa-star',\n      GRID: 'fas fa-th-large',\n      LIST: 'fas fa-bars',\n      CARET_UP: 'fas fa-angle-up',\n      CARET_DOWN: 'fas fa-angle-down',\n      CARET_RIGHT: 'fas fa-angle-right',\n      CARET_LEFT: 'fas fa-angle-left',\n      ERROR: 'fas fa-exclamation-circle',\n      WARNING: 'fas fa-exclamation-triangle',\n      SUCCESS: 'fas fa-check-circle',\n      CLOSE: 'fas fa-times',\n      VISA: 'fab fa-cc-visa',\n      MASTER_CARD: 'fab fa-cc-mastercard',\n      AMEX: 'fab fa-cc-amex',\n      DINERS_CLUB: 'fab fa-cc-diners-club',\n      CREDIT_CARD: 'fas fa-credit-card',\n      COLLAPSE: 'fas fa-minus',\n      EXPAND: 'fas fa-plus',\n      RESET: 'fas fa-times-circle',\n      CIRCLE: 'fas fa-circle',\n      HEART: 'fas fa-heart',\n      EMPTY_HEART: 'far fa-heart',\n      FILTER: 'fas fa-filter',\n      PENCIL: 'fas fa-pencil-alt',\n      CLOCK: 'far fa-clock',\n      TRASH: 'fas fa-trash',\n      ACTIVE: 'fas fa-check',\n      ON: 'fas fa-toggle-on',\n      OFF: 'fas fa-toggle-off',\n      LINK_OUT: 'fas fa-external-link-alt',\n      SORT_DOWN: 'fas fa-sort-down',\n      SORT: 'fas fa-sort',\n      EXPAND_ARROWS: 'fas fa-expand',\n    },\n    resources: [\n      {\n        type: IconResourceType.LINK,\n        url: 'https://use.fontawesome.com/releases/v5.8.1/css/all.css',\n      },\n    ],\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\nimport { DirectionMode } from '../../../layout/direction/config/direction.model';\nimport {\n  IconConfig,\n  IconConfigResource,\n  IconOptions,\n  IconResourceType,\n  ICON_TYPE,\n} from './icon.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class IconLoaderService {\n  private loadedResources = [];\n  constructor(\n    protected winRef: WindowRef,\n    protected iconConfig: IconConfig,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  /**\n   * Returns an html fragment which can be added to the DOM in a safe way.\n   */\n  getHtml(type: ICON_TYPE | string): SafeHtml {\n    if (this.isResourceType(type, IconResourceType.SVG)) {\n      return this.sanitizer.bypassSecurityTrustHtml(\n        `<svg><use xlink:href=\"${this.getSvgPath(type)}\"></use></svg>`\n      );\n    }\n    if (this.isResourceType(type, IconResourceType.TEXT)) {\n      return this.sanitizer.bypassSecurityTrustHtml(this.getSymbol(type));\n    }\n  }\n\n  /**\n   * Return the direction for which the icon should mirror (ltr vs rtl). The icon direction\n   * is configurable, but optional, as only a few icons should be flipped for rtl direction.\n   */\n  getFlipDirection(type: ICON_TYPE | string): DirectionMode {\n    return this.config?.flipDirection?.[type];\n  }\n\n  /**\n   *\n   * Returns the symbol class(es) for the icon type.\n   */\n  getStyleClasses(iconType: ICON_TYPE | string): string {\n    return this.getSymbol(iconType) || '';\n  }\n\n  /**\n   * Indicates whether the given `ICON_TYPE` is configured for\n   * the given `IconResourceType`.\n   */\n  private isResourceType(\n    iconType: ICON_TYPE | string,\n    resourceType: IconResourceType\n  ): boolean {\n    return (\n      this.config.resources &&\n      !!this.config.resources.find(\n        (res) =>\n          res.types && res.type === resourceType && res.types.includes(iconType)\n      )\n    );\n  }\n\n  /**\n   * Returns the path to the svg link. The link supports path names\n   * as well, if the config a[[s been setup to support a svg file path.\n   * Additionally, the icon prefix will be taken into account to prefix the\n   * icon IDs in the SVG.\n   */\n  private getSvgPath(iconType: ICON_TYPE | string): string {\n    const svgResource = this.config.resources.find(\n      (res) =>\n        res.type === IconResourceType.SVG &&\n        res.types &&\n        res.types.includes(iconType)\n    );\n    if (svgResource) {\n      return svgResource.url\n        ? `${svgResource.url}#${this.getSymbol(iconType)}`\n        : `#${this.getSymbol(iconType)}`;\n    }\n  }\n\n  /**\n   * Loads the resource url (if any) for the given icon.\n   * The icon will only be loaded once.\n   *\n   * NOTE: this is not working when the shadow is used as there's\n   * no head element available and the link must be loaded for every\n   * web component.\n   */\n  addLinkResource(iconType: ICON_TYPE | string): void {\n    const resource: IconConfigResource = this.findResource(\n      iconType,\n      IconResourceType.LINK\n    );\n    if (\n      resource &&\n      resource.url &&\n      !this.loadedResources.includes(resource.url)\n    ) {\n      this.loadedResources.push(resource.url);\n      const head = this.winRef.document.getElementsByTagName('head')[0];\n      const link = this.winRef.document.createElement('link');\n      link.rel = 'stylesheet';\n      link.type = 'text/css';\n      link.href = resource.url;\n      head.appendChild(link);\n    }\n  }\n\n  private findResource(\n    iconType: ICON_TYPE | string,\n    resourceType: IconResourceType\n  ): IconConfigResource {\n    if (!this.config.resources) {\n      return;\n    }\n\n    let resource = this.config.resources.find(\n      (res) =>\n        res.type === resourceType && res.types && res.types.includes(iconType)\n    );\n    // no specific resource found, let's try to find a one-size-fits-all resource\n    if (!resource) {\n      resource = this.config.resources.find(\n        (res) => (res.type === resourceType && !res.types) || res.types === []\n      );\n    }\n    return resource;\n  }\n\n  getSymbol(iconType: ICON_TYPE | string) {\n    if (this.config && this.config.symbols && this.config.symbols[iconType]) {\n      return this.config.symbols[iconType];\n    }\n  }\n\n  private get config(): IconOptions {\n    return this.iconConfig.icon;\n  }\n}\n","/**\n * The ltr and rtl directions can be used to configure the storefront for a certain direction, both statically\n * or dynamically.\n *\n * The HTML5 \"auto\" value is not supported in Spartacus, as it's considered to be too fragile for the global\n * direction.\n */\nexport enum DirectionMode {\n  /**\n   * Indicates Left to Right direction.\n   */\n  LTR = 'ltr',\n  /**\n   * Indicates Right to Left direction.\n   */\n  RTL = 'rtl',\n}\n\n/**\n * Contains the configuration mode for language driven directionality. The detect mode is recommended\n * for a multi-site or multi-lingual setup where the active language should dictate the direction mode.\n */\nexport interface Direction {\n  /**\n   * The default direction mode is used for the direction mode of the overall storefront. The default mode\n   * can be used for all languages, but can be further enhanced dynamically by using the language detect mode.\n   * The default mode will also be used in detect mode for those languages that are not listed in either\n   * `rtlLanguages` or `ltrLanguages`.\n   */\n  default?: DirectionMode;\n\n  /**\n   * If detect is enabled, the direction is driven by the active language. The language is compared to the\n   * list of configured `rtlLanguages` vs `ltrLanguages`. If no language is resolved, the default direction\n   * mode is used.\n   *\n   * If no direction can be resolved, the direction is removed.\n   */\n  detect?: boolean;\n\n  /**\n   * The language isoCodes that are used to detect Right to Left languages.\n   */\n  rtlLanguages?: string[];\n\n  /**\n   * The language isoCodes that are used to detect Left to Right languages.\n   */\n  ltrLanguages?: string[];\n}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  Renderer2,\n} from '@angular/core';\nimport { SafeHtml } from '@angular/platform-browser';\nimport { DirectionMode } from '../../../layout/direction/config/direction.model';\nimport { IconLoaderService } from './icon-loader.service';\nimport { ICON_TYPE as DEFAULT_ICON_TYPE } from './icon.model';\n\ntype ICON_TYPE = DEFAULT_ICON_TYPE | string;\n\n/**\n *\n * The icon component can be added in different ways:\n *\n * With the component selector:\n * `<cx-icon type=\"SEARCH\"></cx-icon>`\n *\n * With the attribute selector:\n * `<span cxIcon=\"STAR\"></span>`\n *\n * Additionally, content can be projected to the icon:\n *\n * `<button cxIcon=\"HAPPY\">happy label</button>`\n *\n * The above button would become (based on a TEXT resource type):\n * `<button>😊happy label</button>`\n *\n * While the content is projected, the icon itself doesn't require an\n * additional DOM node which is an advantage over the component selector.\n */\n@Component({\n  selector: 'cx-icon,[cxIcon]',\n  templateUrl: './icon.component.html',\n})\nexport class IconComponent {\n  /**\n   * The cxIcon directive is bound to the icon type. You can feed the `ICON_TYPE` to\n   * accomplish a configurable button in the UI.\n   */\n  @Input() set cxIcon(type: ICON_TYPE) {\n    this.setIcon(type);\n  }\n\n  /**\n   * The type input parameter is bound to the icon type. You can feed the `ICON_TYPE` to\n   * accomplish a configurable button in the UI.\n   */\n  @Input() set type(type: ICON_TYPE) {\n    this.setIcon(type);\n  }\n\n  /**\n   * the icon provides an html fragment that is used to add SVG or text based icons.\n   */\n  icon: SafeHtml;\n\n  /**\n   * The `flip-at-rtl` class is added to the DOM for the style layer to flip the icon in RTL direction.\n   */\n  @HostBinding('class.flip-at-rtl') flipAtRtl: boolean;\n\n  /**\n   * The `flip-at-ltr` class is added to the DOM for the style layer to flip the icon in LTR direction.\n   */\n  @HostBinding('class.flip-at-ltr') flipAtLtr: boolean;\n\n  /**\n   * Maintains the applied style classes so we can remove them when the\n   * icon type changes at run time.\n   */\n  protected styleClasses: string[];\n\n  constructor(\n    protected iconLoader: IconLoaderService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected renderer: Renderer2\n  ) {}\n\n  protected setIcon(type: ICON_TYPE): void {\n    if (!type || <string>type === '') {\n      return;\n    }\n    this.icon = this.iconLoader.getHtml(type);\n    this.addStyleClasses(type);\n    this.iconLoader.addLinkResource(type);\n    this.flipIcon(type);\n  }\n\n  /**\n   * The icons supports flipping for some icons to support rtl and ltr directions.\n   */\n  protected flipIcon(type: ICON_TYPE) {\n    // TODO: this can be dropped with the next major release.\n    if (!this.iconLoader.getFlipDirection) {\n      return;\n    }\n    const iconDirection = this.iconLoader.getFlipDirection(type);\n    this.flipAtLtr = iconDirection === DirectionMode.LTR;\n    this.flipAtRtl = iconDirection === DirectionMode.RTL;\n  }\n\n  /**\n   * Adds the style classes and the link resource (if available).\n   */\n  protected addStyleClasses(type: ICON_TYPE): void {\n    this.renderer.addClass(this.host, 'cx-icon');\n\n    this.styleClasses?.forEach((cls) =>\n      this.renderer.removeClass(this.host, cls)\n    );\n\n    this.styleClasses = this.iconLoader.getStyleClasses(type)?.split(' ');\n    this.styleClasses?.forEach((cls) => {\n      if (cls !== '') {\n        this.renderer.addClass(this.host, cls);\n      }\n    });\n  }\n\n  protected get host() {\n    return this.elementRef.nativeElement;\n  }\n}\n","<i [outerHTML]=\"icon\"></i><ng-content></ng-content>\n","import { DirectionMode } from '../../../layout/direction/config/direction.model';\nimport { IconConfig } from './icon.model';\n\nexport const defaultIconConfig: IconConfig = {\n  icon: {\n    flipDirection: {\n      CARET_RIGHT: DirectionMode.RTL,\n      CARET_LEFT: DirectionMode.RTL,\n    },\n  },\n};\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultIconConfig } from './default-icon.config';\nimport { fontawesomeIconConfig } from './fontawesome-icon.config';\nimport { IconComponent } from './icon.component';\n\n@NgModule({\n  declarations: [IconComponent],\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(defaultIconConfig),\n    // TODO: move the opinionated fontawesome config to a recipe\n    provideDefaultConfig(fontawesomeIconConfig),\n  ],\n  exports: [IconComponent],\n})\nexport class IconModule {}\n","import { Component, Input, NgModule } from '@angular/core';\nimport { IconLoaderService } from '../icon-loader.service';\n\n// PRIVATE TESTING UTIL\n@Component({\n  selector: 'cx-icon,[cxIcon]',\n  template: `{{ type || cxIcon }}`,\n})\nexport class MockIconComponent {\n  @Input() cxIcon;\n  @Input() type;\n}\n\nconst mockComponents = [MockIconComponent];\n\nexport class MockIconLoaderService {\n  getHtml() {}\n  getStyleClasses() {}\n  addStyleClasses() {}\n  addLinkResource() {}\n}\n\n@NgModule({\n  declarations: mockComponents,\n  exports: mockComponents,\n  providers: [\n    {\n      provide: IconLoaderService,\n      useClass: MockIconLoaderService,\n    },\n  ],\n})\nexport class IconTestingModule {}\n","import { Component } from '@angular/core';\n\n// TODO: Improve a11y with better text appropriate to usage (example: loading cart spinner)\n\n@Component({\n  selector: 'cx-spinner',\n  templateUrl: './spinner.component.html',\n})\nexport class SpinnerComponent {\n  constructor() {}\n}\n","<div class=\"loader-container\">\n  <div class=\"loader\">{{ 'spinner.loading' | cxTranslate }}</div>\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {\n  AnonymousConsent,\n  ANONYMOUS_CONSENT_STATUS,\n  ConsentTemplate,\n} from '@spartacus/core';\n\n@Component({\n  selector: 'cx-consent-management-form',\n  templateUrl: './consent-management-form.component.html',\n})\nexport class ConsentManagementFormComponent implements OnInit {\n  consentGiven = false;\n\n  @Input()\n  consentTemplate: ConsentTemplate;\n\n  @Input()\n  requiredConsents: string[] = [];\n\n  @Input()\n  consent: AnonymousConsent;\n\n  @Output()\n  consentChanged = new EventEmitter<{\n    given: boolean;\n    template: ConsentTemplate;\n  }>();\n\n  constructor() {}\n\n  ngOnInit(): void {\n    if (this.consent) {\n      this.consentGiven = Boolean(\n        this.consent.consentState === ANONYMOUS_CONSENT_STATUS.GIVEN\n      );\n    } else {\n      if (this.consentTemplate && this.consentTemplate.currentConsent) {\n        if (this.consentTemplate.currentConsent.consentWithdrawnDate) {\n          this.consentGiven = false;\n        } else if (this.consentTemplate.currentConsent.consentGivenDate) {\n          this.consentGiven = true;\n        }\n      }\n    }\n  }\n\n  onConsentChange(): void {\n    this.consentGiven = !this.consentGiven;\n\n    this.consentChanged.emit({\n      given: this.consentGiven,\n      template: this.consentTemplate,\n    });\n  }\n\n  isRequired(templateId: string): boolean {\n    return this.requiredConsents.includes(templateId);\n  }\n}\n","<div class=\"form-check\">\n  <label>\n    <input\n      type=\"checkbox\"\n      class=\"form-check-input\"\n      (change)=\"onConsentChange()\"\n      [checked]=\"consentGiven\"\n      [disabled]=\"isRequired(consentTemplate?.id)\"\n    />\n    <span class=\"form-check-label cx-be-bold\">\n      {{ consentTemplate?.name }}\n    </span>\n    <br />\n    <span class=\"form-check-label\">\n      {{ consentTemplate?.description }}\n    </span>\n  </label>\n</div>\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  AnonymousConsent,\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  ConsentTemplate,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, take, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/index';\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\n\n@Component({\n  selector: 'cx-anonymous-consent-dialog',\n  templateUrl: './anonymous-consent-dialog.component.html',\n})\nexport class AnonymousConsentDialogComponent implements OnInit, OnDestroy {\n  @HostBinding('attr.role') role = 'dialog';\n  @HostBinding('attr.aria-modal') modal = true;\n\n  private subscriptions = new Subscription();\n\n  showLegalDescription = true;\n  iconTypes = ICON_TYPE;\n  requiredConsents: string[] = [];\n\n  loading$: Observable<boolean>;\n  templates$: Observable<ConsentTemplate[]>;\n  consents$: Observable<AnonymousConsent[]>;\n\n  focusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    autofocus: 'input[type=\"checkbox\"]',\n    focusOnEscape: true,\n  };\n\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    // Close on click outside the dialog window\n    if ((event.target as any).tagName === this.el.nativeElement.tagName) {\n      this.close('Cross click');\n    }\n  }\n\n  constructor(\n    protected config: AnonymousConsentsConfig,\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected el: ElementRef,\n    protected launchDialogService: LaunchDialogService\n  ) {\n    if (Boolean(this.config.anonymousConsents)) {\n      this.showLegalDescription =\n        this.config.anonymousConsents.showLegalDescriptionInDialog;\n      if (Boolean(this.config.anonymousConsents.requiredConsents)) {\n        this.requiredConsents = this.config.anonymousConsents.requiredConsents;\n      }\n    }\n  }\n\n  ngOnInit(): void {\n    this.templates$ = this.anonymousConsentsService.getTemplates();\n    this.consents$ = this.anonymousConsentsService.getConsents();\n    this.loading$ = this.anonymousConsentsService.getLoadTemplatesLoading();\n  }\n\n  close(reason?: any): void {\n    this.launchDialogService.closeDialog(reason);\n  }\n\n  rejectAll(): void {\n    this.subscriptions.add(\n      combineLatest([this.templates$, this.consents$])\n        .pipe(\n          take(1),\n          distinctUntilChanged(),\n          tap(([templates, consents]) =>\n            templates.forEach((template) => {\n              const consent = this.getCorrespondingConsent(template, consents);\n              if (this.anonymousConsentsService.isConsentGiven(consent)) {\n                if (this.isRequiredConsent(template)) {\n                  return;\n                }\n\n                this.anonymousConsentsService.withdrawConsent(template.id);\n              }\n            })\n          )\n        )\n        .subscribe()\n    );\n    this.close('rejectAll');\n  }\n\n  allowAll(): void {\n    this.subscriptions.add(\n      combineLatest([this.templates$, this.consents$])\n        .pipe(\n          take(1),\n          distinctUntilChanged(),\n          tap(([templates, consents]) =>\n            templates.forEach((template) => {\n              const consent = this.getCorrespondingConsent(template, consents);\n              if (\n                (consent && consent.consentState == null) ||\n                this.anonymousConsentsService.isConsentWithdrawn(consent)\n              ) {\n                if (this.isRequiredConsent(template)) {\n                  return;\n                }\n\n                this.anonymousConsentsService.giveConsent(template.id);\n              }\n            })\n          )\n        )\n        .subscribe()\n    );\n    this.close('allowAll');\n  }\n\n  private isRequiredConsent(template: ConsentTemplate): boolean {\n    return (\n      Boolean(this.config.anonymousConsents) &&\n      Boolean(this.config.anonymousConsents.requiredConsents) &&\n      this.config.anonymousConsents.requiredConsents.includes(template.id)\n    );\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given) {\n      this.anonymousConsentsService.giveConsent(template.id);\n    } else {\n      this.anonymousConsentsService.withdrawConsent(template.id);\n    }\n  }\n\n  getCorrespondingConsent(\n    template: ConsentTemplate,\n    consents: AnonymousConsent[] = []\n  ): AnonymousConsent {\n    for (const consent of consents) {\n      if (template.id === consent.templateCode) {\n        return consent;\n      }\n    }\n    return null;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div\n  class=\"cx-anonymous-consent-dialog\"\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"close('Escape clicked')\"\n>\n  <div class=\"cx-dialog-content\">\n    <div *ngIf=\"loading$ | async; else dialogBody\">\n      <cx-spinner></cx-spinner>\n    </div>\n    <ng-template #dialogBody>\n      <div class=\"cx-dialog-header\">\n        <h3>\n          {{ 'anonymousConsents.dialog.title' | cxTranslate }}\n        </h3>\n        <button\n          type=\"button\"\n          class=\"close\"\n          [attr.aria-label]=\"'common.close' | cxTranslate\"\n          (click)=\"close('Cross click')\"\n        >\n          <span aria-hidden=\"true\">\n            <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n          </span>\n        </button>\n      </div>\n      <!-- Separator -->\n      <div class=\"cx-dialog-description\" *ngIf=\"showLegalDescription\">\n        {{ 'anonymousConsents.dialog.legalDescription' | cxTranslate }}\n        <div\n          class=\"cx-dialog-separator col-sm-12 d-xs-block d-sm-block d-md-none\"\n        ></div>\n      </div>\n      <!-- Actions -->\n      <div class=\"cx-dialog-buttons\">\n        <a tabindex=\"0\" class=\"btn-link cx-action-link\" (click)=\"rejectAll()\">{{\n          'anonymousConsents.dialog.clearAll' | cxTranslate\n        }}</a>\n        <a tabindex=\"0\" class=\"btn-link cx-action-link\" (click)=\"allowAll()\">{{\n          'anonymousConsents.dialog.selectAll' | cxTranslate\n        }}</a>\n      </div>\n      <!-- Modal Body -->\n      <div class=\"cx-dialog-body\" *ngIf=\"templates$ | async as templates\">\n        <ng-container *ngIf=\"consents$ | async as consents\">\n          <div\n            class=\"cx-dialog-row col-sm-12 col-md-6\"\n            *ngFor=\"let template of templates\"\n          >\n            <cx-consent-management-form\n              [consentTemplate]=\"template\"\n              [requiredConsents]=\"requiredConsents\"\n              [consent]=\"getCorrespondingConsent(template, consents)\"\n              (consentChanged)=\"onConsentChange($event)\"\n            ></cx-consent-management-form>\n          </div>\n        </ng-container>\n      </div>\n    </ng-template>\n  </div>\n</div>\n","import { LayoutConfig } from '../../layout/config/layout-config';\nimport { DIALOG_TYPE } from '../../layout/launch-dialog/index';\nimport { AnonymousConsentDialogComponent } from '../../shared/components/anonymous-consents-dialog/anonymous-consent-dialog.component';\n\nexport const defaultAnonymousConsentLayoutConfig: LayoutConfig = {\n  launch: {\n    ANONYMOUS_CONSENT: {\n      inline: true,\n      component: AnonymousConsentDialogComponent,\n      dialogType: DIALOG_TYPE.DIALOG,\n    },\n  },\n};\n","import {\n  Component,\n  ElementRef,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\nimport { LAUNCH_CALLER } from '../../../layout/launch-dialog/config/launch-config';\nimport { take } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-anonymous-consent-open-dialog',\n  templateUrl: './anonymous-consent-open-dialog.component.html',\n})\nexport class AnonymousConsentOpenDialogComponent {\n  @ViewChild('open') openElement: ElementRef;\n\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected launchDialogService: LaunchDialogService\n  ) {}\n\n  openDialog(): void {\n    const dialog = this.launchDialogService.openDialog(\n      LAUNCH_CALLER.ANONYMOUS_CONSENT,\n      this.openElement,\n      this.vcr\n    );\n    if (dialog) {\n      dialog.pipe(take(1)).subscribe();\n    }\n  }\n}\n","<button #open class=\"btn btn-link\" (click)=\"openDialog()\">\n  {{ 'anonymousConsents.preferences' | cxTranslate }}\n</button>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  DeferLoadingStrategy,\n  FeaturesConfigModule,\n  I18nModule,\n  provideConfig,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { KeyboardFocusModule } from '../../layout/a11y/keyboard-focus/index';\nimport { AnonymousConsentManagementBannerComponent } from './banner/anonymous-consent-management-banner.component';\nimport { defaultAnonymousConsentLayoutConfig } from './default-anonymous-consent-layout.config';\nimport { AnonymousConsentOpenDialogComponent } from './open-dialog/anonymous-consent-open-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    FeaturesConfigModule,\n    KeyboardFocusModule,\n  ],\n  providers: [\n    provideConfig(defaultAnonymousConsentLayoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AnonymousConsentManagementBannerComponent: {\n          component: AnonymousConsentManagementBannerComponent,\n          deferLoading: DeferLoadingStrategy.INSTANT,\n        },\n        AnonymousConsentOpenDialogComponent: {\n          component: AnonymousConsentOpenDialogComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n  exports: [\n    AnonymousConsentManagementBannerComponent,\n    AnonymousConsentOpenDialogComponent,\n  ],\n})\nexport class AnonymousConsentManagementBannerModule {}\n","import { ApplicationRef, Injectable } from '@angular/core';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ModalOptions } from './modal-options';\nimport { ModalRef } from './modal-ref';\n\n/**\n * A service to handle modal\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  private modals: ModalRef[] = [];\n\n  constructor(\n    private ngbModalService: NgbModal,\n    protected applicationRef: ApplicationRef\n  ) {}\n\n  protected get rootComponent() {\n    return this.applicationRef?.components?.[0]?.location?.nativeElement;\n  }\n\n  open(content: any, options?: ModalOptions): ModalRef {\n    let activeModal: ModalRef;\n\n    options = { container: this.rootComponent, ...options };\n\n    activeModal = this.ngbModalService.open(content, options);\n    this.modals.push(activeModal);\n    this.handleModalRemoveEvents(activeModal);\n\n    return activeModal;\n  }\n\n  protected handleModalRemoveEvents(modal: ModalRef): void {\n    modal.result.finally(() => {\n      this.modals = this.modals.filter((m) => m !== modal);\n    });\n  }\n\n  getActiveModal(): ModalRef {\n    const modal = this.modals[this.modals.length - 1];\n    return modal ? modal : null;\n  }\n\n  dismissActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.dismiss(reason);\n    }\n  }\n\n  closeActiveModal(reason?: any): void {\n    const modal: ModalRef = this.getActiveModal();\n\n    if (modal) {\n      modal.close(reason);\n    }\n  }\n}\n","/**\n * Identifiers of outlets inside the cart details view.\n */\nexport enum CartOutlets {\n  ITEM = 'cx-cart-item',\n  ITEM_DETAILS = 'cx-cart-item.details',\n  ITEM_BUNDLE_DETAILS = 'cx-cart-item.bundle-details',\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { OrderEntry, PromotionLocation } from '@spartacus/core';\nimport { ReplaySubject } from 'rxjs';\nimport { CartItemComponentOptions } from '../cart-item.component';\nimport { CartItemContext } from './cart-item-context.model';\n\n/**\n * Context source for `CartItemComponent`.\n *\n * `CartItemContext` should be injected instead in child components.\n */\n@Injectable()\nexport class CartItemContextSource implements CartItemContext {\n  readonly compact$ = new ReplaySubject<boolean>(1);\n\n  readonly readonly$ = new ReplaySubject<boolean>(1);\n\n  readonly item$ = new ReplaySubject<OrderEntry>(1);\n\n  readonly quantityControl$ = new ReplaySubject<FormControl>(1);\n\n  readonly location$ = new ReplaySubject<PromotionLocation>(1);\n\n  readonly options$ = new ReplaySubject<CartItemComponentOptions>(1);\n}\n","import { Injectable } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { OrderEntry, PromotionLocation } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CartItemComponentOptions } from '../cart-item.component';\n\n/**\n * Context for `CartItemComponent`.\n */\n@Injectable()\nexport abstract class CartItemContext {\n  readonly compact$: Observable<boolean>;\n\n  readonly readonly$: Observable<boolean>;\n\n  readonly item$: Observable<OrderEntry>;\n\n  readonly quantityControl$: Observable<FormControl>;\n\n  readonly location$: Observable<PromotionLocation>;\n\n  readonly options$: Observable<CartItemComponentOptions>;\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Observable, ReplaySubject, Subscription } from 'rxjs';\nimport { take, tap, withLatestFrom } from 'rxjs/operators';\nimport { RoutingService, CartModification } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartValidationStateService implements OnDestroy {\n  protected NAVIGATION_SKIPS = 2;\n  protected navigationIdCount = 0;\n\n  protected subscription = new Subscription();\n  cartValidationResult$: Observable<CartModification[]> = new ReplaySubject<\n    CartModification[]\n  >(1) as Observable<CartModification[]>;\n\n  constructor(protected routingService: RoutingService) {\n    this.setInitialState();\n  }\n\n  protected checkForValidationResultClear$ = this.routingService\n    .getRouterState()\n    .pipe(\n      withLatestFrom(this.cartValidationResult$),\n      tap(([routerState, cartModifications]) => {\n        if (\n          this.navigationIdCount + this.NAVIGATION_SKIPS <=\n            routerState.navigationId &&\n          cartModifications.length\n        ) {\n          (\n            this.cartValidationResult$ as ReplaySubject<CartModification[]>\n          ).next([]);\n          this.navigationIdCount = routerState.navigationId;\n        }\n      })\n    );\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n\n  protected setInitialState() {\n    this.setNavigationIdStep();\n    this.subscription.add(this.checkForValidationResultClear$.subscribe());\n  }\n\n  updateValidationResultAndRoutingId(cartModification: CartModification[]) {\n    (this.cartValidationResult$ as ReplaySubject<CartModification[]>).next(\n      cartModification\n    );\n    this.setNavigationIdStep();\n  }\n\n  protected setNavigationIdStep() {\n    this.routingService\n      .getRouterState()\n      .pipe(take(1))\n      .subscribe(\n        (routerState) => (this.navigationIdCount = routerState.navigationId)\n      );\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { CartValidationStateService } from '../cart-validation-state.service';\nimport { ICON_TYPE } from '../../../misc/icon/index';\n\n@Component({\n  selector: 'cx-cart-item-validation-warning',\n  templateUrl: './cart-item-validation-warning.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartItemValidationWarningComponent {\n  @Input()\n  code: string;\n\n  iconTypes = ICON_TYPE;\n  isVisible = true;\n\n  cartModification$ =\n    this.cartValidationStateService.cartValidationResult$.pipe(\n      map((modificationList) =>\n        modificationList.find(\n          (modification) => modification.entry.product.code === this.code\n        )\n      )\n    );\n\n  constructor(\n    protected cartValidationStateService: CartValidationStateService\n  ) {}\n}\n","<ng-container *ngIf=\"cartModification$ | async as cartModification\">\n  <div class=\"alert alert-info\" *ngIf=\"isVisible\">\n    <span class=\"alert-icon\">\n      <cx-icon [type]=\"iconTypes.INFO\"></cx-icon>\n    </span>\n    <span>\n      {{\n        'validation.' + cartModification.statusCode\n          | cxTranslate\n            : {\n                quantity: cartModification.quantityAdded\n              }\n      }}\n    </span>\n\n    <button class=\"close\" type=\"button\" (click)=\"isVisible = !isVisible\">\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n</ng-container>\n","import { Image } from '@spartacus/core';\n\nexport interface Media {\n  /**\n   * Identify the “default” image URL which is used in case the srcset is not specified.\n   * Browsers without srcset support will also fallback to this URl.\n   */\n  src: string;\n\n  /**\n   * The srcset attribute holds a list of image file URLs, along with size descriptions.\n   */\n  srcset?: string;\n\n  /**\n   * Provides alternative information for a media if a user cannot view the visual. It is\n   * also used by web crawlers and screen readers.\n   */\n  alt?: string;\n\n  /**\n   * Describes the role of an element in programs that can make use of it, such as screen\n   * readers or magnifiers\n   */\n  role?: string;\n}\n\n/**\n * Contains multiple media for different formats\n */\nexport interface MediaContainer {\n  [format: string]: Image;\n}\n\n/**\n * Specifies media size information that can be used to generate information for the\n * browser to resolve the right media for the right layout or device.\n */\nexport interface MediaFormatSize {\n  /**\n   * Specifies the width for a given media format. The media format width is used\n   * to align the width of the media with the available size in the layout, so that\n   * different media's can be used in a responsive layout.\n   */\n  width?: number;\n}\n\n/**\n * Indicates how the browser should load the image.\n *\n * While this might not add too much value in some scenarios, as we have other\n * optimizations to defer loading of larger pieces of the DOM, there might be\n * components who haven't implemented other lazy loading techniques. Moreover,\n * a server sides rendered page that lands directly in the browser could benefit\n * enormously from the lazy loading of images.\n */\nexport enum ImageLoadingStrategy {\n  /**\n   * Loads the image immediately, regardless of whether or not the image\n   * is currently within the visible viewport (this is the default value).\n   */\n  EAGER = 'eager',\n  /**\n   * Defers loading the image until it reaches a calculated distance from the viewport,\n   * as defined by the browser. The intent is to avoid the network and storage bandwidth\n   * needed to handle the image until it's reasonably certain that it will be needed.\n   * This generally improves the performance of the content in most typical use cases.\n   */\n  LAZY = 'lazy',\n}\n","import { Injectable } from '@angular/core';\nimport { Config, Image } from '@spartacus/core';\nimport { MediaConfig } from './media.config';\nimport {\n  ImageLoadingStrategy,\n  Media,\n  MediaContainer,\n  MediaFormatSize,\n} from './media.model';\n\n/**\n * Service which generates media URLs. It leverage the MediaContainer and MediaFormats so\n * that URLs and sizes are generated for the same media. This helps to improve performance\n * across difference devices and layouts.\n *\n * Media formats are optional, but highly recommended. The format will help the browser to\n * identify the right media for the right experience.\n *\n * The MediaService will generate absolute URLs in case relative URLs are provided for the Media.\n * The baseUrl is read from the `occConfig.backend.media.baseUrl` or\n * `occConfig.backend.occ.baseUrl`.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class MediaService {\n  /**\n   * The media formats sorted by size. The media format representing the smallest\n   * size is sorted on top.\n   */\n  private _sortedFormats: { code: string; size: MediaFormatSize }[];\n  private _reversedFormats: { code: string; size: MediaFormatSize }[];\n\n  constructor(protected config: Config) {}\n\n  /**\n   * Returns a `Media` object with the main media (`src`) and various media (`src`)\n   * for specific formats.\n   */\n  getMedia(\n    mediaContainer?: MediaContainer | Image,\n    format?: string,\n    alt?: string,\n    role?: string\n  ): Media | undefined {\n    if (!mediaContainer) {\n      return;\n    }\n\n    const mainMedia: Image = mediaContainer.url\n      ? mediaContainer\n      : this.resolveMedia(mediaContainer as MediaContainer, format);\n\n    return {\n      src: this.resolveAbsoluteUrl(mainMedia?.url),\n      alt: alt ?? mainMedia?.altText,\n      role: role ?? mainMedia?.role,\n      srcset: this.resolveSrcSet(mediaContainer, format),\n    };\n  }\n\n  /**\n   * Reads the loading strategy from the `MediaConfig`.\n   *\n   * Defaults to `ImageLoadingStrategy.EAGER`.\n   */\n  get loadingStrategy(): ImageLoadingStrategy {\n    return (\n      (this.config as MediaConfig)?.imageLoadingStrategy ??\n      ImageLoadingStrategy.EAGER\n    );\n  }\n\n  /**\n   * Creates the media formats in a logical sorted order. The map contains the\n   * format key and the format size information. We do this only once for performance\n   * benefits.\n   */\n  protected get sortedFormats(): { code: string; size: MediaFormatSize }[] {\n    if (!this._sortedFormats && this.config?.mediaFormats) {\n      this._sortedFormats = Object.keys(this.config.mediaFormats)\n        .map((key) => ({\n          code: key,\n          size: this.config.mediaFormats[key],\n        }))\n        .sort((a, b) => (a.size.width > b.size.width ? 1 : -1));\n    }\n    return this._sortedFormats ?? [];\n  }\n\n  /**\n   * Creates the media formats in a reversed sorted order.\n   */\n  protected get reversedFormats(): { code: string; size: MediaFormatSize }[] {\n    if (!this._reversedFormats) {\n      this._reversedFormats = this.sortedFormats.slice().reverse();\n    }\n    return this._reversedFormats;\n  }\n\n  /**\n   * Resolves the right media for the given format. The fo\n   */\n  protected resolveMedia(media: MediaContainer, format?: string): Image {\n    return media[this.resolveFormat(media, format)];\n  }\n\n  /**\n   * Validates the format against the given mediaContainer. If there is no format available,\n   * or if the mediaContainer doesn't contain a media for the given media, the most optimal\n   * format is resolved. If even that is not possible, the first format is returned.\n   */\n  protected resolveFormat(\n    mediaContainer: MediaContainer,\n    format?: string\n  ): string {\n    if (format && mediaContainer[format]) {\n      return format;\n    }\n    return (\n      this.resolveBestFormat(mediaContainer) || Object.keys(mediaContainer)[0]\n    );\n  }\n\n  /**\n   * Returns the media format code with the best size.\n   */\n  protected resolveBestFormat(media: MediaContainer | Image): string {\n    return this.reversedFormats.find((format) =>\n      media.hasOwnProperty(format.code)\n    )?.code;\n  }\n\n  /**\n   * Returns a set of media for the available media formats. Additionally, the configured media\n   * format width is added to the srcset, so that browsers can select the appropriate media.\n   *\n   * The optional maxFormat indicates that only sources till a certain format should be added\n   * to the srcset.\n   */\n  protected resolveSrcSet(\n    media: MediaContainer | Image,\n    maxFormat?: string\n  ): string | undefined {\n    if (!media) {\n      return undefined;\n    }\n\n    // Only create srcset images that are smaller than the given `maxFormat` (if any)\n    let formats = this.sortedFormats;\n    const max: number = formats.findIndex((f) => f.code === maxFormat);\n    if (max > -1) {\n      formats = formats.slice(0, max + 1);\n    }\n\n    const srcset = formats.reduce((set, format) => {\n      if (!!media[format.code]) {\n        if (set) {\n          set += ', ';\n        }\n        set += `${this.resolveAbsoluteUrl(media[format.code].url)} ${\n          format.size.width\n        }w`;\n      }\n      return set;\n    }, '');\n\n    return srcset === '' ? undefined : srcset;\n  }\n\n  /**\n   * Resolves the absolute URL for the given url. In most cases, this URL represents\n   * the relative URL on the backend. In that case, we prefix the url with the baseUrl.\n   *\n   * When we have receive an absolute URL, we return the URL as-is. An absolute URL might also\n   * start with double slash, which is used to resolve media cross from http and https.\n   */\n  protected resolveAbsoluteUrl(url: string): string {\n    return !url || url.startsWith('http') || url.startsWith('//')\n      ? url\n      : this.getBaseUrl() + url;\n  }\n\n  /**\n   * The base URL is either driven by a specific `backend.media.baseUrl`, or by the\n   * `backend.occ.baseUrl`.\n   *\n   * The `backend.media.baseUrl` can be used to load media from a different location.\n   *\n   * In Commerce Cloud, a different location could mean a different \"aspect\".\n   *\n   * Defaults to empty string in case no config is provided.\n   */\n  protected getBaseUrl(): string {\n    return (\n      this.config.backend?.media?.baseUrl ??\n      this.config.backend?.occ?.baseUrl ??\n      ''\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnChanges,\n  Output,\n} from '@angular/core';\nimport { Image, ImageGroup } from '@spartacus/core';\nimport { ImageLoadingStrategy, Media, MediaContainer } from './media.model';\nimport { MediaService } from './media.service';\n\n@Component({\n  selector: 'cx-media',\n  templateUrl: './media.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MediaComponent implements OnChanges {\n  /**\n   * The media container can hold multiple media items, so that\n   * a specific media (by format) can be used or multiple media\n   * can be provided in a `srcset` so the browser will figure out\n   * the best media for the device.\n   */\n  @Input() container:\n    | MediaContainer\n    | Image\n    | ImageGroup\n    | ImageGroup[]\n    | undefined;\n\n  /**\n   * if a media format is given, a media for the given format will be rendered\n   */\n  @Input() format: string;\n\n  /**\n   * A specific alt text for an image, which overrules the alt text\n   * from the container data.\n   */\n  @Input() alt: string;\n\n  /**\n   * set role of the image if different than what is intended (eg, role=\"presentation\")\n   */\n  @Input() role: string;\n\n  // TODO: Remove type forcing of `this.loadingStrategy` (ie. <ImageLoadingStrategy | null>) in 5.0 (#14236)\n  /**\n   * Set the loading strategy of the media. Defaults to global loading strategy.\n   * Use 'lazy' or 'eager' strategies.\n   */\n  @Input() loading: ImageLoadingStrategy | null = <ImageLoadingStrategy | null>(\n    this.loadingStrategy\n  );\n\n  /**\n   * Once the media is loaded, we emit an event.\n   */\n  @Output() loaded: EventEmitter<Boolean> = new EventEmitter<Boolean>();\n\n  /**\n   * The media contains the info for the UI to create the image. This media\n   * object might contain more info once other media types (i.e. video) is supported.\n   */\n  media: Media;\n\n  /**\n   * The `cx-media` component has an `is-initialized` class as long as the\n   * media is being initialized.\n   */\n  @HostBinding('class.is-initialized') isInitialized = false;\n\n  /**\n   * The `cx-media` component has a `is-loading` class as long as the\n   * media is loaded. Wehn the media is loaded, the `is-initialized` class\n   * is added.\n   */\n  @HostBinding('class.is-loading') isLoading = true;\n\n  /**\n   * When there's no media provided for the content, or in case an error\n   * happened during loading, we add the `is-missing` class. Visual effects\n   * can be controlled by CSS.\n   */\n  @HostBinding('class.is-missing') isMissing = false;\n\n  constructor(protected mediaService: MediaService) {}\n\n  ngOnChanges(): void {\n    this.create();\n  }\n\n  /**\n   * Creates the `Media` object\n   */\n  protected create(): void {\n    this.media = this.mediaService.getMedia(\n      this.container instanceof Array ? this.container[0] : this.container,\n      this.format,\n      this.alt,\n      this.role\n    );\n    if (!this.media?.src) {\n      this.handleMissing();\n    }\n  }\n\n  /**\n   * This handler is called from the UI when the image is loaded.\n   */\n  loadHandler(): void {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = false;\n    this.loaded.emit(true);\n  }\n\n  // TODO: Remove string return type (#14236)\n  /**\n   * Indicates whether the browser should lazy load the image.\n   * @deprecated since 4.2. use ImageLoadingStrategy or null return types only\n   */\n  get loadingStrategy(): string | ImageLoadingStrategy | null {\n    return this.mediaService.loadingStrategy === ImageLoadingStrategy.LAZY\n      ? ImageLoadingStrategy.LAZY\n      : null;\n  }\n\n  /**\n   * Whenever an error happens during load, we mark the component\n   * with css classes to have a missing media.\n   */\n  errorHandler(): void {\n    this.handleMissing();\n  }\n\n  protected handleMissing() {\n    this.isLoading = false;\n    this.isInitialized = true;\n    this.isMissing = true;\n    this.loaded.emit(false);\n  }\n}\n","<img\n  *ngIf=\"media?.src\"\n  [attr.src]=\"media.src\"\n  [attr.srcset]=\"media.srcset\"\n  [attr.alt]=\"media.alt\"\n  [attr.role]=\"media.role\"\n  [attr.loading]=\"loading\"\n  (load)=\"loadHandler()\"\n  (error)=\"errorHandler()\"\n/>\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\n\n/**\n * Provides a UI to manage the count of the quantity, typically by using\n * increase and decrease functionality. The item counter expects an input `FormControl`\n * so that the state of the control can be managed outside of this component.\n */\n@Component({\n  selector: 'cx-item-counter',\n  templateUrl: './item-counter.component.html',\n  // do not use OnPush change detection strategy as we would not\n  // get updates of other form control state (disabled). We want to have a\n  // disabled state in order to ensure that the control cannot be used while\n  // the cart is updated.\n})\nexport class ItemCounterComponent implements OnInit, OnDestroy {\n  /**\n   * Holds the value of the counter, the state of the `FormControl`\n   * can be managed outside of the item counter.\n   */\n  @Input() control: FormControl;\n\n  /**\n   * This can be used in case an item has a minmum order quantity.\n   * @default 1\n   */\n  @Input() min = 1;\n\n  /**\n   * This can be used in case an item has a maximum order quantity.\n   */\n  @Input() max: number;\n\n  /**\n   * The step is used to increment the count. It is supposed to be a\n   * positive integer or float.\n   * @default 1\n   */\n  @Input() step = 1;\n\n  /**\n   * Indicates that the input can be manually set to zero,\n   * despite the fact that the input controls will be limited to\n   * the minimum. The zero value can be used to remove an item.\n   */\n  @Input() allowZero = false;\n\n  /**\n   * In readonly mode the item counter will only be shown as a label,\n   * the form controls are not rendered.\n   * Please not that readonly is different from the `disabled` form state.\n   * @default false\n   */\n  @HostBinding('class.readonly') @Input() readonly = false;\n\n  @ViewChild('qty') private input: ElementRef<HTMLInputElement>;\n\n  /**\n   * Subscription responsible for auto-correcting control's value when it's invalid.\n   */\n  private sub: Subscription;\n\n  @HostListener('click') handleClick() {\n    this.input.nativeElement.focus();\n  }\n\n  ngOnInit() {\n    this.sub = this.control.valueChanges\n      .pipe(startWith(this.control.value))\n      .subscribe((value) =>\n        this.control.setValue(this.getValidCount(value), { emitEvent: false })\n      );\n  }\n\n  ngOnDestroy() {\n    if (this.sub) {\n      this.sub.unsubscribe();\n    }\n  }\n\n  increment() {\n    // it's too early to use the `stepUp` and `stepDown` API...\n    // let's wait for FF: https://caniuse.com/#search=stepUp\n    this.control.setValue(this.control.value + this.step);\n    this.control.markAsDirty();\n  }\n\n  decrement() {\n    this.control.setValue(this.control.value - this.step);\n    this.control.markAsDirty();\n  }\n\n  /**\n   * Validate that the given value is in between\n   * the `min` and `max` value. If the value is out\n   * of  the min/max range, it will be altered.\n   * If `allowZero` is set to true, the 0 value is ignored.\n   *\n   */\n  private getValidCount(value: number) {\n    if (value < this.min && !(value === 0 && this.allowZero)) {\n      value = this.min;\n    }\n    if (this.max && value > this.max) {\n      value = this.max;\n    }\n    return value;\n  }\n}\n","<button\n  type=\"button\"\n  (click)=\"decrement()\"\n  [disabled]=\"control.disabled || control.value <= min\"\n  [tabindex]=\"control.disabled || control.value <= min ? -1 : 0\"\n  attr.aria-label=\"{{ 'itemCounter.removeOne' | cxTranslate }}\"\n>\n  -\n</button>\n<input\n  #qty\n  type=\"number\"\n  [min]=\"min\"\n  [max]=\"max\"\n  [step]=\"step\"\n  [readonly]=\"readonly\"\n  [tabindex]=\"readonly ? -1 : 0\"\n  [formControl]=\"control\"\n  attr.aria-label=\"{{ 'itemCounter.quantity' | cxTranslate }}\"\n/>\n<button\n  type=\"button\"\n  (click)=\"increment()\"\n  [disabled]=\"control.disabled || control.value >= max\"\n  tabindex=\"0\"\n  attr.aria-label=\"{{ 'itemCounter.addOneMore' | cxTranslate }}\"\n>\n  +\n</button>\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Promotion } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-promotions',\n  templateUrl: './promotions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PromotionsComponent {\n  @Input()\n  promotions: Promotion[];\n\n  constructor() {}\n}\n","<div class=\"cx-promotions\" *ngIf=\"promotions\">\n  <ul *ngFor=\"let promotion of promotions\">\n    <li>{{ promotion.description }}</li>\n  </ul>\n</div>\n","import {\n  Directive,\n  HostListener,\n  Injectable,\n  Input,\n  Optional,\n} from '@angular/core';\nimport { Router, RouterLink, RouterLinkWithHref } from '@angular/router';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\n\nexport interface ModalDirectiveOptions {\n  /**\n   * Action to perform after click\n   */\n  type: 'dismiss' | 'close';\n\n  /**\n   * Reason for dismissing or closing the modal\n   */\n  reason?: string;\n}\n\n/**\n * Service to control the behavior of the DismissModalDirective\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalDirectiveService {\n  /**\n   * Handler for the click event on the directive\n   *\n   * @param options.type    Action to perform after click - close or dismiss\n   * @param options.reason  Reason for dismissing or closing the modal\n   * @param url             url (optional) - exists only when the directive is also a `routerLink`.\n   */\n  onClick(\n    options: ModalDirectiveOptions,\n    activeModal: NgbActiveModal,\n    url?: string\n  ): void {\n    let reason = options.reason;\n\n    if (!reason && url) {\n      reason = `Link click: ${url}`;\n    }\n\n    if (options.type === 'dismiss') {\n      activeModal.dismiss(reason);\n    } else if (options.type === 'close') {\n      activeModal.close(reason);\n    }\n  }\n}\n\n/**\n * Directive to dismiss the modal on click\n */\n@Directive({\n  selector: '[cxModal]',\n})\nexport class ModalDirective {\n  /**\n   * Action to perform, when the directive is clicked - dismiss or close.\n   *\n   * Reason can be given via input `cxModalReason`, which fallbacks to URL of the `routerLink` (if exists on the same element).\n   */\n  @Input() cxModal: ModalDirectiveOptions['type'];\n\n  /**\n   * Reason for closing/dismissing the modal. Fallbacks to URL of the `routerLink` (if exists on the same element).\n   */\n  @Input() cxModalReason: ModalDirectiveOptions['reason'];\n\n  constructor(\n    protected service: ModalDirectiveService,\n    protected router: Router,\n\n    // active modal can be injected only when the directive is projected inside modal\n    @Optional() protected activeModal: NgbActiveModal,\n\n    @Optional() protected routerLink: RouterLink,\n    @Optional() protected routerLinkWithHref: RouterLinkWithHref\n  ) {}\n\n  /**\n   * Returns URL in case when the directive is in the scope of a `routerLink` directive at the same time.\n   */\n  protected getUrl(): string | undefined {\n    const routerLink = this.routerLink ?? this.routerLinkWithHref;\n    return routerLink\n      ? this.router.serializeUrl(routerLink.urlTree)\n      : undefined;\n  }\n\n  @HostListener('click')\n  onClick() {\n    if (this.activeModal) {\n      this.service.onClick(this.options, this.activeModal, this.getUrl());\n    }\n  }\n\n  /**\n   * Converts the directive's inputs to the shape of modal directive options\n   */\n  protected get options(): ModalDirectiveOptions {\n    return { type: this.cxModal, reason: this.cxModalReason };\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { OrderEntry, PromotionLocation } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../misc/icon/icon.model';\nimport { CartOutlets } from '../../cart-outlets.model';\nimport { CartItemContextSource } from './model/cart-item-context-source.model';\nimport { CartItemContext } from './model/cart-item-context.model';\n\nexport interface CartItemComponentOptions {\n  isSaveForLater?: boolean;\n  optionalBtn?: any;\n}\n\n@Component({\n  selector: 'cx-cart-item',\n  templateUrl: './cart-item.component.html',\n  providers: [\n    CartItemContextSource,\n    { provide: CartItemContext, useExisting: CartItemContextSource },\n  ],\n})\nexport class CartItemComponent implements OnChanges {\n  @Input() compact = false;\n  @Input() item: OrderEntry;\n  @Input() readonly = false;\n  @Input() quantityControl: FormControl;\n\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  // TODO: evaluate whether this is generic enough\n  @Input() options: CartItemComponentOptions = {\n    isSaveForLater: false,\n    optionalBtn: null,\n  };\n\n  iconTypes = ICON_TYPE;\n  readonly CartOutlets = CartOutlets;\n\n  constructor(protected cartItemContextSource: CartItemContextSource) {}\n\n  ngOnChanges(changes?: SimpleChanges) {\n    if (changes?.compact) {\n      this.cartItemContextSource.compact$.next(this.compact);\n    }\n    if (changes?.readonly) {\n      this.cartItemContextSource.readonly$.next(this.readonly);\n    }\n    if (changes?.item) {\n      this.cartItemContextSource.item$.next(this.item);\n    }\n    if (changes?.quantityControl) {\n      this.cartItemContextSource.quantityControl$.next(this.quantityControl);\n    }\n    if (changes?.promotionLocation) {\n      this.cartItemContextSource.location$.next(this.promotionLocation);\n    }\n    if (changes?.options) {\n      this.cartItemContextSource.options$.next(this.options);\n    }\n  }\n\n  isProductOutOfStock(product: any) {\n    // TODO Move stocklevelstatuses across the app to an enum\n    return (\n      product &&\n      product.stock &&\n      product.stock.stockLevelStatus === 'outOfStock'\n    );\n  }\n\n  removeItem() {\n    this.quantityControl.setValue(0);\n    this.quantityControl.markAsDirty();\n  }\n}\n","<!-- Item Start Outlet -->\n<ng-template [cxOutlet]=\"CartOutlets.ITEM\">\n  <ng-container *cxFeatureLevel=\"'4.2'\">\n    <cx-cart-item-validation-warning\n      [code]=\"item.product.code\"\n    ></cx-cart-item-validation-warning>\n  </ng-container>\n  <div [ngClass]=\"compact ? 'cx-compact row' : 'row'\">\n    <!-- Item Image -->\n    <div class=\"col-2 cx-image-container\">\n      <a\n        [routerLink]=\"{ cxRoute: 'product', params: item.product } | cxUrl\"\n        cxModal=\"dismiss\"\n        tabindex=\"-1\"\n      >\n        <cx-media\n          [container]=\"item.product.images?.PRIMARY\"\n          format=\"cartIcon\"\n        ></cx-media>\n      </a>\n    </div>\n    <!-- Item Information -->\n    <div class=\"cx-info col-10\">\n      <div class=\"cx-info-container row\">\n        <!-- Item Description -->\n        <div [ngClass]=\"compact ? '' : ' col-md-3 col-lg-3 col-xl-5'\">\n          <div *ngIf=\"item.product.name\" class=\"cx-name\">\n            <a\n              class=\"cx-link\"\n              [routerLink]=\"\n                { cxRoute: 'product', params: item.product } | cxUrl\n              \"\n              cxModal=\"dismiss\"\n              ><h2>{{ item.product.name }}</h2></a\n            >\n          </div>\n          <div *ngIf=\"item.product.code\" class=\"cx-code\">\n            {{ 'cartItems.id' | cxTranslate }} {{ item.product.code }}\n          </div>\n\n          <!-- Item Details Outlet -->\n          <ng-template [cxOutlet]=\"CartOutlets.ITEM_DETAILS\"> </ng-template>\n\n          <!-- Variants -->\n          <ng-container *ngIf=\"item.product.baseOptions?.length\">\n            <div\n              *ngFor=\"\n                let variant of item.product.baseOptions[0]?.selected\n                  ?.variantOptionQualifiers\n              \"\n              class=\"cx-property\"\n            >\n              <div class=\"cx-label\" *ngIf=\"variant.name && variant.value\">\n                {{ variant.name }}: {{ variant.value }}\n              </div>\n            </div>\n          </ng-container>\n        </div>\n        <!-- Item Price -->\n        <div\n          *ngIf=\"item.basePrice\"\n          class=\"cx-price\"\n          [ngClass]=\"compact ? '' : ' col-md-3 col-lg-3 col-xl-2'\"\n        >\n          <div\n            class=\"cx-label\"\n            [ngClass]=\"compact ? '' : ' d-block d-md-none d-lg-none d-xl-none'\"\n          >\n            {{ 'cartItems.itemPrice' | cxTranslate }}\n          </div>\n          <div *ngIf=\"item.basePrice\" class=\"cx-value\">\n            {{ item.basePrice?.formattedValue }}\n          </div>\n        </div>\n        <!-- Item Quantity -->\n        <div class=\"cx-quantity\" [ngClass]=\"compact ? '' : ' col-3'\">\n          <div\n            class=\"cx-label\"\n            [ngClass]=\"compact ? '' : ' d-block d-md-none d-lg-none d-xl-none'\"\n            placement=\"left\"\n            title=\"{{ 'cartItems.quantityTitle' | cxTranslate }}\"\n          >\n            {{ 'cartItems.quantity' | cxTranslate }}\n          </div>\n          <div class=\"cx-value\" [class.readonly-value]=\"readonly\">\n            <cx-item-counter\n              [control]=\"quantityControl\"\n              [readonly]=\"\n                !item.updateable || readonly || options.isSaveForLater\n              \"\n              [max]=\"item.product.stock?.stockLevel\"\n              [allowZero]=\"true\"\n            >\n            </cx-item-counter>\n          </div>\n        </div>\n        <!-- Total -->\n        <ng-container *ngIf=\"options.isSaveForLater; else total\">\n          <div\n            class=\"cx-total\"\n            [ngClass]=\"compact ? '' : ' col-md-3 col-lg-3 col-xl-2'\"\n          >\n            <div\n              class=\"cx-label\"\n              [ngClass]=\"\n                compact ? '' : ' d-block d-md-none d-lg-none d-xl-none'\n              \"\n            >\n              {{ 'saveForLaterItems.stock' | cxTranslate }}\n            </div>\n            <div\n              *ngIf=\"item.product?.stock?.stockLevel >= 0; else forceInstock\"\n              class=\"cx-value\"\n            >\n              {{ item.product.stock.stockLevel }}\n            </div>\n            <ng-template #forceInstock>\n              <div class=\"cx-value\">\n                {{ 'saveForLaterItems.forceInStock' | cxTranslate }}\n              </div>\n            </ng-template>\n          </div>\n        </ng-container>\n      </div>\n      <!-- Availability -->\n      <div\n        *ngIf=\"isProductOutOfStock(item.product)\"\n        class=\"cx-availability col-12\"\n      >\n        {{ 'addToCart.outOfStock' | cxTranslate }}\n      </div>\n\n      <!-- Item Bundle Details Outlet -->\n      <ng-template [cxOutlet]=\"CartOutlets.ITEM_BUNDLE_DETAILS\"> </ng-template>\n\n      <!-- Promotion -->\n\n      <cx-promotions [promotions]=\"item.promotions\"></cx-promotions>\n\n      <!-- Actions -->\n      <div\n        *ngIf=\"(!readonly || options.isSaveForLater) && item.updateable\"\n        class=\"cx-actions col-12\"\n      >\n        <ng-container *ngIf=\"!isProductOutOfStock(item.product)\">\n          <ng-container\n            *ngTemplateOutlet=\"\n              options.optionalBtn;\n              context: {\n                $implicit: { loading: quantityControl.disabled, item: item }\n              }\n            \"\n          ></ng-container>\n        </ng-container>\n\n        <div class=\"col-md-3 cx-remove-btn\">\n          <button\n            class=\"link cx-action-link\"\n            [disabled]=\"quantityControl.disabled\"\n            (click)=\"removeItem()\"\n            attr.aria-label=\"{{ 'addToCart.removeFromCart' | cxTranslate }}\"\n          >\n            {{ 'common.remove' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #total>\n    <div\n      *ngIf=\"item.totalPrice\"\n      class=\"cx-total\"\n      [ngClass]=\"compact ? '' : ' col-md-3 col-xl-2'\"\n    >\n      <div\n        class=\"cx-label\"\n        [ngClass]=\"compact ? '' : ' d-block d-md-none d-lg-none d-xl-none'\"\n      >\n        {{ 'cartItems.total' | cxTranslate }}\n      </div>\n      <div class=\"cx-value\">{{ item.totalPrice.formattedValue }}</div>\n    </div>\n  </ng-template>\n</ng-template>\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n  ActiveCartService,\n  Cart,\n  OrderEntry,\n  PromotionLocation,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  filter,\n  map,\n  shareReplay,\n  startWith,\n  switchMap,\n  switchMapTo,\n  tap,\n} from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-added-to-cart-dialog',\n  templateUrl: './added-to-cart-dialog.component.html',\n})\nexport class AddedToCartDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  entry$: Observable<OrderEntry>;\n  cart$: Observable<Cart>;\n  loaded$: Observable<boolean>;\n  addedEntryWasMerged$: Observable<boolean>;\n  numberOfEntriesBeforeAdd: number;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  quantity = 0;\n  modalIsOpen = false;\n\n  @ViewChild('dialog', { read: ElementRef })\n  dialog: ElementRef;\n\n  form: FormGroup = new FormGroup({});\n\n  protected quantityControl$: Observable<FormControl>;\n\n  constructor(\n    protected modalService: ModalService,\n    protected cartService: ActiveCartService\n  ) {}\n  /**\n   * Returns an observable formControl with the quantity of the cartEntry,\n   * but also updates the entry in case of a changed value.\n   * The quantity can be set to zero in order to remove the entry.\n   */\n  getQuantityControl(): Observable<FormControl> {\n    if (!this.quantityControl$) {\n      this.quantityControl$ = this.entry$.pipe(\n        filter((e) => !!e),\n        map((entry) => this.getQuantityFormControl(entry)),\n        switchMap(() =>\n          this.form.valueChanges.pipe(\n            // eslint-disable-next-line import/no-deprecated\n            startWith(null),\n            tap((valueChange) => {\n              if (valueChange) {\n                this.cartService.updateEntry(\n                  valueChange.entryNumber,\n                  valueChange.quantity\n                );\n                if (valueChange.quantity === 0) {\n                  this.dismissModal('Removed');\n                }\n              } else {\n                this.form.markAsPristine();\n              }\n            })\n          )\n        ),\n        map(() => <FormControl>this.form.get('quantity')),\n        shareReplay({ bufferSize: 1, refCount: true })\n      );\n    }\n    return this.quantityControl$;\n  }\n\n  ngOnInit() {\n    this.addedEntryWasMerged$ = this.loaded$.pipe(\n      filter((loaded) => loaded),\n      switchMapTo(this.cartService.getEntries()),\n      map((entries) => entries.length === this.numberOfEntriesBeforeAdd)\n    );\n  }\n\n  /**\n   * Adds quantity and entryNumber form controls to the FormGroup.\n   * Returns quantity form control.\n   */\n  protected getQuantityFormControl(entry: OrderEntry): FormControl {\n    if (!this.form.get('quantity')) {\n      const quantity = new FormControl(entry.quantity, { updateOn: 'blur' });\n      this.form.addControl('quantity', quantity);\n\n      const entryNumber = new FormControl(entry.entryNumber);\n      this.form.addControl('entryNumber', entryNumber);\n    }\n    return <FormControl>this.form.get('quantity');\n  }\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n}\n","<div #dialog>\n  <!-- Modal Header -->\n  <ng-container *ngIf=\"(loaded$ | async) || modalIsOpen; else loading\">\n    <div class=\"cx-dialog-header modal-header\">\n      <div\n        class=\"cx-dialog-title modal-title\"\n        aria-live=\"polite\"\n        aria-atomic=\"true\"\n      >\n        {{\n          (addedEntryWasMerged$ | async)\n            ? ('addToCart.itemsIncrementedInYourCart' | cxTranslate)\n            : ('addToCart.itemsAddedToYourCart' | cxTranslate)\n        }}\n      </div>\n      <button\n        type=\"button\"\n        class=\"close\"\n        attr.aria-label=\"{{ 'addToCart.closeModal' | cxTranslate }}\"\n        cxModal=\"dismiss\"\n        cxModalReason=\"Cross click\"\n      >\n        <span aria-hidden=\"true\">\n          <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n        </span>\n      </button>\n    </div>\n    <!-- Modal Body -->\n    <div class=\"cx-dialog-body modal-body\" *ngIf=\"entry$ | async as entry\">\n      <div class=\"cx-dialog-row\">\n        <div class=\"cx-dialog-item col-sm-12 col-md-6\">\n          <cx-cart-item\n            [item]=\"entry\"\n            [compact]=\"true\"\n            [quantityControl]=\"getQuantityControl() | async\"\n            [promotionLocation]=\"promotionLocation\"\n          ></cx-cart-item>\n        </div>\n        <!-- Separator -->\n        <div\n          class=\"cx-dialog-separator col-sm-12 d-xs-block d-sm-block d-md-none\"\n        ></div>\n        <!-- Total container -->\n        <div\n          class=\"cx-dialog-actions col-sm-12 col-md-6\"\n          *ngIf=\"cart$ | async as cart\"\n        >\n          <div class=\"cx-dialog-total\">\n            <div>\n              {{\n                'cartItems.cartTotal'\n                  | cxTranslate: { count: cart.deliveryItemsQuantity }\n              }}\n            </div>\n\n            <div>{{ cart.subTotal?.formattedValue }}</div>\n          </div>\n\n          <!-- Promotions -->\n          <div class=\"cx-dialog-promotions\">\n            <cx-promotions\n              [promotions]=\"\n                (cart.appliedOrderPromotions || []).concat(\n                  cart.potentialOrderPromotions || []\n                )\n              \"\n            ></cx-promotions>\n          </div>\n\n          <!-- Actions -->\n          <div class=\"cx-dialog-buttons\">\n            <a\n              [class.disabled]=\"form.dirty\"\n              [routerLink]=\"{ cxRoute: 'cart' } | cxUrl\"\n              cxModal=\"dismiss\"\n              cxModalReason=\"View Cart click\"\n              class=\"btn btn-primary\"\n              autofocus\n              >{{ 'addToCart.viewCart' | cxTranslate }}</a\n            >\n            <a\n              [class.disabled]=\"form.dirty\"\n              [routerLink]=\"{ cxRoute: 'checkout' } | cxUrl\"\n              cxModal=\"dismiss\"\n              cxModalReason=\"Proceed To Checkout click\"\n              class=\"btn btn-secondary\"\n              >{{ 'addToCart.proceedToCheckout' | cxTranslate }}</a\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-template #loading>\n    <div class=\"cx-dialog-header modal-header\">\n      <div class=\"cx-dialog-title modal-title\">\n        {{ 'addToCart.updatingCart' | cxTranslate }}\n      </div>\n      <button\n        type=\"button\"\n        class=\"close\"\n        [attr.aria-label]=\"'common.close' | cxTranslate\"\n        cxModal=\"dismiss\"\n        cxModalReason=\"Cross click\"\n      >\n        <span aria-hidden=\"true\">\n          <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n        </span>\n      </button>\n    </div>\n    <!-- Modal Body -->\n    <div class=\"cx-dialog-body modal-body\">\n      <div class=\"cx-dialog-row\">\n        <div class=\"col-sm-12\"><cx-spinner></cx-spinner></div>\n      </div>\n    </div>\n  </ng-template>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  isNotUndefined,\n  Product,\n  ProductScope,\n  ProductService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CurrentProductService {\n  constructor(\n    private routingService: RoutingService,\n    private productService: ProductService\n  ) {}\n\n  protected readonly DEFAULT_PRODUCT_SCOPE = ProductScope.DETAILS;\n\n  /**\n   * Returns an observable for the current product\n   * @returns Product\n   * @returns null if product can't be found\n   *\n   * @param scopes\n   */\n  getProduct(\n    scopes?: (ProductScope | string)[] | ProductScope | string\n  ): Observable<Product | null> {\n    return this.getCode().pipe(\n      distinctUntilChanged(),\n      switchMap((productCode: string) => {\n        return productCode\n          ? this.productService.get(\n              productCode,\n              scopes || this.DEFAULT_PRODUCT_SCOPE\n            )\n          : of(null);\n      }),\n      filter(isNotUndefined)\n    );\n  }\n\n  protected getCode(): Observable<string> {\n    return this.routingService\n      .getRouterState()\n      .pipe(map((state) => state.state.params['productCode']));\n  }\n}\n","import { Observable } from 'rxjs';\nimport { CmsComponent } from '@spartacus/core';\n\nexport abstract class CmsComponentData<T extends CmsComponent> {\n  uid: string;\n  data$: Observable<T>;\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n  ActiveCartService,\n  CmsAddToCartComponent,\n  isNotNullable,\n  Product,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter, map, take } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { ModalRef } from '../../../shared/components/modal/modal-ref';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\nimport { CurrentProductService } from '../../product/current-product.service';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@Component({\n  selector: 'cx-add-to-cart',\n  templateUrl: './add-to-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddToCartComponent implements OnInit, OnDestroy {\n  @Input() productCode: string;\n  @Input() showQuantity = true;\n\n  /**\n   * As long as we do not support #5026, we require product input, as we need\n   *  a reference to the product model to fetch the stock data.\n   */\n  @Input() product: Product;\n\n  maxQuantity: number;\n  modalRef: ModalRef;\n\n  hasStock: boolean = false;\n  inventoryThreshold: boolean = false;\n\n  showInventory$: Observable<boolean | undefined> | undefined =\n    this.component?.data$.pipe(map((data) => data.inventoryDisplay));\n\n  quantity = 1;\n  protected numberOfEntriesBeforeAdd = 0;\n\n  subscription: Subscription;\n\n  addToCartForm = new FormGroup({\n    quantity: new FormControl(1, { updateOn: 'blur' }),\n  });\n\n  // TODO(#13041): Remove deprecated constructors\n  constructor(\n    modalService: ModalService,\n    currentProductService: CurrentProductService,\n    cd: ChangeDetectorRef,\n    activeCartService: ActiveCartService,\n    // eslint-disable-next-line @typescript-eslint/unified-signatures\n    component?: CmsComponentData<CmsAddToCartComponent>\n  );\n\n  /**\n   * @deprecated since 4.1\n   */\n  constructor(\n    modalService: ModalService,\n    currentProductService: CurrentProductService,\n    cd: ChangeDetectorRef,\n    activeCartService: ActiveCartService\n  );\n\n  constructor(\n    protected modalService: ModalService,\n    protected currentProductService: CurrentProductService,\n    protected cd: ChangeDetectorRef,\n    protected activeCartService: ActiveCartService,\n    @Optional() protected component?: CmsComponentData<CmsAddToCartComponent>\n  ) {}\n\n  ngOnInit() {\n    if (this.product) {\n      this.productCode = this.product.code ?? '';\n      this.setStockInfo(this.product);\n      this.cd.markForCheck();\n    } else if (this.productCode) {\n      // force hasStock and quantity for the time being, as we do not have more info:\n      this.quantity = 1;\n      this.hasStock = true;\n      this.cd.markForCheck();\n    } else {\n      this.subscription = this.currentProductService\n        .getProduct()\n        .pipe(filter(isNotNullable))\n        .subscribe((product) => {\n          this.productCode = product.code ?? '';\n          this.setStockInfo(product);\n          this.cd.markForCheck();\n        });\n    }\n  }\n\n  protected setStockInfo(product: Product): void {\n    this.quantity = 1;\n    this.hasStock = Boolean(product.stock?.stockLevelStatus !== 'outOfStock');\n\n    this.inventoryThreshold = product.stock?.isValueRounded ?? false;\n\n    if (this.hasStock && product.stock?.stockLevel) {\n      this.maxQuantity = product.stock.stockLevel;\n    }\n  }\n\n  /**\n   * In specific scenarios, we need to omit displaying the stock level or append a plus to the value.\n   * When backoffice forces a product to be in stock, omit showing the stock level.\n   * When product stock level is limited by a threshold value, append '+' at the end.\n   * When out of stock, display no numerical value.\n   */\n  getInventory(): string {\n    if (this.hasStock) {\n      const quantityDisplay = this.maxQuantity\n        ? this.maxQuantity.toString()\n        : '';\n      return this.inventoryThreshold ? quantityDisplay + '+' : quantityDisplay;\n    } else {\n      return '';\n    }\n  }\n\n  updateCount(value: number): void {\n    this.quantity = value;\n  }\n\n  addToCart() {\n    const quantity = this.addToCartForm.get('quantity').value;\n    if (!this.productCode || quantity <= 0) {\n      return;\n    }\n    this.activeCartService\n      .getEntries()\n      .pipe(take(1))\n      .subscribe((entries) => {\n        this.numberOfEntriesBeforeAdd = entries.length;\n        this.openModal();\n        this.activeCartService.addEntry(this.productCode, quantity);\n      });\n  }\n\n  /**\n   * Provides required data and opens AddedToCartDialogComponent modal\n   */\n  protected openModal() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(AddedToCartDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    // Display last entry for new product code. This always corresponds to\n    // our new item, independently of whether merging occured or not\n    modalInstance.entry$ = this.activeCartService.getLastEntry(\n      this.productCode\n    );\n    modalInstance.cart$ = this.activeCartService.getActive();\n    modalInstance.loaded$ = this.activeCartService.isStable();\n    modalInstance.quantity = this.quantity;\n    modalInstance.numberOfEntriesBeforeAdd = this.numberOfEntriesBeforeAdd;\n  }\n\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","<form *ngIf=\"productCode\" [formGroup]=\"addToCartForm\" (submit)=\"addToCart()\">\n  <div class=\"quantity\" *ngIf=\"showQuantity\">\n    <label>{{ 'addToCart.quantity' | cxTranslate }}</label>\n    <cx-item-counter\n      *ngIf=\"hasStock\"\n      [max]=\"maxQuantity\"\n      [control]=\"addToCartForm.get('quantity')\"\n    ></cx-item-counter>\n\n    <span class=\"info\">\n      <span *ngIf=\"showInventory$ | async\">{{ getInventory() }}</span>\n      {{\n        hasStock\n          ? ('addToCart.inStock' | cxTranslate)\n          : ('addToCart.outOfStock' | cxTranslate)\n      }}</span\n    >\n  </div>\n\n  <button\n    *ngIf=\"hasStock\"\n    class=\"btn btn-primary btn-block\"\n    type=\"submit\"\n    [disabled]=\"quantity <= 0 || quantity > maxQuantity\"\n  >\n    {{ 'addToCart.addToCart' | cxTranslate }}\n  </button>\n</form>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { SpinnerComponent } from './spinner.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [SpinnerComponent],\n  exports: [SpinnerComponent],\n})\nexport class SpinnerModule {}\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  AnonymousConsentsConfig,\n  AnonymousConsentsService,\n  AuthService,\n  ConsentTemplate,\n  GlobalMessageService,\n  GlobalMessageType,\n  UserConsentService,\n} from '@spartacus/core';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  concat,\n  Observable,\n  Subscription,\n} from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  scan,\n  skipWhile,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-consent-management',\n  templateUrl: './consent-management.component.html',\n})\nexport class ConsentManagementComponent implements OnInit, OnDestroy {\n  private subscriptions = new Subscription();\n  private allConsentsLoading = new BehaviorSubject<boolean>(false);\n\n  templateList$: Observable<ConsentTemplate[]>;\n  loading$: Observable<boolean>;\n\n  requiredConsents: string[] = [];\n\n  constructor(\n    protected userConsentService: UserConsentService,\n    protected globalMessageService: GlobalMessageService,\n    protected anonymousConsentsConfig: AnonymousConsentsConfig,\n    protected anonymousConsentsService: AnonymousConsentsService,\n    protected authService: AuthService\n  ) {}\n\n  ngOnInit(): void {\n    this.loading$ = combineLatest([\n      this.userConsentService.getConsentsResultLoading(),\n      this.userConsentService.getGiveConsentResultLoading(),\n      this.userConsentService.getWithdrawConsentResultLoading(),\n      this.authService.isUserLoggedIn(),\n      this.allConsentsLoading,\n    ]).pipe(\n      map(\n        ([\n          consentLoading,\n          giveConsentLoading,\n          withdrawConsentLoading,\n          isUserLoggedIn,\n          allConsentsLoading,\n        ]) =>\n          consentLoading ||\n          giveConsentLoading ||\n          withdrawConsentLoading ||\n          !isUserLoggedIn ||\n          allConsentsLoading\n      )\n    );\n    this.consentListInit();\n    this.giveConsentInit();\n    this.withdrawConsentInit();\n  }\n\n  private consentListInit(): void {\n    this.templateList$ = this.userConsentService.getConsents().pipe(\n      withLatestFrom(\n        this.anonymousConsentsService.getTemplates(),\n        this.authService.isUserLoggedIn()\n      ),\n      filter(\n        ([_templateList, _anonymousTemplates, isUserLoggedIn]) => isUserLoggedIn\n      ),\n      tap(([templateList, _anonymousTemplates]) => {\n        if (!this.consentsExists(templateList)) {\n          this.userConsentService.loadConsents();\n        }\n      }),\n      map(([templateList, anonymousTemplates]) => {\n        if (Boolean(this.anonymousConsentsConfig.anonymousConsents)) {\n          if (\n            Boolean(\n              this.anonymousConsentsConfig.anonymousConsents.requiredConsents\n            )\n          ) {\n            this.requiredConsents =\n              this.anonymousConsentsConfig.anonymousConsents.requiredConsents;\n          }\n          if (\n            Boolean(\n              this.anonymousConsentsConfig.anonymousConsents\n                .consentManagementPage\n            )\n          ) {\n            return this.hideAnonymousConsents(templateList, anonymousTemplates);\n          }\n        }\n\n        return templateList;\n      })\n    );\n  }\n\n  private hideAnonymousConsents(\n    templateList: ConsentTemplate[],\n    anonymousTemplates: ConsentTemplate[] = []\n  ): ConsentTemplate[] {\n    let hideTemplateIds: string[] = [];\n\n    if (\n      !this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n        .showAnonymousConsents\n    ) {\n      hideTemplateIds = anonymousTemplates.map((template) => template.id);\n      return this.userConsentService.filterConsentTemplates(\n        templateList,\n        hideTemplateIds\n      );\n    }\n\n    if (\n      Boolean(\n        this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n          .hideConsents\n      ) &&\n      this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n        .hideConsents.length > 0\n    ) {\n      hideTemplateIds =\n        this.anonymousConsentsConfig.anonymousConsents.consentManagementPage\n          .hideConsents;\n    }\n\n    return this.userConsentService.filterConsentTemplates(\n      templateList,\n      hideTemplateIds\n    );\n  }\n\n  private giveConsentInit(): void {\n    this.userConsentService.resetGiveConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getGiveConsentResultSuccess()\n        .subscribe((success) => this.onConsentGivenSuccess(success))\n    );\n  }\n\n  private withdrawConsentInit(): void {\n    this.userConsentService.resetWithdrawConsentProcessState();\n    this.subscriptions.add(\n      this.userConsentService\n        .getWithdrawConsentResultLoading()\n        .pipe(\n          skipWhile(Boolean),\n          withLatestFrom(\n            this.userConsentService.getWithdrawConsentResultSuccess()\n          ),\n          map(([, withdrawalSuccess]) => withdrawalSuccess),\n          tap((withdrawalSuccess) => {\n            if (withdrawalSuccess) {\n              this.userConsentService.loadConsents();\n            }\n          })\n        )\n        .subscribe((withdrawalSuccess) =>\n          this.onConsentWithdrawnSuccess(withdrawalSuccess)\n        )\n    );\n  }\n\n  private consentsExists(templateList: ConsentTemplate[]): boolean {\n    return Boolean(templateList) && templateList.length > 0;\n  }\n\n  onConsentChange({\n    given,\n    template,\n  }: {\n    given: boolean;\n    template: ConsentTemplate;\n  }): void {\n    if (given) {\n      this.userConsentService.giveConsent(template.id, template.version);\n    } else {\n      this.userConsentService.withdrawConsent(template.currentConsent.code);\n    }\n  }\n\n  private onConsentGivenSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetGiveConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.given' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  private onConsentWithdrawnSuccess(success: boolean): void {\n    if (success) {\n      this.userConsentService.resetWithdrawConsentProcessState();\n      this.globalMessageService.add(\n        { key: 'consentManagementForm.message.success.withdrawn' },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n  }\n\n  rejectAll(templates: ConsentTemplate[] = []): void {\n    const consentsToWithdraw: ConsentTemplate[] = [];\n    templates.forEach((template) => {\n      if (this.userConsentService.isConsentGiven(template.currentConsent)) {\n        if (this.isRequiredConsent(template)) {\n          return;\n        }\n        consentsToWithdraw.push(template);\n      }\n    });\n\n    this.allConsentsLoading.next(true);\n\n    this.subscriptions.add(\n      this.setupWithdrawalStream(consentsToWithdraw)\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\n        .subscribe()\n    );\n  }\n\n  private setupWithdrawalStream(\n    consentsToWithdraw: ConsentTemplate[] = []\n  ): Observable<number> {\n    const loading$ = concat(\n      this.userConsentService.getWithdrawConsentResultLoading()\n    ).pipe(\n      distinctUntilChanged(),\n      filter((loading) => !loading)\n    );\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\n    const withdraw$ = count$.pipe(\n      tap((i) => {\n        if (i < consentsToWithdraw.length) {\n          this.userConsentService.withdrawConsent(\n            consentsToWithdraw[i].currentConsent.code\n          );\n        }\n      })\n    );\n    const checkTimesLoaded$ = withdraw$.pipe(\n      filter((timesLoaded) => timesLoaded === consentsToWithdraw.length)\n    );\n\n    return checkTimesLoaded$;\n  }\n\n  allowAll(templates: ConsentTemplate[] = []): void {\n    const consentsToGive: ConsentTemplate[] = [];\n    templates.forEach((template) => {\n      if (this.userConsentService.isConsentWithdrawn(template.currentConsent)) {\n        if (this.isRequiredConsent(template)) {\n          return;\n        }\n      }\n      consentsToGive.push(template);\n    });\n\n    this.allConsentsLoading.next(true);\n\n    this.subscriptions.add(\n      this.setupGiveStream(consentsToGive)\n        .pipe(tap((_timesLoaded) => this.allConsentsLoading.next(false)))\n        .subscribe()\n    );\n  }\n\n  private setupGiveStream(\n    consentsToGive: ConsentTemplate[] = []\n  ): Observable<number> {\n    const loading$ = concat(\n      this.userConsentService.getGiveConsentResultLoading()\n    ).pipe(\n      distinctUntilChanged(),\n      filter((loading) => !loading)\n    );\n    const count$ = loading$.pipe(scan((acc, _value) => acc + 1, -1));\n    const giveConsent$ = count$.pipe(\n      tap((i) => {\n        if (i < consentsToGive.length) {\n          this.userConsentService.giveConsent(\n            consentsToGive[i].id,\n            consentsToGive[i].version\n          );\n        }\n      })\n    );\n    const checkTimesLoaded$ = giveConsent$.pipe(\n      filter((timesLoaded) => timesLoaded === consentsToGive.length)\n    );\n\n    return checkTimesLoaded$;\n  }\n\n  private isRequiredConsent(template: ConsentTemplate): boolean {\n    return (\n      Boolean(this.anonymousConsentsConfig.anonymousConsents) &&\n      Boolean(\n        this.anonymousConsentsConfig.anonymousConsents.requiredConsents\n      ) &&\n      this.anonymousConsentsConfig.anonymousConsents.requiredConsents.includes(\n        template.id\n      )\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.allConsentsLoading.unsubscribe();\n\n    this.userConsentService.resetGiveConsentProcessState();\n    this.userConsentService.resetWithdrawConsentProcessState();\n  }\n}\n","<div *ngIf=\"loading$ | async; else consentManagementForm\">\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</div>\n\n<ng-template #consentManagementForm>\n  <ng-container *ngIf=\"templateList$ | async as templateList\">\n    <div class=\"cx-consent-action-links\">\n      <div class=\"col-sm-12 col-md-8 col-lg-6\">\n        <button\n          tabindex=\"0\"\n          class=\"btn btn-link cx-action-link\"\n          (click)=\"rejectAll(templateList)\"\n        >\n          {{ 'consentManagementForm.clearAll' | cxTranslate }}\n        </button>\n        <button\n          tabindex=\"0\"\n          class=\"btn btn-link cx-action-link\"\n          (click)=\"allowAll(templateList)\"\n        >\n          {{ 'consentManagementForm.selectAll' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n\n    <div class=\"cx-consent-toggles\">\n      <div class=\"col-sm-12 col-md-8 col-lg-6\">\n        <cx-consent-management-form\n          *ngFor=\"let consentTemplate of templateList\"\n          [consentTemplate]=\"consentTemplate\"\n          [requiredConsents]=\"requiredConsents\"\n          (consentChanged)=\"onConsentChange($event)\"\n        ></cx-consent-management-form>\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { ConsentManagementFormComponent } from './components/consent-form/consent-management-form.component';\nimport { ConsentManagementComponent } from './components/consent-management.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SpinnerModule,\n    I18nModule,\n    IconModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ConsentManagementComponent: {\n          component: ConsentManagementComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ConsentManagementComponent, ConsentManagementFormComponent],\n  exports: [ConsentManagementComponent, ConsentManagementFormComponent],\n})\nexport class ConsentManagementModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { ConsentManagementModule } from '../../../cms-components/myaccount/consent-management/consent-management.module';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/index';\nimport { SpinnerModule } from '../spinner/spinner.module';\nimport { AnonymousConsentDialogComponent } from './anonymous-consent-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    SpinnerModule,\n    ConsentManagementModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [AnonymousConsentDialogComponent],\n  exports: [AnonymousConsentDialogComponent],\n})\nexport class AnonymousConsentsDialogModule {}\n","export type PopoverPosition =\n  | 'auto'\n  | 'top'\n  | 'bottom'\n  | 'left'\n  | 'right'\n  | 'top-left'\n  | 'top-right'\n  | 'bottom-left'\n  | 'bottom-right'\n  | 'left-top'\n  | 'left-bottom'\n  | 'right-top'\n  | 'right-bottom';\n\nexport type PopoverPositionArray =\n  | PopoverPosition\n  | Array<PopoverPosition>\n  | string;\n\nexport enum PopoverEvent {\n  INSIDE_CLICK = 'insideClick',\n  OUTSIDE_CLICK = 'outsideClick',\n  ESCAPE_KEYDOWN = 'escapeKeydown',\n  CLOSE_BUTTON_CLICK = 'closeButtonClick',\n  CLOSE_BUTTON_KEYDOWN = 'closeButtonKeydown',\n  ROUTE_CHANGE = 'routeChange',\n  OPEN = 'open',\n  OPEN_BY_KEYBOARD = 'openByKeyboard',\n}\n\nexport interface PopoverOptions {\n  /**\n   * The preferred placement of the popover. Default popover position is 'top'.\n   *\n   *  Allowed popover positions: 'auto', 'top', 'bottom', 'left', 'right',\n   * 'top-left', 'top-right', 'bottom-left', 'bottom-right',\n   * 'left-top', 'left-bottom', 'right-top', 'right-bottom'.\n   */\n  placement?: PopoverPosition;\n\n  /**\n   * Flag used to define if popover should look for the best placement\n   * in case if there is not enough space in viewport for preferred position.\n   *\n   * By default this property is set to `true`.\n   *\n   * Value of this flag is omitted if preferred position is set to `auto`.\n   */\n  autoPositioning?: boolean;\n\n  /**\n   * Flag used to prevent firing popover open function.\n   */\n  disable?: boolean;\n\n  /**\n   * Custom class name passed to popover component.\n   *\n   * If this property is not set the default popover class is `cx-popover`.\n   */\n  class?: string;\n\n  /**\n   * Flag used to hide close button in popover component.\n   */\n  displayCloseButton?: boolean;\n\n  /**\n   * Append popover component into 'body' selector.\n   */\n  appendToBody?: boolean;\n\n  /**\n   * Flag indicates if popover should be re-positioned on scroll event.\n   */\n  positionOnScroll?: boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport {\n  PopoverPosition,\n  PopoverPositionArray,\n} from '../../components/popover/popover.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PositioningService {\n  constructor(protected winRef: WindowRef) {}\n\n  protected get allowedPlacements(): Array<PopoverPositionArray> {\n    return [\n      'top',\n      'bottom',\n      'left',\n      'right',\n      'top-left',\n      'top-right',\n      'bottom-left',\n      'bottom-right',\n      'left-top',\n      'left-bottom',\n      'right-top',\n      'right-bottom',\n    ];\n  }\n\n  protected get placementSeparator(): RegExp {\n    return /\\s+/;\n  }\n\n  protected get window(): Window | undefined {\n    return this.winRef.nativeWindow;\n  }\n\n  protected get document(): Document {\n    return this.winRef.document;\n  }\n\n  protected getAllStyles(\n    element: HTMLElement\n  ): CSSStyleDeclaration | undefined {\n    return this.window?.getComputedStyle(element);\n  }\n\n  protected getPositionStyleProperty(element: HTMLElement): string | undefined {\n    const styles = this.getAllStyles(element);\n\n    if (styles) return styles['position'] || undefined;\n  }\n\n  protected isStaticPositioned(element: HTMLElement): boolean {\n    return (this.getPositionStyleProperty(element) || 'static') === 'static';\n  }\n\n  protected offsetParent(element: HTMLElement): HTMLElement {\n    let offsetParentEl =\n      <HTMLElement>element.offsetParent || this.document.documentElement;\n\n    while (\n      offsetParentEl &&\n      offsetParentEl !== this.document.documentElement &&\n      this.isStaticPositioned(offsetParentEl)\n    ) {\n      offsetParentEl = <HTMLElement>offsetParentEl.offsetParent;\n    }\n\n    return offsetParentEl || this.document.documentElement;\n  }\n\n  protected position(element: HTMLElement, round = true): ClientRect {\n    let elPosition: ClientRect;\n    let parentOffset: ClientRect = {\n      width: 0,\n      height: 0,\n      top: 0,\n      bottom: 0,\n      left: 0,\n      right: 0,\n    };\n\n    if (this.getPositionStyleProperty(element) === 'fixed') {\n      elPosition = element.getBoundingClientRect();\n      elPosition = {\n        top: elPosition.top,\n        bottom: elPosition.bottom,\n        left: elPosition.left,\n        right: elPosition.right,\n        height: elPosition.height,\n        width: elPosition.width,\n      };\n    } else {\n      const offsetParentEl = this.offsetParent(element);\n\n      elPosition = this.offset(element, false);\n\n      if (offsetParentEl !== this.document.documentElement) {\n        parentOffset = this.offset(offsetParentEl, false);\n      }\n\n      parentOffset.top += offsetParentEl.clientTop;\n      parentOffset.left += offsetParentEl.clientLeft;\n    }\n\n    elPosition.top -= parentOffset.top;\n    elPosition.bottom -= parentOffset.top;\n    elPosition.left -= parentOffset.left;\n    elPosition.right -= parentOffset.left;\n\n    if (round) {\n      elPosition.top = Math.round(elPosition.top);\n      elPosition.bottom = Math.round(elPosition.bottom);\n      elPosition.left = Math.round(elPosition.left);\n      elPosition.right = Math.round(elPosition.right);\n    }\n\n    return elPosition;\n  }\n\n  protected offset(element: HTMLElement, round = true): ClientRect {\n    const elBcr = element.getBoundingClientRect();\n    const viewportOffset = {\n      top:\n        (this.window &&\n          this.window.pageYOffset - this.document.documentElement.clientTop) ||\n        0,\n      left:\n        (this.window &&\n          this.window.pageXOffset - this.document.documentElement.clientLeft) ||\n        0,\n    };\n\n    const elOffset = {\n      height: elBcr.height || element.offsetHeight,\n      width: elBcr.width || element.offsetWidth,\n      top: elBcr.top + viewportOffset.top,\n      bottom: elBcr.bottom + viewportOffset.top,\n      left: elBcr.left + viewportOffset.left,\n      right: elBcr.right + viewportOffset.left,\n    };\n\n    if (round) {\n      elOffset.height = Math.round(elOffset.height);\n      elOffset.width = Math.round(elOffset.width);\n      elOffset.top = Math.round(elOffset.top);\n      elOffset.bottom = Math.round(elOffset.bottom);\n      elOffset.left = Math.round(elOffset.left);\n      elOffset.right = Math.round(elOffset.right);\n    }\n\n    return elOffset;\n  }\n\n  /*\n    Return false if the element to position is outside the viewport.\n  */\n  protected _positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    placement: string,\n    appendToBody?: boolean\n  ): boolean {\n    const [placementPrimary = 'top', placementSecondary = 'center'] =\n      placement.split('-');\n\n    const hostElPosition = appendToBody\n      ? this.offset(hostElement, false)\n      : this.position(hostElement, false);\n    const targetElStyles = this.getAllStyles(targetElement);\n\n    if (targetElStyles) {\n      const marginTop = parseFloat(targetElStyles.marginTop);\n      const marginBottom = parseFloat(targetElStyles.marginBottom);\n      const marginLeft = parseFloat(targetElStyles.marginLeft);\n      const marginRight = parseFloat(targetElStyles.marginRight);\n\n      let topPosition = 0;\n      let leftPosition = 0;\n\n      switch (placementPrimary) {\n        case 'top':\n          topPosition =\n            hostElPosition.top -\n            (targetElement.offsetHeight + marginTop + marginBottom);\n          break;\n        case 'bottom':\n          topPosition = hostElPosition.top + hostElPosition.height;\n          break;\n        case 'left':\n          leftPosition =\n            hostElPosition.left -\n            (targetElement.offsetWidth + marginLeft + marginRight);\n          break;\n        case 'right':\n          leftPosition = hostElPosition.left + hostElPosition.width;\n          break;\n      }\n\n      switch (placementSecondary) {\n        case 'top':\n          topPosition = hostElPosition.top;\n          break;\n        case 'bottom':\n          topPosition =\n            hostElPosition.top +\n            hostElPosition.height -\n            targetElement.offsetHeight;\n          break;\n        case 'left':\n          leftPosition = hostElPosition.left;\n          break;\n        case 'right':\n          leftPosition =\n            hostElPosition.left +\n            hostElPosition.width -\n            targetElement.offsetWidth;\n          break;\n        case 'center':\n          if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n            leftPosition =\n              hostElPosition.left +\n              hostElPosition.width / 2 -\n              targetElement.offsetWidth / 2;\n          } else {\n            topPosition =\n              hostElPosition.top +\n              hostElPosition.height / 2 -\n              targetElement.offsetHeight / 2;\n          }\n          break;\n      }\n\n      targetElement.style.transform = `translate(${Math.round(\n        leftPosition\n      )}px, ${Math.round(topPosition)}px)`;\n\n      // Check if the targetElement is inside the viewport\n      const targetElBCR = targetElement.getBoundingClientRect();\n      const html = this.document.documentElement;\n      const windowHeight = this.window?.innerHeight || html.clientHeight;\n      const windowWidth = this.window?.innerWidth || html.clientWidth;\n\n      return (\n        targetElBCR.left >= 0 &&\n        targetElBCR.top >= 0 &&\n        targetElBCR.right <= windowWidth &&\n        targetElBCR.bottom <= windowHeight\n      );\n    }\n\n    return false;\n  }\n\n  /*\n   * Accept the placement array and applies the appropriate placement dependent on the viewport.\n   * Returns the applied placement.\n   * In case of auto placement, placements are selected in order\n   *   'top', 'bottom', 'left', 'right',\n   *   'top-left', 'top-right',\n   *   'bottom-left', 'bottom-right',\n   *   'left-top', 'left-bottom',\n   *   'right-top', 'right-bottom'.\n   * */\n  positionElements(\n    hostElement: HTMLElement,\n    targetElement: HTMLElement,\n    placement: string | PopoverPosition | PopoverPositionArray,\n    appendToBody?: boolean\n  ): PopoverPosition {\n    const placementVals: Array<PopoverPosition> = Array.isArray(placement)\n      ? placement\n      : (placement.split(this.placementSeparator) as Array<PopoverPosition>);\n\n    let hasAuto = placementVals.findIndex((val) => val === 'auto');\n    if (hasAuto >= 0) {\n      this.allowedPlacements.forEach((obj) => {\n        if (placementVals.find((val) => val.search('^' + obj) !== -1) == null) {\n          placementVals.splice(hasAuto++, 1, obj as PopoverPosition);\n        }\n      });\n    }\n\n    const style = targetElement.style;\n    style.position = 'absolute';\n    style.top = '0';\n    style.left = '0';\n\n    let testPlacement: PopoverPosition = 'auto';\n    let isInViewport = false;\n    for (testPlacement of placementVals) {\n      if (\n        this._positionElements(\n          hostElement,\n          targetElement,\n          testPlacement,\n          appendToBody\n        )\n      ) {\n        isInViewport = true;\n        break;\n      }\n    }\n\n    if (!isInViewport) {\n      this._positionElements(\n        hostElement,\n        targetElement,\n        testPlacement,\n        appendToBody\n      );\n    }\n\n    return testPlacement;\n  }\n\n  getPositioningClass(\n    position?: PopoverPosition,\n    autoPositioning?: boolean\n  ): string {\n    let positionClass = `${position || 'top'}`;\n    if (autoPositioning && positionClass !== 'auto') {\n      positionClass = `${positionClass} auto`;\n    }\n\n    return positionClass;\n  }\n}\n","import {\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  TemplateRef,\n} from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport { Subject, Subscription } from 'rxjs';\nimport { WindowRef } from '@spartacus/core';\nimport { PopoverEvent, PopoverPosition } from './popover.model';\nimport { PositioningService } from '../../services/positioning/positioning.service';\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/keyboard-focus.model';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-popover',\n  templateUrl: './popover.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PopoverComponent implements OnInit, OnDestroy, AfterViewChecked {\n  /**\n   * String or template to be rendered inside popover wrapper component.\n   */\n  content: string | TemplateRef<any>;\n\n  /**\n   * Element which triggers displaying popover component.\n   * This property is needed to calculate valid position for popover.\n   */\n  triggerElement: ElementRef;\n\n  /**\n   * Current initiated popover instance.\n   */\n  popoverInstance: ComponentRef<PopoverComponent>;\n\n  /**\n   * Flag which informs positioning service if popover component\n   * should be appended to body. Otherwise popover is displayed right after\n   * trigger element in DOM.\n   */\n  appendToBody?: boolean;\n\n  /**\n   * The preferred placement of the popover. Default popover position is 'top'.\n   *\n   * Allowed popover positions: 'auto', 'top', 'bottom', 'left', 'right',\n   * 'top-left', 'top-right', 'bottom-left', 'bottom-right',\n   * 'left-top', 'left-bottom', 'right-top', 'right-bottom'.\n   */\n  position?: PopoverPosition;\n\n  /**\n   * Flag used to define if popover should look for the best placement\n   * in case if there is not enough space in viewport for preferred position.\n   *\n   * By default this property is set to `true`.\n   *\n   * Value of this flag is omitted if preferred position is set to `auto`.\n   */\n  autoPositioning?: boolean;\n\n  /**\n   * Custom class name passed to popover component.\n   *\n   * If this property is not set the default popover class is `cx-popover`.\n   */\n  customClass?: string;\n\n  /**\n   * Flag used to show/hide close button in popover component.\n   */\n  displayCloseButton?: boolean;\n\n  /**\n   * Flag which indicates if passed content is a TemplateRef or string.\n   */\n  isTemplate: boolean;\n\n  /**\n   * After popover component is initialized position needs to be changing dynamically\n   * in case if any viewport changes happened.\n   */\n  resizeSub: Subscription;\n\n  /**\n   * After popover component is initialized popover should be closed in case\n   * if current route has been changed.\n   */\n  routeChangeSub: Subscription;\n\n  /**\n   * Class name generated by positioning service indicating position of popover.\n   */\n  popoverClass: PopoverPosition;\n\n  /**\n   * Configuration for a11y improvements.\n   */\n  focusConfig: FocusConfig;\n\n  /**\n   * Flag indicates if popover should be re-positioned on scroll event.\n   */\n  positionOnScroll?: boolean;\n\n  /**\n   * Icon types for close button icon.\n   */\n  iconTypes = ICON_TYPE;\n\n  /**\n   * Subject which emits specific type of `PopoverEvent`.\n   */\n  eventSubject: Subject<PopoverEvent>;\n\n  /**\n   * Scroll event unlistener.\n   */\n  scrollEventUnlistener: () => void;\n\n  /**\n   * Binding class name property.\n   */\n  @HostBinding('className') baseClass: string;\n\n  /**\n   * Listens for click inside popover component wrapper.\n   */\n  @HostListener('click')\n  insideClick() {\n    this.eventSubject.next(PopoverEvent.INSIDE_CLICK);\n  }\n\n  /**\n   * Listens for every document click and ignores clicks\n   * inside component.\n   */\n  @HostListener('document:click', ['$event'])\n  outsideClick(event: MouseEvent) {\n    if (!this.isClickedOnPopover(event) && !this.isClickedOnDirective(event)) {\n      this.eventSubject.next(PopoverEvent.OUTSIDE_CLICK);\n    }\n  }\n\n  /**\n   * Listens for `escape` keydown event.\n   */\n  @HostListener('keydown.escape')\n  escapeKeydown() {\n    this.eventSubject.next(PopoverEvent.ESCAPE_KEYDOWN);\n  }\n\n  protected isClickedOnPopover(event) {\n    return this.popoverInstance.location.nativeElement.contains(event.target);\n  }\n\n  protected isClickedOnDirective(event) {\n    return this.triggerElement.nativeElement.contains(event.target);\n  }\n\n  /**\n   * Emits close event trigger.\n   */\n  close(event: MouseEvent | KeyboardEvent) {\n    event.preventDefault();\n    if (event instanceof MouseEvent) {\n      this.eventSubject.next(PopoverEvent.CLOSE_BUTTON_CLICK);\n    } else {\n      this.eventSubject.next(PopoverEvent.CLOSE_BUTTON_KEYDOWN);\n    }\n  }\n\n  /**\n   * Method uses `Renderer2` service to listen window scroll event.\n   *\n   * Registered only if property `positionOnScroll` is set to `true`.\n   */\n  triggerScrollEvent() {\n    this.scrollEventUnlistener = this.renderer.listen(\n      this.winRef.nativeWindow,\n      'scroll',\n      () => this.positionPopover()\n    );\n  }\n\n  /**\n   * Method uses positioning service calculation and based on that\n   * updates class name for popover component instance.\n   */\n  positionPopover() {\n    this.popoverClass = this.positioningService.positionElements(\n      this.triggerElement.nativeElement,\n      this.popoverInstance.location.nativeElement,\n      this.positioningService.getPositioningClass(\n        this.position,\n        this.autoPositioning\n      ),\n      this.appendToBody\n    );\n\n    this.changeDetectionRef.markForCheck();\n    this.baseClass = `${this.customClass} ${this.popoverClass} opened`;\n  }\n\n  ngOnInit(): void {\n    this.isTemplate = this.content instanceof TemplateRef;\n\n    if (!this.customClass) this.customClass = 'cx-popover';\n    if (!this.position) this.position = 'top';\n    if (this.autoPositioning === undefined) this.autoPositioning = true;\n\n    this.baseClass = `${this.customClass}`;\n\n    this.resizeSub = this.winRef.resize$.subscribe(() => {\n      this.positionPopover();\n    });\n\n    this.routeChangeSub = this.router.events\n      .pipe(filter((event) => event instanceof NavigationStart))\n      .subscribe(() => {\n        this.eventSubject.next(PopoverEvent.ROUTE_CHANGE);\n      });\n\n    if (this.positionOnScroll) {\n      this.triggerScrollEvent();\n    }\n  }\n\n  ngAfterViewChecked(): void {\n    this.positionPopover();\n  }\n\n  ngOnDestroy(): void {\n    if (this.resizeSub) {\n      this.resizeSub.unsubscribe();\n    }\n\n    if (this.routeChangeSub) {\n      this.routeChangeSub.unsubscribe();\n    }\n\n    if (this.scrollEventUnlistener) {\n      this.scrollEventUnlistener();\n    }\n  }\n\n  constructor(\n    protected positioningService: PositioningService,\n    protected winRef: WindowRef,\n    protected changeDetectionRef: ChangeDetectorRef,\n    protected renderer: Renderer2,\n    protected router: Router\n  ) {}\n}\n","<div class=\"arrow\"></div>\n<div class=\"popover-body\" [cxFocus]=\"focusConfig\">\n  <div class=\"cx-close-row\">\n    <button\n      *ngIf=\"displayCloseButton\"\n      type=\"button\"\n      class=\"close\"\n      (keydown.enter)=\"close($event)\"\n      (keydown.space)=\"close($event)\"\n      (click)=\"close($event)\"\n    >\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n  <ng-container *ngIf=\"isTemplate\">\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n  </ng-container>\n  <span *ngIf=\"!isTemplate\">{{ content }}</span>\n</div>\n","import { ElementRef, Injectable } from '@angular/core';\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/keyboard-focus.model';\nimport { PopoverEvent } from './popover.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PopoverService {\n  /**\n   * For a11y improvements method returns different `FocusConfig`\n   * based on which event popover was triggered.\n   */\n  getFocusConfig(event: PopoverEvent, appendToBody: boolean): FocusConfig {\n    let config = {};\n\n    if (event === PopoverEvent.OPEN_BY_KEYBOARD && appendToBody) {\n      config = {\n        trap: true,\n        block: true,\n        focusOnEscape: false,\n        autofocus: true,\n      };\n    }\n\n    return config;\n  }\n\n  setFocusOnElement(\n    element: ElementRef,\n    focusConfig: FocusConfig,\n    appendToBody?: boolean\n  ) {\n    if (focusConfig && appendToBody) {\n      element.nativeElement.focus();\n    }\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  TemplateRef,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  ComponentRef,\n  Renderer2,\n  ChangeDetectorRef,\n  Output,\n  EventEmitter,\n  HostListener,\n  OnInit,\n} from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Subject } from 'rxjs';\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/keyboard-focus.model';\nimport { PopoverComponent } from './popover.component';\nimport { PopoverEvent, PopoverOptions } from './popover.model';\nimport { PopoverService } from './popover.service';\n\n/**\n * Directive to bind popover with any DOM element.\n */\n@Directive({\n  selector: '[cxPopover]',\n})\nexport class PopoverDirective implements OnInit {\n  /**\n   * Template or string to be rendered inside popover wrapper component.\n   */\n  @Input() cxPopover: string | TemplateRef<any>;\n\n  /**\n   * Options set for popover component.\n   */\n  @Input() cxPopoverOptions?: PopoverOptions;\n\n  /**\n   * An event emitted when the popover is opened.\n   */\n  @Output() openPopover: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * An event emitted when the popover is closed.\n   */\n  @Output() closePopover: EventEmitter<void> = new EventEmitter();\n\n  /**\n   * Flag used to inform about current state of popover component.\n   * Popover is closed by default, so value is set to false.\n   */\n  isOpen: boolean;\n\n  /**\n   * Popover component instance.\n   */\n  popoverContainer: ComponentRef<PopoverComponent>;\n\n  /**\n   * Configuration for a11y improvements.\n   */\n  focusConfig: FocusConfig;\n\n  /**\n   * Subject which emits specific type of `PopoverEvent`.\n   */\n  eventSubject: Subject<PopoverEvent> = new Subject<PopoverEvent>();\n\n  /**\n   * Listen events fired on element binded to popover directive.\n   *\n   * Based on event type some a11y improvements can be made.\n   * For example if popover was opened by `space` or `enter` key\n   * dedicated `FocusConfig` can be set to autofocus first\n   * focusable element in popover container.\n   */\n  @HostListener('keydown.enter', ['$event'])\n  @HostListener('keydown.space', ['$event'])\n  handlePress(event: KeyboardEvent): void {\n    event?.preventDefault();\n    if (event?.target === this.element.nativeElement && !this.isOpen) {\n      this.eventSubject.next(PopoverEvent.OPEN_BY_KEYBOARD);\n    } else if (this.isOpen) {\n      this.eventSubject.next(PopoverEvent.CLOSE_BUTTON_KEYDOWN);\n    }\n  }\n\n  @HostListener('keydown.tab')\n  @HostListener('keydown.shift.tab')\n  handleTab(): void {\n    if (!this.focusConfig?.trap && this.isOpen) {\n      this.eventSubject.next(PopoverEvent.CLOSE_BUTTON_KEYDOWN);\n    }\n  }\n\n  @HostListener('keydown.escape')\n  handleEscape(): void {\n    this.eventSubject.next(PopoverEvent.ESCAPE_KEYDOWN);\n  }\n\n  @HostListener('click', ['$event'])\n  handleClick(event: MouseEvent): void {\n    event?.preventDefault();\n    if (event?.target === this.element.nativeElement && !this.isOpen) {\n      this.eventSubject.next(PopoverEvent.OPEN);\n    } else if (this.isOpen) {\n      this.eventSubject.next(PopoverEvent.CLOSE_BUTTON_CLICK);\n    }\n  }\n\n  protected openTriggerEvents: PopoverEvent[] = [\n    PopoverEvent.OPEN,\n    PopoverEvent.OPEN_BY_KEYBOARD,\n  ];\n\n  protected focusPopoverTriggerEvents: PopoverEvent[] = [\n    PopoverEvent.OPEN_BY_KEYBOARD,\n  ];\n\n  protected closeTriggerEvents: PopoverEvent[] = [\n    PopoverEvent.ROUTE_CHANGE,\n    PopoverEvent.ESCAPE_KEYDOWN,\n    PopoverEvent.OUTSIDE_CLICK,\n    PopoverEvent.CLOSE_BUTTON_KEYDOWN,\n    PopoverEvent.CLOSE_BUTTON_CLICK,\n  ];\n\n  protected focusDirectiveTriggerEvents: PopoverEvent[] = [\n    PopoverEvent.ESCAPE_KEYDOWN,\n    PopoverEvent.CLOSE_BUTTON_KEYDOWN,\n  ];\n\n  /**\n   * Method performs open action for popover component.\n   */\n  open(event: PopoverEvent) {\n    if (!this.cxPopoverOptions?.disable) {\n      this.isOpen = true;\n      this.focusConfig = this.popoverService.getFocusConfig(\n        event,\n        this.cxPopoverOptions?.appendToBody || false\n      );\n      this.renderPopover();\n      this.openPopover.emit();\n    }\n  }\n\n  /**\n   * Method performs close action for popover component.\n   */\n  close() {\n    this.isOpen = false;\n    this.viewContainer.clear();\n    this.closePopover.emit();\n  }\n\n  /**\n   * Method subscribes for events emitted by popover component\n   * and based on event performs specific action.\n   */\n  handlePopoverEvents() {\n    this.eventSubject.subscribe((event: PopoverEvent) => {\n      if (this.openTriggerEvents.includes(event)) {\n        this.open(event);\n      }\n      if (this.focusPopoverTriggerEvents.includes(event)) {\n        this.popoverContainer.location.nativeElement.focus();\n      }\n      if (this.closeTriggerEvents.includes(event)) {\n        this.close();\n      }\n      if (this.focusDirectiveTriggerEvents.includes(event)) {\n        this.popoverService.setFocusOnElement(\n          this.element,\n          this.focusConfig,\n          this.cxPopoverOptions?.appendToBody\n        );\n      }\n    });\n  }\n\n  /**\n   * Method creates instance and pass parameters to popover component.\n   */\n  renderPopover() {\n    const containerFactory =\n      this.componentFactoryResolver.resolveComponentFactory(PopoverComponent);\n    this.popoverContainer =\n      this.viewContainer.createComponent(containerFactory);\n\n    const componentInstance = this.popoverContainer.instance;\n    if (componentInstance) {\n      componentInstance.content = this.cxPopover;\n      componentInstance.triggerElement = this.element;\n      componentInstance.popoverInstance = this.popoverContainer;\n      componentInstance.focusConfig = this.focusConfig;\n      componentInstance.eventSubject = this.eventSubject;\n      componentInstance.position = this.cxPopoverOptions?.placement;\n      componentInstance.customClass = this.cxPopoverOptions?.class;\n      componentInstance.appendToBody = this.cxPopoverOptions?.appendToBody;\n      componentInstance.positionOnScroll =\n        this.cxPopoverOptions?.positionOnScroll;\n      componentInstance.displayCloseButton =\n        this.cxPopoverOptions?.displayCloseButton;\n      componentInstance.autoPositioning =\n        this.cxPopoverOptions?.autoPositioning;\n\n      if (this.cxPopoverOptions?.appendToBody) {\n        this.renderer.appendChild(\n          this.winRef.document.body,\n          this.popoverContainer.location.nativeElement\n        );\n      }\n\n      this.popoverContainer.changeDetectorRef.detectChanges();\n    }\n  }\n\n  ngOnInit() {\n    this.handlePopoverEvents();\n  }\n\n  constructor(\n    protected element: ElementRef,\n    protected viewContainer: ViewContainerRef,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected renderer: Renderer2,\n    protected changeDetectorRef: ChangeDetectorRef,\n    protected popoverService: PopoverService,\n    protected winRef: WindowRef\n  ) {}\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\nconst defaultLimit = 20;\n\n@Pipe({\n  name: 'cxTruncate',\n})\nexport class TruncatePipe implements PipeTransform {\n  /**\n   * example usage {{ exampleString | cxTruncate: [1, ''] }}\n   */\n  transform(value: string, args?: [number, string?]): string {\n    if (!args) {\n      return value;\n    }\n\n    let trail = '...';\n\n    const limit =\n      args.length > 0 && args[0] && Number.isInteger(+args[0])\n        ? args[0]\n        : defaultLimit;\n\n    if (args.length > 1 && args[1] !== undefined) {\n      trail = args[1];\n    }\n\n    return value.length > limit ? value.substring(0, limit) + trail : value;\n  }\n}\n","import { Component, ChangeDetectionStrategy, Input } from '@angular/core';\n\n@Component({\n  selector: 'cx-truncate-text-popover',\n  templateUrl: './truncate-text-popover.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TruncateTextPopoverComponent {\n  /**\n   * String to be rendered inside popover wrapper component.\n   */\n  @Input() content: string;\n\n  /**\n   * The maximum length of the characters after which the text will be truncated\n   */\n  @Input() charactersLimit: number = 100;\n\n  get isTruncated(): boolean {\n    return this.content.length > +this.charactersLimit;\n  }\n}\n","<ng-container>\n  <ng-container>\n    <span class=\"truncated-text\">\n      {{ content | cxTruncate: [charactersLimit] }}\n    </span>\n  </ng-container>\n\n  <ng-template #fullText>\n    {{ content }}\n  </ng-template>\n\n  <button\n    *ngIf=\"isTruncated\"\n    [cxPopover]=\"fullText\"\n    [cxPopoverOptions]=\"{\n      placement: 'auto',\n      appendToBody: true,\n      displayCloseButton: true\n    }\"\n    class=\"ml-1 link cx-action-link\"\n  >\n    {{ 'common.more' | cxTranslate }}\n  </button>\n</ng-container>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n\nexport interface CardAction {\n  event: string;\n  name: string;\n}\n\nexport interface CardLinkAction {\n  link: string;\n  name: string;\n}\n\nexport interface Card {\n  header?: string;\n  title?: string;\n  textBold?: string;\n  text?: Array<string>;\n  paragraphs?: Array<{ title?: string; text?: Array<string> }>;\n  img?: string;\n  actions?: Array<CardAction | CardLinkAction>;\n  deleteMsg?: string;\n}\n\n@Component({\n  selector: 'cx-card',\n  templateUrl: './card.component.html',\n})\nexport class CardComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  @Output()\n  deleteCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  setDefaultCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  sendCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  editCard: EventEmitter<number> = new EventEmitter();\n  @Output()\n  cancelCard: EventEmitter<number> = new EventEmitter();\n\n  @Input()\n  border = false;\n\n  @Input()\n  editMode = false;\n\n  @Input()\n  isDefault = false;\n\n  @Input()\n  content: Card;\n\n  @Input()\n  fitToContainer = false;\n\n  @Input()\n  truncateText = false;\n\n  @Input()\n  charactersLimit = 100;\n\n  // ACTIONS\n\n  setEditMode(): void {\n    this.editMode = true;\n  }\n\n  cancelEdit(): void {\n    this.editMode = false;\n    this.cancelCard.emit(5);\n  }\n\n  delete(): void {\n    this.deleteCard.emit(1);\n  }\n\n  setDefault(): void {\n    this.isDefault = true;\n    this.setDefaultCard.emit(2);\n  }\n\n  send(): void {\n    this.sendCard.emit(3);\n  }\n\n  edit(): void {\n    this.editCard.emit(4);\n  }\n\n  constructor() {}\n\n  ngOnInit() {}\n}\n","<div\n  *ngIf=\"content\"\n  class=\"cx-card\"\n  [class.cx-card-border]=\"border\"\n  [class.cx-card-fit-to-container]=\"fitToContainer\"\n>\n  <!-- Card Header -->\n  <div *ngIf=\"content.header && !editMode\" class=\"card-header\">\n    {{ content.header }}\n  </div>\n  <!-- Card Body -->\n  <div class=\"card-body cx-card-body\" [class.cx-card-delete]=\"editMode\">\n    <!-- Edit message -->\n    <div *ngIf=\"editMode\" class=\"cx-card-delete-msg\">\n      {{ content.deleteMsg }}\n    </div>\n    <!-- Card title -->\n    <h3 *ngIf=\"content.title\" class=\"cx-card-title\">\n      {{ content.title }}\n    </h3>\n    <!-- Card Content -->\n    <div class=\"cx-card-container\">\n      <!-- Card Label -->\n      <div class=\"cx-card-label-container\">\n        <div *ngIf=\"content.textBold\" class=\"cx-card-label-bold\">\n          {{ content.textBold }}\n        </div>\n        <div *ngFor=\"let line of content.text\">\n          <div *ngIf=\"!truncateText; else truncate\" class=\"cx-card-label\">\n            {{ line }}\n          </div>\n\n          <ng-template #truncate>\n            <cx-truncate-text-popover\n              [charactersLimit]=\"charactersLimit\"\n              [content]=\"line\"\n            ></cx-truncate-text-popover>\n          </ng-template>\n        </div>\n        <div class=\"cx-card-paragraph\" *ngFor=\"let item of content.paragraphs\">\n          <div class=\"cx-card-paragraph-title\">{{ item.title }}</div>\n          <div *ngFor=\"let text of item.text\">\n            <div class=\"cx-card-paragraph-text\">\n              {{ text }}\n            </div>\n          </div>\n        </div>\n      </div>\n      <!-- Image -->\n      <div *ngIf=\"content.img\" class=\"cx-card-img-container\">\n        <cx-icon [type]=\"content.img\"></cx-icon>\n      </div>\n    </div>\n    <!-- Edit Mode Actions -->\n    <div *ngIf=\"editMode\" class=\"row cx-card-body-delete\">\n      <div class=\"col-md-6\">\n        <button class=\"btn btn-block btn-secondary\" (click)=\"cancelEdit()\">\n          {{ 'common.cancel' | cxTranslate }}\n        </button>\n      </div>\n      <div class=\"col-md-6\">\n        <button class=\"btn btn-block btn-primary\" (click)=\"delete()\">\n          {{ 'common.delete' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n    <!-- Actions -->\n    <div *ngIf=\"content.actions && !editMode\" class=\"cx-card-actions\">\n      <div *ngFor=\"let action of content.actions\">\n        <div [ngSwitch]=\"action.event\">\n          <a\n            *ngSwitchCase=\"'delete'\"\n            class=\"cx-card-link card-link btn-link cx-action-link\"\n            (click)=\"delete()\"\n            (keydown.enter)=\"delete()\"\n            tabindex=\"0\"\n            >{{ action.name }}</a\n          >\n          <a\n            *ngSwitchCase=\"'default'\"\n            class=\"cx-card-link card-link btn-link cx-action-link\"\n            (click)=\"setDefault()\"\n            (keydown.enter)=\"setDefault()\"\n            tabindex=\"0\"\n            >{{ action.name }}</a\n          >\n          <a\n            *ngSwitchCase=\"'send'\"\n            class=\"cx-card-link card-link btn-link cx-action-link\"\n            (click)=\"send()\"\n            (keydown.enter)=\"send()\"\n            tabindex=\"0\"\n            >{{ action.name }}</a\n          >\n          <a\n            *ngSwitchCase=\"'edit'\"\n            class=\"cx-card-link card-link btn-link cx-action-link\"\n            (click)=\"edit()\"\n            (keydown.enter)=\"edit()\"\n            tabindex=\"0\"\n            >{{ action.name }}</a\n          >\n          <a\n            *ngSwitchDefault\n            href=\"{{ action.link }}\"\n            class=\"card-link btn-link cx-action-link\"\n            tabindex=\"0\"\n            >{{ action.name }}</a\n          >\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { PopoverComponent } from './popover.component';\nimport { PopoverDirective } from './popover.directive';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, KeyboardFocusModule, IconModule],\n  declarations: [PopoverDirective, PopoverComponent],\n  exports: [PopoverDirective, PopoverComponent],\n})\nexport class PopoverModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { PopoverModule } from '../popover/popover.module';\nimport { TruncateTextPopoverComponent } from './truncate-text-popover.component';\nimport { TruncatePipe } from './truncate.pipe';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, PopoverModule],\n  declarations: [TruncateTextPopoverComponent, TruncatePipe],\n  exports: [TruncateTextPopoverComponent, TruncatePipe],\n})\nexport class TruncateTextPopoverModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { TruncateTextPopoverModule } from '../truncate-text-popover/truncate-text-popover.module';\nimport { CardComponent } from './card.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule, TruncateTextPopoverModule],\n  declarations: [CardComponent],\n  exports: [CardComponent],\n})\nexport class CardModule {}\n","import { Injectable } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CarouselService {\n  constructor(private winRef: WindowRef) {}\n\n  /**\n   * The number of items per slide is calculated by the help of\n   * the item width and the available width of the host element.\n   * This appoach makes it possible to place the carousel in different\n   * layouts. Instead of using the page breakpoints, the host size is\n   * taken into account.\n   *\n   * Since there's no element resize API available, we use the\n   * window `resize` event, so that we can adjust the number of items\n   * whenever the window got resized.\n   */\n  getItemsPerSlide(\n    nativeElement: HTMLElement,\n    itemWidth: string\n  ): Observable<number> {\n    return this.winRef.resize$.pipe(\n      map(() => (nativeElement as HTMLElement).clientWidth),\n      map((totalWidth) => this.calculateItems(totalWidth, itemWidth))\n    );\n  }\n\n  /**\n   * Calculates the number of items per given hostSize.  calculated based on the given\n   * intended size in pixels or percentages. The\n   *\n   * @param availableWidth The available width in pixels for the carousel items.\n   * @param itemWidth The width per carousel item, in px or percentage.\n   */\n  private calculateItems(availableWidth: number, itemWidth: string) {\n    let calculatedItems = 0;\n    if (itemWidth.endsWith('px')) {\n      const num = itemWidth.substring(0, itemWidth.length - 2);\n      calculatedItems = availableWidth / <number>(<any>num);\n    }\n\n    if (itemWidth.endsWith('%')) {\n      const perc = itemWidth.substring(0, itemWidth.length - 1);\n      calculatedItems =\n        availableWidth / (availableWidth * (<number>(<any>perc) / 100));\n    }\n\n    return Math.floor(calculatedItems) || 1;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  Input,\n  isDevMode,\n  OnInit,\n  TemplateRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\nimport { CarouselService } from './carousel.service';\n\n/**\n * Generic carousel component that can be used to render any carousel items,\n * such as products, images, banners, or any component. Carousel items are\n * rendered in so-called carousel slides, and the previous/next buttons as well as\n * the indicator-buttons can used to navigate the slides.\n *\n * The component uses an array of Observables (`items$`) as an input, to allow\n * for lazy loading of items.\n *\n * The number of items per slide is calculated with the `itemWidth`, which can given\n * in pixels or percentage.\n *\n * To allow for flexible rendering of items, the rendering is delegated to the\n * given `template`. This allows for maximum flexibility.\n */\n@Component({\n  selector: 'cx-carousel',\n  templateUrl: './carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CarouselComponent implements OnInit {\n  /**\n   * The title is rendered as the carousel heading.\n   */\n  @Input() title: string;\n\n  /**\n   * The items$ represent the carousel items. The items$ are\n   * observables so that the items can be loaded on demand.\n   */\n  items: Observable<any>[];\n  @Input('items')\n  set setItems(inputItems: Observable<any>[]) {\n    this.items = inputItems;\n    //Reset slider when changing products\n    this.activeSlide = 0;\n  }\n\n  /**\n   * The template is rendered for each item, so that the actual\n   * view can be given by the compoent that uses the `CarouselComponent`.\n   */\n  @Input() template: TemplateRef<any>;\n\n  /**\n   * Specifies the minimum size of the carousel item, either in px or %.\n   * This value is used for the calculation of numbers per carousel, so that\n   * the number of carousel items is dynamic. The calculation uses the `itemWidth`\n   * and the host element `clientWidth`, so that the carousel is reusable in\n   * different layouts (for example in a 50% grid).\n   */\n  @Input() itemWidth = '300px';\n\n  /**\n   * Indicates whether the visual indicators are used.\n   */\n  @Input() hideIndicators = false;\n\n  @Input() indicatorIcon = ICON_TYPE.CIRCLE;\n  @Input() previousIcon = ICON_TYPE.CARET_LEFT;\n  @Input() nextIcon = ICON_TYPE.CARET_RIGHT;\n\n  activeSlide: number;\n  size$: Observable<number>;\n\n  constructor(protected el: ElementRef, protected service: CarouselService) {}\n\n  ngOnInit() {\n    if (!this.template && isDevMode()) {\n      console.error(\n        'No template reference provided to render the carousel items for the `cx-carousel`'\n      );\n      return;\n    }\n    this.size$ = this.service\n      .getItemsPerSlide(this.el.nativeElement, this.itemWidth)\n      .pipe(tap(() => (this.activeSlide = 0)));\n  }\n\n  getSlideNumber(size: number, currentIndex: number): number {\n    let normalizedCurrentIndex = currentIndex + 1;\n    return Math.ceil(normalizedCurrentIndex / size);\n  }\n}\n","<ng-container *ngIf=\"items?.length > 0 && (size$ | async) as size\">\n  <h2 *ngIf=\"title\">{{ title }}</h2>\n\n  <div class=\"carousel-panel\" [ngClass]=\"'size-' + size\">\n    <button\n      *ngIf=\"size < items.length\"\n      class=\"previous\"\n      (click)=\"activeSlide = activeSlide - size\"\n      [disabled]=\"activeSlide === 0\"\n      [attr.aria-label]=\"'carousel.previousSlide' | cxTranslate\"\n    >\n      <cx-icon [type]=\"previousIcon\"></cx-icon>\n    </button>\n\n    <div class=\"slides\">\n      <ng-container *ngFor=\"let _ of items; let i = index\">\n        <div\n          class=\"slide\"\n          *ngIf=\"i % size === 0\"\n          [class.active]=\"i === activeSlide\"\n        >\n          <ng-container\n            *ngFor=\"let item of items | slice: i:i + size; let j = index\"\n          >\n            <div\n              *ngIf=\"item | async as data\"\n              class=\"item\"\n              [class.active]=\"i === activeSlide\"\n            >\n              <ng-container\n                *ngTemplateOutlet=\"template; context: { item: data }\"\n              ></ng-container>\n            </div>\n          </ng-container>\n        </div>\n      </ng-container>\n    </div>\n\n    <button\n      *ngIf=\"size < items.length\"\n      class=\"next\"\n      (click)=\"activeSlide = activeSlide + size\"\n      tabindex=\"-1\"\n      [disabled]=\"activeSlide > items.length - size - 1\"\n      [attr.aria-label]=\"'carousel.nextSlide' | cxTranslate\"\n    >\n      <cx-icon [type]=\"nextIcon\"></cx-icon>\n    </button>\n  </div>\n\n  <div *ngIf=\"!hideIndicators && size < items.length\" class=\"indicators\">\n    <ng-container *ngFor=\"let _ of items; let i = index\">\n      <button\n        *ngIf=\"i % size === 0\"\n        (focus)=\"activeSlide = i\"\n        [disabled]=\"i === activeSlide\"\n        [attr.aria-label]=\"\n          'carousel.slideNumber'\n            | cxTranslate: { currentSlideNumber: getSlideNumber(size, i) }\n        \"\n        tabindex=\"-1\"\n      >\n        <cx-icon [type]=\"indicatorIcon\" aria-hidden=\"true\"></cx-icon>\n      </button>\n    </ng-container>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { MediaComponent } from './media.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [MediaComponent],\n  exports: [MediaComponent],\n})\nexport class MediaModule {\n  static forRoot(): ModuleWithProviders<MediaModule> {\n    return {\n      ngModule: MediaModule,\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/index';\nimport { MediaModule } from '../media/media.module';\nimport { CarouselComponent } from './carousel.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    IconModule,\n    MediaModule,\n    UrlModule,\n    I18nModule,\n  ],\n  declarations: [CarouselComponent],\n  exports: [CarouselComponent],\n})\nexport class CarouselModule {}\n","import { Injectable } from '@angular/core';\n\n/**\n * Service that provides the placeholder and input pattern for date pickers. This is\n * used in Spartacus to support browser that won't support the native html5 date picker\n * using `<input type=\"date\">`.\n *\n * While the placeholder is configurable, you should be aware that the placeholder format\n * defaults to `yyyy-mm-dd` to align with Safaris limited support of ISO 8601.\n * Another consideration is the support of date formats in the backend. In case you change\n * this format, you might need to serialize the date to the supported date format in the\n * backend.\n *\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DatePickerService {\n  get placeholder(): string {\n    return 'yyyy-mm-dd';\n  }\n\n  /**\n   * The default date pattern is based on the placeholder string;\n   */\n  get pattern(): string {\n    return this.placeholder\n      .replace('yyyy', '\\\\d{4}')\n      .replace('mm', '\\\\d{1,2}')\n      .replace('dd', '\\\\d{1,2}');\n  }\n\n  /**\n   * Validates if the string based date value is a valid date.\n   */\n  isValidFormat(date: string, pattern?: string): boolean {\n    const patternRegex = new RegExp(`^${pattern ?? this.pattern}$`);\n    return patternRegex.test(date);\n  }\n\n  /**\n   * Since Safari doesn't support proper date formats (ISO 8601), we need to do this\n   * ourselves. We cannot rely on `new Date('2020-1-1')`. This will fail, only\n   * `new Date('2020-01-01')` works.\n   */\n  getDate(value: string): Date {\n    if (!value) {\n      return;\n    }\n\n    const delimiter = this.placeholder\n      .replace('yyyy', '')\n      .replace('mm', '')\n      .replace('dd', '')\n      .substr(0, 1);\n\n    const dateParts = value.split(delimiter);\n\n    const placeholderParts = this.placeholder.split(delimiter);\n\n    const y = placeholderParts.indexOf('yyyy');\n    const m = placeholderParts.indexOf('mm');\n    const d = placeholderParts.indexOf('dd');\n\n    return new Date(\n      Number(dateParts[y]),\n      Number(dateParts[m]) - 1,\n      Number(dateParts[d])\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { isObject } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n/**\n * Renders translated form errors for a given form control, based on its `errors` property.\n *\n * The translation key consists of the optional input `prefix`\n * concatenated with the error key.\n *\n * And the translation params object consist of the error details\n * (if only it's an object) merged with the optional input object `translationParams`.\n */\n@Component({\n  selector: 'cx-form-errors',\n  templateUrl: './form-errors.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormErrorsComponent {\n  _control: FormControl;\n\n  /**\n   * @deprecated since 4.1 - use `errorsDetails$` instead, which contains not only\n   *                         the error key, but also the error details\n   */\n  errors$: Observable<string[]>;\n\n  /**\n   * Emits an array of errors, each represented by a tuple:\n   * the error key and error details.\n   */\n  errorsDetails$: Observable<Array<[string, string]>>;\n\n  /**\n   * Prefix prepended to the translation key.\n   */\n  @Input() prefix = 'formErrors';\n\n  /**\n   * Translation params to enrich the error details object.\n   */\n  @Input()\n  translationParams: { [key: string]: string };\n\n  @Input()\n  set control(control: FormControl) {\n    this._control = control;\n\n    this.errorsDetails$ = control?.statusChanges.pipe(\n      startWith({}),\n      map(() => control.errors || {}),\n      map((errors) =>\n        Object.entries(errors).filter(([_key, details]) => details)\n      )\n    );\n\n    this.errors$ = this.errorsDetails$.pipe(\n      map((errors) => errors.map(([key, _details]) => key))\n    );\n  }\n\n  get control(): FormControl {\n    return this._control;\n  }\n\n  /**\n   * Returns translation params composed of\n   * the argument `errorDetails` (if only is an object) merged with\n   * the component input object `translationParams`.\n   *\n   * In case of a conflicting object key, the value from\n   * `translationParams` takes precedence.\n   */\n  getTranslationParams(errorDetails?: any): object {\n    errorDetails = isObject(errorDetails) ? errorDetails : {};\n    return { ...errorDetails, ...this.translationParams };\n  }\n\n  @HostBinding('class.control-invalid') get invalid() {\n    return this.control?.invalid;\n  }\n  @HostBinding('class.control-dirty') get dirty() {\n    return this.control?.dirty;\n  }\n  @HostBinding('class.control-touched') get touched() {\n    return this.control?.touched;\n  }\n}\n","<p *ngFor=\"let error of errorsDetails$ | async\">\n  {{ prefix + '.' + error[0] | cxTranslate: getTranslationParams(error[1]) }}\n</p>\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { DatePickerService } from './date-picker.service';\n\n/**\n * Component that adds a date control. While the native date picker works in most\n * modern browsers, some browsers need more guidance (placeholder), validation and\n * date conversion.\n *\n * The data picker supports (optional) min and max form controls, so that you can\n * limit the start and/or end date.\n *\n * Most of the implementation is done in the `DatePickerFallbackDirective`.\n */\n@Component({\n  selector: 'cx-date-picker',\n  templateUrl: './date-picker.component.html',\n  // we cannot use onPush change detection as the form state isn't updated without explicit\n  // change detection, see https://github.com/angular/angular/issues/10816\n})\nexport class DatePickerComponent {\n  constructor(protected service: DatePickerService) {}\n  @Input() control: FormControl;\n  @Input() min?: string;\n  @Input() max?: string;\n\n  @Output() update: EventEmitter<void> = new EventEmitter();\n\n  change() {\n    this.update.emit();\n  }\n\n  get placeholder() {\n    return this.service.placeholder;\n  }\n\n  get pattern() {\n    return this.service.pattern;\n  }\n\n  /**\n   * Only returns the date if we have a valid format. We do this to avoid\n   * loads of console errors coming from the datePipe while the user is typing\n   * (in those browsers where the date picker isn't supported).\n   */\n\n  getDate(date: string): string {\n    return this.service.isValidFormat(date) ? date : null;\n  }\n}\n","<input\n  class=\"form-control\"\n  type=\"date\"\n  [formControl]=\"control\"\n  [attr.min]=\"min\"\n  [attr.max]=\"max\"\n  (change)=\"change()\"\n  [placeholder]=\"placeholder\"\n  [pattern]=\"pattern\"\n/>\n<cx-form-errors\n  aria-live=\"assertive\"\n  aria-atomic=\"true\"\n  [control]=\"control\"\n  prefix=\"formErrors.date\"\n  [translationParams]=\"{\n    max: getDate(max) | cxDate,\n    min: getDate(min) | cxDate\n  }\"\n></cx-form-errors>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormErrorsComponent } from './form-errors.component';\nimport { I18nModule } from '@spartacus/core';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [FormErrorsComponent],\n  exports: [FormErrorsComponent],\n})\nexport class FormErrorsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { FormErrorsModule } from '../form-errors/form-errors.module';\nimport { DatePickerComponent } from './date-picker.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, FormErrorsModule, I18nModule],\n  declarations: [DatePickerComponent],\n  exports: [DatePickerComponent],\n})\nexport class DatePickerModule {}\n","import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  Output,\n  ViewChild,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/**\n * Component that adds a file upload control.\n */\n@Component({\n  selector: 'cx-file-upload',\n  templateUrl: './file-upload.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => FileUploadComponent),\n      multi: true,\n    },\n  ],\n  // we cannot use onPush change detection as the form state isn't updated without explicit\n  // change detection, see https://github.com/angular/angular/issues/10816\n})\nexport class FileUploadComponent implements ControlValueAccessor {\n  /**\n   * Allowed file types. It's setting attribute used for OS window for choosing files.\n   */\n  @Input() accept?: string | string[] = '*';\n  /**\n   * Allows selecting multiple files.\n   */\n  @Input() multiple?: boolean = false;\n\n  // TODO: remove this event. Now it's used only to trigger some logic in the parent component.\n  // Prerequisites (changes in the parent component):\n  // - use an async validator that \"opens file\" using the value of the form control\n  // - \"open file\" on form submit, but not on the form control change\n  @Output()\n  update = new EventEmitter<FileList | null>();\n\n  @ViewChild('fileInput', { static: true })\n  protected fileInput: ElementRef<HTMLInputElement>;\n\n  selectFile($event: Event) {\n    const files = ($event.target as HTMLInputElement)?.files;\n    this.onChangeCallback(files);\n    this.update.emit(files);\n  }\n\n  get selectedFiles(): File[] | undefined {\n    return Array.from(this.fileInput.nativeElement.files);\n  }\n\n  // ControlValueAccessor START\n  protected onChangeCallback: Function = () => {};\n  protected onTouchedCallback: Function = () => {};\n  registerOnChange(callback: Function): void {\n    this.onChangeCallback = callback;\n  }\n  registerOnTouched(callback: Function): void {\n    this.onTouchedCallback = callback;\n  }\n  setDisabledState(disabled: boolean): void {\n    this.fileInput.nativeElement.disabled = disabled;\n  }\n  writeValue(value: any): void {\n    if (value instanceof FileList) {\n      this.fileInput.nativeElement.files = value;\n    }\n  }\n  // ControlValueAccessor END\n}\n","<input\n  type=\"file\"\n  aria-hidden=\"true\"\n  [accept]=\"accept\"\n  [multiple]=\"multiple\"\n  (change)=\"selectFile($event)\"\n  #fileInput\n/>\n<button\n  [attr.aria-label]=\"'common.selectFile' | cxTranslate\"\n  class=\"btn btn-action\"\n  type=\"button\"\n  (click)=\"fileInput.click()\"\n>\n  <ng-content></ng-content>\n</button>\n<p *ngFor=\"let file of selectedFiles\">\n  {{ file?.name }}\n</p>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { FormErrorsModule } from '../form-errors/form-errors.module';\nimport { FileUploadComponent } from './file-upload.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, FormErrorsModule, I18nModule],\n  declarations: [FileUploadComponent],\n  exports: [FileUploadComponent],\n})\nexport class FileUploadModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class GenericLinkComponentService {\n  /**\n   * Pattern matching string starting with `http://` or `https://`.\n   */\n  protected HTTP_PROTOCOL_REGEX: RegExp = /^https?:\\/\\//i;\n\n  /**\n   * Pattern matching string starting with `mailto:`.\n   */\n  protected MAILTO_PROTOCOL_REGEX: RegExp = /^mailto:/i;\n\n  /**\n   * Pattern matching string starting with `tel:`.\n   */\n  protected TEL_PROTOCOL_REGEX: RegExp = /^tel:/i;\n\n  /**\n   * Returns true when the @Input `url` is a string starting with `http://`, `https://`, `mailto:`, `tel:`.\n   */\n  isExternalUrl(url: string | any[]): boolean {\n    return (\n      typeof url === 'string' &&\n      (this.HTTP_PROTOCOL_REGEX.test(url) ||\n        this.MAILTO_PROTOCOL_REGEX.test(url) ||\n        this.TEL_PROTOCOL_REGEX.test(url))\n    );\n  }\n}\n","import { Component, Input, OnChanges, SimpleChanges } from '@angular/core';\nimport { Params, Router } from '@angular/router';\nimport { GenericLinkComponentService } from './generic-link-component.service';\n\n// private\ninterface RouteParts {\n  /** Path in the Angular-like array format */\n  path?: string[];\n\n  /** Query params */\n  queryParams?: Params;\n\n  /** Hash fragment */\n  fragment?: string;\n}\n\n/**\n * This component navigates using [routerLink] attribute when input 'url' is a relative url. Otherwise (when it's absolute), [href] is used.\n */\n@Component({\n  selector: 'cx-generic-link',\n  templateUrl: './generic-link.component.html',\n})\nexport class GenericLinkComponent implements OnChanges {\n  /**\n   * Pattern matching string starting with `http://` or `https://`.\n   */\n  private readonly PROTOCOL_REGEX: RegExp = /^https?:\\/\\//i;\n\n  /**\n   * Pattern matching string starting with `mailto:`.\n   */\n  protected MAILTO_PROTOCOL_REGEX: RegExp = /^mailto:/i;\n\n  /**\n   * Pattern matching string starting with `tel:`.\n   */\n  protected TEL_PROTOCOL_REGEX: RegExp = /^tel:/i;\n\n  /**\n   * @deprecated since version 5.0\n   * Use the following constructor instead:\n   * ```\n   * constructor(\n   *   protected router: Router,\n   *   protected service?: GenericLinkComponentService\n   * )\n   * ```\n   */\n  constructor(router: Router);\n  constructor(\n    protected router: Router,\n    protected service?: GenericLinkComponentService\n  ) {}\n\n  /**\n   * Used to split url into 2 parts:\n   * 1. the path\n   * 2. query params + hash fragment\n   */\n  private readonly URL_SPLIT = /(^[^#?]*)(.*)/;\n\n  /**\n   * Parsed parts of the @Input `url`, when it's a local URL.\n   * It should not be used when the `url` is external.\n   * @see `url`\n   */\n  private routeParts: RouteParts = {};\n\n  @Input() url: string | any[];\n  @Input() target: string | null;\n  @Input() id: string;\n  @Input() class: string;\n  @Input() style: string;\n  @Input() title: string;\n\n  isExternalUrl(): boolean {\n    return (\n      this.service?.isExternalUrl(this.url) ||\n      (typeof this.url === 'string' &&\n        (this.PROTOCOL_REGEX.test(this.url) ||\n          this.MAILTO_PROTOCOL_REGEX.test(this.url) ||\n          this.TEL_PROTOCOL_REGEX.test(this.url)))\n    );\n  }\n\n  get rel() {\n    return this.target === '_blank' ? 'noopener' : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['url']) {\n      this.setUrlParts(changes['url'].currentValue);\n    }\n  }\n\n  /**\n   * The part with the path of the local url.\n   */\n  get routerUrl(): any[] {\n    return this.routeParts.path;\n  }\n\n  /**\n   * The part with the query params of the local url.\n   */\n  get queryParams(): Params {\n    return this.routeParts.queryParams;\n  }\n\n  /**\n   * The part with the hash fragment of the local url.\n   */\n  get fragment(): string {\n    return this.routeParts.fragment;\n  }\n\n  /**\n   * Parses the given url and sets the property `urlParts` accordingly.\n   */\n  private setUrlParts(url: string | any[]) {\n    if (typeof url === 'string') {\n      url = this.getAbsoluteUrl(url); // string links in CMS sometimes don't have the leading slash, so fix it here\n      this.routeParts = this.splitUrl(url as string);\n    } else {\n      this.routeParts = { path: url };\n    }\n  }\n\n  /**\n   * Parses the given string into 3 parts:\n   * - string path (wrapped in an array to be compatible with Angular syntax for the `routerLink`)\n   * - query params (as an object)\n   * - hash fragment (string)\n   */\n  private splitUrl(url: string = ''): RouteParts {\n    const { queryParams, fragment } = this.router.parseUrl(url);\n    const [, path] = url.match(this.URL_SPLIT);\n\n    // wrap path in an array, to have the Angular-like path format\n    return { path: [path], queryParams, fragment };\n  }\n\n  /**\n   * Prepends a leading slash to the given URL string, in case it doesn't have it.\n   */\n  private getAbsoluteUrl(url: string): string {\n    return url.startsWith('/') ? url : '/' + url;\n  }\n}\n","<!-- https://github.com/angular/angular/issues/24567 -->\n\n<ng-container *ngIf=\"isExternalUrl(); else isLocalUrl\">\n  <a\n    [href]=\"url\"\n    [attr.target]=\"target\"\n    [attr.rel]=\"rel\"\n    [attr.id]=\"id\"\n    [attr.class]=\"class\"\n    [attr.style]=\"style\"\n    [attr.title]=\"title\"\n  >\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n  </a>\n</ng-container>\n\n<ng-template #isLocalUrl>\n  <a\n    [routerLink]=\"routerUrl\"\n    [queryParams]=\"queryParams\"\n    [fragment]=\"fragment\"\n    [target]=\"target\"\n    [attr.id]=\"id\"\n    [attr.class]=\"class\"\n    [attr.style]=\"style\"\n    [attr.title]=\"title\"\n  >\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\n  </a>\n</ng-template>\n\n<ng-template #content>\n  <ng-content></ng-content>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GenericLinkComponent } from './generic-link.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  declarations: [GenericLinkComponent],\n  exports: [GenericLinkComponent],\n})\nexport class GenericLinkModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { I18nModule } from '@spartacus/core';\nimport { ItemCounterComponent } from './item-counter.component';\n\n@NgModule({\n  imports: [CommonModule, ReactiveFormsModule, I18nModule],\n  declarations: [ItemCounterComponent],\n  exports: [ItemCounterComponent],\n})\nexport class ItemCounterModule {}\n","import { PaginationConfig } from './pagination.config';\n\nexport const defaultPaginationConfig: PaginationConfig = {\n  pagination: {\n    addStart: true,\n    addEnd: true,\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { PaginationOptions } from '../pagination.model';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class PaginationConfig {\n  pagination?: PaginationOptions;\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends PaginationConfig {}\n}\n","/**\n * Represents a page item for a pagination system. This is used\n * to store the model of each page.\n */\nexport interface PaginationItem {\n  label?: string;\n  type?: PaginationItemType;\n  /** The number is used when the type is {@link PaginationItemType.PAGE} */\n  number?: number;\n}\n\n/**\n * The item type is used to add semantic structure to the\n * PaginationItem, so that the UI understands the usage.\n */\nexport enum PaginationItemType {\n  GAP = 'gap',\n  FIRST = 'first',\n  LAST = 'last',\n  PREVIOUS = 'previous',\n  NEXT = 'next',\n  START = 'start',\n  END = 'end',\n  PAGE = 'page',\n}\n\nexport interface PaginationOptions {\n  /**\n   * The range of direct accessible pages in the pagination.\n   *\n   * `« 4 (5) 6 »`\n   *\n   * Defaults to 3.\n   */\n  rangeCount?: number;\n\n  /** Adds a link to skip to the start of the pages, defaults to false. */\n  addStart?: boolean;\n  /** A link to skip to the end of the pages, defaults to false. */\n  addEnd?: boolean;\n  /** A link to the previous page, defaults to false. */\n  addPrevious?: boolean;\n  /** A link to the previous page, defaults to false. */\n  addNext?: boolean;\n\n  navigationPosition?: PaginationNavigationPosition;\n\n  /** A link to the first page can be added in case it is not included already, defaults to false. */\n  addFirst?: boolean;\n  /** A link to the last page can be added in case it is not included already, defaults to false. */\n  addLast?: boolean;\n\n  /**\n   * Adds a gap before and after the pages. to visualize hidden pages. Defaults to false.\n   *\n   * `1 ...  4 (5) 6 ... 18`\n   *\n   * Defaults to false.\n   */\n  addDots?: boolean;\n\n  /**\n   * If the page dots only represents a single page, we rather add the page\n   * as this would take the same amount of space. Some UX might want to use\n   * the dots for consistency reasons, which why this option is configurable.\n   *\n   * This typically happens on the 4th page (in case the range is 3):\n   * Instead of having:\n   *\n   *  `1 ...  3 (4) 5`\n   *\n   * we'd have\n   *\n   * `1 2 3 (4) 5`.\n   *\n   * Defaults to false.\n   */\n  substituteDotsForSingularPage?: boolean;\n\n  /** Custom label for the start link, defaults to `«`. */\n  startLabel?: string;\n  /** Custom label for the previous link, defaults to `‹`. */\n  previousLabel?: string;\n  /** Custom label for the next link, defaults to `›`. */\n  nextLabel?: string;\n  /** Custom label for the end link, defaults to `»`. */\n  endLabel?: string;\n  /** Custom label for the dots, defaults to `...`. */\n  dotsLabel?: string;\n}\n\nexport enum PaginationNavigationPosition {\n  ASIDE = 'aside',\n  BEFORE = 'before',\n  AFTER = 'after',\n}\n","import { Injectable } from '@angular/core';\nimport { PaginationConfig } from './config/pagination.config';\nimport {\n  PaginationItem,\n  PaginationItemType,\n  PaginationNavigationPosition,\n  PaginationOptions,\n} from './pagination.model';\n\nconst FALLBACK_PAGINATION_OPTIONS: PaginationOptions = {\n  rangeCount: 3,\n  dotsLabel: '...',\n  startLabel: '«',\n  previousLabel: '‹',\n  nextLabel: '›',\n  endLabel: '»',\n};\n\n/**\n * Builds a pagination structures based on a pageCount and current page number.\n * There are various {@link PaginationConfig} options which can be used to configure\n * the behavior of the build. Alternatively, CSS can be used to further customize\n * the pagination.\n *\n * Examples:\n * The full blown pagination items contain the follow elements:\n *\n * `« ‹ 1 ... 4 (5) 6 ... 9 › »`\n *\n * This includes pagination items to the following pages:\n * - start page\n * - previous page\n * - first page\n * - page range\n * - last page\n * - next page\n * - end page\n *\n * All of those links are configurable, including the size of the page range.\n * The current page will always be centered in the page range to provide direct access\n * to the previous and next page.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class PaginationBuilder {\n  constructor(protected paginationConfig: PaginationConfig) {}\n\n  /**\n   * Builds a list of `PaginationItem`. The give pageCount and current are used\n   * to build out the full pagination. There are various {@link PaginationConfig} options\n   * which can be used to configure the behavior of the build. Alternatively, CSS\n   * can be used to further specialize visibility of the pagination.\n   *\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   * @returns An array of `PaginationItem`\n   */\n  paginate(pageCount: number, current: number): PaginationItem[] {\n    const pages: PaginationItem[] = [];\n    if (!pageCount || pageCount < 2) {\n      return pages;\n    }\n    this.addPages(pages, pageCount, current);\n    this.addDots(pages, pageCount);\n    this.addFirstLast(pages, pageCount);\n    this.addNavigation(pages, pageCount, current);\n\n    return pages;\n  }\n\n  /**\n   * Returns the current page with surrounding pages (based on the `config.rangeCount`).\n   * The current page is always centered to provide direct access to the previous and next page.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   */\n  protected addPages(\n    pages: PaginationItem[],\n    pageCount: number,\n    current: number\n  ): void {\n    const start = this.getStartOfRange(pageCount, current);\n    const max = Math.min(this.config.rangeCount, pageCount);\n    Array.from(Array(max)).forEach((_, i) => {\n      pages.push({\n        number: i + start,\n        label: String(i + start + 1),\n        type: PaginationItemType.PAGE,\n      });\n    });\n  }\n\n  /**\n   * Adds dots before and after the given pages, if configured (defaults to true).\n   * If the dots only represent a single page, the page number is added instead of\n   * the dots, unless the configuration requires dots always.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   */\n  protected addDots(pages: PaginationItem[], pageCount: number): void {\n    if (!this.config.addDots) {\n      return;\n    }\n\n    const addFirstGap = () => {\n      const firstItemNumber = pages[0].number;\n      const gapNumber = this.config.addFirst ? 1 : 0;\n      if (firstItemNumber > gapNumber) {\n        const isGap =\n          !this.config.substituteDotsForSingularPage ||\n          firstItemNumber !== gapNumber + 1;\n        const isSubstituted =\n          this.config.addFirst &&\n          this.config.substituteDotsForSingularPage &&\n          gapNumber === 0;\n        const type = isGap\n          ? PaginationItemType.GAP\n          : isSubstituted\n          ? PaginationItemType.FIRST\n          : PaginationItemType.PAGE;\n        return [\n          Object.assign(\n            {\n              label: isGap ? this.config.dotsLabel : String(gapNumber + 1),\n              type,\n            },\n            isGap ? null : { number: gapNumber }\n          ),\n        ];\n      } else return [];\n    };\n\n    const addLastGap = () => {\n      const nextPageNumber = pages[pages.length - 1].number + 1;\n      const last = pageCount - (this.config.addLast ? 2 : 1);\n      if (nextPageNumber <= last) {\n        const isSubstituted =\n          this.config.addLast &&\n          this.config.substituteDotsForSingularPage &&\n          nextPageNumber === last;\n        const isGap =\n          nextPageNumber <\n          pageCount -\n            (this.config.substituteDotsForSingularPage ? 1 : 0) -\n            (this.config.addLast ? 1 : 0);\n\n        const type = isGap\n          ? PaginationItemType.GAP\n          : isSubstituted\n          ? PaginationItemType.LAST\n          : PaginationItemType.PAGE;\n        return [\n          Object.assign(\n            {\n              label: isGap ? this.config.dotsLabel : String(nextPageNumber + 1),\n              type,\n            },\n            isGap ? null : { number: nextPageNumber }\n          ),\n        ];\n      } else return [];\n    };\n\n    pages.unshift(...addFirstGap());\n    pages.push(...addLastGap());\n  }\n\n  /**\n   * Add links to the first and last page, if configured to do so.\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   *\n   */\n  protected addFirstLast(pages: PaginationItem[], pageCount: number) {\n    if (this.config.addFirst && pages[0].number !== 0) {\n      pages.unshift({\n        number: 0,\n        label: '1',\n        type: PaginationItemType.FIRST,\n      });\n    }\n    if (\n      this.config.addLast &&\n      pages[pages.length - 1].number !== pageCount - 1\n    ) {\n      pages.push({\n        number: pageCount - 1,\n        label: String(pageCount),\n        type: PaginationItemType.LAST,\n      });\n    }\n  }\n\n  /**\n   * Add links to the start, previous, next and last page, if configured to do so.\n   * The order of the links can be configured by using the {@link PaginationConfig},\n   * using the `PaginationNavigationPosition` (`BEFORE` or `AFTER`).\n   * The `PaginationNavigationPosition` allows for 3 flavours:\n   *\n   * - by default the pagination starts with start and previous and ends with the next and end links\n   * - BEFORE – all navigation links are added in the front of the pagination list\n   * - AFTER – all navigation links are pushed to the end of the pagination list\n   *\n   * @param pages The list of page items that is used to amend\n   * @param pageCount The total number of pages\n   * @param current The current page number, 0-index based\n   *\n   */\n  protected addNavigation(\n    pages: PaginationItem[],\n    pageCount: number,\n    current: number\n  ): void {\n    const before = this.getBeforeLinks(current);\n    const after = this.getAfterLinks(pageCount, current);\n    const pos = this.config.navigationPosition;\n    if (!pos || pos === PaginationNavigationPosition.ASIDE) {\n      pages.unshift(...before);\n      pages.push(...after);\n    } else {\n      if (pos === PaginationNavigationPosition.BEFORE) {\n        pages.unshift(...before, ...after);\n      }\n      if (pos === PaginationNavigationPosition.AFTER) {\n        pages.push(...before, ...after);\n      }\n    }\n  }\n\n  /**\n   * Returns the start and previous links, if applicable.\n   */\n  protected getBeforeLinks(current: number): PaginationItem[] {\n    const list = [];\n\n    if (this.config.addStart) {\n      const start = () => {\n        return Object.assign(\n          {\n            label: this.config.startLabel,\n            type: PaginationItemType.START,\n          },\n          current > 0 ? { number: 0 } : null\n        );\n      };\n      list.push(start());\n    }\n    if (this.config.addPrevious) {\n      const previous = () => {\n        return Object.assign(\n          {\n            label: this.config.previousLabel,\n            type: PaginationItemType.PREVIOUS,\n          },\n          current > 0 ? { number: current - 1 } : null\n        );\n      };\n      list.push(previous());\n    }\n    return list;\n  }\n\n  /**\n   * Returns the next and end links, if applicable.\n   */\n  protected getAfterLinks(\n    pageCount: number,\n    current: number\n  ): PaginationItem[] {\n    const list = [];\n\n    if (this.config.addNext) {\n      const next = () => {\n        return Object.assign(\n          {\n            label: this.config.nextLabel,\n            type: PaginationItemType.NEXT,\n          },\n          current < pageCount - 1 ? { number: current + 1 } : null\n        );\n      };\n      list.push(next());\n    }\n    if (this.config.addEnd) {\n      const end = () => {\n        return Object.assign(\n          {\n            label: this.config.endLabel,\n            type: PaginationItemType.END,\n          },\n          current < pageCount - 1 ? { number: pageCount - 1 } : null\n        );\n      };\n      list.push(end());\n    }\n\n    return list;\n  }\n  /**\n   * Resolves the first page of the range we need to build.\n   * This is the page that is leading up to the range of the\n   * current page.\n   *\n   * @param pageCount The total number of pages.\n   * @param current The current page number, 0-index based.\n   */\n  protected getStartOfRange(pageCount: number, current: number): number {\n    const count = this.config.rangeCount - 1;\n    // the least number of pages before and after the current\n    const delta = Math.round(count / 2);\n\n    // ensure that we start with at least the first page\n    const minStart = Math.max(0, current - delta);\n    // ensures that we start with at least 1 and do not pass the last range\n    const maxStart = Math.max(0, pageCount - count - 1);\n\n    // ensure that we get at least a full range at the end\n    return Math.min(maxStart, minStart);\n  }\n\n  /**\n   * Returns the pagination configuration. The configuration is driven by the\n   * (default) application configuration.\n   *\n   * The default application is limited to adding the start and end link:\n   * ```ts\n   *   addStart: true,\n   *   addEnd: true\n   * ```\n   *\n   * The application configuration is however merged into the following static configuration:\n   * ```ts\n   * {\n   *   rangeCount: 3,\n   *   dotsLabel: '...',\n   *   startLabel: '«',\n   *   previousLabel: '‹',\n   *   nextLabel: '›',\n   *   endLabel: '»'\n   * }\n   * ```\n   */\n  protected get config(): PaginationOptions {\n    return Object.assign(\n      FALLBACK_PAGINATION_OPTIONS,\n      this.paginationConfig.pagination\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { PaginationModel } from '@spartacus/core';\nimport { PaginationBuilder } from './pagination.builder';\nimport { PaginationItem, PaginationItemType } from './pagination.model';\n\n/**\n * The `PaginationComponent` is a generic component that is used for\n * all lists in Spartacus that require pagination. The component supports\n * all common features, which can be configured or hidden by CSS.\n */\n@Component({\n  selector: 'cx-pagination',\n  templateUrl: './pagination.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaginationComponent {\n  /** The (optional) pageRoute used for the anchor links created in the pagination   */\n  @Input() pageRoute: string;\n\n  /** The (optional) query parameter which is added to the page route.  */\n  @Input() queryParam: string;\n\n  /**\n   * Whenever there's a default page specified, the routing logic\n   * will omit the page number in routeLink or parameters.\n   */\n  @Input() defaultPage;\n\n  private _pagination: PaginationModel;\n  get pagination(): PaginationModel {\n    return this._pagination;\n  }\n  @Input() set pagination(value: PaginationModel) {\n    this._pagination = value;\n    this.render(value);\n  }\n\n  @Output() viewPageEvent: EventEmitter<number> = new EventEmitter<number>();\n\n  pages: PaginationItem[] = [];\n\n  constructor(\n    private paginationBuilder: PaginationBuilder,\n    private activatedRoute: ActivatedRoute\n  ) {}\n\n  protected render(pagination: PaginationModel): void {\n    if (!pagination) {\n      return;\n    }\n    this.pages = this.paginationBuilder.paginate(\n      pagination.totalPages,\n      pagination.currentPage\n    );\n  }\n\n  /**\n   * Format aria-label based on pagination item type.\n   *\n   * @param label string\n   * @param type PaginationItemType\n   * @returns string\n   */\n  getAriaLabel(label: string, type: PaginationItemType): string {\n    // Convert 'Start' to First, and 'End' to Last for a more natural screen read.\n    type = type === PaginationItemType.START ? PaginationItemType.FIRST : type;\n    type = type === PaginationItemType.END ? PaginationItemType.LAST : type;\n    return type === PaginationItemType.PAGE\n      ? `${type} ${label}`\n      : `${type} ${PaginationItemType.PAGE}`;\n  }\n\n  /**\n   * Indicates whether the given item is the current item.\n   *\n   * @param item PaginationItem\n   * @returns boolean\n   */\n  isCurrent(item: PaginationItem): boolean {\n    return (\n      item.type === PaginationItemType.PAGE &&\n      item.number === this.pagination.currentPage\n    );\n  }\n\n  /**\n   * Indicates whether the pagination item is inactive. This is used\n   * to disabled a link or set the tabindex to `-1`.\n   *\n   * Defaults to true\n   *\n   * @param item PaginationItem\n   * @returns returns -1 in case of a disabled\n   */\n  isInactive(item: PaginationItem): boolean {\n    return (\n      !item.hasOwnProperty('number') ||\n      item.number === this.pagination.currentPage\n    );\n  }\n\n  getQueryParams(item: PaginationItem): Params {\n    const queryParams = Object.assign(\n      {},\n      this.activatedRoute.snapshot.queryParams\n    );\n    if (\n      this.queryParam &&\n      item.number < this.pagination.totalPages &&\n      !this.isCurrent(item)\n    ) {\n      queryParams[this.queryParam] = item.number;\n    }\n    // omit the page number from the query parameters in case it's the default\n    // to clean up the experience and avoid unnecessary polluting of the URL\n    if (queryParams[this.queryParam] === this.defaultPage) {\n      delete queryParams[this.queryParam];\n    }\n    return queryParams;\n  }\n\n  pageChange(page: PaginationItem): void {\n    this.viewPageEvent.emit(page.number);\n  }\n}\n","<a\n  *ngFor=\"let item of pages\"\n  [class]=\"item.type\"\n  [class.disabled]=\"isInactive(item)\"\n  [class.current]=\"isCurrent(item)\"\n  [routerLink]=\"pageRoute\"\n  [queryParams]=\"getQueryParams(item)\"\n  [tabIndex]=\"isInactive(item) ? -1 : 0\"\n  (click)=\"pageChange(item)\"\n  [attr.aria-label]=\"getAriaLabel(item.label, item.type)\"\n>\n  {{ item.label }}\n</a>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultPaginationConfig } from './config/index';\nimport { PaginationComponent } from './pagination.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule],\n  providers: [provideDefaultConfig(defaultPaginationConfig)],\n  declarations: [PaginationComponent],\n  exports: [PaginationComponent],\n})\nexport class PaginationModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { SortModel } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-sorting',\n  templateUrl: './sorting.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SortingComponent {\n  @Input()\n  sortOptions: SortModel[];\n  @Input()\n  selectedOption: string;\n  @Input()\n  placeholder: string;\n  @Input()\n  sortLabels: { [code: string]: string };\n\n  @Output()\n  sortListEvent: EventEmitter<string>;\n\n  constructor() {\n    this.sortListEvent = new EventEmitter<string>();\n  }\n\n  sortList(sortCode: string): void {\n    this.sortListEvent.emit(sortCode);\n  }\n\n  get selectedLabel() {\n    return (\n      this.sortOptions?.find((sort) => sort.code === this.selectedOption)\n        ?.name ?? this.sortLabels?.[this.selectedOption]\n    );\n  }\n}\n","<ng-select\n  [searchable]=\"false\"\n  [clearable]=\"false\"\n  placeholder=\"{{ placeholder }}\"\n  (change)=\"sortList($event)\"\n  [ngModel]=\"selectedOption\"\n  [attr.aria-label]=\"selectedLabel || placeholder\"\n>\n  <ng-option *ngFor=\"let sort of sortOptions\" [value]=\"sort.code\">{{\n    sort.name ? sort.name : sortLabels ? sortLabels[sort.code] : ''\n  }}</ng-option>\n</ng-select>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { PaginationComponent, PaginationModule } from './pagination/index';\nimport { SortingComponent } from './sorting/sorting.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IconModule,\n    PaginationModule,\n  ],\n  declarations: [SortingComponent],\n  exports: [SortingComponent, PaginationComponent],\n})\nexport class ListNavigationModule {}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { ImageLoadingStrategy, MediaFormatSize } from './media.model';\n\n/**\n * Provides configuration specific to Media, such as images. This is used to optimize\n * rendering of the media, SEO and performance.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class MediaConfig {\n  /**\n   * Media _format_ configuration holds the size of the media's assigned to\n   * a format.\n   */\n  mediaFormats?: {\n    /**\n     * Represents the media format code, that is the key to distinguish different\n     * media in a container.\n     */\n    [format: string]: MediaFormatSize;\n  };\n\n  /**\n   * Indicates how the browser should load the image. There's only one\n   * global strategy for all media cross media in Spartacus.\n   *\n   * See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img for more\n   * information.\n   *\n   * If the `lazy` strategy is in place, the `loading=\"lazy\"` attribute is added to the\n   * img element.\n   */\n  imageLoadingStrategy?: ImageLoadingStrategy;\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends MediaConfig {}\n}\n","import { NgbModalRef } from '@ng-bootstrap/ng-bootstrap';\n\n/**\n * A reference to a newly opened modal\n *\n * @todo remove ngb dependency and create our own implementation of ModalRef\n */\nexport class ModalRef extends NgbModalRef {}\n","import { NgModule } from '@angular/core';\nimport { ModalDirective } from './modal.directive';\n\n@NgModule({\n  declarations: [ModalDirective],\n  exports: [ModalDirective],\n})\nexport class ModalModule {}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport {\n  Address,\n  CostCenter,\n  DeliveryMode,\n  PaymentDetails,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { Card } from '../card/card.component';\n\n@Component({\n  selector: 'cx-order-overview',\n  templateUrl: './order-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderOverviewComponent {\n  order: any;\n\n  @Input('order')\n  set setOrder(order: any) {\n    this.order = order;\n  }\n\n  constructor(protected translation: TranslationService) {}\n\n  getReplenishmentCodeCardContent(orderCode: string): Observable<Card> {\n    return this.translation.translate('orderDetails.replenishmentId').pipe(\n      filter(() => Boolean(orderCode)),\n      map((textTitle) => ({\n        title: textTitle,\n        text: [orderCode],\n      }))\n    );\n  }\n\n  getReplenishmentActiveCardContent(active: boolean): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('orderDetails.status'),\n      this.translation.translate('orderDetails.active'),\n      this.translation.translate('orderDetails.cancelled'),\n    ]).pipe(\n      map(([textTitle, textActive, textCancelled]) => ({\n        title: textTitle,\n        text: [active ? textActive : textCancelled],\n      }))\n    );\n  }\n\n  getReplenishmentStartOnCardContent(isoDate: string): Observable<Card> {\n    return this.translation.translate('orderDetails.startOn').pipe(\n      filter(() => Boolean(isoDate)),\n      map((textTitle) => {\n        return {\n          title: textTitle,\n          text: [isoDate],\n        };\n      })\n    );\n  }\n\n  getReplenishmentFrequencyCardContent(frequency: string): Observable<Card> {\n    return this.translation.translate('orderDetails.frequency').pipe(\n      filter(() => Boolean(frequency)),\n      map((textTitle) => ({\n        title: textTitle,\n        text: [frequency],\n      }))\n    );\n  }\n\n  getReplenishmentNextDateCardContent(isoDate: string): Observable<Card> {\n    return this.translation.translate('orderDetails.nextOrderDate').pipe(\n      filter(() => Boolean(isoDate)),\n      map((textTitle) => {\n        return {\n          title: textTitle,\n          text: [isoDate],\n        };\n      })\n    );\n  }\n\n  getOrderCodeCardContent(orderCode: string): Observable<Card> {\n    return this.translation.translate('orderDetails.orderNumber').pipe(\n      filter(() => Boolean(orderCode)),\n      map((textTitle) => ({\n        title: textTitle,\n        text: [orderCode],\n      }))\n    );\n  }\n\n  getOrderCurrentDateCardContent(isoDate: string): Observable<Card> {\n    return this.translation.translate('orderDetails.placedOn').pipe(\n      filter(() => Boolean(isoDate)),\n      map((textTitle) => {\n        return {\n          title: textTitle,\n          text: [isoDate],\n        };\n      })\n    );\n  }\n\n  getOrderStatusCardContent(status: string): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('orderDetails.status'),\n      this.translation.translate('orderDetails.statusDisplay_' + status),\n    ]).pipe(\n      map(([textTitle, textStatus]) => ({\n        title: textTitle,\n        text: [textStatus],\n      }))\n    );\n  }\n\n  getPurchaseOrderNumber(poNumber: string): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('orderDetails.purchaseOrderNumber'),\n      this.translation.translate('orderDetails.emptyPurchaseOrderId'),\n    ]).pipe(\n      map(([textTitle, noneTextTitle]) => ({\n        title: textTitle,\n        text: [poNumber ? poNumber : noneTextTitle],\n      }))\n    );\n  }\n\n  getMethodOfPaymentCardContent(\n    hasPaymentInfo: PaymentDetails\n  ): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('orderDetails.methodOfPayment'),\n      this.translation.translate('paymentTypes.paymentType_ACCOUNT'),\n      this.translation.translate('paymentTypes.paymentType_CARD'),\n    ]).pipe(\n      map(([textTitle, textAccount, textCard]) => ({\n        title: textTitle,\n        text: [Boolean(hasPaymentInfo) ? textCard : textAccount],\n      }))\n    );\n  }\n\n  getCostCenterCardContent(costCenter: CostCenter): Observable<Card> {\n    return this.translation.translate('orderDetails.costCenter').pipe(\n      filter(() => Boolean(costCenter)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: costCenter?.name,\n        text: ['(' + costCenter?.unit?.name + ')'],\n      }))\n    );\n  }\n\n  getAddressCardContent(deliveryAddress: Address): Observable<Card> {\n    return this.translation.translate('addressCard.shipTo').pipe(\n      filter(() => Boolean(deliveryAddress)),\n      map((textTitle) => {\n        const formattedAddress = this.normalizeFormattedAddress(\n          deliveryAddress.formattedAddress\n        );\n\n        return {\n          title: textTitle,\n          textBold: `${deliveryAddress.firstName} ${deliveryAddress.lastName}`,\n          text: [formattedAddress, deliveryAddress.country.name],\n        };\n      })\n    );\n  }\n\n  getDeliveryModeCardContent(deliveryMode: DeliveryMode): Observable<Card> {\n    return this.translation.translate('orderDetails.shippingMethod').pipe(\n      filter(() => Boolean(deliveryMode)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: deliveryMode.name,\n        text: [\n          deliveryMode.description,\n          deliveryMode.deliveryCost?.formattedValue\n            ? deliveryMode.deliveryCost?.formattedValue\n            : '',\n        ],\n      }))\n    );\n  }\n\n  getPaymentInfoCardContent(payment: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentForm.payment'),\n      this.translation.translate('paymentCard.expires', {\n        month: Boolean(payment) ? payment.expiryMonth : '',\n        year: Boolean(payment) ? payment.expiryYear : '',\n      }),\n    ]).pipe(\n      filter(() => Boolean(payment)),\n      map(([textTitle, textExpires]) => ({\n        title: textTitle,\n        textBold: payment.accountHolderName,\n        text: [payment.cardNumber, textExpires],\n      }))\n    );\n  }\n\n  getBillingAddressCardContent(billingAddress: Address): Observable<Card> {\n    return this.translation.translate('paymentForm.billingAddress').pipe(\n      filter(() => Boolean(billingAddress)),\n      map((textTitle) => ({\n        title: textTitle,\n        textBold: `${billingAddress.firstName} ${billingAddress.lastName}`,\n        text: [billingAddress.formattedAddress, billingAddress.country.name],\n      }))\n    );\n  }\n\n  private normalizeFormattedAddress(formattedAddress: string): string {\n    const addresses = formattedAddress\n      .split(',')\n      .map((address) => address.trim());\n\n    const newFormattedAddress = addresses.filter(Boolean).join(', ');\n\n    return newFormattedAddress;\n  }\n}\n","<div class=\"cx-order-summary\">\n  <div class=\"container\">\n    <ng-container *ngIf=\"order.replenishmentOrderCode; else otherOrder\">\n      <div class=\"cx-summary-card\">\n        <cx-card\n          [content]=\"\n            getReplenishmentCodeCardContent(order?.replenishmentOrderCode)\n              | async\n          \"\n        ></cx-card>\n\n        <cx-card\n          [content]=\"getReplenishmentActiveCardContent(order?.active) | async\"\n        ></cx-card>\n      </div>\n\n      <div class=\"cx-summary-card\">\n        <cx-card\n          [content]=\"\n            getReplenishmentStartOnCardContent(order?.firstDate | cxDate)\n              | async\n          \"\n        ></cx-card>\n\n        <cx-card\n          [content]=\"\n            getReplenishmentFrequencyCardContent(\n              order?.trigger?.displayTimeTable\n            ) | async\n          \"\n        ></cx-card>\n\n        <cx-card\n          [content]=\"\n            getReplenishmentNextDateCardContent(\n              order?.trigger?.activationTime | cxDate\n            ) | async\n          \"\n        ></cx-card>\n      </div>\n    </ng-container>\n\n    <ng-template #otherOrder>\n      <div class=\"cx-summary-card\">\n        <cx-card\n          [content]=\"getOrderCodeCardContent(order?.code) | async\"\n        ></cx-card>\n\n        <cx-card\n          [content]=\"\n            getOrderCurrentDateCardContent(order?.created | cxDate) | async\n          \"\n        ></cx-card>\n\n        <cx-card\n          [content]=\"getOrderStatusCardContent(order.statusDisplay) | async\"\n        ></cx-card>\n      </div>\n    </ng-template>\n\n    <ng-container\n      *ngIf=\"order.purchaseOrderNumber || order.purchaseOrderNumber === ''\"\n    >\n      <div class=\"cx-summary-card\">\n        <cx-card\n          [content]=\"getPurchaseOrderNumber(order?.purchaseOrderNumber) | async\"\n        ></cx-card>\n\n        <cx-card\n          [content]=\"getMethodOfPaymentCardContent(order.paymentInfo) | async\"\n        ></cx-card>\n\n        <ng-container *ngIf=\"order.costCenter\">\n          <cx-card\n            [content]=\"getCostCenterCardContent(order?.costCenter) | async\"\n          ></cx-card>\n        </ng-container>\n      </div>\n    </ng-container>\n\n    <div class=\"cx-summary-card\">\n      <ng-container *ngIf=\"order.deliveryAddress\">\n        <cx-card\n          [content]=\"getAddressCardContent(order?.deliveryAddress) | async\"\n        ></cx-card>\n      </ng-container>\n\n      <ng-container *ngIf=\"order.deliveryMode\">\n        <cx-card\n          [content]=\"getDeliveryModeCardContent(order?.deliveryMode) | async\"\n        ></cx-card>\n      </ng-container>\n    </div>\n\n    <ng-container *ngIf=\"order.paymentInfo\">\n      <div class=\"cx-summary-card\">\n        <cx-card\n          [content]=\"getPaymentInfoCardContent(order?.paymentInfo) | async\"\n        ></cx-card>\n\n        <cx-card\n          [content]=\"\n            getBillingAddressCardContent(order?.paymentInfo?.billingAddress)\n              | async\n          \"\n        ></cx-card>\n      </div>\n    </ng-container>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { CardModule } from '../card/card.module';\nimport { OrderOverviewComponent } from './order-overview.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, CardModule],\n  declarations: [OrderOverviewComponent],\n  exports: [OrderOverviewComponent],\n})\nexport class OrderOverviewModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\n@Component({\n  selector: 'cx-progress-button',\n  templateUrl: './progress-button.component.html',\n})\nexport class ProgressButtonComponent {\n  @Input()\n  ariaLabel: string = '';\n\n  @Input()\n  class: string = '';\n\n  @Input()\n  disabled: boolean = false;\n\n  @Input()\n  loading: boolean = false;\n\n  @Output()\n  clikEvent = new EventEmitter<void>();\n\n  constructor() {}\n}\n","<button\n  (click)=\"clikEvent.emit()\"\n  [attr.aria-label]=\"ariaLabel\"\n  [disabled]=\"disabled || loading\"\n  [ngClass]=\"class\"\n  class=\"btn btn-primary\"\n>\n  <div class=\"cx-progress-button-container\">\n    <div *ngIf=\"loading\" class=\"loader-container\">\n      <div class=\"loader\">{{ 'spinner.loading' | cxTranslate }}</div>\n    </div>\n\n    <ng-content></ng-content>\n  </div>\n</button>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { I18nModule } from '@spartacus/core';\nimport { ProgressButtonComponent } from './progress-button.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [ProgressButtonComponent],\n  exports: [ProgressButtonComponent],\n})\nexport class ProgressButtonModule {}\n","import {\n  Component,\n  ElementRef,\n  HostListener,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  UserReplenishmentOrderService,\n} from '@spartacus/core';\nimport { combineLatest, Subscription } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { FocusConfig } from '../../../layout/a11y/keyboard-focus/keyboard-focus.model';\nimport { LaunchDialogService } from '../../../layout/launch-dialog/services/launch-dialog.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-replenishment-order-cancellation-dialog',\n  templateUrl: './replenishment-order-cancellation-dialog.component.html',\n})\nexport class ReplenishmentOrderCancellationDialogComponent\n  implements OnInit, OnDestroy\n{\n  private subscription = new Subscription();\n\n  replenishmentOrderCode: string;\n\n  focusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    autofocus: 'button',\n    focusOnEscape: true,\n  };\n\n  @HostListener('click', ['$event'])\n  handleClick(event: UIEvent): void {\n    // Close on click outside the dialog window\n    if ((event.target as any).tagName === this.el.nativeElement.tagName) {\n      this.close('Cross click');\n    }\n  }\n\n  constructor(\n    protected userReplenishmentOrderService: UserReplenishmentOrderService,\n    protected globalMessageService: GlobalMessageService,\n    protected launchDialogService: LaunchDialogService,\n    protected el: ElementRef\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription.add(\n      combineLatest([\n        this.userReplenishmentOrderService\n          .getReplenishmentOrderDetails()\n          .pipe(startWith(null)),\n        this.launchDialogService.data$,\n      ]).subscribe(([replenishmentOrder, code]) => {\n        this.replenishmentOrderCode =\n          code || replenishmentOrder.replenishmentOrderCode;\n      })\n    );\n\n    this.subscription.add(\n      this.userReplenishmentOrderService\n        .getCancelReplenishmentOrderSuccess()\n        .subscribe((value) => this.onSuccess(value))\n    );\n  }\n\n  onSuccess(value: boolean): void {\n    if (value) {\n      this.launchDialogService.closeDialog(\n        'Successffully cancelled replenishment'\n      );\n\n      this.globalMessageService.add(\n        {\n          key: 'orderDetails.cancelReplenishment.cancelSuccess',\n          params: {\n            replenishmentOrderCode: this.replenishmentOrderCode,\n          },\n        },\n        GlobalMessageType.MSG_TYPE_CONFIRMATION\n      );\n    }\n    this.userReplenishmentOrderService.clearCancelReplenishmentOrderProcessState();\n  }\n\n  close(reason: string): void {\n    this.launchDialogService.closeDialog(reason);\n  }\n\n  cancelReplenishment(): void {\n    this.userReplenishmentOrderService.cancelReplenishmentOrder(\n      this.replenishmentOrderCode\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<div\n  [cxFocus]=\"focusConfig\"\n  (esc)=\"close('Escape clicked')\"\n  class=\"cx-cancel-replenishment-dialog-foreground\"\n>\n  <div class=\"cx-cancel-replenishment-dialog-content\">\n    <div class=\"cx-cancel-replenishment-dialog-header\">\n      <h3>\n        {{ 'orderDetails.cancelReplenishment.title' | cxTranslate }}\n      </h3>\n    </div>\n    <div class=\"cx-cancel-replenishment-dialog-description\">\n      {{ 'orderDetails.cancelReplenishment.description' | cxTranslate }}\n    </div>\n\n    <div class=\"cx-cancel-replenishment-dialog-body\">\n      <div class=\"cx-cancel-replenishment-btns row\">\n        <div class=\"col-md-6\">\n          <button\n            class=\"btn btn-block btn-action\"\n            (click)=\"close('Close Replenishment Dialog')\"\n          >\n            {{ 'orderDetails.cancelReplenishment.reject' | cxTranslate }}\n          </button>\n        </div>\n        <div class=\"col-md-6\">\n          <button\n            class=\"btn btn-block btn-primary\"\n            (click)=\"cancelReplenishment()\"\n          >\n            {{ 'orderDetails.cancelReplenishment.accept' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { ReplenishmentOrderCancellationDialogComponent } from './replenishment-order-cancellation-dialog.component';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [CommonModule, I18nModule, KeyboardFocusModule],\n  declarations: [ReplenishmentOrderCancellationDialogComponent],\n  exports: [ReplenishmentOrderCancellationDialogComponent],\n})\nexport class ReplenishmentOrderCancellationDialogModule {}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { distinctUntilChanged, filter, map } from 'rxjs/operators';\nimport { SplitViewState } from './split/split-view.model';\n\n/**\n * Supposed to be injected in the split view component, so that the split view state\n * is maintained for a single split view.\n */\n@Injectable()\nexport class SplitViewService {\n  /**\n   * Newly added views are hidden by default, unless it is the first view of the split view.\n   * The default hide mode can be overridden.\n   */\n  defaultHideMode = true;\n\n  protected splitViewCount = 1;\n\n  protected _views$: BehaviorSubject<any[]> = new BehaviorSubject([]);\n\n  /**\n   * Adds a view to the list of views. The view is initialized with the `SplitViewState`\n   * state. If no state is provided, the state is created with the hidden property. The hidden\n   * property is provided by the `defaultHideMode`, unless it's the first view (position: 0).\n   */\n  add(position: number, initialState?: SplitViewState) {\n    const state: SplitViewState = {\n      ...{ hidden: position === 0 ? false : this.defaultHideMode },\n      ...initialState,\n    };\n    if (!this.views[position]) {\n      this.views[position] = state;\n      this.updateState(position, state.hidden);\n      this._views$.next(this.views);\n    }\n  }\n\n  /**\n   * The split view is based on a number of views that can be used next to each other.\n   * When the number changes (i.e. if the screen goes from wide to small), the visibility state\n   * of the views should be updated.\n   */\n  updateSplitView(splitViewCount: number) {\n    if (splitViewCount !== this.splitViewCount) {\n      this.splitViewCount = splitViewCount;\n      this.updateState();\n    }\n  }\n\n  /**\n   * Returns an observable with the active view number. The active view number\n   * represents the last visible view.\n   */\n  getActiveView(): Observable<number> {\n    return this._views$.pipe(\n      map((views) => this.getActive(views)),\n      distinctUntilChanged()\n    );\n  }\n\n  /**\n   * Returns an observable with the SplitViewState for the given view position.\n   */\n  getViewState(position: number): Observable<SplitViewState> {\n    return this._views$.pipe(\n      map((views) => views[position]),\n      // we must filter here, since outlet driven views will destroyed the view\n      filter((view) => Boolean(view))\n    );\n  }\n\n  /**\n   * Removes a view from the list of views.\n   *\n   * Removing a view is different from hiding a view. Removing a view is typically done\n   * when a component is destroyed.\n   *\n   * When the view is removed, the SplitViewState is updated to reflect that new organization\n   * of views.\n   */\n  remove(position: number) {\n    const activePosition = this.getActive(this.views);\n    this._views$.next(this.views.splice(0, position));\n    if (activePosition >= position) {\n      this.updateState(position);\n    }\n  }\n\n  /**\n   * Returns the next view position. This is useful for views that do not want to be bothered\n   * with controlling view numbers.\n   */\n  get nextPosition(): number {\n    return this.views.length || 0;\n  }\n\n  /**\n   * Toggles the visibility of the views based on the given view position. If the view\n   * is already visible, we close the view and active the former view. Unless the hide flag\n   * is used, to force the view.\n   *\n   * The view state of other views in the split view are updated as well.\n   *\n   * @param position The zero-based position number of the view.\n   * @param forceHide The (optional) hide state for the view position.\n   */\n  toggle(position: number, forceHide?: boolean) {\n    // add the view if it hasn't been added before.\n    if (!this.views[position]) {\n      this.add(position, { hidden: forceHide ?? false });\n    }\n\n    // If the position is already visible, we move to a previous position. Only if the hide\n    // state is forced, we keep the current position.\n    if (\n      this.views[position] &&\n      forceHide === undefined &&\n      !this.views[position].hidden\n    ) {\n      position--;\n    }\n\n    this.updateState(position, forceHide === true);\n  }\n\n  /**\n   * Updates the hidden state of all the views.\n   */\n  protected updateState(position?: number, hide?: boolean) {\n    const views = [...this.views];\n    if (hide !== undefined && views[position]) {\n      views[position].hidden = hide;\n    }\n    let lastVisible =\n      views.length - [...views].reverse().findIndex((view) => !view.hidden) - 1;\n\n    if (lastVisible === views.length) {\n      if (position) {\n        // When there's only 1 view (mobile), we might not find any active\n        // if the user navigates back.\n        lastVisible = position - 1;\n      } else {\n        lastVisible = views.length - 1;\n      }\n    }\n\n    views.forEach((view, pos) => {\n      if (view && pos !== position) {\n        // hide other views that are outside the split view\n        view.hidden =\n          pos > lastVisible || pos < lastVisible - (this.splitViewCount - 1);\n      }\n    });\n\n    this._views$.next(views);\n  }\n\n  /**\n   * Returns the active view count for the list of views.\n   */\n  protected getActive(views: SplitViewState[]): number {\n    // we reverse the list to find the last visible view\n    const l = [...views]\n      .reverse()\n      .findIndex((view: SplitViewState) => !view.hidden);\n    const last = l === -1 ? 0 : views.length - l - 1;\n    return last;\n  }\n\n  /**\n   * Utility method that resolves all views from the subject.\n   */\n  protected get views(): SplitViewState[] {\n    return this._views$.value;\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\nimport { SplitViewService } from '../split-view.service';\n\n/**\n * The split-view component supports an unlimited number of nested views. The component\n * is a host to those view components and doesn't add any restrictions to it's content;\n * content is projected as-is.\n *\n * ```html\n * <cx-split-view>\n *   <cx-view></cx-view>\n *   <cx-view></cx-view>\n *   <any-wrapper>\n *     <cx-view></cx-view>\n *   </any-wrapper>\n * </cx-split-view>\n * ```\n *\n * The split view component is only concerned with tracking the underlying _visible_\n * view components, so that the `lastVisibleView` can be updated accordingly. The actual\n * visibility of views is controlled by CSS. To allow for maximum flexibility, the CSS\n * implementation is using CSS variables. The `lastVisibleView` is bind to the\n * `--cx-active-view` on the host, so that all descendants views will inherit the\n * property conveniently.\n */\n@Component({\n  selector: 'cx-split-view',\n  templateUrl: './split-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [SplitViewService],\n})\nexport class SplitViewComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  /**\n   * Sets the default hide mode for views. This mode is useful in case views are dynamically being created,\n   * for example when they are created by router components.\n   *\n   * The mode defaults to true, unless this is the first view; the first view is never hidden.\n   */\n  @Input()\n  set hideMode(mode: boolean) {\n    this.splitService.defaultHideMode = mode;\n  }\n\n  /**\n   * Indicates the last visible view in the range of views that is visible. This\n   * is bind to a css variable `--cx-active-view` so that the experience\n   * can be fully controlled by css.\n   */\n  @HostBinding('style.--cx-active-view')\n  @HostBinding('attr.active-view')\n  lastVisibleView = 1;\n\n  constructor(\n    protected splitService: SplitViewService,\n    protected breakpointService: BreakpointService,\n    protected elementRef: ElementRef\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.splitService\n        .getActiveView()\n        .subscribe(\n          (lastVisible: number) => (this.lastVisibleView = lastVisible + 1)\n        )\n    );\n    this.subscription.add(\n      this.breakpointService.breakpoint$.subscribe(() => {\n        this.splitService.updateSplitView(this.splitViewCount);\n      })\n    );\n  }\n\n  /**\n   * Returns the maximum number of views per split-view. The number is based on the\n   * CSS custom property `--cx-max-views`.\n   */\n  protected get splitViewCount(): number {\n    return Number(\n      getComputedStyle(this.elementRef.nativeElement).getPropertyValue(\n        '--cx-max-views'\n      )\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<ng-content></ng-content>\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { Subscription, timer } from 'rxjs';\nimport { delayWhen } from 'rxjs/operators';\nimport { SplitViewService } from '../split-view.service';\n\n/**\n * The view component is part of the `SplitViewComponent`. The view\n * contains the navigable content that should be split up. It maintains\n * a view position and allows to show or hide the view.\n *\n * The ViewComponent interacts with the `SplitViewService` for handing over the\n * view state, so that the overarching `SplitViewComponent` can manage the\n * overall experience.\n */\n@Component({\n  selector: 'cx-view',\n  templateUrl: './view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ViewComponent implements OnInit, OnDestroy {\n  protected _hidden;\n\n  @Input()\n  @HostBinding('attr.position')\n  @HostBinding('style.--cx-view-position')\n  position: string;\n\n  /**\n   * The disappeared flag is added to the\n   */\n  @HostBinding('attr.disappeared') disappeared = true;\n\n  /**\n   * The hidden input is used to set the initial visible state of the view.\n   * The hidden state defaults to false.\n   *\n   * The hidden input supports 2-way binding, see `hiddenChange` property.\n   */\n  @Input()\n  set hidden(hidden: boolean) {\n    this._hidden = hidden;\n    this.splitService.toggle(this.viewPosition, hidden);\n  }\n\n  /**\n   * An update of the view visibility is emitted to the hiddenChange output.\n   */\n  @Output()\n  hiddenChange = new EventEmitter();\n\n  protected subscription: Subscription;\n\n  constructor(\n    protected splitService: SplitViewService,\n    protected elementRef: ElementRef,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    const hidden = this._hidden ? { hidden: this._hidden } : {};\n    this.splitService.add(this.viewPosition, hidden);\n\n    this.subscription = this.splitService\n      .getViewState(this.viewPosition)\n      // delay the disappeared state, so that the (CSS driven) animation has time to finish\n      .pipe(delayWhen((view) => timer(view.hidden ? this.duration * 1.25 : 0)))\n      .subscribe((view) => {\n        this.hiddenChange.emit(view.hidden);\n        this._hidden = view.hidden;\n\n        this.disappeared = view.hidden;\n        this.cd.markForCheck();\n      });\n  }\n\n  /**\n   * Toggles the visibility of the view.\n   *\n   * An optional force flag can be used to explicitly show or hide view component.\n   */\n  toggle(force?: boolean) {\n    this.splitService.toggle(this.viewPosition, force);\n  }\n\n  /**\n   * Returns the position for the view.\n   *\n   * The position is either taken from the input `position` or generated by the `SplitService`.\n   */\n  protected get viewPosition(): number {\n    if (!(Number(this.position) >= 0)) {\n      this.position = this.splitService.nextPosition.toString();\n    }\n    return Number(this.position);\n  }\n\n  /**\n   * Returns the duration in milliseconds. The duration is based on the CSS custom property\n   * `--cx-transition-duration`. Defaults to 300 milliseconds.\n   */\n  protected get duration(): number {\n    const duration: string = getComputedStyle(this.elementRef.nativeElement)\n      .getPropertyValue('--cx-transition-duration')\n      .trim();\n\n    if (duration.indexOf('ms') > -1) {\n      return Number(duration.split('ms')[0]);\n    } else if (duration.indexOf('s') > -1) {\n      return Number(duration.split('s')[0]) * 1000;\n    } else {\n      return 300;\n    }\n  }\n\n  /**\n   * The view is removed from the `SplitService` so that the view no longer\n   * plays a role in the overall split view.\n   */\n  ngOnDestroy() {\n    this.splitService.remove(this.viewPosition);\n    this.subscription?.unsubscribe();\n  }\n}\n","<ng-content></ng-content>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { SplitViewComponent } from './split/split-view.component';\nimport { ViewComponent } from './view/view.component';\n\n/**\n * The split-view component supports an unlimited number of nested views. Nested views are rendered\n * next to each other. The views can be rendered next to each other, but the max number of visible\n * views can be limisted as well. This is configurable in the CSS layer, so that the max number of views\n * per split-view can be different for each component.\n *\n * The basic structure of the split-view component is shown below:\n *\n *\n * ```\n * <cx-split-view>\n * </cx-split-view>\n * ```\n *\n * The UX pattern used for the split-view is driven by an initial view, which gets splitted into\n * more views as soon as the user starts interacting with the initial and subsequantial views.\n * The views can be driven by routes, which means that you can navigate through the splitted views\n * by using the browser history as well as share or bookmark splitted views.\n *\n * The UI is implemented in the style layer, with only a few generic style rules. Most of the split\n * view style is driven by CSS properties, so that alternative split-view styles can be introduced\n * per page or component.\n *\n * The max number of views per split-view on mobile is limited to 1 by default, where as on tablet\n * (and higher) it is set to 2. Spartacus has a pretty narrow layout, which is why 2 is maximum,\n * but customers could alter the layout to bring in more views in the same split-view at the time.\n *\n */\n\n@NgModule({\n  declarations: [SplitViewComponent, ViewComponent],\n  imports: [CommonModule, RouterModule],\n  exports: [SplitViewComponent, ViewComponent],\n})\nexport class SplitViewModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  GlobalMessageEntities,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-global-message',\n  templateUrl: './global-message.component.html',\n})\nexport class GlobalMessageComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  messages$: Observable<GlobalMessageEntities>;\n  messageType: typeof GlobalMessageType = GlobalMessageType;\n\n  constructor(protected globalMessageService: GlobalMessageService) {}\n\n  ngOnInit(): void {\n    this.messages$ = this.globalMessageService.get();\n  }\n\n  clear(type: GlobalMessageType, index: number): void {\n    this.globalMessageService.remove(type, index);\n  }\n}\n","<div *ngIf=\"messages$ | async as messages\">\n  <div\n    class=\"alert alert-success\"\n    *ngFor=\"\n      let confMsg of messages[messageType.MSG_TYPE_CONFIRMATION];\n      let i = index\n    \"\n  >\n    <span class=\"alert-icon\">\n      <cx-icon [type]=\"iconTypes.SUCCESS\"></cx-icon>\n    </span>\n    <span>{{ confMsg | cxTranslate }}</span>\n    <button\n      class=\"close\"\n      type=\"button\"\n      (click)=\"clear(messageType.MSG_TYPE_CONFIRMATION, i)\"\n    >\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n  <div\n    class=\"alert alert-info\"\n    *ngFor=\"let infoMsg of messages[messageType.MSG_TYPE_INFO]; let i = index\"\n  >\n    <span class=\"alert-icon\">\n      <cx-icon [type]=\"iconTypes.INFO\"></cx-icon>\n    </span>\n    <span>{{ infoMsg | cxTranslate }}</span>\n    <button\n      class=\"close\"\n      type=\"button\"\n      (click)=\"clear(messageType.MSG_TYPE_INFO, i)\"\n    >\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n  <div\n    class=\"alert alert-warning\"\n    *ngFor=\"\n      let infoMsg of messages[messageType.MSG_TYPE_WARNING];\n      let i = index\n    \"\n  >\n    <span class=\"alert-icon\">\n      <cx-icon [type]=\"iconTypes.WARNING\"></cx-icon>\n    </span>\n    <span>{{ infoMsg | cxTranslate }}</span>\n    <button\n      class=\"close\"\n      type=\"button\"\n      (click)=\"clear(messageType.MSG_TYPE_WARNING, i)\"\n    >\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n  <div\n    class=\"alert alert-danger\"\n    *ngFor=\"let errorMsg of messages[messageType.MSG_TYPE_ERROR]; let i = index\"\n  >\n    <span class=\"alert-icon\">\n      <cx-icon [type]=\"iconTypes.ERROR\"></cx-icon>\n    </span>\n    <span>{{ errorMsg | cxTranslate }}</span>\n    <button\n      class=\"close\"\n      type=\"button\"\n      (click)=\"clear(messageType.MSG_TYPE_ERROR, i)\"\n    >\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { GlobalMessageComponent } from './global-message.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule, I18nModule],\n  declarations: [GlobalMessageComponent],\n  exports: [GlobalMessageComponent],\n})\nexport class GlobalMessageComponentModule {}\n","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GlobalMessageType } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\n@Component({\n  selector: 'cx-message',\n  templateUrl: './message.component.html',\n})\nexport class MessageComponent {\n  @Input()\n  text: string;\n\n  @Input()\n  actionButtonText: string;\n\n  @Input()\n  accordionText: string;\n\n  @Input()\n  showBody = false;\n\n  @Input()\n  isVisibleCloseButton = true;\n\n  @Input()\n  type: GlobalMessageType;\n\n  @Output()\n  closeMessage: EventEmitter<void> = new EventEmitter();\n\n  @Output()\n  buttonAction: EventEmitter<void> = new EventEmitter();\n\n  iconTypes = ICON_TYPE;\n\n  constructor() {}\n\n  get getCssClassesForMessage(): Record<string, boolean> {\n    return {\n      'cx-message-success':\n        this.type === GlobalMessageType.MSG_TYPE_CONFIRMATION,\n      'cx-message-info': this.type === GlobalMessageType.MSG_TYPE_INFO,\n      'cx-message-warning': this.type === GlobalMessageType.MSG_TYPE_WARNING,\n      'cx-message-danger': this.type === GlobalMessageType.MSG_TYPE_ERROR,\n    };\n  }\n\n  get getIconType(): string {\n    switch (this.type) {\n      case GlobalMessageType.MSG_TYPE_CONFIRMATION:\n        return ICON_TYPE.SUCCESS;\n      case GlobalMessageType.MSG_TYPE_WARNING:\n        return ICON_TYPE.WARNING;\n      case GlobalMessageType.MSG_TYPE_ERROR:\n        return ICON_TYPE.ERROR;\n      case GlobalMessageType.MSG_TYPE_INFO:\n        return ICON_TYPE.INFO;\n    }\n  }\n}\n","<div [ngClass]=\"getCssClassesForMessage\" class=\"cx-message\">\n  <div class=\"cx-message-content\">\n    <div class=\"cx-message-header\">\n      <span class=\"cx-message-icon\">\n        <cx-icon [type]=\"getIconType\"></cx-icon>\n      </span>\n\n      <span class=\"cx-message-text\">\n        {{ text }}\n        <button\n          *ngIf=\"accordionText\"\n          (click)=\"showBody = !showBody\"\n          class=\"cx-message-accordion-button link cx-action-link\"\n          type=\"button\"\n        >\n          {{ accordionText }}\n          <cx-icon\n            [type]=\"showBody ? 'CARET_UP' : 'CARET_DOWN'\"\n            class=\"cx-message-accordion-icon\"\n          ></cx-icon>\n        </button>\n        <button\n          *ngIf=\"actionButtonText\"\n          (click)=\"buttonAction.emit()\"\n          class=\"btn btn-link cx-action-link\"\n          type=\"button\"\n        >\n          {{ actionButtonText }}\n        </button>\n      </span>\n\n      <button\n        *ngIf=\"isVisibleCloseButton\"\n        (click)=\"closeMessage.emit()\"\n        class=\"close\"\n        type=\"button\"\n      >\n        <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n      </button>\n    </div>\n\n    <div *ngIf=\"showBody || !accordionText\" class=\"cx-message-body\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { MessageComponent } from './message.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule, I18nModule],\n  declarations: [MessageComponent],\n  exports: [MessageComponent],\n})\nexport class MessageComponentModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PromotionsComponent } from './promotions.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [PromotionsComponent],\n  exports: [PromotionsComponent],\n})\nexport class PromotionsModule {}\n","import { Injectable, Injector, Optional } from '@angular/core';\nimport {\n  CmsSiteContextSelectorComponent,\n  ContextServiceMap,\n  CURRENCY_CONTEXT_ID,\n  LANGUAGE_CONTEXT_ID,\n  SiteContext,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SiteContextType } from './site-context.model';\n\nconst LABELS = {\n  [LANGUAGE_CONTEXT_ID]: 'Language',\n  [CURRENCY_CONTEXT_ID]: 'Currency',\n};\n\n@Injectable()\nexport class SiteContextComponentService {\n  constructor(\n    @Optional()\n    protected componentData: CmsComponentData<CmsSiteContextSelectorComponent>,\n    private contextServiceMap: ContextServiceMap,\n    protected injector: Injector\n  ) {}\n\n  getItems(context?: SiteContextType): Observable<any> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getAll()),\n      switchMap((items) =>\n        this.getContext(context).pipe(\n          switchMap((ctx) => {\n            const itemsCopy = [];\n            for (const item of items) {\n              itemsCopy.push({\n                ...item,\n                label: this.getOptionLabel(item, ctx),\n              });\n            }\n            return of(itemsCopy);\n          })\n        )\n      )\n    );\n  }\n\n  getActiveItem(context?: SiteContextType): Observable<string> {\n    return this.getService(context).pipe(\n      switchMap((service: SiteContext<any>) => service.getActive())\n    );\n  }\n\n  getLabel(context?: SiteContextType): Observable<any> {\n    return this.getContext(context).pipe(\n      map((ctx) => {\n        return LABELS[ctx];\n      })\n    );\n  }\n\n  setActive(value: string, context?: SiteContextType): void {\n    this.getService(context)\n      .pipe(take(1))\n      .subscribe((service) => {\n        service.setActive(value);\n      });\n  }\n\n  protected getService(\n    context?: SiteContextType\n  ): Observable<SiteContext<any>> {\n    return this.getContext(context).pipe(\n      map((ctx: string) => (ctx ? this.getInjectedService(ctx) : undefined)),\n      filter((s) => !!s)\n    );\n  }\n\n  protected getContext(context?: SiteContextType): Observable<string> {\n    if (context) {\n      return of(context);\n    } else if (this.componentData) {\n      return this.componentData.data$.pipe(\n        map((data) => data?.context),\n        map((ctx) => {\n          switch (ctx) {\n            case 'LANGUAGE':\n              return LANGUAGE_CONTEXT_ID;\n            case 'CURRENCY':\n              return CURRENCY_CONTEXT_ID;\n            default:\n              return ctx;\n          }\n        })\n      );\n    }\n  }\n\n  protected getInjectedService(context: string): SiteContext<any> {\n    return this.injector.get<SiteContext<any>>(\n      this.contextServiceMap[context],\n      null\n    );\n  }\n\n  protected getOptionLabel(item: any, context?: string): string {\n    switch (context) {\n      case LANGUAGE_CONTEXT_ID:\n        return item.nativeName;\n      case CURRENCY_CONTEXT_ID:\n        return item.symbol + ' ' + item.isocode;\n      default:\n        return item.isocode;\n    }\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { SiteContext } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../icon/icon.model';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextType } from './site-context.model';\n\n@Component({\n  selector: 'cx-site-context-selector',\n  templateUrl: './site-context-selector.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SiteContextSelectorComponent {\n  siteContextService: SiteContext<any>;\n  iconTypes = ICON_TYPE;\n  /**\n   * the context type can be set as an input. If the context is\n   * not given, the context will be loaded from the backend.\n   */\n  @Input() context: SiteContextType;\n\n  constructor(private componentService: SiteContextComponentService) {}\n\n  get items$(): Observable<any> {\n    return this.componentService.getItems(this.context);\n  }\n\n  get activeItem$(): Observable<string> {\n    return this.componentService.getActiveItem(this.context);\n  }\n\n  set active(value: string) {\n    this.componentService.setActive(value, this.context);\n  }\n\n  get label$(): Observable<any> {\n    return this.componentService.getLabel(this.context);\n  }\n}\n","<label *ngIf=\"(items$ | async)?.length > 1 && (items$ | async) as items\">\n  <span>{{ label$ | async }}</span>\n  <select (change)=\"active = $event.target.value\">\n    <option\n      *ngFor=\"let item of items\"\n      value=\"{{ item.isocode }}\"\n      [selected]=\"(activeItem$ | async) === item.isocode\"\n    >\n      {{ item.label }}\n    </option></select\n  ><cx-icon [type]=\"iconTypes.CARET_DOWN\" class=\"small\"></cx-icon>\n</label>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  selector: 'cx-language-currency-selector',\n  template: `\n    <cx-site-context-selector context=\"language\"></cx-site-context-selector>\n    <cx-site-context-selector context=\"currency\"></cx-site-context-selector>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LanguageCurrencyComponent {}\n","import { CommonModule } from '@angular/common';\nimport { Injector, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  ContextServiceMap,\n  provideDefaultConfig,\n  SiteContextModule,\n} from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { IconModule } from '../icon/index';\nimport { LanguageCurrencyComponent } from './language-currency.component';\nimport { SiteContextComponentService } from './site-context-component.service';\nimport { SiteContextSelectorComponent } from './site-context-selector.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, SiteContextModule, IconModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSSiteContextComponent: {\n          component: SiteContextSelectorComponent,\n          providers: [\n            {\n              provide: SiteContextComponentService,\n              useClass: SiteContextComponentService,\n              deps: [CmsComponentData, ContextServiceMap, Injector],\n            },\n          ],\n        },\n        LanguageCurrencyComponent: {\n          component: LanguageCurrencyComponent,\n        },\n      },\n    }),\n    SiteContextComponentService,\n  ],\n  declarations: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n  exports: [SiteContextSelectorComponent, LanguageCurrencyComponent],\n})\nexport class SiteContextSelectorModule {}\n","export enum SiteContextType {\n  LANGUAGE = 'LANGUAGE',\n  CURRENCY = 'CURRENCY',\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../cms-components/misc/index';\n\n/**\n * Star rating component can be used to view existing ratings as well\n * as create new ratings. The component can be used for any ratings.\n */\n@Component({\n  selector: 'cx-star-rating',\n  templateUrl: './star-rating.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StarRatingComponent {\n  protected initialRate = 0;\n\n  icon = ICON_TYPE.STAR;\n\n  /**\n   * The rating component can be used in disabled mode,\n   * so that the interaction is not provided.\n   *\n   * Defaults to true.\n   */\n  @Input() @HostBinding('attr.disabled') disabled = true;\n\n  /**\n   * The rating is used to color the rating stars. It can have a\n   * precise number. The rating number is used for a CSS custom property\n   * (AKA css variable) value. The actually coloring is done in CSS.\n   */\n  @Input()\n  @HostBinding('style.--star-fill')\n  rating: number = this.initialRate;\n\n  /**\n   * Emits the given rating when the user clicks on a star.\n   */\n  // eslint-disable-next-line @angular-eslint/no-output-native\n  @Output() change = new EventEmitter<number>();\n\n  setRate(value: number): void {\n    if (this.disabled) {\n      return;\n    }\n    this.rating = value;\n  }\n\n  @HostListener('mouseout')\n  reset() {\n    if (this.disabled) {\n      return;\n    }\n    this.rating = this.initialRate ?? 0;\n  }\n\n  saveRate(rating: number): void {\n    if (this.disabled) {\n      return;\n    }\n    this.initialRate = rating;\n    this.setRate(rating);\n    this.change.emit(rating);\n  }\n}\n","<cx-icon\n  *ngFor=\"let i of [1, 2, 3, 4, 5]\"\n  [type]=\"icon\"\n  class=\"star\"\n  (mouseover)=\"setRate(i)\"\n  (click)=\"saveRate(i)\"\n  (keydown.space)=\"saveRate(i)\"\n  [attr.tabindex]=\"disabled ? null : 0\"\n></cx-icon>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { IconModule } from '../../../cms-components/misc/index';\nimport { StarRatingComponent } from './star-rating.component';\n\n@NgModule({\n  imports: [CommonModule, IconModule],\n  declarations: [StarRatingComponent],\n  exports: [StarRatingComponent],\n})\nexport class StarRatingModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport { OutletContextData } from '../../../../cms-structure/outlet/outlet.model';\nimport { TableHeaderOutletContext } from '../table.model';\n\n@Component({\n  selector: 'cx-table-data-cell',\n  template: `{{ value }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableDataCellComponent {\n  constructor(protected outlet: OutletContextData<TableHeaderOutletContext>) {}\n\n  @HostBinding('attr.title')\n  get value(): string {\n    return this.model[this.field];\n  }\n\n  protected get model(): any {\n    return this.outlet?.context;\n  }\n\n  protected get field(): string {\n    return this.outlet?.context?._field;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { OutletContextData } from '../../../../cms-structure/outlet/outlet.model';\nimport {\n  TableFieldOptions,\n  TableHeader,\n  TableHeaderOutletContext,\n} from '../table.model';\n\n@Component({\n  selector: 'cx-table-header-cell',\n  template: `{{ header || (localizedHeader | cxTranslate) }}`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableHeaderCellComponent {\n  constructor(protected outlet: OutletContextData<TableHeaderOutletContext>) {}\n\n  /**\n   * Returns the static label for the given field, if available.\n   */\n  get header(): string {\n    if (typeof this.fieldOptions?.label === 'string') {\n      return <string>this.fieldOptions.label;\n    }\n  }\n\n  /**\n   * Returns the localized label for the given field.\n   *\n   * The localized label is either driven by the configured `label.i18nKey`\n   * or concatenated by the table `type` and field `key`:\n   *\n   * `[tableType].[fieldKey]`\n   *\n   * The localized header can be translated with the `cxTranslate` pipe or `TranslationService`.\n   */\n  get localizedHeader(): string {\n    return (\n      (this.fieldOptions?.label as TableHeader)?.i18nKey ||\n      `${this.i18nRoot}.${this.field}`\n    );\n  }\n\n  protected get fieldOptions(): TableFieldOptions {\n    return this.outlet?.context._options?.cells?.[this.field];\n  }\n\n  protected get field(): string {\n    return this.outlet?.context?._field;\n  }\n\n  protected get type(): string {\n    return this.outlet?.context?._type;\n  }\n\n  protected get i18nRoot(): string {\n    return this.outlet?.context?._i18nRoot;\n  }\n}\n","import { TableDataCellComponent } from '../table-data-cell/table-data-cell.component';\nimport { TableHeaderCellComponent } from '../table-header-cell/table-header-cell.component';\nimport { TableConfig } from './table.config';\n\nexport const defaultTableConfig: TableConfig = {\n  tableOptions: {\n    headerComponent: TableHeaderCellComponent,\n    dataComponent: TableDataCellComponent,\n  },\n};\n","import { Injectable, Type } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { BREAKPOINT } from '../../../../layout/config/layout-config';\nimport { TableStructureConfiguration } from '../table.model';\n\n/**\n * The `TableConfig` provides a table configurations for specific table types. You can define\n * an all-screen table structure as well as a breakpoint specific table structure. The various\n * table structures are merged from small to large screen configurations, depending on the users\n * screen size.\n *\n * The `table.type` is used as a key to distinguish the various table configurations in the application.\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class TableConfig {\n  table?: {\n    [tableType: string]: ResponsiveTableConfiguration;\n  };\n  tableOptions?: {\n    /**\n     * Global component to render table header _content_ (`<th>...</th>`). A specific component\n     * can be configured alternatively per table or table field.\n     */\n    headerComponent?: Type<any>;\n\n    /**\n     * Global component to render table cell _content_ (`<td>...</td>`). A specific component per\n     * field can be configured alternatively.\n     *\n     * If no component is available, the table content will render as-is.\n     */\n    dataComponent?: Type<any>;\n  };\n}\n\n/**\n * Helper configuration to introduce breakpoint specific table configuration.\n */\nexport interface ResponsiveTableConfiguration\n  extends TableStructureConfiguration {\n  /** The table configurations for all screens */\n  [BREAKPOINT.xl]?: TableStructureConfiguration;\n  /** The table configurations for large screens and smaller */\n  [BREAKPOINT.lg]?: TableStructureConfiguration;\n  /** The table configurations for medium screens and smaller */\n  [BREAKPOINT.md]?: TableStructureConfiguration;\n  /** The table configurations for small screens and smaller */\n  [BREAKPOINT.sm]?: TableStructureConfiguration;\n  /** The table configurations for extra small screens */\n  [BREAKPOINT.xs]?: TableStructureConfiguration;\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends TableConfig {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { TableDataCellComponent } from './table-data-cell.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [TableDataCellComponent],\n})\nexport class TableDataCellModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { TableHeaderCellComponent } from './table-header-cell.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  declarations: [TableHeaderCellComponent],\n})\nexport class TableHeaderCellModule {}\n","import { ComponentFactoryResolver, Injectable, Type } from '@angular/core';\nimport { OutletService } from '../../../cms-structure/outlet/outlet.service';\nimport { TableConfig } from './config/table.config';\nimport {\n  TableDataOutletContext,\n  TableHeaderOutletContext,\n  TableOptions,\n  TableStructure,\n} from './table.model';\n\n/**\n * The table renderer service adds a component for each table cells (th and td)\n * based on a fine grained configuration. Each table type can configure both global\n * components for headers and cells as well as individual components for field\n * specific cells.\n *\n * The components are added to the outlet slots for the corresponding cells. The table\n * structure and data is added to the outlet context.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TableRendererService {\n  // keep a list of outletRefs to avoid recreation\n  protected outletRefs = new Map();\n\n  constructor(\n    protected outletService: OutletService,\n    protected componentFactoryResolver: ComponentFactoryResolver,\n    protected config: TableConfig\n  ) {}\n\n  /**\n   * Adds the configured table component for the header and data.\n   */\n  add(structure: TableStructure): void {\n    structure?.cells?.forEach((field) => {\n      const thRenderer = this.getHeaderRenderer(structure, field);\n      if (thRenderer) {\n        const ref = this.getHeaderOutletRef(structure.type, field);\n        this.render(ref, thRenderer);\n      }\n      const tdRenderer = this.getDataRenderer(structure, field);\n      if (tdRenderer) {\n        const ref = this.getDataOutletRef(structure.type, field);\n        this.render(ref, tdRenderer);\n      }\n    });\n  }\n\n  protected render(outletRef: string, renderer: Type<any>) {\n    if (this.outletRefs.has(outletRef)) {\n      return;\n    }\n    this.outletRefs.set(outletRef, true);\n    const template =\n      this.componentFactoryResolver.resolveComponentFactory(renderer);\n    this.outletService.add(outletRef, <any>template);\n  }\n\n  /**\n   * Returns the header render component for the given field.\n   */\n  protected getHeaderRenderer(\n    structure: TableStructure,\n    field: string\n  ): Type<any> {\n    return (\n      structure.options?.cells?.[field]?.headerComponent ||\n      structure.options?.headerComponent ||\n      this.config.tableOptions?.headerComponent\n    );\n  }\n\n  /**\n   * Returns the data render component for the given field.\n   */\n  protected getDataRenderer(\n    structure: TableStructure,\n    field: string\n  ): Type<any> {\n    return (\n      structure.options?.cells?.[field]?.dataComponent ||\n      structure.options?.dataComponent ||\n      this.config.tableOptions?.dataComponent\n    );\n  }\n\n  /**\n   * Returns the header (th) outlet reference for the given field.\n   *\n   * The outlet reference is generated as:\n   * `table.[tableType].header.[field]`\n   */\n  getHeaderOutletRef(type: string, field: string): string {\n    return `table.${type}.header.${field}`;\n  }\n\n  /**\n   * Returns the header (th) outlet context for the given field.\n   */\n  getHeaderOutletContext(\n    type: string,\n    options: TableOptions,\n    i18nRoot: string,\n    field: string\n  ): TableHeaderOutletContext {\n    return {\n      _type: type,\n      _options: options,\n      _field: field,\n      _i18nRoot: i18nRoot,\n    };\n  }\n\n  /**\n   * Returns the data (td) outlet reference for the given field.\n   *\n   * The field is generated as:\n   * `table.[tableType].data.[tableField]`\n   */\n  getDataOutletRef(type: string, field: string): string {\n    return `table.${type}.data.${field}`;\n  }\n\n  /**\n   * Returns the data (td) outlet context for the given field.\n   */\n  getDataOutletContext(\n    type: string,\n    options: TableOptions,\n    i18nRoot: string,\n    field: string,\n    data: any\n  ): TableDataOutletContext {\n    return {\n      ...data,\n      _type: type,\n      _options: options,\n      _field: field,\n      _i18nRoot: i18nRoot,\n    };\n  }\n}\n","import { Type } from '@angular/core';\nimport { PaginationModel } from '@spartacus/core';\n\n/**\n * Contains the table data and structure for the `TableComponent`.\n */\nexport interface Table<T = any> {\n  /**\n   * The table structure provides details about the headers of the table.\n   */\n  structure: TableStructure;\n\n  /**\n   * The data that is listed in the table component.\n   */\n  data: T[];\n\n  /**\n   * The pagination component is used to paginate through the data.\n   */\n  pagination?: PaginationModel;\n\n  /**\n   * The sort options for the table.\n   */\n  sorts?: any[];\n}\n\nexport interface TableStructureConfiguration {\n  /**\n   * Provide the bare structure of the table.\n   */\n  cells?: string[];\n\n  /**\n   * Global table structure options.\n   */\n  options?: TableOptions;\n}\n\nexport interface TableOptions {\n  /**\n   * Default pagination for the table that is used for the initial load of the table data.\n   */\n  pagination?: PaginationModel;\n\n  /**\n   * The layout for the table component can be used for horizontal, vertical and vertical stacked\n   * table layouts.\n   */\n  layout?: TableLayout;\n\n  /**\n   * Global component to render table header _content_ (`<th>...</th>`). A specific component per\n   * field can be configured alternatively.\n   *\n   * If no component is available, the table component will render a static label or use the\n   * configured i18n label.\n   */\n  headerComponent?: Type<any>;\n\n  /**\n   * Global component to render table cell _content_ (`<td>...</td>`). A specific component per\n   * field can be configured alternatively.\n   *\n   * If no component is available, the table content will render as-is.\n   */\n  dataComponent?: Type<any>;\n\n  // field specific options\n  cells?: {\n    [fieldKey: string]: TableFieldOptions;\n  };\n}\n\n/**\n * Layout orientation for the table configuration.\n */\nexport enum TableLayout {\n  /**\n   * Renders the table vertically, with a heading on top of the table.\n   *\n   * Vertical layout is most common and the default layout.\n   */\n  VERTICAL = 1,\n\n  /**\n   * Stacks items in a tables by generating a `tbody` for each item.\n   */\n  VERTICAL_STACKED,\n\n  /**\n   * Horizontal oriented table layout renders the table headers in the first column of the table.\n   */\n  HORIZONTAL,\n}\n\nexport interface TableFieldOptions {\n  /**\n   * Optional label to add static or localized headers. If the label is not present, the\n   * field key is mapped to a i18n property.\n   */\n  label?: string | TableHeader;\n\n  /**\n   * Indicates wether the cell is linkable.\n   *\n   * If the cells is linkable, an anchor link can be generated in the table data element.\n   */\n  linkable?: boolean;\n\n  /**\n   * Component to render table header _content_ (`<th>...</th>`) for the table field.\n   *\n   * If no component is configured, the global table component for the header will be used\n   * instead.\n   */\n  headerComponent?: Type<any>;\n\n  /**\n   * Component to render table data _content_ (`<td>...</td>`) for the table field.\n   *\n   * If no component is configured, the global table component for the cell data will be used\n   * instead.\n   */\n  dataComponent?: Type<any>;\n}\n\n/**\n * The TableStructure holds the header structure of the table.\n */\nexport interface TableStructure extends TableStructureConfiguration {\n  /**\n   * The table type is a mandatory property. The type is used to identify the table\n   * configuration and is used to generate a unique outlet reference.\n   */\n  type: string;\n}\n\n/**\n * Provides the core table structure, typically being used to render table columns.\n */\nexport interface TableHeader {\n  /**\n   * The header key is used to:\n   * - generate a unique class on each table row\n   * - generate a template for each table header cell and data cell\n   * - translate the key using the translate module\n   *   (fallback in case there is no label available)\n   */\n  i18nKey?: string;\n}\n\nexport interface TableHeaderOutletContext {\n  _type: string;\n  _field: string;\n  _options?: TableOptions;\n  /**\n   * The i18nRoot is used to build localized table headers. The i18nRoot\n   * is used as a prefix for the `_field`. Table header labels wil use the\n   * following locales:\n   *\n   * `[i18nRoot].[_field]`\n   */\n  _i18nRoot?: string;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface TableDataOutletContext extends TableHeaderOutletContext {\n  [property: string]: any;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  HostBinding,\n  Input,\n  isDevMode,\n  Output,\n} from '@angular/core';\nimport { TableRendererService } from './table-renderer.service';\nimport {\n  TableDataOutletContext,\n  TableHeaderOutletContext,\n  TableLayout,\n  TableStructure,\n} from './table.model';\n\n/**\n * The table component provides a generic table DOM structure, with 3 layout types:\n * horizontal, vertical and _stacked vertical_ layout. The layout is driven by the\n * table structure.\n *\n * The implementation is fairly \"dumb\" and only renders string based content for TH\n * and TD elements. The actual cell rendering is delegated to a (configurable) cell\n * component. Additionally, each cell is registered as an outlet, so that customizations\n * can be done by both outlet templates and components.\n *\n * The outlet references are concatenated from the table `type` and header `key`. The\n * following snippet shows an outlet generated for a table header, for the table type\n * \"cost-center\" with a header key \"name\":\n *\n * ```\n * <th>\n *   <template cxOutlet=\"table.cost-center.header.name\">\n *   </template>\n * </th>\n * ```\n *\n * Similarly, the data cells (`<td>`) are generated with the outlet template reference\n * `table.cost-center.data.name`.\n */\n@Component({\n  selector: 'cx-table',\n  templateUrl: './table.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TableComponent<T> {\n  @HostBinding('attr.__cx-table-type') tableType: string;\n  @HostBinding('class.horizontal') horizontalLayout: boolean;\n  @HostBinding('class.vertical') verticalLayout: boolean;\n  @HostBinding('class.vertical-stacked') verticalStackedLayout: boolean;\n\n  private _structure: TableStructure;\n  @Input() set structure(structure: TableStructure) {\n    this._structure = structure;\n    this.init();\n  }\n  get structure(): TableStructure {\n    return this._structure;\n  }\n\n  @Input() data: T[];\n\n  /**\n   * The i18nRoot is passed into the table cell context, so that\n   * cell components can concatenate the i18n root and label.\n   */\n  @Input() i18nRoot: string;\n\n  /**\n   * Provides a mechanism to compare a matching value for each item.\n   *\n   * The `property` refers to the dataset.value property, and the value tot the\n   * matching property value.\n   */\n  @Input() currentItem: { value: any; property: string };\n\n  @Output() launch = new EventEmitter();\n\n  constructor(protected rendererService: TableRendererService) {}\n\n  init() {\n    this.verticalLayout = !this.layout || this.layout === TableLayout.VERTICAL;\n    this.verticalStackedLayout = this.layout === TableLayout.VERTICAL_STACKED;\n    this.horizontalLayout = this.layout === TableLayout.HORIZONTAL;\n\n    this.rendererService.add(this.structure);\n\n    this.addTableDebugInfo();\n  }\n\n  launchItem(item: any): void {\n    this.launch.emit(item);\n  }\n\n  /**\n   * Indicates whether the given item is the current item.\n   *\n   * The current item is driven by the `currentItem`, that holds a\n   * property and value to compare.\n   */\n  isCurrentItem(item: any): boolean {\n    if (!this.currentItem || !this.currentItem.value) {\n      return false;\n    }\n    return this.currentItem?.value === item?.[this.currentItem?.property];\n  }\n\n  /**\n   * Returns the header (th) outlet reference for the given field.\n   */\n  getHeaderOutletRef(field: string): string {\n    return this.rendererService.getHeaderOutletRef(this.type, field);\n  }\n\n  /**\n   * Returns the header (th) outlet context for the given field.\n   */\n  getHeaderOutletContext(field: string): TableHeaderOutletContext {\n    return this.rendererService.getHeaderOutletContext(\n      this.type,\n      this.options,\n      this.i18nRoot,\n      field\n    );\n  }\n\n  /**\n   * Returns the data (td) outlet reference for the given field.\n   */\n  getDataOutletRef(field: string): string {\n    return this.rendererService.getDataOutletRef(this.type, field);\n  }\n\n  /**\n   * Returns the data (td) outlet context for the given field.\n   */\n  getDataOutletContext(field: string, data: any): TableDataOutletContext {\n    return this.rendererService.getDataOutletContext(\n      this.type,\n      this.options,\n      this.i18nRoot,\n      field,\n      data\n    );\n  }\n\n  trackData(_i: number, item: any): any {\n    return JSON.stringify(item);\n  }\n\n  /**\n   * Generates the table type into the UI in devMode, so that developers\n   * can easily get the notion of the table type.\n   */\n  protected addTableDebugInfo() {\n    if (isDevMode() && this.type) {\n      this.tableType = this.type;\n    }\n  }\n\n  /**\n   * Helper method to return the deeply nested orientation configuration.\n   */\n  private get layout() {\n    return this.structure?.options?.layout;\n  }\n\n  /**\n   * Helper method to return the deeply nested type.\n   */\n  private get type() {\n    return this.structure?.type;\n  }\n\n  private get options() {\n    return this.structure?.options;\n  }\n}\n","<table *ngIf=\"structure\">\n  <ng-container *ngIf=\"verticalStackedLayout\">\n    <tbody\n      *ngFor=\"let item of data; trackBy: trackData\"\n      (click)=\"launchItem(item)\"\n      [class.is-current]=\"isCurrentItem(item)\"\n    >\n      <tr *ngFor=\"let cell of structure.cells\" [class]=\"cell\">\n        <th>\n          <ng-template\n            [cxOutlet]=\"getHeaderOutletRef(cell)\"\n            [cxOutletContext]=\"getHeaderOutletContext(cell)\"\n          >\n            {{ cell }}\n          </ng-template>\n        </th>\n        <td>\n          <ng-template\n            [cxOutlet]=\"getDataOutletRef(cell)\"\n            [cxOutletContext]=\"getDataOutletContext(cell, item)\"\n          >\n            {{ item[cell] }}\n          </ng-template>\n        </td>\n      </tr>\n    </tbody>\n  </ng-container>\n\n  <!-- vertical tables render the item  -->\n  <ng-container *ngIf=\"verticalLayout\">\n    <thead>\n      <tr>\n        <th scope=\"col\" *ngFor=\"let cell of structure.cells\" [class]=\"cell\">\n          <ng-template\n            [cxOutlet]=\"getHeaderOutletRef(cell)\"\n            [cxOutletContext]=\"getHeaderOutletContext(cell)\"\n          >\n            {{ cell }}\n          </ng-template>\n        </th>\n      </tr>\n    </thead>\n\n    <tr\n      *ngFor=\"let item of data; trackBy: trackData\"\n      [class.is-current]=\"isCurrentItem(item)\"\n      (click)=\"launchItem(item)\"\n    >\n      <td *ngFor=\"let cell of structure.cells; let i = index\" [class]=\"cell\">\n        <ng-template\n          [cxOutlet]=\"getDataOutletRef(cell)\"\n          [cxOutletContext]=\"getDataOutletContext(cell, item)\"\n        >\n          {{ item[cell] }}\n        </ng-template>\n      </td>\n    </tr>\n  </ng-container>\n\n  <ng-container *ngIf=\"horizontalLayout\">\n    <tr *ngFor=\"let cell of structure.cells\" [class]=\"cell\">\n      <th scope=\"col\">\n        <ng-template\n          [cxOutlet]=\"getHeaderOutletRef(cell)\"\n          [cxOutletContext]=\"getHeaderOutletContext(cell)\"\n        >\n          {{ cell }}\n        </ng-template>\n      </th>\n      <td\n        *ngFor=\"let item of data; trackBy: trackData\"\n        [class.is-current]=\"isCurrentItem(item)\"\n        (click)=\"launchItem(item)\"\n      >\n        <ng-template\n          [cxOutlet]=\"getDataOutletRef(cell)\"\n          [cxOutletContext]=\"getDataOutletContext(cell, item)\"\n        >\n          {{ item[cell] }}\n        </ng-template>\n      </td>\n    </tr>\n  </ng-container>\n</table>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { provideConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { defaultTableConfig } from './config/default-table.config';\nimport { TableDataCellModule } from './table-data-cell/table-data-cell.module';\nimport { TableHeaderCellModule } from './table-header-cell/table-header-cell.module';\nimport { TableComponent } from './table.component';\n\n/**\n * The TableModule provides a table component that is driven by (responsible) configuration.\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    OutletModule,\n    TableHeaderCellModule,\n    TableDataCellModule,\n  ],\n  declarations: [TableComponent],\n  exports: [TableComponent],\n  providers: [provideConfig(defaultTableConfig)],\n})\nexport class TableModule {}\n","import { Injectable, isDevMode } from '@angular/core';\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\nimport {\n  ResponsiveTableConfiguration,\n  TableConfig,\n} from './config/table.config';\nimport { TableStructure, TableStructureConfiguration } from './table.model';\n\n/**\n * Responsive table service.\n *\n * The `TableService` is used to build a `TableStructure` by configuration. The configuration\n * allows for breakpoint specific configuration, so that the table can differentiate for\n * various screen sizes.\n *\n * While there are some global options, the configuration is mainly driven by the table _type_.\n *\n * If there is no table configuration for the given type found, a table header structure\n * is generated based on the actual data (if available) or randomly by generating 5 random headers.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class TableService {\n  constructor(\n    protected breakpointService: BreakpointService,\n    protected config: TableConfig\n  ) {}\n\n  /**\n   * Builds the table structure.\n   *\n   * @param tableType The table type is used  to find the specific table configuration.\n   * @param defaultStructure (optional) Default table structure that contains fallback options. More specific options are merged with the default structure.\n   * @param data$ (optional) The actual data can be passed in to generate the table structure based on actual data.\n   */\n  buildStructure(\n    tableType: string,\n    defaultStructure?: ResponsiveTableConfiguration\n  ): Observable<TableStructure> {\n    if (this.hasTableConfig(tableType)) {\n      return this.buildStructureFromConfig(tableType, defaultStructure);\n    } else {\n      return this.buildRandomStructure(tableType);\n    }\n  }\n\n  /**\n   * Returns the table structure by configuration. The configuration can be\n   * breakpoint-driven, which means that an alternative header structure can\n   * be created per screen size.\n   *\n   * The breakpoint is resolved by teh `BreakpointService`.\n   */\n  protected buildStructureFromConfig(\n    type: string,\n    defaultStructure?: ResponsiveTableConfiguration\n  ): Observable<TableStructure> {\n    return this.breakpointService.breakpoint$.pipe(\n      map((breakpoint) => ({\n        ...this.getTableConfig(type, breakpoint, defaultStructure),\n        type,\n      }))\n    );\n  }\n\n  /**\n   * Finds all applicable table configuration for the given type and breakpoint.\n   * The default table configuration is merged with all relevant breakpoint\n   * configurations.\n   *\n   * This allows to have some default configurations that apply to all screens, and\n   * add configuration options for some screens.\n   */\n  protected getTableConfig(\n    type: string,\n    breakpoint: BREAKPOINT,\n    defaultStructure?: ResponsiveTableConfiguration\n  ): TableStructureConfiguration {\n    if (!this.config.table?.[type]) {\n      return null;\n    }\n\n    const relevant = this.findRelevantBreakpoints(breakpoint);\n\n    const closestBreakpoint = [...relevant]\n      .reverse()\n      .find((br) => !!this.config.table[type][br]?.cells);\n    const cells =\n      this.config.table[type][closestBreakpoint]?.cells ||\n      this.config.table[type].cells ||\n      defaultStructure?.cells;\n\n    // add all default table configurations\n    let options = {\n      ...defaultStructure?.options,\n      ...this.config.table[type].options,\n    };\n\n    // We merge all table options for smaller breakpoints into the global\n    // options, so we inherit options.\n    relevant.forEach((br) => {\n      options = {\n        ...options,\n        ...defaultStructure?.[br]?.options,\n        ...this.config.table[type]?.[br]?.options,\n      };\n    });\n\n    return { cells, options };\n  }\n\n  /**\n   * Generates the table structure by the help of the first data row.\n   */\n  protected buildStructureFromData(\n    type: string,\n    data$: Observable<any>\n  ): Observable<TableStructure> {\n    this.logWarning(\n      `No table configuration found to render table with type \"${type}\". The table header for \"${type}\" is generated by the help of the first data item`\n    );\n    return data$.pipe(\n      map((data: any[]) => {\n        const cells = Object.keys(data?.[0]).map((key) => key);\n        return { type, cells } as TableStructure;\n      })\n    );\n  }\n\n  /**\n   * As a last resort, the table structure is randomly created. The random structure\n   * contains 5 headers, so that some of the unknown data is visualized.\n   */\n  protected buildRandomStructure(type: string): Observable<TableStructure> {\n    this.logWarning(\n      `No data available for \"${type}\", a random structure is generated (with hidden table headers).`\n    );\n    return of({\n      type,\n      cells: ['unknown', 'unknown', 'unknown', 'unknown', 'unknown'],\n    });\n  }\n\n  /**\n   * Finds all the breakpoints can contribute to the table configuration, from small\n   * to current.\n   *\n   * For example, if the current breakpoint is `MD`, this returns `[XS, SM, MD]`.\n   */\n  protected findRelevantBreakpoints(breakpoint: BREAKPOINT): BREAKPOINT[] {\n    const current = this.breakpointService.breakpoints.indexOf(breakpoint);\n    return this.breakpointService.breakpoints.slice(0, current + 1);\n  }\n\n  /**\n   * Indicates if the there is a configuration for the table available.\n   */\n  protected hasTableConfig(tableType: string): boolean {\n    return !!this.config.table?.[tableType];\n  }\n\n  /**\n   * Logs a message in the console to increase developer experience.\n   *\n   * The message is only logged in dev mode.\n   */\n  private logWarning(message) {\n    if (isDevMode()) {\n      console.warn(message);\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class ViewConfig {\n  view?: {\n    /**\n     * Configurations related to the view of the application\n     */\n    defaultPageSize?: number;\n    infiniteScroll?: {\n      active?: boolean;\n      productLimit?: number;\n      showMoreButton?: boolean;\n    };\n  };\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends ViewConfig {}\n}\n","import { Pipe, PipeTransform, Renderer2 } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\n\n/*\n * Supplements the anchor links that contain only the hash fragment in the `href` attribute,\n * (e.g. `<a href=\"#someId\">`), by prepending the current location (path and query params),\n * so it becomes a link to a full url\n * e.g. `<a href=\"https://domain.com/current/path?and=query-params#someId\">`.\n *\n * This helps to avoid the undesirable navigation to the homepage URL (`/#someId`)\n * when clicking the original link.\n *\n * It's useful for example for cms-provided content passed to the [innerHTML] directive.\n */\n@Pipe({ name: 'cxSupplementHashAnchors' })\nexport class SupplementHashAnchorsPipe implements PipeTransform {\n  constructor(protected renderer: Renderer2, protected winRef: WindowRef) {}\n\n  protected getPath(anchorId: string): string {\n    const currentUrlWithoutFragment = this.winRef.location.href.replace(\n      /#.*$/,\n      ''\n    );\n    return `${currentUrlWithoutFragment}${anchorId}`;\n  }\n\n  public transform(html: string): string {\n    const template = this.renderer.createElement('template');\n    template.innerHTML = html.trim();\n    const linkNodes: NodeList = template.content.querySelectorAll('a');\n\n    Array.from(linkNodes).forEach((link: HTMLAnchorElement) => {\n      const href = link.getAttribute('href');\n      if (href?.indexOf('#') === 0) {\n        this.renderer.setProperty(link, 'href', this.getPath(href));\n      }\n    });\n    return template.innerHTML;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { SupplementHashAnchorsPipe } from './supplement-hash-anchors.pipe';\n\n@NgModule({\n  declarations: [SupplementHashAnchorsPipe],\n  exports: [SupplementHashAnchorsPipe],\n})\nexport class SupplementHashAnchorsModule {}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FileDownloadService {\n  /**\n   * Triggers the browser downloading of the file from the given URL.\n   *\n   * @param {string} url URL to file.\n   * @param {string} [fileName] The optional parameter for defining filename\n   * (including the extension) when saving the file.\n   */\n  download(url: string, fileName?: string): void {\n    const link = document.createElement('a');\n\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${fileName}`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ExportFileOptions } from '../export-file-options';\nimport { FileDownloadService } from '../file-download.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ExportCsvFileService {\n  constructor(protected fileDownloadService: FileDownloadService) {}\n  /**\n   * Converts array of objects into CSV data structure.\n   *\n   * @param objectsArray Array of objects which should be converted to CSV.\n   * @param separator Separator for CSV data.\n   * @returns Processed string ready to be saved into file.\n   */\n  protected convert(objectsArray: string[][], separator: string): string {\n    return objectsArray.reduce((csvString: string, row: string[]) => {\n      const line = row.reduce((currentLine, column) => {\n        currentLine += currentLine !== '' ? separator : '';\n        const cell = column.includes(separator) ? `\"${column}\"` : column;\n        return `${currentLine}${cell}`;\n      }, '');\n      return `${csvString}${line}\\r\\n`;\n    }, '');\n  }\n\n  /**\n   * Creates and download CSV file.\n   *\n   * @param objectsArray Array of objects which should be converted to CSV.\n   * @param separator Separator for CSV data.\n   * @param fileOptions Exported file options.\n   */\n  download(\n    objectsArray: string[][],\n    separator: string,\n    fileOptions: ExportFileOptions\n  ): void {\n    const { fileName, type, extension } = fileOptions;\n    const fileContent = this.convert(objectsArray, separator);\n    const blob = new Blob([fileContent], { type });\n    const url = URL.createObjectURL(blob);\n\n    this.fileDownloadService.download(url, `${fileName}.${extension}`);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable, Observer } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FileReaderService {\n  /**\n   * Load text file\n   *\n   * @param file text file to extract the data\n   * @returns Observable from file reader\n   */\n  loadTextFile(file: File): Observable<string | ProgressEvent<FileReader>> {\n    return new Observable((observer: Observer<string>) => {\n      const fileReader: FileReader = new FileReader();\n      fileReader.readAsText(file);\n      fileReader.onload = () => {\n        observer.next(fileReader.result as string);\n        observer.complete();\n      };\n      fileReader.onerror = (error) => {\n        fileReader.abort();\n        observer.error(error);\n      };\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ValidationErrors } from '@angular/forms';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\nimport { FileReaderService } from '../file-reader.service';\nimport { CsvFileValidationErrors } from './csv-file-validation-errors';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ImportCsvFileService {\n  constructor(protected fileReaderService: FileReaderService) {}\n  /**\n   * Load CSV file.\n   *\n   * @param file File we want to load as CSV.\n   * @param separator Separator for CSV data.\n   * @return {Observable<string[][]>} Imported file\n   */\n  loadFile(file: File, separator: string): Observable<string[][]> {\n    return this.fileReaderService\n      .loadTextFile(file)\n      .pipe(map((res) => this.parse(res as string, separator)));\n  }\n\n  /**\n   * Combined csv validation\n   *\n   * @param file File we want to load as CSV.\n   * @param separator Separator for CSV data.\n   * @param isDataParsable (optional) Callback for verify that structure type is proper.\n   * @param maxEntries (optional) Limitation for maximum entries count.\n   * @return {Observable<CsvFileValidationErrors | null>} Result of validation\n   */\n  validateFile(\n    file: File,\n    {\n      separator,\n      isDataParsable,\n      maxEntries,\n    }: {\n      separator: string;\n      isDataParsable?: (data: string[][]) => boolean;\n      maxEntries?: number;\n    }\n  ): Observable<CsvFileValidationErrors | null> {\n    const errors: CsvFileValidationErrors = {};\n    return (\n      this.fileReaderService.loadTextFile(file) as Observable<string>\n    ).pipe(\n      tap((data: string) => {\n        this.validateEmpty(data, errors);\n      }),\n      map((res) => this.parse(res, separator)),\n      tap((data: string[][]) => {\n        this.validateNotParsable(data, errors, isDataParsable);\n        this.validateTooManyEntries(data, errors, maxEntries);\n      }),\n      catchError((errors) => of(errors)),\n      map(() => (Object.keys(errors).length === 0 ? null : errors))\n    );\n  }\n\n  /**\n   * Processes the CSV data\n   *\n   * @param csvString raw extracted data from CSV\n   * @param separator for csv data\n   * @param ignoreHeader (optional) flag allows for ignore headers row while reading\n   * @returns {string[][]} Parsed file\n   */\n  protected parse(\n    csvString: string,\n    separator: string,\n    ignoreHeader = true\n  ): string[][] {\n    return csvString\n      .split('\\n')\n      .map((row) => row.split(separator).map((cell) => cell.replace(/\"/g, '')))\n      .filter(\n        (value, index) => !(ignoreHeader && index === 0) && value[0] !== ''\n      );\n  }\n\n  protected validateEmpty(data: string, errors: ValidationErrors): void {\n    if (data.toString().length === 0) {\n      errors.empty = true;\n      throw errors;\n    }\n  }\n\n  protected validateTooManyEntries(\n    data: string[][],\n    errors: ValidationErrors,\n    maxEntries?: number\n  ): void {\n    if (maxEntries && data.length > maxEntries) {\n      errors.tooManyEntries = { maxEntries };\n      throw errors;\n    }\n  }\n\n  protected validateNotParsable(\n    data: string[][],\n    errors: ValidationErrors,\n    isDataParsable?: (data: string[][]) => boolean\n  ): void {\n    if (isDataParsable && !isDataParsable(data)) {\n      errors.notParsable = true;\n      throw errors;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FilesFormValidators {\n  /**\n   * Checks max size of file\n   *\n   * @param {number} maxSize Max size [MB]\n   * @returns Uses 'tooLarge' validator error with maxSize property\n   * @memberOf FilesFormValidators\n   */\n  maxSize(maxSize?: number): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const errors: ValidationErrors = {};\n      if (maxSize) {\n        const files: File[] = Array.from(control.value);\n        files.forEach((file: File) => {\n          if (file.size > maxSize * 1000000) {\n            const invalidFiles = errors.tooLarge?.invalidFiles ?? [];\n            errors.tooLarge = {\n              maxSize,\n              invalidFiles: [...invalidFiles, file.name],\n            };\n          }\n        });\n      }\n      return Object.keys(errors).length === 0 ? null : errors;\n    };\n  }\n}\n","import {\n  AbstractControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n} from '@angular/forms';\nimport { EMAIL_PATTERN, PASSWORD_PATTERN } from '@spartacus/core';\n\nexport class CustomFormValidators {\n  /**\n   * Checks control's value with predefined email regexp\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidEmail' validator error\n   * @memberof CustomFormValidators\n   */\n  static emailValidator(control: AbstractControl): ValidationErrors | null {\n    const email = control.value as string;\n\n    return email && (!email.length || email.match(EMAIL_PATTERN))\n      ? null\n      : { cxInvalidEmail: true };\n  }\n\n  /**\n   * Checks control's value with predefined password regexp\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxInvalidPassword' validator error\n   * @memberof CustomFormValidators\n   */\n  static passwordValidator(control: AbstractControl): ValidationErrors | null {\n    const password = control.value as string;\n\n    return password && (!password.length || password.match(PASSWORD_PATTERN))\n      ? null\n      : { cxInvalidPassword: true };\n  }\n\n  /**\n   * Checks if control's value is between 1 and 5\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxStarRatingEmpty' validator error\n   * @memberof CustomFormValidators\n   */\n  static starRatingEmpty(control: AbstractControl): ValidationErrors | null {\n    const rating = control.value as number;\n\n    return rating >= 1 && rating <= 5 ? null : { cxStarRatingEmpty: true };\n  }\n\n  /**\n   * Checks if two password controls match\n   *\n   * NOTE: Use it as a form validator and pass password control names as parameters\n   *\n   * @static\n   * @param {string} password First password control name\n   * @param {string} passwordConfirmation Second password control name\n   * @returns Uses 'cxPasswordsMustMatch' validator error\n   * @memberof CustomFormValidators\n   */\n  static passwordsMustMatch(\n    password: string,\n    passwordConfirmation: string\n  ): any {\n    const validator = (formGroup: FormGroup) =>\n      controlsMustMatch(\n        formGroup,\n        password,\n        passwordConfirmation,\n        'cxPasswordsMustMatch'\n      );\n\n    return validator;\n  }\n\n  /**\n   * Checks if two email controls match\n   *\n   * NOTE: Use it as a form validator and pass email control names as parameters\n   *\n   * @static\n   * @param {string} email First email control name\n   * @param {string} emailConfirmation Second email control name\n   * @returns Uses 'cxEmailsMustMatch' validator error\n   * @memberof CustomFormValidators\n   */\n  static emailsMustMatch(email: string, emailConfirmation: string): any {\n    const validator = (formGroup: FormGroup) =>\n      controlsMustMatch(\n        formGroup,\n        email,\n        emailConfirmation,\n        'cxEmailsMustMatch'\n      );\n\n    return validator;\n  }\n\n  /**\n   * Checks if control's value is euqal or greater than 0\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxNegativeAmount' validator error\n   * @memberof CustomFormValidators\n   */\n  static mustBePositive(control: AbstractControl): ValidationErrors | null {\n    const amount = control.value as number;\n\n    return amount >= 0 ? null : { cxNegativeAmount: true };\n  }\n\n  /**\n   * Checks if control's value does not contain any special characters\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {AbstractControl} control\n   * @returns {(ValidationErrors | null)} Uses 'cxContainsSpecialCharacters' validator error\n   * @memberof CustomFormValidators\n   */\n  static noSpecialCharacters(\n    control: AbstractControl\n  ): ValidationErrors | null {\n    const forbiddenChars = ['/'];\n    const str = String(control.value);\n    const containsSpecialChars = forbiddenChars.some((char) =>\n      str.includes(char)\n    );\n\n    return !containsSpecialChars ? null : { cxContainsSpecialCharacters: true };\n  }\n\n  /**\n   * Checks if control's value passes pattern\n   *\n   * NOTE: Use it as a control validator\n   *\n   * @static\n   * @param {(date: string) => boolean} isValidFormat Pattern verification function\n   * @returns {(control: AbstractControl): ValidationErrors | null} Uses 'pattern' validator error\n   * @memberof CustomFormValidators\n   */\n  static patternValidation(\n    isValidFormat: (date: string) => boolean\n  ): ValidatorFn {\n    const validator = (control: AbstractControl): ValidationErrors | null => {\n      const errors: ValidationErrors = {};\n      if (\n        control.value &&\n        control.value !== '' &&\n        !isValidFormat(control.value)\n      ) {\n        errors.pattern = true;\n      }\n      return Object.keys(errors).length === 0 ? null : errors;\n    };\n    return validator;\n  }\n\n  /**\n   * Checks if two email controls match\n   *\n   * NOTE: Use it as a form validator and pass dates for range\n   *\n   * @static\n   * @param {string} startDateKey First date control name\n   * @param {string} endDateKey Second date control name\n   * @param {(value: string) => Date} getDate Converting function\n   * @returns Uses 'min' and 'max validator error\n   * @memberof CustomFormValidators\n   */\n  static dateRange(\n    startDateKey: string,\n    endDateKey: string,\n    getDate: (value: string) => Date\n  ): (FormGroup) => any {\n    const validator = (formGroup: FormGroup): ValidationErrors | null => {\n      const startDateControl = formGroup.controls[startDateKey];\n      const endDateControl = formGroup.controls[endDateKey];\n      const startDate = getDate(startDateControl.value);\n      const endDate = getDate(endDateControl.value);\n      if (!startDateControl.errors?.pattern) {\n        if (startDate > endDate) {\n          startDateControl.setErrors({ max: true });\n        }\n      }\n      if (!endDateControl.errors?.pattern) {\n        if (endDate < startDate) {\n          endDateControl.setErrors({ min: true });\n        }\n      }\n      return null;\n    };\n    return validator;\n  }\n}\n\n/**\n * Generic function for validators, which checks if two passed controls match.\n *\n * @param formGroup\n * @param firstControlName First control to check\n * @param secondControlName Second control to check\n * @param errorName Error which will be returned by validator\n */\nexport function controlsMustMatch(\n  formGroup: FormGroup,\n  firstControlName: string,\n  secondControlName: string,\n  errorName: string\n): void {\n  const firstControl = formGroup.controls[firstControlName];\n  const secondControl = formGroup.controls[secondControlName];\n\n  if (secondControl.errors && !secondControl.errors[errorName]) {\n    return;\n  }\n\n  secondControl.setErrors(\n    firstControl.value !== secondControl.value ? { [errorName]: true } : null\n  );\n}\n","import { Title } from '@spartacus/core';\n\nexport const titleScores = {\n  mr: 1,\n  mrs: 2,\n  miss: 3,\n  ms: 4,\n  dr: 5,\n  rev: 6,\n};\n\nexport function sortTitles(title1: Title, title2: Title) {\n  if (!titleScores[title1.code] || !titleScores[title2.code]) {\n    return 1;\n  } else {\n    return titleScores[title1.code] - titleScores[title2.code];\n  }\n}\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Voucher, CartVoucherService } from '@spartacus/core';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-applied-coupons',\n  templateUrl: './applied-coupons.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AppliedCouponsComponent {\n  @Input()\n  vouchers: Voucher[];\n  @Input()\n  cartIsLoading = false;\n  @Input()\n  isReadOnly = false;\n\n  iconTypes = ICON_TYPE;\n\n  constructor(protected cartVoucherService: CartVoucherService) {}\n\n  public get sortedVouchers(): Voucher[] {\n    this.vouchers = this.vouchers || [];\n    return this.vouchers.slice().sort((a, b) => {\n      return a.code.localeCompare(b.code);\n    });\n  }\n\n  removeVoucher(voucherId: string) {\n    this.cartVoucherService.removeVoucher(voucherId);\n  }\n}\n","<div *ngIf=\"isReadOnly; else editableCoupons\">\n  <div *ngIf=\"sortedVouchers.length > 0\">\n    <div class=\"cx-applied-coupon-title\">\n      {{ 'voucher.vouchersApplied' | cxTranslate }}\n    </div>\n  </div>\n  <div\n    *ngFor=\"let voucher of sortedVouchers\"\n    class=\"coupon-summary cx-coupon-card textonly\"\n    role=\"filter\"\n  >\n    <span class=\"cx-applied-coupon-code\">{{ voucher.voucherCode }}</span>\n  </div>\n</div>\n\n<ng-template #editableCoupons>\n  <div class=\"row\">\n    <div\n      *ngFor=\"let voucher of sortedVouchers\"\n      class=\"col-sm-12 col-md-6 col-lg-12 cx-coupon-card-grid\"\n      role=\"filter\"\n    >\n      <div class=\"cx-coupon-apply cx-coupon-card cx-coupon-list-wrap\">\n        <span class=\"cx-cart-coupon-code\">{{ voucher.voucherCode }}</span>\n        <button\n          type=\"button\"\n          class=\"close\"\n          [attr.aria-label]=\"'common.close' | cxTranslate\"\n          (click)=\"removeVoucher(voucher.voucherCode)\"\n          [disabled]=\"cartIsLoading\"\n          [class.disabled]=\"cartIsLoading\"\n        >\n          <span aria-hidden=\"true\">\n            <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n          </span>\n        </button>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  ActiveCartService,\n  Cart,\n  CartVoucherService,\n  CustomerCoupon,\n  CustomerCouponSearchResult,\n  CustomerCouponService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-coupon',\n  templateUrl: './cart-coupon.component.html',\n})\nexport class CartCouponComponent implements OnInit, OnDestroy {\n  MAX_CUSTOMER_COUPON_PAGE = 100;\n  couponForm: FormGroup;\n  cartIsLoading$: Observable<boolean>;\n  cart$: Observable<Cart>;\n  cartId: string;\n  applicableCoupons: CustomerCoupon[];\n\n  protected ignoreCloseEvent = false;\n\n  protected subscription = new Subscription();\n\n  couponBoxIsActive = false;\n\n  constructor(\n    protected cartVoucherService: CartVoucherService,\n    protected formBuilder: FormBuilder,\n    protected customerCouponService: CustomerCouponService,\n    protected activeCartService: ActiveCartService\n  ) {}\n\n  ngOnInit() {\n    if (this.customerCouponService) {\n      this.customerCouponService.loadCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      );\n    }\n\n    this.cart$ = combineLatest([\n      this.activeCartService.getActive(),\n      this.activeCartService.getActiveCartId(),\n      this.customerCouponService.getCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      ),\n    ]).pipe(\n      tap(\n        ([cart, activeCardId, customerCoupons]: [\n          Cart,\n          string,\n          CustomerCouponSearchResult\n        ]) => {\n          this.cartId = activeCardId;\n          this.getApplicableCustomerCoupons(cart, customerCoupons.coupons);\n        }\n      ),\n      map(([cart]: [Cart, string, CustomerCouponSearchResult]) => cart)\n    );\n\n    this.cartIsLoading$ = this.activeCartService\n      .isStable()\n      .pipe(map((loaded) => !loaded));\n\n    this.cartVoucherService.resetAddVoucherProcessingState();\n\n    this.couponForm = this.formBuilder.group({\n      couponCode: ['', [Validators.required]],\n    });\n\n    // TODO(#7241): Replace process subscriptions with event listeners and drop process for ADD_VOUCHER\n    this.subscription.add(\n      this.cartVoucherService\n        .getAddVoucherResultSuccess()\n        .subscribe((success) => {\n          this.onSuccess(success);\n        })\n    );\n\n    // TODO(#7241): Replace process subscriptions with event listeners and drop process for ADD_VOUCHER\n    this.subscription.add(\n      this.cartVoucherService.getAddVoucherResultError().subscribe((error) => {\n        this.onError(error);\n      })\n    );\n  }\n\n  protected onError(error: boolean) {\n    if (error) {\n      this.customerCouponService.loadCustomerCoupons(\n        this.MAX_CUSTOMER_COUPON_PAGE\n      );\n      this.cartVoucherService.resetAddVoucherProcessingState();\n    }\n  }\n\n  onSuccess(success: boolean) {\n    if (success) {\n      this.couponForm.reset();\n      this.cartVoucherService.resetAddVoucherProcessingState();\n    }\n  }\n\n  protected getApplicableCustomerCoupons(\n    cart: Cart,\n    coupons: CustomerCoupon[]\n  ): void {\n    this.applicableCoupons = coupons || [];\n    if (cart.appliedVouchers) {\n      cart.appliedVouchers.forEach((appliedVoucher) => {\n        this.applicableCoupons = this.applicableCoupons.filter(\n          (coupon) => coupon.couponId !== appliedVoucher.code\n        );\n      });\n    }\n  }\n\n  applyVoucher(): void {\n    if (this.couponForm.valid) {\n      this.cartVoucherService.addVoucher(\n        this.couponForm.value.couponCode,\n        this.cartId\n      );\n    } else {\n      this.couponForm.markAllAsTouched();\n    }\n  }\n\n  applyCustomerCoupon(couponId: string): void {\n    this.cartVoucherService.addVoucher(couponId, this.cartId);\n    this.couponBoxIsActive = false;\n  }\n\n  close(event: UIEvent): void {\n    if (!this.ignoreCloseEvent) {\n      this.couponBoxIsActive = false;\n      if (event && event.target) {\n        (<HTMLElement>event.target).blur();\n      }\n    }\n    this.ignoreCloseEvent = false;\n  }\n\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n    this.cartVoucherService.resetAddVoucherProcessingState();\n  }\n}\n","<ng-container *ngIf=\"cart$ | async as cart\">\n  <div class=\"cx-cart-coupon-title\">\n    {{ 'voucher.coupon' | cxTranslate }}\n  </div>\n  <div class=\"form-group\">\n    <form (ngSubmit)=\"applyVoucher()\" [formGroup]=\"couponForm\">\n      <div class=\"cx-cart-coupon-container\">\n        <input\n          aria-required=\"true\"\n          type=\"text\"\n          class=\"form-control input-coupon-code\"\n          formControlName=\"couponCode\"\n          placeholder=\"{{ 'voucher.placeholder' | cxTranslate }} \"\n        />\n        <button\n          class=\"btn btn-block btn-action apply-coupon-button\"\n          type=\"submit\"\n          [disabled]=\"cartIsLoading$ | async\"\n          [class.disabled]=\"cartIsLoading$ | async\"\n        >\n          {{ 'voucher.apply' | cxTranslate }}\n        </button>\n        <cx-form-errors\n          aria-live=\"assertive\"\n          aria-atomic=\"true\"\n          [control]=\"couponForm.get('couponCode')\"\n        ></cx-form-errors>\n      </div>\n    </form>\n  </div>\n\n  <cx-applied-coupons\n    [vouchers]=\"cart.appliedVouchers\"\n    [cartIsLoading]=\"cartIsLoading$ | async\"\n    [isReadOnly]=\"false\"\n  >\n  </cx-applied-coupons>\n\n  <ng-container *ngIf=\"applicableCoupons && applicableCoupons.length > 0\">\n    <div class=\"cx-available-coupon\">\n      <div class=\"title cx-cart-coupon-title\">\n        {{ 'voucher.availableCoupons' | cxTranslate }}\n      </div>\n      <div class=\"message\">\n        {{ 'voucher.availableCouponsLabel' | cxTranslate }}\n      </div>\n      <div class=\"scroll\">\n        <div class=\"coupons card\" *ngFor=\"let coupon of applicableCoupons\">\n          <button\n            (click)=\"applyCustomerCoupon(coupon.couponId)\"\n            class=\"coupon-id link\"\n            [disabled]=\"cartIsLoading$ | async\"\n            [class.disabled]=\"cartIsLoading$ | async\"\n          >\n            {{ coupon.couponId }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { AppliedCouponsComponent } from './applied-coupons/applied-coupons.component';\nimport { CartCouponComponent } from './cart-coupon.component';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { FormErrorsModule } from '../../../shared/index';\n\n@NgModule({\n  declarations: [CartCouponComponent, AppliedCouponsComponent],\n  exports: [CartCouponComponent, AppliedCouponsComponent],\n  imports: [\n    CommonModule,\n    NgSelectModule,\n    FormsModule,\n    ReactiveFormsModule,\n    I18nModule,\n    IconModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartApplyCouponComponent: {\n          component: CartCouponComponent,\n        },\n      },\n    }),\n  ],\n})\nexport class CartCouponModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport {\n  ActiveCartService,\n  ConsignmentEntry,\n  MultiCartService,\n  OrderEntry,\n  PromotionLocation,\n  SelectiveCartService,\n  UserIdService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { map, startWith, tap } from 'rxjs/operators';\nimport { CartItemComponentOptions } from '../cart-item/cart-item.component';\n\n@Component({\n  selector: 'cx-cart-item-list',\n  templateUrl: './cart-item-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartItemListComponent implements OnInit, OnDestroy {\n  protected subscription = new Subscription();\n  protected userId: string;\n\n  @Input() readonly: boolean = false;\n\n  @Input() hasHeader: boolean = true;\n\n  @Input() options: CartItemComponentOptions = {\n    isSaveForLater: false,\n    optionalBtn: null,\n  };\n\n  @Input() cartId: string;\n\n  protected _items: OrderEntry[] = [];\n  form: FormGroup = new FormGroup({});\n\n  @Input('items')\n  set items(items: OrderEntry[]) {\n    this.resolveItems(items);\n    this.createForm();\n  }\n  get items(): OrderEntry[] {\n    return this._items;\n  }\n\n  @Input() promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n\n  @Input('cartIsLoading') set setLoading(value: boolean) {\n    if (!this.readonly) {\n      // Whenever the cart is loading, we disable the complete form\n      // to avoid any user interaction with the cart.\n      value\n        ? this.form.disable({ emitEvent: false })\n        : this.form.enable({ emitEvent: false });\n    }\n  }\n\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService,\n    protected userIdService: UserIdService,\n    protected multiCartService: MultiCartService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription.add(\n      this.userIdService\n        ?.getUserId()\n        .subscribe((userId) => (this.userId = userId))\n    );\n  }\n\n  /**\n   * Resolves items passed to component input and updates 'items' field\n   */\n  protected resolveItems(items: OrderEntry[]): void {\n    if (!items) {\n      this._items = [];\n      return;\n    }\n\n    // The items we're getting from the input do not have a consistent model.\n    // In case of a `consignmentEntry`, we need to normalize the data from the orderEntry.\n    if (items.every((item) => item.hasOwnProperty('orderEntry'))) {\n      this._items = items.map((consignmentEntry) => {\n        const entry = Object.assign(\n          {},\n          (consignmentEntry as ConsignmentEntry).orderEntry\n        );\n        entry.quantity = consignmentEntry.quantity;\n        return entry;\n      });\n    } else {\n      // We'd like to avoid the unnecessary re-renders of unchanged cart items after the data reload.\n      // OCC cart entries don't have any unique identifier that we could use in Angular `trackBy`.\n      // So we update each array element to the new object only when it's any different to the previous one.\n      for (let i = 0; i < Math.max(items.length, this._items.length); i++) {\n        if (JSON.stringify(this._items?.[i]) !== JSON.stringify(items[i])) {\n          if (this._items[i] && this.form) {\n            this.form.removeControl(this.getControlName(this._items[i]));\n          }\n          if (!items[i]) {\n            this._items.splice(i, 1);\n          } else {\n            this._items[i] = items[i];\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Creates form models for list items\n   */\n  protected createForm(): void {\n    this._items.forEach((item) => {\n      const controlName = this.getControlName(item);\n      const group = new FormGroup({\n        entryNumber: new FormControl(item.entryNumber),\n        quantity: new FormControl(item.quantity, { updateOn: 'blur' }),\n      });\n\n      this.form.addControl(controlName, group);\n\n      // If we disable form group before adding, disabled status will reset\n      // Which forces us to disable control after including to form object\n      if (!item.updateable || this.readonly) {\n        this.form.controls[controlName].disable();\n      }\n    });\n  }\n\n  protected getControlName(item: OrderEntry): string {\n    return item.entryNumber.toString();\n  }\n\n  removeEntry(item: OrderEntry): void {\n    if (this.selectiveCartService && this.options.isSaveForLater) {\n      this.selectiveCartService.removeEntry(item);\n    } else if (this.cartId && this.userId) {\n      this.multiCartService?.removeEntry(\n        this.userId,\n        this.cartId,\n        item.entryNumber\n      );\n    } else {\n      this.activeCartService.removeEntry(item);\n    }\n    delete this.form.controls[this.getControlName(item)];\n  }\n\n  getControl(item: OrderEntry): Observable<FormGroup> {\n    return this.form.get(this.getControlName(item)).valueChanges.pipe(\n      // eslint-disable-next-line import/no-deprecated\n      startWith(null),\n      tap((value) => {\n        if (item.updateable && value && !this.readonly) {\n          if (this.selectiveCartService && this.options.isSaveForLater) {\n            this.selectiveCartService.updateEntry(\n              value.entryNumber,\n              value.quantity\n            );\n          } else if (this.cartId && this.userId) {\n            this.multiCartService?.updateEntry(\n              this.userId,\n              this.cartId,\n              value.entryNumber,\n              value.quantity\n            );\n          } else {\n            this.activeCartService.updateEntry(\n              value.entryNumber,\n              value.quantity\n            );\n          }\n        }\n      }),\n      map(() => <FormGroup>this.form.get(this.getControlName(item)))\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","<div *ngIf=\"hasHeader\" class=\"d-none d-md-block d-lg-block d-xl-block\">\n  <div class=\"cx-item-list-header row\">\n    <div class=\"cx-item-list-desc col-md-5 col-lg-5 col-xl-6\">\n      {{ 'cartItems.description' | cxTranslate }}\n    </div>\n    <div class=\"cx-item-list-price col-md-3 col-lg-2 col-xl-2\">\n      {{ 'cartItems.itemPrice' | cxTranslate }}\n    </div>\n    <div class=\"cx-item-list-qty col-md-2 col-lg-3 col-xl-2\">\n      {{ 'cartItems.quantity' | cxTranslate }}\n    </div>\n\n    <ng-container *ngIf=\"options.isSaveForLater; else totalHeader\">\n      <div class=\"cx-item-list-total col-md-2 col-lg-2 col-xl-2\">\n        {{ 'saveForLaterItems.stock' | cxTranslate }}\n      </div>\n    </ng-container>\n  </div>\n</div>\n\n<div class=\"cx-item-list-row\" *ngFor=\"let item of items; let i = index\">\n  <div\n    *ngIf=\"getControl(item) | async as control\"\n    class=\"cx-item-list-items\"\n    [class.is-changed]=\"control.get('quantity').disabled\"\n  >\n    <cx-cart-item\n      [item]=\"item\"\n      [quantityControl]=\"control.get('quantity')\"\n      [readonly]=\"readonly\"\n      [promotionLocation]=\"promotionLocation\"\n      [options]=\"options\"\n    >\n    </cx-cart-item>\n  </div>\n</div>\n\n<ng-template #totalHeader>\n  <div class=\"cx-item-list-total col-md-2 col-lg-2 col-xl-2\">\n    {{ 'cartItems.total' | cxTranslate }}\n  </div>\n</ng-template>\n","import { Component, Input } from '@angular/core';\nimport { Cart } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-order-summary',\n  templateUrl: './order-summary.component.html',\n})\nexport class OrderSummaryComponent {\n  @Input()\n  cart: Cart;\n}\n","<h3>{{ 'orderCost.orderSummary' | cxTranslate }}</h3>\n\n<div class=\"cx-summary-partials\" *ngIf=\"cart\">\n  <div class=\"cx-summary-row\">\n    <div class=\"col-6 cx-summary-label\">\n      {{ 'orderCost.subtotal' | cxTranslate }}\n    </div>\n    <div class=\"col-6 cx-summary-amount\">\n      {{ cart.subTotal?.formattedValue }}\n    </div>\n  </div>\n  <div class=\"cx-summary-row\">\n    <div class=\"col-6 cx-summary-label\">\n      {{\n        (cart.deliveryCost?.formattedValue\n          ? 'orderCost.shipping'\n          : 'orderCost.estimatedShipping'\n        ) | cxTranslate\n      }}\n    </div>\n    <div class=\"col-6 cx-summary-amount\">\n      {{\n        cart.deliveryCost?.formattedValue\n          ? cart.deliveryCost.formattedValue\n          : ('orderCost.toBeDetermined' | cxTranslate)\n      }}\n    </div>\n  </div>\n  <div class=\"cx-summary-row\" *ngIf=\"cart.net; else cartWithoutNet\">\n    <div class=\"col-6 cx-summary-label\">\n      {{ 'orderCost.salesTax' | cxTranslate }}\n    </div>\n    <div class=\"col-6 cx-summary-amount\">\n      {{ cart.totalTax?.formattedValue }}\n    </div>\n  </div>\n  <div class=\"cx-summary-row cx-summary-total\">\n    <div class=\"col-6 cx-summary-label\">\n      {{ 'orderCost.total' | cxTranslate }}\n    </div>\n    <div class=\"col-6 cx-summary-amount\">\n      {{ cart.totalPriceWithTax?.formattedValue }}\n    </div>\n  </div>\n  <div class=\"cx-summary-row\" *ngIf=\"cart.totalDiscounts?.value > 0\">\n    {{ 'orderCost.discount' | cxTranslate }}\n    {{ cart.totalDiscounts?.formattedValue }}\n  </div>\n  <ng-template #cartWithoutNet>\n    <div class=\"cx-summary-row\">\n      {{\n        cart.totalPriceWithTax?.value !== cart.totalPrice?.value\n          ? ('orderCost.grossTax' | cxTranslate)\n          : ('orderCost.grossIncludeTax' | cxTranslate)\n      }}\n      {{ cart.totalTax?.formattedValue }}.\n    </div>\n  </ng-template>\n</div>\n\n<!--\n<cx-promotions\n  *ngIf=\"cart\"\n  [promotions]=\"cart.appliedOrderPromotions\"\n></cx-promotions>\n-->\n\n<ng-container *cxFeatureLevel=\"'1.3'\">\n  <cx-applied-coupons\n    [vouchers]=\"cart.appliedVouchers\"\n    [isReadOnly]=\"true\"\n  ></cx-applied-coupons>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { CartItemValidationWarningComponent } from './cart-item-validation-warning.component';\nimport { IconModule } from '../../../misc/icon/index';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, I18nModule, UrlModule, IconModule],\n  exports: [CartItemValidationWarningComponent],\n  declarations: [CartItemValidationWarningComponent],\n})\nexport class CartItemValidationWarningModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FeaturesConfigModule, I18nModule, UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { ItemCounterModule } from '../../../shared/components/item-counter/item-counter.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { ModalModule } from '../../../shared/components/modal/modal.module';\nimport { PromotionsModule } from '../../misc/promotions/promotions.module';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartItemListComponent } from './cart-item-list/cart-item-list.component';\nimport { CartItemComponent } from './cart-item/cart-item.component';\nimport { OrderSummaryComponent } from './order-summary/order-summary.component';\nimport { CartItemValidationWarningModule } from '../validation/cart-item-warning/cart-item-validation-warning.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    CartCouponModule,\n    ReactiveFormsModule,\n    UrlModule,\n    NgbModule,\n    PromotionsModule,\n    I18nModule,\n    IconModule,\n    MediaModule,\n    ItemCounterModule,\n    FeaturesConfigModule,\n    ModalModule,\n    OutletModule,\n    CartItemValidationWarningModule,\n  ],\n  declarations: [\n    CartItemComponent,\n    OrderSummaryComponent,\n    CartItemListComponent,\n  ],\n  exports: [CartItemComponent, CartItemListComponent, OrderSummaryComponent],\n})\nexport class CartSharedModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { KeyboardFocusModule } from '../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport {\n  ItemCounterModule,\n  ModalModule,\n  SpinnerModule,\n} from '../../../shared/index';\nimport { PromotionsModule } from '../../misc/promotions/promotions.module';\nimport { CartSharedModule } from './../cart-shared/cart-shared.module';\nimport { AddToCartComponent } from './add-to-cart.component';\nimport { AddedToCartDialogComponent } from './added-to-cart-dialog/added-to-cart-dialog.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    CartSharedModule,\n    RouterModule,\n    SpinnerModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n    UrlModule,\n    IconModule,\n    I18nModule,\n    ItemCounterModule,\n    KeyboardFocusModule,\n    ModalModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductAddToCartComponent: {\n          component: AddToCartComponent,\n          data: {\n            inventoryDisplay: false,\n          },\n        },\n      },\n    }),\n  ],\n  declarations: [AddToCartComponent, AddedToCartDialogComponent],\n  exports: [AddToCartComponent, AddedToCartDialogComponent],\n})\nexport class AddToCartModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  AuthService,\n  isNotNullable,\n  OrderEntry,\n  Product,\n  WishListService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/icon.model';\nimport { CurrentProductService } from '../../product/current-product.service';\n\n@Component({\n  selector: 'cx-add-to-wishlist',\n  templateUrl: './add-to-wish-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddToWishListComponent {\n  product$: Observable<Product> = this.currentProductService.getProduct().pipe(\n    filter(isNotNullable),\n    tap((product) => this.setStockInfo(product))\n  );\n\n  wishListEntries$: Observable<OrderEntry[]> = this.wishListService\n    .getWishList()\n    .pipe(\n      filter((wishlist) => Boolean(wishlist)),\n      map((wishList) => wishList.entries)\n    );\n\n  userLoggedIn$: Observable<boolean> = this.authService.isUserLoggedIn();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  hasStock = false;\n  iconTypes = ICON_TYPE;\n\n  constructor(\n    protected wishListService: WishListService,\n    protected currentProductService: CurrentProductService,\n    protected authService: AuthService\n  ) {}\n\n  add(product: Product): void {\n    this.wishListService.addEntry(product.code);\n  }\n\n  remove(entry: OrderEntry): void {\n    this.wishListService.removeEntry(entry);\n  }\n\n  getProductInWishList(product: Product, entries: OrderEntry[]): OrderEntry {\n    const item = entries.find((entry) => entry.product.code === product.code);\n    return item;\n  }\n\n  protected setStockInfo(product: Product): void {\n    this.hasStock = Boolean(\n      product.stock && product.stock.stockLevelStatus !== 'outOfStock'\n    );\n  }\n}\n","<ng-container *ngIf=\"product$ | async as product\">\n  <ng-container *ngIf=\"userLoggedIn$ | async; else loginPrompt\">\n    <ng-container *ngIf=\"wishListEntries$ | async as entries\">\n      <ng-container *ngIf=\"hasStock\">\n        <div\n          *ngIf=\"getProductInWishList(product, entries) as entry; else addItem\"\n        >\n          <button\n            class=\"btn btn-link button-remove cx-action-link\"\n            (click)=\"remove(entry)\"\n            [disabled]=\"loading$ | async\"\n          >\n            <cx-icon [type]=\"iconTypes.HEART\"></cx-icon>\n            <span class=\"button-text\">{{\n              'addToWishList.remove' | cxTranslate\n            }}</span>\n          </button>\n        </div>\n        <ng-template #addItem>\n          <button\n            class=\"btn btn-link button-add cx-action-link\"\n            (click)=\"add(product)\"\n            [disabled]=\"loading$ | async\"\n          >\n            <cx-icon [type]=\"iconTypes.EMPTY_HEART\"></cx-icon>\n            <span class=\"button-text\">{{\n              'addToWishList.add' | cxTranslate\n            }}</span>\n          </button>\n        </ng-template>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n</ng-container>\n\n<ng-template #loginPrompt>\n  <ng-container *ngIf=\"hasStock\">\n    <a\n      class=\"btn btn-link button-add-link cx-action-link\"\n      [routerLink]=\"{ cxRoute: 'login' } | cxUrl\"\n    >\n      <cx-icon [type]=\"iconTypes.EMPTY_HEART\"></cx-icon>\n      <span class=\"button-text\">{{\n        'addToWishList.anonymous' | cxTranslate\n      }}</span>\n    </a>\n  </ng-container>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { AddToWishListComponent } from './add-to-wish-list.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, IconModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AddToWishListComponent: {\n          component: AddToWishListComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [AddToWishListComponent],\n  exports: [AddToWishListComponent],\n})\nexport class AddToWishListModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { map } from 'rxjs/operators';\nimport { CartModification, CartValidationStatusCode } from '@spartacus/core';\nimport { CartValidationStateService } from '../cart-validation-state.service';\nimport { ICON_TYPE } from '../../../misc/icon/index';\n\n@Component({\n  selector: 'cx-cart-validation-warnings',\n  templateUrl: './cart-validation-warnings.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartValidationWarningsComponent {\n  iconTypes = ICON_TYPE;\n  visibleWarnings: Record<string, boolean> = {};\n\n  cartModifications$ =\n    this.cartValidationStateService.cartValidationResult$.pipe(\n      map((modificationList) => {\n        const result = modificationList.filter(\n          (modification) =>\n            modification.statusCode === CartValidationStatusCode.NO_STOCK\n        );\n\n        result.forEach((modification) => {\n          if (modification.entry?.product?.code) {\n            this.visibleWarnings[modification.entry.product.code] = true;\n          }\n        });\n        return result;\n      })\n    );\n\n  constructor(\n    protected cartValidationStateService: CartValidationStateService\n  ) {}\n\n  removeMessage(cartModification: CartModification) {\n    if (cartModification.entry?.product?.code) {\n      this.visibleWarnings[cartModification.entry.product.code] = false;\n    }\n  }\n}\n","<ng-container *ngFor=\"let cartModification of cartModifications$ | async\">\n  <div\n    class=\"alert alert-danger\"\n    *ngIf=\"visibleWarnings[cartModification.entry.product.code]\"\n  >\n    <span class=\"alert-icon\">\n      <cx-icon [type]=\"iconTypes.ERROR\"></cx-icon>\n    </span>\n    <span>\n      <a\n        [routerLink]=\"\n          { cxRoute: 'product', params: cartModification.entry.product } | cxUrl\n        \"\n      >\n        {{ cartModification.entry.product.name }}\n      </a>\n      {{ 'validation.productOutOfStock' | cxTranslate }}\n    </span>\n\n    <button\n      class=\"close\"\n      type=\"button\"\n      (click)=\"removeMessage(cartModification)\"\n    >\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </div>\n</ng-container>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  ActiveCartService,\n  AuthService,\n  Cart,\n  OrderEntry,\n  PromotionLocation,\n  RoutingService,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-cart-details',\n  templateUrl: './cart-details.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartDetailsComponent implements OnInit {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartLoaded$: Observable<boolean>;\n  loggedIn = false;\n  promotionLocation: PromotionLocation = PromotionLocation.ActiveCart;\n  selectiveCartEnabled: boolean;\n\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService,\n    protected authService: AuthService,\n    protected routingService: RoutingService\n  ) {}\n\n  ngOnInit() {\n    this.cart$ = this.activeCartService.getActive();\n\n    this.entries$ = this.activeCartService\n      .getEntries()\n      .pipe(filter((entries) => entries.length > 0));\n\n    this.selectiveCartEnabled = this.selectiveCartService.isEnabled();\n\n    this.cartLoaded$ = combineLatest([\n      this.activeCartService.isStable(),\n      this.selectiveCartEnabled\n        ? this.selectiveCartService.isStable()\n        : of(false),\n      this.authService.isUserLoggedIn(),\n    ]).pipe(\n      tap(([, , loggedIn]) => (this.loggedIn = loggedIn)),\n      map(([cartLoaded, sflLoaded, loggedIn]) =>\n        loggedIn && this.selectiveCartEnabled\n          ? cartLoaded && sflLoaded\n          : cartLoaded\n      )\n    );\n  }\n\n  saveForLater(item: OrderEntry) {\n    if (this.loggedIn) {\n      this.activeCartService.removeEntry(item);\n      this.selectiveCartService.addEntry(item.product.code, item.quantity);\n    } else {\n      this.routingService.go({ cxRoute: 'login' });\n    }\n  }\n}\n","<ng-container *ngIf=\"cart$ | async as cart\">\n  <ng-container *ngIf=\"entries$ | async as entries\">\n    <div *ngIf=\"cart.totalItems > 0\" class=\"cart-details-wrapper\">\n      <ng-container *cxFeatureLevel=\"'4.2'\">\n        <cx-cart-validation-warnings></cx-cart-validation-warnings>\n      </ng-container>\n\n      <h4 class=\"cx-total\">\n        {{ 'cartDetails.cartName' | cxTranslate: { code: cart.code } }}\n      </h4>\n\n      <cx-promotions\n        [promotions]=\"\n          (cart.appliedOrderPromotions || []).concat(\n            cart.potentialOrderPromotions || []\n          )\n        \"\n      ></cx-promotions>\n\n      <cx-cart-item-list\n        [items]=\"entries\"\n        [cartIsLoading]=\"!(cartLoaded$ | async)\"\n        [promotionLocation]=\"promotionLocation\"\n        [options]=\"{\n          isSaveForLater: false,\n          optionalBtn: saveForLaterBtn\n        }\"\n      ></cx-cart-item-list>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template let-ctx #saveForLaterBtn>\n  <div\n    *ngIf=\"selectiveCartEnabled\"\n    class=\"col-md-3 col-lg-3 col-xl-3 cx-sfl-btn\"\n  >\n    <button\n      class=\"link cx-action-link\"\n      [disabled]=\"ctx.loading\"\n      (click)=\"saveForLater(ctx.item)\"\n      type=\"button\"\n    >\n      {{ 'saveForLaterItems.saveForLater' | cxTranslate }}\n    </button>\n  </div>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { CartValidationWarningsComponent } from './cart-validation-warnings.component';\nimport { IconModule } from '../../../misc/icon/index';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, I18nModule, UrlModule, IconModule],\n  exports: [CartValidationWarningsComponent],\n  declarations: [CartValidationWarningsComponent],\n})\nexport class CartValidationWarningsModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { PromotionsModule } from '../../misc/promotions/promotions.module';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { CartDetailsComponent } from './cart-details.component';\nimport { CartValidationWarningsModule } from '../validation/cart-warnings/cart-validation-warnings.module';\n\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CommonModule,\n    CartCouponModule,\n    RouterModule,\n    UrlModule,\n    PromotionsModule,\n    FeaturesConfigModule,\n    I18nModule,\n    CartValidationWarningsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartComponent: {\n          component: CartDetailsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CartDetailsComponent],\n  exports: [CartDetailsComponent],\n})\nexport class CartDetailsModule {}\n","import { Injectable } from '@angular/core';\nimport { ActiveCartService, Cart, SelectiveCartService } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { PageLayoutHandler } from '../../cms-structure/page/page-layout/page-layout-handler';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartPageLayoutHandler implements PageLayoutHandler {\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService\n  ) {}\n\n  handle(\n    slots$: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string\n  ) {\n    if (pageTemplate === 'CartPageTemplate' && !section) {\n      return combineLatest([\n        slots$,\n        this.activeCartService.getActive(),\n        this.selectiveCartService.isEnabled()\n          ? this.selectiveCartService.getCart()\n          : of({} as Cart),\n        this.activeCartService.getLoading(),\n      ]).pipe(\n        map(([slots, cart, selectiveCart, loadingCart]) => {\n          const exclude = (arr, args) =>\n            arr.filter((item) => args.every((arg) => arg !== item));\n          return Object.keys(cart).length === 0 && loadingCart\n            ? exclude(slots, [\n                'TopContent',\n                'CenterRightContentSlot',\n                'EmptyCartMiddleContent',\n              ])\n            : cart.totalItems\n            ? exclude(slots, ['EmptyCartMiddleContent'])\n            : selectiveCart.totalItems\n            ? exclude(slots, [\n                'EmptyCartMiddleContent',\n                'CenterRightContentSlot',\n              ])\n            : exclude(slots, ['TopContent', 'CenterRightContentSlot']);\n        })\n      );\n    }\n    return slots$;\n  }\n}\n","export type ProductData = {\n  productCode: string;\n  quantity: number;\n};\n\nexport enum ProductImportStatus {\n  SUCCESS = 'success',\n  LOW_STOCK = 'lowStock',\n  NO_STOCK = 'noStock',\n  UNKNOWN_IDENTIFIER = 'unknownIdentifier',\n  UNKNOWN_ERROR = 'unknownError',\n  LIMIT_EXCEEDED = 'limitExceeded',\n}\n\nexport interface ProductImportInfo {\n  productCode: string;\n  statusCode: ProductImportStatus;\n  productName?: string;\n  quantity?: number;\n  quantityAdded?: number;\n}\n\nexport interface ProductImportSummary {\n  loading: boolean;\n  cartName: string | undefined;\n  count: number;\n  total: number;\n  successesCount: number;\n  warningMessages: ProductImportInfo[];\n  errorMessages: ProductImportInfo[];\n}\n","import { isDevMode } from '@angular/core';\nimport { ofType } from '@ngrx/effects';\nimport { ActionsSubject } from '@ngrx/store';\nimport { CartActions } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, switchMap, take } from 'rxjs/operators';\nimport {\n  ProductData,\n  ProductImportInfo,\n  ProductImportStatus,\n} from './import-to-cart.model';\n\n/**\n * An abstract class for contexts based on cart (active cart, saved cart) which share part of logic - mainly handle cart actions and map results.\n */\nexport abstract class CartOrderEntriesContext {\n  protected constructor(protected actionsSubject: ActionsSubject) {}\n\n  addEntries(products: ProductData[]): Observable<ProductImportInfo> {\n    return this.add(products).pipe(\n      switchMap((cartId: string) => this.getResults(cartId)),\n      take(products.length)\n    );\n  }\n\n  /**\n   * Add products and returns cartId of context cart\n   *\n   * @param { ProductData[] } products\n   * @returns {string} cartId - necessary to get results\n   */\n  protected abstract add(products: ProductData[]): Observable<string>;\n\n  /**\n   * Get emission of add entry results from actions subject\n   *\n   * @param {string} cartId\n   * @returns {Observable<ProductImportInfo>}\n   */\n  protected getResults(cartId: string): Observable<ProductImportInfo> {\n    return this.actionsSubject.pipe(\n      ofType(\n        CartActions.CART_ADD_ENTRY_SUCCESS,\n        CartActions.CART_ADD_ENTRY_FAIL\n      ),\n      filter(\n        (\n          action: CartActions.CartAddEntrySuccess | CartActions.CartAddEntryFail\n        ) => action.payload.cartId === cartId\n      ),\n      map((action) => this.mapMessages(action))\n    );\n  }\n\n  /**\n   * Map actions to summary messages\n   *\n   * @param {CartActions.CartAddEntrySuccess | CartActions.CartAddEntryFail} action\n   * @returns ProductImportInfo\n   */\n  protected mapMessages(\n    action: CartActions.CartAddEntrySuccess | CartActions.CartAddEntryFail\n  ): ProductImportInfo {\n    const { productCode } = action.payload;\n    if (action instanceof CartActions.CartAddEntrySuccess) {\n      const { quantity, quantityAdded, entry, statusCode } = action.payload;\n      if (statusCode === ProductImportStatus.LOW_STOCK) {\n        return {\n          productCode,\n          statusCode,\n          productName: entry?.product?.name,\n          quantity,\n          quantityAdded,\n        };\n      }\n      if (\n        statusCode === ProductImportStatus.SUCCESS ||\n        statusCode === ProductImportStatus.NO_STOCK\n      ) {\n        return { productCode, statusCode, productName: entry?.product?.name };\n      }\n    } else if (action instanceof CartActions.CartAddEntryFail) {\n      const { error } = action.payload;\n      if (error?.details[0]?.type === 'UnknownIdentifierError') {\n        return {\n          productCode,\n          statusCode: ProductImportStatus.UNKNOWN_IDENTIFIER,\n        };\n      }\n    }\n    if (isDevMode()) {\n      console.warn(\n        'Unrecognized cart add entry action type while mapping messages',\n        action\n      );\n    }\n    return { productCode, statusCode: ProductImportStatus.UNKNOWN_ERROR };\n  }\n}\n","export enum OrderEntriesSource {\n  ACTIVE_CART = 'ACTIVE_CART',\n  NEW_SAVED_CART = 'NEW_SAVED_CART',\n  QUICK_ORDER = 'QUICK_ORDER',\n  SAVED_CART = 'SAVED_CART',\n  ORDER_CONFIRMATION = 'ORDER_CONFIRMATION',\n  ORDER_DETAILS = 'ORDER_DETAILS',\n}\n","import { Injectable } from '@angular/core';\nimport { ActionsSubject } from '@ngrx/store';\nimport { ActiveCartService, OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CartOrderEntriesContext } from '../order-entries-context/cart-order-entries.context';\nimport { OrderEntriesSource } from '../order-entries-context/import-export.model';\nimport { ProductData } from '../order-entries-context/import-to-cart.model';\nimport { AddOrderEntriesContext } from '../order-entries-context/add-order-entries.context';\nimport { GetOrderEntriesContext } from '../order-entries-context/get-order-entries.context';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ActiveCartOrderEntriesContext\n  extends CartOrderEntriesContext\n  implements AddOrderEntriesContext, GetOrderEntriesContext\n{\n  readonly type = OrderEntriesSource.ACTIVE_CART;\n\n  constructor(\n    protected actionsSubject: ActionsSubject,\n    protected activeCartService: ActiveCartService\n  ) {\n    super(actionsSubject);\n  }\n\n  getEntries(): Observable<OrderEntry[]> {\n    return this.activeCartService.getEntries();\n  }\n\n  protected add(products: ProductData[]): Observable<string> {\n    this.activeCartService.addEntries(this.mapProductsToOrderEntries(products));\n    return this.activeCartService.getActiveCartId();\n  }\n\n  protected mapProductsToOrderEntries(products: ProductData[]): OrderEntry[] {\n    return products.map(\n      (product: { productCode: string; quantity: number }) => ({\n        product: { code: product.productCode },\n        quantity: product.quantity,\n      })\n    );\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnInit,\n  OnDestroy,\n} from '@angular/core';\nimport { ActiveCartService, Cart, OrderEntry } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport {\n  Event,\n  NavigationCancel,\n  NavigationEnd,\n  Router,\n} from '@angular/router';\n\n@Component({\n  selector: 'cx-cart-totals',\n  templateUrl: './cart-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartTotalsComponent implements OnInit, OnDestroy {\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartValidationInProgress = false;\n\n  protected subscription = new Subscription();\n\n  /**\n   * @deprecated since 4.2\n   */\n  constructor(activeCartService: ActiveCartService);\n\n  constructor(\n    protected activeCartService: ActiveCartService,\n    protected router?: Router\n  ) {}\n\n  ngOnInit() {\n    this.cart$ = this.activeCartService.getActive();\n    this.entries$ = this.activeCartService\n      .getEntries()\n      .pipe(filter((entries) => entries.length > 0));\n\n    this.subscription.add(\n      this.router?.events.subscribe((event: Event) => {\n        if (\n          event instanceof NavigationEnd ||\n          event instanceof NavigationCancel\n        ) {\n          this.cartValidationInProgress = false;\n        }\n      })\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  disableButtonWhileNavigation(): void {\n    this.cartValidationInProgress = true;\n  }\n}\n","<ng-container *ngIf=\"cart$ | async as cart\">\n  <ng-container *ngIf=\"entries$ | async as entries\">\n    <cx-order-summary [cart]=\"cart\"></cx-order-summary>\n    <ng-container *cxFeatureLevel=\"'!4.2'\">\n      <button\n        [routerLink]=\"{ cxRoute: 'checkout' } | cxUrl\"\n        *ngIf=\"entries.length\"\n        class=\"btn btn-primary btn-block\"\n        type=\"button\"\n      >\n        {{ 'cartDetails.proceedToCheckout' | cxTranslate }}\n      </button>\n    </ng-container>\n\n    <ng-container *cxFeatureLevel=\"'4.2'\">\n      <cx-progress-button\n        *ngIf=\"entries.length\"\n        [routerLink]=\"{ cxRoute: 'checkout' } | cxUrl\"\n        [loading]=\"cartValidationInProgress\"\n        [disabled]=\"cartValidationInProgress\"\n        [class]=\"'btn btn-primary btn-block'\"\n        (clikEvent)=\"disableButtonWhileNavigation()\"\n      >\n        {{\n          (!cartValidationInProgress ? 'cartDetails.proceedToCheckout' : '')\n            | cxTranslate\n        }}\n      </cx-progress-button>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n  FeaturesConfigModule,\n} from '@spartacus/core';\nimport { CartCouponModule } from '../cart-coupon/cart-coupon.module';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { CartTotalsComponent } from './cart-totals.component';\nimport { ProgressButtonModule } from '../../../shared/components/progress-button/progress-button.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    CartSharedModule,\n    I18nModule,\n    CartCouponModule,\n    FeaturesConfigModule,\n    ProgressButtonModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CartTotalsComponent: {\n          component: CartTotalsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [CartTotalsComponent],\n  exports: [CartTotalsComponent],\n})\nexport class CartTotalsModule {}\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\nexport const PAGE_LAYOUT_HANDLER = new InjectionToken<PageLayoutHandler[]>(\n  'PageLayoutHandler'\n);\n\nexport interface PageLayoutHandler {\n  handle(\n    slots: Observable<string[]>,\n    pageTemplate?: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): Observable<string[]>;\n}\n","import { Inject, Injectable, isDevMode, Optional } from '@angular/core';\nimport { CmsService, Page } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, switchMap } from 'rxjs/operators';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport {\n  BREAKPOINT,\n  LayoutConfig,\n  LayoutSlotConfig,\n  SlotConfig,\n} from '../../../layout/config/layout-config';\nimport { PageLayoutHandler, PAGE_LAYOUT_HANDLER } from './page-layout-handler';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PageLayoutService {\n  constructor(\n    private cms: CmsService,\n    private config: LayoutConfig,\n    private breakpointService: BreakpointService,\n    @Optional()\n    @Inject(PAGE_LAYOUT_HANDLER)\n    private handlers: PageLayoutHandler[]\n  ) {}\n\n  // Prints warn messages for missing layout configs.\n  // The warnings are only printed once per config\n  // to not pollute the console log.\n  private warnLogMessages = {};\n  private logSlots = {};\n\n  getSlots(section?: string): Observable<string[]> {\n    return combineLatest([this.page$, this.breakpointService.breakpoint$]).pipe(\n      map(([page, breakpoint]) => {\n        const pageTemplate = page.template;\n        const slots = this.resolveSlots(page, section, breakpoint);\n        return { slots, pageTemplate, breakpoint };\n      }),\n      switchMap(({ slots, pageTemplate, breakpoint }) => {\n        let result = of(slots);\n        for (const handler of this.handlers || []) {\n          result = handler.handle(result, pageTemplate, section, breakpoint);\n        }\n        return result;\n      }),\n      distinctUntilChanged((a, b) => {\n        if (a.length !== b.length) {\n          return false;\n        }\n        for (let i = 0; i < a.length; i++) {\n          if (a[i] !== b[i]) {\n            return false;\n          }\n        }\n        return true;\n      })\n    );\n  }\n\n  /**\n   * Returns an observable with the last page slot above-the-fold\n   * for the given pageTemplate / breakpoint.\n   *\n   * The page fold is configurable in the `LayoutConfig` for each page layout.\n   */\n  getPageFoldSlot(pageTemplate: string): Observable<string> {\n    return this.breakpointService.breakpoint$.pipe(\n      map((breakpoint) => {\n        if (!this.config.layoutSlots) {\n          // no layout config available\n          return null;\n        }\n        const pageTemplateConfig = this.config.layoutSlots[pageTemplate];\n        const config = this.getResponsiveSlotConfig(\n          <LayoutSlotConfig>pageTemplateConfig,\n          'pageFold',\n          breakpoint\n        );\n        return config ? config.pageFold : null;\n      })\n    );\n  }\n\n  private resolveSlots(page, section, breakpoint): string[] {\n    const config = this.getSlotConfig(\n      page.template,\n      'slots',\n      section,\n      breakpoint\n    );\n    if (config && config.slots) {\n      const pageSlots = Object.keys(page.slots);\n      return config.slots.filter((slot) => pageSlots.includes(slot));\n    } else if (!section) {\n      this.logMissingLayoutConfig(page);\n      return Object.keys(page.slots);\n    } else {\n      this.logMissingLayoutConfig(page, section);\n      return [];\n    }\n  }\n\n  get page$(): Observable<Page> {\n    return this.cms.getCurrentPage().pipe(filter((page) => !!page));\n  }\n\n  get templateName$(): Observable<string> {\n    return this.page$.pipe(\n      filter((page) => !!page.template),\n      map((page: Page) => page.template)\n    );\n  }\n\n  /**\n   * load slots from the layout configuration. The breakpoint is used\n   * to load a specific configuration for the given breakpoint. If there's\n   * no configuration available for the given breakpoint the default slot\n   * configuration is returned.\n   */\n  protected getSlotConfig(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    if (!this.config.layoutSlots) {\n      return null;\n    }\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (section) {\n      return this.getSlotConfigForSection(\n        templateUid,\n        configAttribute,\n        section,\n        breakpoint\n      );\n    }\n\n    if (pageTemplateConfig) {\n      return this.getResponsiveSlotConfig(\n        <LayoutSlotConfig>pageTemplateConfig,\n        configAttribute,\n        breakpoint\n      );\n    }\n  }\n\n  protected getSlotConfigForSection(\n    templateUid: string,\n    configAttribute: string,\n    section?: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    const pageTemplateConfig = this.config.layoutSlots[templateUid];\n\n    if (!pageTemplateConfig) {\n      return null;\n    }\n\n    // if there's no section config on the page layout\n    // we fall back to the global section config\n    const sectionConfig = pageTemplateConfig[section]\n      ? pageTemplateConfig[section]\n      : this.config.layoutSlots[section];\n\n    if (!sectionConfig) {\n      return null;\n    }\n\n    const responsiveConfig = this.getResponsiveSlotConfig(\n      <LayoutSlotConfig>sectionConfig,\n      configAttribute,\n      breakpoint\n    );\n\n    if (responsiveConfig.hasOwnProperty(configAttribute)) {\n      return responsiveConfig;\n    } else if (pageTemplateConfig[section].hasOwnProperty(configAttribute)) {\n      return pageTemplateConfig[section];\n    } else if (this.config.layoutSlots[section]) {\n      return <SlotConfig>this.config.layoutSlots[section];\n    }\n  }\n\n  /**\n   * Returns a list of slots for a breakpoint specific configuration\n   * If there's no specific configuration for the breakpoint,\n   * the closest available configuration will be returned.\n   */\n  protected getResponsiveSlotConfig(\n    layoutSlotConfig: LayoutSlotConfig,\n    configAttribute: string,\n    breakpoint?: BREAKPOINT\n  ): SlotConfig {\n    let slotConfig = <SlotConfig>layoutSlotConfig;\n\n    // fallback to default slot config\n    if (!layoutSlotConfig || !breakpoint) {\n      return slotConfig;\n    }\n\n    // we have a config for the specific breakpoint\n    if (\n      layoutSlotConfig[breakpoint] &&\n      layoutSlotConfig[breakpoint].hasOwnProperty(configAttribute)\n    ) {\n      return <SlotConfig>layoutSlotConfig[breakpoint];\n    }\n\n    // find closest config\n    const all = this.breakpointService.breakpoints;\n\n    for (const br of all.slice(0, all.indexOf(breakpoint))) {\n      if (\n        layoutSlotConfig[br] &&\n        layoutSlotConfig[br].hasOwnProperty(configAttribute)\n      ) {\n        slotConfig = <SlotConfig>layoutSlotConfig[br];\n      }\n    }\n    return slotConfig;\n  }\n\n  /**\n   * In order to help developers, we print some detailed log information in\n   * case there's no layout configuration available for the given page template\n   * or section. Additionally, the slot positions are printed in the console\n   * in a format that can be copied / paste to the configuration.\n   */\n  private logMissingLayoutConfig(page: Page, section?: string): void {\n    if (!isDevMode()) {\n      return;\n    }\n    if (!this.logSlots[page.template]) {\n      // the info log is not printed in production\n      // eslint-disable-next-line no-console\n      console.info(\n        `Available CMS page slots: '${Object.keys(page.slots).join(`','`)}'`\n      );\n      this.logSlots[page.template] = true;\n    }\n\n    const cacheKey = section || page.template;\n    if (!this.warnLogMessages[cacheKey]) {\n      console.warn(\n        `No layout config found for ${cacheKey}, you can configure a 'LayoutConfig' to control the rendering of page slots.`\n      );\n      this.warnLogMessages[cacheKey] = true;\n    }\n  }\n}\n","import { Injectable, InjectFlags, Injector, NgModuleRef } from '@angular/core';\nimport {\n  CMSComponentConfig,\n  CmsComponentMapping,\n  CmsConfig,\n  ConfigChunk,\n  ConfigInitializerService,\n  deepMerge,\n  DefaultConfigChunk,\n  FeatureModuleConfig,\n  FeatureModulesService,\n} from '@spartacus/core';\nimport { defer, Observable, of } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\ninterface FeatureInstance extends FeatureModuleConfig {\n  moduleRef?: NgModuleRef<any>;\n  componentsMappings?: CMSComponentConfig;\n}\n\n/**\n * Service responsible for resolving cms config based feature modules.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsFeaturesService {\n  // feature modules configuration\n  private featureModulesConfig?: {\n    [featureName: string]: FeatureModuleConfig | string;\n  };\n\n  // maps componentType to feature\n  private componentFeatureMap: Map<string, string> = new Map();\n\n  /*\n   * Contains either FeatureInstance or FeatureInstance resolver for not yet\n   * resolved feature modules\n   */\n  private featureInstances: Map<string, Observable<FeatureInstance>> =\n    new Map();\n\n  constructor(\n    protected configInitializer: ConfigInitializerService,\n    protected featureModules: FeatureModulesService\n  ) {\n    this.initFeatureMap();\n  }\n\n  private initFeatureMap(): void {\n    this.configInitializer\n      .getStable('featureModules')\n      .subscribe((config: CmsConfig) => {\n        this.featureModulesConfig = config.featureModules ?? {};\n\n        for (const [featureName, featureConfig] of Object.entries(\n          this.featureModulesConfig\n        )) {\n          if (\n            typeof featureConfig !== 'string' &&\n            featureConfig?.module &&\n            featureConfig?.cmsComponents?.length\n          ) {\n            for (const component of featureConfig.cmsComponents) {\n              this.componentFeatureMap.set(component, featureName);\n            }\n          }\n        }\n      });\n  }\n\n  /**\n   * Check if there is feature module configuration that covers specified\n   * component type\n   */\n  hasFeatureFor(componentType: string): boolean {\n    return this.componentFeatureMap.has(componentType);\n  }\n\n  /**\n   * Return full CmsComponent mapping defined in feature module\n   */\n  getCmsMapping(\n    componentType: string\n  ): Observable<CmsComponentMapping | undefined> {\n    const feature = this.componentFeatureMap.get(componentType);\n\n    if (!feature) {\n      return of(undefined);\n    }\n\n    return this.resolveFeatureInstance(feature).pipe(\n      map(\n        (featureInstance) => featureInstance.componentsMappings?.[componentType]\n      )\n    );\n  }\n\n  /**\n   * Resolves feature module for provided component type\n   *\n   * @param componentType\n   */\n  getModule(componentType: string): NgModuleRef<any> | undefined {\n    const feature = this.componentFeatureMap.get(componentType);\n\n    if (!feature) {\n      return undefined;\n    }\n\n    let module;\n\n    // we are returning injectors only for already resolved features\n    this.featureInstances\n      .get(feature)\n      ?.subscribe((featureInstance) => {\n        module = featureInstance.moduleRef;\n      })\n      .unsubscribe();\n    return module;\n  }\n\n  /**\n   * Resolve feature based on feature name, if feature was not yet resolved\n   *\n   * It will first resolve all module dependencies if defined\n   */\n  private resolveFeatureInstance(\n    featureName: string\n  ): Observable<FeatureInstance> {\n    return defer(() => {\n      if (!this.featureInstances.has(featureName)) {\n        this.featureInstances.set(\n          featureName,\n          this.featureModules.resolveFeature(featureName).pipe(\n            map((moduleRef) =>\n              this.createFeatureInstance(moduleRef, featureName)\n            ),\n            shareReplay()\n          )\n        );\n      }\n\n      return this.featureInstances.get(featureName);\n    });\n  }\n\n  /**\n   * Create feature instance from feature's moduleRef\n   */\n  private createFeatureInstance(\n    moduleRef: NgModuleRef<any>,\n    feature: string\n  ): FeatureInstance {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const featureConfig = this.featureModulesConfig![\n      feature\n    ] as FeatureModuleConfig;\n\n    const featureInstance: FeatureInstance = {\n      moduleRef,\n      componentsMappings: {},\n    };\n\n    // resolve configuration for feature module\n    const resolvedConfiguration = this.resolveFeatureConfiguration(\n      moduleRef.injector\n    );\n\n    // extract cms components configuration from feature config\n    for (const componentType of featureConfig.cmsComponents ?? []) {\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      featureInstance.componentsMappings![componentType] =\n        resolvedConfiguration.cmsComponents?.[componentType] ?? {};\n    }\n    return featureInstance;\n  }\n\n  /**\n   * Returns configuration provided in feature module\n   */\n  private resolveFeatureConfiguration(featureInjector: Injector): CmsConfig {\n    // get config chunks from feature lib\n    const featureConfigChunks = featureInjector.get<any[]>(\n      ConfigChunk,\n      [],\n      InjectFlags.Self\n    );\n    // get default config chunks from feature lib\n    const featureDefaultConfigChunks = featureInjector.get<any[]>(\n      DefaultConfigChunk,\n      [],\n      InjectFlags.Self\n    );\n\n    return deepMerge(\n      {},\n      ...(featureDefaultConfigChunks ?? []),\n      ...(featureConfigChunks ?? [])\n    ) as CmsConfig;\n  }\n}\n","import { isPlatformServer } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  isDevMode,\n  NgModuleRef,\n  PLATFORM_ID,\n} from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  CmsComponent,\n  CmsComponentChildRoutesConfig,\n  CMSComponentConfig,\n  CmsComponentMapping,\n  CmsConfig,\n  ConfigInitializerService,\n  deepMerge,\n  DeferLoadingStrategy,\n} from '@spartacus/core';\nimport { defer, forkJoin, Observable, of } from 'rxjs';\nimport { mapTo, share, tap } from 'rxjs/operators';\nimport { CmsFeaturesService } from './cms-features.service';\n\n/**\n * Service with logic related to resolving component from cms mapping\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsComponentsService {\n  // Component mappings that were identified as missing\n  protected missingComponents: string[] = [];\n\n  // Already resolved mappings\n  protected mappings: { [componentType: string]: CmsComponentMapping } = {};\n\n  // Copy of initial/static cms mapping configuration unaffected by lazy-loaded modules\n  protected staticCmsConfig: CMSComponentConfig | undefined;\n\n  // Contains already initialized resolvers for specified component typez\n  protected mappingResolvers: Map<string, Observable<CmsComponentMapping>> =\n    new Map();\n\n  constructor(\n    protected config: CmsConfig,\n    @Inject(PLATFORM_ID) protected platformId: Object,\n    protected featureModules: CmsFeaturesService,\n    protected configInitializer: ConfigInitializerService\n  ) {\n    this.configInitializer\n      .getStable('cmsComponents')\n      .subscribe((cmsConfig: CmsConfig) => {\n        // we want to grab cms configuration available at config initialization phase\n        // as lazy-loaded modules can affect global configuration resulting in\n        // non-deterministic state\n        this.staticCmsConfig = { ...cmsConfig.cmsComponents };\n      });\n  }\n\n  /**\n   * Should be called to make sure all component mappings are determined,\n   * especially lazy loaded ones.\n   *\n   * It's recommended way to make sure all other methods of CmsComponentService\n   * will be able to work synchronously for asked component types and avoid risk\n   * of potential errors that could be thrown otherwise.\n   */\n  determineMappings(componentTypes: string[]): Observable<string[]> {\n    return defer(() => {\n      // we use defer, to be sure the logic below used to compose final observable\n      // will be executed at subscription time (with up to date state at the time,\n      // when it will be needed)\n      const featureResolvers = [];\n\n      for (const componentType of componentTypes) {\n        if (!this.mappings[componentType]) {\n          const staticConfig = (this.staticCmsConfig ??\n            this.config.cmsComponents)?.[componentType];\n\n          // check if this component type is managed by feature module\n          if (this.featureModules.hasFeatureFor(componentType)) {\n            featureResolvers.push(\n              // we delegate populating this.mappings to feature resolver\n              this.getFeatureMappingResolver(componentType, staticConfig)\n            );\n          } else {\n            // simply use only static config\n            this.mappings[componentType] = staticConfig;\n          }\n        }\n      }\n\n      if (featureResolvers.length) {\n        return forkJoin(featureResolvers).pipe(mapTo(componentTypes));\n      } else {\n        return of(componentTypes);\n      }\n    });\n  }\n\n  private getFeatureMappingResolver(\n    componentType: string,\n    staticConfig?: CmsComponentMapping\n  ): Observable<CmsComponentMapping> {\n    if (!this.mappingResolvers.has(componentType)) {\n      const mappingResolver$ = this.featureModules\n        .getCmsMapping(componentType)\n        .pipe(\n          tap((featureComponentMapping) => {\n            // We treat cms mapping configuration from a feature as a default,\n            // that can be overridden by app/static configuration\n            this.mappings[componentType] = deepMerge(\n              {},\n              featureComponentMapping,\n              staticConfig\n            );\n            this.mappingResolvers.delete(componentType);\n          }),\n          share()\n        );\n      this.mappingResolvers.set(componentType, mappingResolver$);\n    }\n    return this.mappingResolvers.get(componentType);\n  }\n\n  /**\n   * Returns the feature module for a cms component.\n   * It will only work for cms components provided by feature modules.\n   *\n   * @param componentType\n   */\n  getModule(componentType: string): NgModuleRef<any> | undefined {\n    return (\n      this.featureModules.hasFeatureFor(componentType) &&\n      this.featureModules.getModule(componentType)\n    );\n  }\n\n  /**\n   * Return collection of component mapping configuration for specified list of\n   * component types.\n   *\n   * If component mapping can't be determined synchronously, for example, lazy\n   * loaded one, it will throw an error.\n   *\n   * To make sure component mapping is available, determineMappings()\n   * should be called and completed first.\n   */\n  getMapping(componentType: string): CmsComponentMapping {\n    const componentConfig =\n      this.mappings[componentType] ??\n      (this.staticCmsConfig ?? this.config.cmsComponents)?.[componentType];\n\n    if (isDevMode() && !componentConfig) {\n      if (!this.missingComponents.includes(componentType)) {\n        this.missingComponents.push(componentType);\n        console.warn(\n          `No component implementation found for the CMS component type '${componentType}'.\\n`,\n          `Make sure you implement a component and register it in the mapper.`\n        );\n      }\n    }\n\n    return componentConfig;\n  }\n\n  /**\n   * Checks, if component should be rendered as some components\n   * could be disabled for server side renderings\n   */\n  shouldRender(componentType: string): boolean {\n    const isSSR = isPlatformServer(this.platformId);\n    return !(isSSR && this.getMapping(componentType)?.disableSSR);\n  }\n\n  /**\n   * Return DeferLoadingStrategy for component type.\n   */\n  getDeferLoadingStrategy(\n    componentType: string\n  ): DeferLoadingStrategy | undefined {\n    return (this.staticCmsConfig ?? this.config.cmsComponents)?.[componentType]\n      ?.deferLoading;\n  }\n\n  /**\n   * Get cms driven child routes for components\n   */\n  getChildRoutes(componentTypes: string[]): CmsComponentChildRoutesConfig {\n    const configs = [];\n    for (const componentType of componentTypes) {\n      if (this.shouldRender(componentType)) {\n        configs.push(this.getMapping(componentType)?.childRoutes ?? []);\n      }\n    }\n\n    return this.standardizeChildRoutes(configs);\n  }\n\n  /**\n   * Returns the static data for the component type.\n   */\n  getStaticData<T extends CmsComponent = CmsComponent>(\n    componentType: string\n  ): T | undefined {\n    return this.getMapping(componentType)?.data as T;\n  }\n\n  /**\n   * Standardizes the format of `childRoutes` config.\n   *\n   * Some `childRoutes` configs are simple arrays of Routes (without the notion of the parent route).\n   * But some configs can be an object with children routes and their parent defined in separate property.\n   */\n  protected standardizeChildRoutes(\n    childRoutesConfigs: (Route[] | CmsComponentChildRoutesConfig)[]\n  ): CmsComponentChildRoutesConfig {\n    const result: CmsComponentChildRoutesConfig = { children: [] };\n\n    (childRoutesConfigs || []).forEach((config) => {\n      if (Array.isArray(config)) {\n        result.children.push(...config);\n      } else {\n        result.children.push(...(config.children || []));\n        if (config.parent) {\n          result.parent = config.parent;\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Get cms driven guards for components\n   */\n  getGuards(componentTypes: string[]): any[] {\n    const guards = new Set<any>();\n    for (const componentType of componentTypes) {\n      this.getMapping(componentType)?.guards?.forEach((guard) =>\n        guards.add(guard)\n      );\n    }\n    return Array.from(guards);\n  }\n\n  /**\n   * Get i18n keys associated with components\n   */\n  getI18nKeys(componentTypes: string[]): string[] {\n    const i18nKeys = new Set<string>();\n    for (const componentType of componentTypes) {\n      if (this.shouldRender(componentType)) {\n        this.getMapping(componentType)?.i18nKeys?.forEach((key) =>\n          i18nKeys.add(key)\n        );\n      }\n    }\n    return Array.from(i18nKeys);\n  }\n}\n","import { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { DOCUMENT, isPlatformBrowser } from '@angular/common';\nimport { IntersectionOptions } from '../../../layout/loading/intersection.model';\nimport { DeferLoadingStrategy } from '@spartacus/core';\nimport { CmsComponentsService } from '../../services/cms-components.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PageSlotService {\n  protected prerenderedSlots: string[] | undefined;\n\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    @Inject(PLATFORM_ID) protected platformId: any,\n    @Inject(DOCUMENT) protected document\n  ) {\n    this.resolvePrerenderedSlots();\n  }\n\n  /**\n   * Finds all slots visible in the SSR pre-rendered DOM\n   */\n  protected resolvePrerenderedSlots(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      this.prerenderedSlots = Array.from(\n        this.document.querySelectorAll('cx-page-slot')\n      )\n        .filter(\n          (el: Element) =>\n            el.getBoundingClientRect().top <\n            this.document.documentElement.clientHeight\n        )\n        .map((el: Element) => el.getAttribute('position'));\n    }\n  }\n\n  /**\n   * Indicates if certain slot should be rendered instantly.\n   *\n   * It's especially useful when transitioning from SSR to CSR application,\n   * where we don't want to apply deferring logic to slots that are visible\n   * to avoid unnecessary flickering.\n   */\n  shouldNotDefer(slot: string): boolean {\n    if (this.prerenderedSlots?.includes(slot)) {\n      this.prerenderedSlots.splice(this.prerenderedSlots.indexOf(slot), 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Returns the defer options for the given component. If the wrapping\n   * page slot is prerendered, we would ignore the defer options altogether.\n   */\n  getComponentDeferOptions(\n    slot: string,\n    componentType: string\n  ): IntersectionOptions {\n    if (this.shouldNotDefer(slot)) {\n      return { deferLoading: DeferLoadingStrategy.INSTANT };\n    }\n    const deferLoading =\n      this.cmsComponentsService.getDeferLoadingStrategy(componentType);\n    return { deferLoading };\n  }\n}\n","import { CxEvent } from '@spartacus/core';\n\n/**\n * Lifecycle events for the creation and removal of CMS components.\n *\n * Triggers when the component is added or removed from the DOM, using\n * sub event `ComponentCreateEvent` and `ComponentDestroyEvent`.\n */\nexport abstract class ComponentEvent extends CxEvent {\n  /**\n   * The component type code.\n   */\n  typeCode: string;\n  /**\n   * The unique id for the component instance.\n   */\n  id: string;\n}\n\n/**\n * Indicates that the component is added to the DOM.\n */\nexport class ComponentCreateEvent extends ComponentEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'ComponentCreate';\n  /**\n   * The component host element.\n   */\n  host: HTMLElement;\n}\n\n/**\n * Indicates that the component is removed from the DOM.\n */\nexport class ComponentDestroyEvent extends ComponentEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'ComponentDestroy';\n}\n","import {\n  ComponentRef,\n  ElementRef,\n  Injector,\n  NgModuleRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Applicable, CmsComponentMapping, Priority } from '@spartacus/core';\n\n/**\n * ComponentHandler implementations can be used for instantiating and launching\n * different types of CMS mapped components\n */\nexport abstract class ComponentHandler implements Applicable {\n  /**\n   * Returns component resource - an observable stream used to launch and dispose\n   * component.\n   *\n   * Instantiate and launch component by subscribing to launcher.\n   * Successful component launch will be followed by emission of ElementRef\n   * (and in case of native Angular component, also ComponentRef).\n   * Unsubscribing from the launcher will remove and tear down the component.\n   *\n   * @param componentMapping\n   * @param viewContainerRef\n   * @param elementInjector\n   * @param module\n   */\n  abstract launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector,\n    module?: NgModuleRef<any>\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }>;\n\n  abstract hasMatch(componentMapping: CmsComponentMapping): boolean;\n  abstract getPriority?(): Priority;\n}\n","import {\n  ComponentRef,\n  ElementRef,\n  Inject,\n  Injectable,\n  Injector,\n  isDevMode,\n  NgModuleRef,\n  Optional,\n  ViewContainerRef,\n} from '@angular/core';\nimport { CmsComponentMapping, resolveApplicable } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ComponentHandler } from '../handlers/component-handler';\n\n/**\n * Responsible for obtaining component handler for specified component mapping\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComponentHandlerService {\n  constructor(\n    @Optional()\n    @Inject(ComponentHandler)\n    protected handlers: ComponentHandler[]\n  ) {}\n\n  protected invalidMappings = new Set<CmsComponentMapping<any>>();\n\n  /**\n   * Get best matching component handler\n   *\n   * @param componentMapping\n   */\n  protected resolve(componentMapping: CmsComponentMapping): ComponentHandler {\n    const handler = resolveApplicable(this.handlers, [componentMapping]);\n\n    if (isDevMode() && !handler) {\n      if (!this.invalidMappings.has(componentMapping)) {\n        this.invalidMappings.add(componentMapping);\n        console.warn(\n          \"Can't resolve handler for component mapping: \",\n          componentMapping\n        );\n      }\n    }\n\n    return handler;\n  }\n\n  /**\n   * Get launcher for specified component mapping\n   *\n   * @param componentMapping\n   * @param viewContainerRef\n   * @param elementInjector\n   */\n  getLauncher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector,\n    module?: NgModuleRef<any>\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\n    return this.resolve(componentMapping)?.launcher(\n      componentMapping,\n      viewContainerRef,\n      elementInjector,\n      module\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CmsService } from '@spartacus/core';\nimport { defer, EMPTY, Observable, of } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\nimport { CmsComponentsService } from '../../../services/cms-components.service';\n\n/**\n * Provides data for `CmsComponentData`. This is used while component is injected\n * dynamically, so that the component implementation can access the data.\n *\n * The data is resolved from dynamic data (CMS api) as well as static configured data.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ComponentDataProvider {\n  constructor(\n    protected componentsService: CmsComponentsService,\n    protected cmsService: CmsService\n  ) {}\n\n  /**\n   * Return the component data for a component given by the `uid`.\n   *\n   * If the `type` is provided, static component data (if available) is\n   * merged into the component data. The static data is complemented and\n   * overridden with data retrieved from the cms service.\n   */\n  get<T>(uid: string, type?: string): Observable<T> {\n    return defer(() => {\n      let staticComponentData: T;\n\n      if (type) {\n        staticComponentData = this.componentsService.getStaticData<T>(type);\n      }\n\n      if (uid) {\n        if (staticComponentData) {\n          return this.cmsService.getComponentData<T>(uid).pipe(\n            map((data) => ({\n              ...staticComponentData,\n              ...data,\n            })),\n            startWith(staticComponentData)\n          );\n        } else {\n          return this.cmsService.getComponentData<T>(uid);\n        }\n      } else {\n        return staticComponentData ? of(staticComponentData) : EMPTY;\n      }\n    });\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { CmsComponentsService } from '../../../services/cms-components.service';\nimport { CmsComponentData } from '../../model/cms-component-data';\nimport { ComponentDataProvider } from './component-data.provider';\n\n/**\n * Used to prepare injector for CMS components.\n *\n * Injector will take into account configured providers and provides CmsComponentData\n * for specified component's uid\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsInjectorService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector\n  ) {}\n\n  public getInjector(\n    type: string,\n    uid: string,\n    parentInjector?: Injector\n  ): Injector {\n    const configProviders =\n      this.cmsComponentsService.getMapping(type)?.providers ?? [];\n    return Injector.create({\n      providers: [\n        {\n          provide: CmsComponentData,\n          useFactory: (dataProvider: ComponentDataProvider) => ({\n            uid,\n            data$: dataProvider.get(uid, type),\n          }),\n          deps: [ComponentDataProvider],\n        },\n        ...configProviders,\n      ],\n      parent: parentInjector ?? this.injector,\n    });\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Injector,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  Renderer2,\n  Type,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ContentSlotComponentData,\n  DynamicAttributeService,\n  EventService,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { finalize, tap } from 'rxjs/operators';\nimport { CmsComponentsService } from '../../services/cms-components.service';\nimport {\n  ComponentCreateEvent,\n  ComponentDestroyEvent,\n  ComponentEvent,\n} from './events/component.event';\nimport { CmsInjectorService } from './services/cms-injector.service';\nimport { ComponentHandlerService } from './services/component-handler.service';\n\n/**\n * Directive used to facilitate instantiation of CMS driven dynamic components\n */\n@Directive({\n  selector: '[cxComponentWrapper]',\n})\nexport class ComponentWrapperDirective implements OnInit, OnDestroy {\n  @Input() cxComponentWrapper: ContentSlotComponentData;\n  @Output() cxComponentRef = new EventEmitter<ComponentRef<any>>();\n\n  /**\n   * @deprecated since 2.0\n   *\n   * This property in unsafe, i.e.\n   * - cmpRef can be set later because of lazy loading or deferred loading\n   * - cmpRef can be not set at all if for example, web components are used as cms components\n   */\n  cmpRef?: ComponentRef<any>;\n\n  private launcherResource?: Subscription;\n\n  /**\n   * @deprecated since version 3.3\n   * Use the following constructor instead:\n   * ```\n   * constructor( protected vcr: ViewContainerRef,\n   * protected cmsComponentsService: CmsComponentsService,\n   * protected injector: Injector,\n   * protected dynamicAttributeService: DynamicAttributeService,\n   * protected renderer: Renderer2,\n   * protected componentHandler: ComponentHandlerService,\n   * protected cmsInjector: CmsInjectorService,\n   * protected eventService: EventService) {}\n   * ```\n   */\n  constructor(\n    vcr: ViewContainerRef,\n    cmsComponentsService: CmsComponentsService,\n    injector: Injector,\n    dynamicAttributeService: DynamicAttributeService,\n    renderer: Renderer2,\n    componentHandler: ComponentHandlerService,\n    cmsInjector: CmsInjectorService\n  );\n  constructor(\n    protected vcr: ViewContainerRef,\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected componentHandler: ComponentHandlerService,\n    protected cmsInjector: CmsInjectorService,\n    @Optional() protected eventService?: EventService\n  ) {}\n\n  ngOnInit() {\n    this.cmsComponentsService\n      .determineMappings([this.cxComponentWrapper.flexType])\n      .subscribe(() => {\n        if (\n          this.cmsComponentsService.shouldRender(\n            this.cxComponentWrapper.flexType\n          )\n        ) {\n          this.launchComponent();\n        }\n      });\n  }\n\n  private launchComponent() {\n    const componentMapping = this.cmsComponentsService.getMapping(\n      this.cxComponentWrapper.flexType\n    );\n\n    if (!componentMapping) {\n      return;\n    }\n\n    this.launcherResource = this.componentHandler\n      .getLauncher(\n        componentMapping,\n        this.vcr,\n        this.cmsInjector.getInjector(\n          this.cxComponentWrapper.flexType,\n          this.cxComponentWrapper.uid,\n          this.injector\n        ),\n        this.cmsComponentsService.getModule(this.cxComponentWrapper.flexType)\n      )\n      .pipe(\n        tap(({ elementRef, componentRef }) => {\n          this.cmpRef = componentRef;\n\n          this.cxComponentRef.emit(componentRef);\n\n          this.dispatchEvent(ComponentCreateEvent, elementRef);\n          this.decorate(elementRef);\n          this.injector.get(ChangeDetectorRef).markForCheck();\n        }),\n        finalize(() => this.dispatchEvent(ComponentDestroyEvent))\n      )\n      .subscribe();\n  }\n\n  /**\n   * Dispatch the component event.\n   *\n   * The event is dispatched during creation and removal of the component.\n   */\n  protected dispatchEvent(\n    event: Type<ComponentEvent>,\n    elementRef?: ElementRef\n  ) {\n    const payload = {\n      typeCode: this.cxComponentWrapper.typeCode,\n      id: this.cxComponentWrapper.uid,\n    } as ComponentEvent;\n    if (event === ComponentCreateEvent) {\n      (payload as ComponentCreateEvent).host = elementRef?.nativeElement;\n    }\n    this.eventService?.dispatch(payload, event);\n  }\n\n  private decorate(elementRef: ElementRef): void {\n    this.dynamicAttributeService.addAttributesToComponent(\n      elementRef.nativeElement,\n      this.renderer,\n      this.cxComponentWrapper\n    );\n  }\n\n  ngOnDestroy() {\n    if (this.launcherResource) {\n      this.launcherResource.unsubscribe();\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\nimport {\n  CmsService,\n  ContentSlotComponentData,\n  ContentSlotData,\n  DynamicAttributeService,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, tap } from 'rxjs/operators';\nimport { IntersectionOptions } from '../../../layout/loading/intersection.model';\nimport { PageSlotService } from './page-slot.service';\n\n/**\n * The `PageSlotComponent` is used to render the CMS page slot and it's components.\n *\n * The Page slot host element will be supplemented with css classes so that the layout\n * can be fully controlled by customers:\n * - The page slot _position_ is added as a css class by default.\n * - The `cx-pending` is added for as long as the slot hasn't start loading.\n * - The `page-fold` style class is added for the page slot which is configured as the page fold.\n */\n@Component({\n  selector: 'cx-page-slot,[cx-page-slot]',\n  templateUrl: './page-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageSlotComponent implements OnInit, OnDestroy {\n  /**\n   * The position represents the unique key for a page slot on a single page, but can\n   * be reused cross pages.\n   *\n   * The position is used to find the CMS components for the page slot. It is also\n   * added as an additional CSS class so that layout can be applied.\n   */\n  @HostBinding('attr.position')\n  @Input()\n  set position(value: string) {\n    this.position$.next(value);\n  }\n  get position(): string {\n    return this.position$.value;\n  }\n\n  /**\n   * Maintains css classes introduced by the host and adds additional classes.\n   */\n  @Input() @HostBinding() class: string;\n\n  /**\n   * Indicates that the page slot is the last page slot above the fold.\n   */\n  @HostBinding('class.page-fold') @Input() isPageFold = false;\n\n  /**\n   * Indicates that the components of the page slot haven't been loaded as long\n   * as the isPending state is true.\n   */\n  @HostBinding('class.cx-pending') isPending = true;\n\n  /**\n   * Indicates that the page slot doesn't contain any components. This is no\n   * longer used in spartacus, but kept for backwards compatibility.\n   */\n  @HostBinding('class.has-components') @Input() hasComponents = false;\n\n  protected position$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  components: ContentSlotComponentData[];\n\n  protected slot$: Observable<ContentSlotData> = this.position$.pipe(\n    switchMap((position) => this.cmsService.getContentSlot(position)),\n    distinctUntilChanged(this.isDistinct)\n  );\n\n  /** Observes the components for the given page slot. */\n  components$: Observable<ContentSlotComponentData[]> = this.slot$.pipe(\n    map((slot) => slot?.components ?? [])\n  );\n\n  protected subscription: Subscription = new Subscription();\n\n  /** Keeps track of the pending components that must be loaded for the page slot */\n  private pendingComponentCount = 0;\n\n  /** Tracks the last used position, in case the page slot is used dynamically */\n  private lastPosition: string;\n  constructor(\n    protected cmsService: CmsService,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected elementRef: ElementRef,\n    protected cd: ChangeDetectorRef,\n    protected pageSlotService: PageSlotService\n  ) {}\n\n  ngOnInit() {\n    this.subscription.add(\n      this.slot$.pipe(tap((slot) => this.decorate(slot))).subscribe((value) => {\n        this.components = value?.components || [];\n        this.cd.markForCheck();\n      })\n    );\n  }\n\n  protected decorate(slot: ContentSlotData): void {\n    let cls = this.class || '';\n\n    if (this.lastPosition && cls.indexOf(this.lastPosition) > -1) {\n      cls = cls.replace(this.lastPosition, '');\n    }\n    if (this.position$.value) {\n      cls += ` ${this.position$.value}`;\n      this.lastPosition = this.position$.value;\n    }\n\n    // host bindings\n    this.pending = slot?.components?.length || 0;\n    this.hasComponents = slot?.components?.length > 0;\n    if (cls && cls !== this.class) {\n      this.class = cls;\n    }\n\n    if (slot) {\n      this.dynamicAttributeService.addAttributesToSlot(\n        this.elementRef.nativeElement,\n        this.renderer,\n        slot\n      );\n    }\n  }\n\n  /**\n   * Sets the pending count for the page slot components. Once all pending components are\n   * loaded, the `isPending` flag is updated, so that the associated class can be updated\n   */\n  protected set pending(count: number) {\n    this.pendingComponentCount = count;\n    this.isPending = this.pendingComponentCount > 0;\n  }\n\n  protected get pending(): number {\n    return this.pendingComponentCount;\n  }\n\n  /*\n   * Is triggered when a component is added to the view. This is used to\n   * update the pending count\n   */\n  isLoaded(loadState: boolean) {\n    if (loadState) {\n      this.pending--;\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * The `DeferLoadingStrategy` indicates whether the component should be\n   * rendered instantly or whether it should be deferred.\n   */\n  getComponentDeferOptions(componentType: string): IntersectionOptions {\n    return this.pageSlotService.getComponentDeferOptions(\n      this.position,\n      componentType\n    );\n  }\n\n  protected isDistinct(old: ContentSlotData, current: ContentSlotData) {\n    return (\n      current.components &&\n      old.components?.length === current.components.length &&\n      !old.components.find(\n        (el, index) => el.uid !== current.components[index].uid\n      )\n    );\n  }\n\n  ngOnDestroy() {\n    this.subscription?.unsubscribe();\n  }\n}\n","<ng-template\n  [cxOutlet]=\"position\"\n  [cxOutletContext]=\"{ components$: components$ }\"\n>\n  <ng-template\n    *ngFor=\"let component of components\"\n    [cxOutlet]=\"component.flexType\"\n    [cxOutletContext]=\"{ component: component }\"\n    [cxOutletDefer]=\"getComponentDeferOptions(component.flexType)\"\n    (loaded)=\"isLoaded($event)\"\n  >\n    <ng-container [cxComponentWrapper]=\"component\"></ng-container>\n  </ng-template>\n</ng-template>\n","import {\n  ChangeDetectorRef,\n  Directive,\n  ElementRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  TemplateRef,\n} from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { PageLayoutService } from './page-layout.service';\n\n/**\n * Directive that Adds a style class to the host element based on the cms page\n * template. The CMS page template is driven by the CMS structure, which is configurable\n * in the backend.\n *\n * The style class is added to the host element of the directive. The host element is resolved\n * from the `elementRef`, or, in case the directive is used in an `ng-template`, by the\n * `TemplateRef`.\n *\n * An example of the usage is given below:\n *\n * ```html\n * <cx-storefront class=\"LandingPageTemplate\">\n *   <ng-template cxPageTemplateStyle>...</ng-template>\n * <cx-storefront>\n * ```\n *\n * The style class can also be provided by an input:\n *\n * ```html\n * <ng-template [cxPageTemplateStyle]=\"pageTemplateName\">\n * ```\n *\n */\n@Directive({\n  selector: '[cxPageTemplateStyle]',\n})\nexport class PageTemplateDirective implements OnInit, OnDestroy {\n  /**\n   * Indicates whether this component is driven by an input template or should\n   * observe the CMS driven page layout template.\n   */\n  protected useTemplateFromInput: boolean;\n\n  /**\n   * Adds a style class to the host element based on the cms page template, unless\n   * the class is given as an input.\n   *\n   * The host element is either the actual host, or the parent element in case this\n   * is used inside an `ng-template`.\n   */\n  @Input('cxPageTemplateStyle') set setTemplate(template: string) {\n    if (template && template !== '') {\n      this.useTemplateFromInput = true;\n      this.addStyleClass(template);\n    } else if (this.useTemplateFromInput) {\n      // we only clear the template if it has been provided by the input before\n      this.clear();\n    }\n  }\n\n  // Maintains the page template subscription\n  protected subscription: Subscription = new Subscription();\n\n  /**\n   * Holds the current page template, so we can remove previous page templates\n   * from the element classList.\n   */\n  protected currentTemplate: string;\n\n  constructor(\n    protected pageLayoutService: PageLayoutService,\n    protected elementRef: ElementRef,\n    @Optional() protected templateRef: TemplateRef<HTMLElement>,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {\n    if (!this.useTemplateFromInput) {\n      this.subscription.add(\n        this.pageLayoutService.templateName$.subscribe((template) =>\n          this.addStyleClass(template)\n        )\n      );\n    }\n  }\n\n  /**\n   * Adds the page template as a style class to the given element. If any\n   * page template was added before, we clean it up.\n   *\n   * We'll not use hostBinding for the style class, as it will potential drop\n   * an existing class name on the host. This is why we need to work with\n   * the lower level change detection api.\n   */\n  protected addStyleClass(template: string, el?: HTMLElement): void {\n    this.clear(el);\n    if (template) {\n      this.currentTemplate = template;\n      (el ?? this.host).classList.add(this.currentTemplate);\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Cleans up the class host binding, if a template class was assigned before.\n   */\n  protected clear(el?: HTMLElement) {\n    if (this.currentTemplate) {\n      (el ?? this.host).classList?.remove(this.currentTemplate);\n      this.cd.markForCheck();\n    }\n  }\n\n  /**\n   * Returns the host element (`HTMLElement`).\n   *\n   * If the directive is used on an `ng-template`, we take the parent element,\n   * to ensure that we're not ending up with a comment.\n   */\n  protected get host(): HTMLElement {\n    return !!this.templateRef\n      ? this.templateRef.elementRef.nativeElement.parentElement\n      : this.elementRef.nativeElement;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, switchMap } from 'rxjs/operators';\nimport { PageLayoutService } from './page-layout.service';\n\n@Component({\n  selector: 'cx-page-layout',\n  templateUrl: './page-layout.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageLayoutComponent {\n  @Input() set section(value: string) {\n    this.section$.next(value);\n  }\n  readonly section$: BehaviorSubject<string> = new BehaviorSubject(undefined);\n\n  readonly templateName$: Observable<string> =\n    this.pageLayoutService.templateName$;\n\n  readonly layoutName$: Observable<string> = this.section$.pipe(\n    switchMap((section) => (section ? of(section) : this.templateName$))\n  );\n\n  readonly slots$: Observable<string[]> = this.section$.pipe(\n    switchMap((section) => this.pageLayoutService.getSlots(section))\n  );\n\n  readonly pageFoldSlot$: Observable<string> = this.templateName$.pipe(\n    switchMap((templateName) =>\n      this.pageLayoutService.getPageFoldSlot(templateName)\n    ),\n    distinctUntilChanged()\n  );\n\n  constructor(protected pageLayoutService: PageLayoutService) {}\n}\n","<ng-template\n  [cxPageTemplateStyle]=\"layoutName$ | async\"\n  [cxOutlet]=\"layoutName$ | async\"\n  [cxOutletContext]=\"{\n    templateName$: templateName$,\n    slots$: slots$,\n    section$: section$\n  }\"\n>\n  <ng-content></ng-content>\n\n  <cx-page-slot\n    *ngFor=\"let slot of slots$ | async\"\n    [position]=\"slot\"\n    [isPageFold]=\"slot === (pageFoldSlot$ | async)\"\n  ></cx-page-slot>\n</ng-template>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport {\n  CmsComponentChildRoutesConfig,\n  CmsRoute,\n  deepMerge,\n  PageContext,\n  PageType,\n} from '@spartacus/core';\nimport { PageLayoutComponent } from '../page/page-layout/page-layout.component';\nimport { CmsComponentsService } from './cms-components.service';\n\n// This service should be exposed in public API only after the refactor planned in https://github.com/SAP/spartacus/issues/7070\n@Injectable({ providedIn: 'root' })\nexport class CmsRoutesImplService {\n  constructor(\n    private router: Router,\n    private cmsComponentsService: CmsComponentsService\n  ) {}\n\n  private cmsRouteExists(url: string): boolean {\n    const isCmsDrivenRoute = url.startsWith('/');\n\n    if (!isCmsDrivenRoute) {\n      return false;\n    }\n\n    const routePath = url.substr(1);\n\n    return (\n      isCmsDrivenRoute &&\n      !!this.router.config.find(\n        (route: CmsRoute) =>\n          route.data && route.data.cxCmsRouteContext && route.path === routePath\n      )\n    );\n  }\n\n  /**\n   * Contains Cms driven routing logic intended for use use in guards, especially in canActivate method.\n   *\n   * Will return true, when logic wont have to modify routing (so canActivate could be easily resolved to true)\n   * or will return false, when routing configuration was updated and redirection to newly generated route was initiated.\n   *\n   * @param pageContext\n   * @param currentUrl\n   */\n  handleCmsRoutesInGuard(\n    pageContext: PageContext,\n    componentTypes: string[],\n    currentUrl: string,\n    currentPageLabel: string\n  ): boolean {\n    if (this.cmsRouteExists(currentPageLabel)) {\n      return true;\n    }\n\n    const childRoutesConfig =\n      this.cmsComponentsService.getChildRoutes(componentTypes);\n\n    if (childRoutesConfig?.children?.length) {\n      if (\n        this.updateRouting(pageContext, currentPageLabel, childRoutesConfig)\n      ) {\n        this.router.navigateByUrl(currentUrl);\n        return false;\n      }\n    }\n    return true;\n  }\n\n  private updateRouting(\n    pageContext: PageContext,\n    pageLabel: string,\n    childRoutesConfig: CmsComponentChildRoutesConfig\n  ): boolean {\n    if (\n      pageContext.type === PageType.CONTENT_PAGE &&\n      pageLabel.startsWith('/') &&\n      pageLabel.length > 1\n    ) {\n      const newRoute: CmsRoute = {\n        path: pageLabel.substr(1),\n        component: PageLayoutComponent,\n        children: childRoutesConfig.children,\n        data: deepMerge({}, childRoutesConfig?.parent?.data ?? {}, {\n          cxCmsRouteContext: {\n            type: pageContext.type,\n            id: pageLabel,\n          },\n        }),\n      };\n\n      this.router.resetConfig([newRoute, ...this.router.config]);\n      return true;\n    }\n\n    return false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { PageContext } from '@spartacus/core';\nimport { CmsRoutesImplService } from './cms-routes-impl.service';\n\n// Public injection token for the private implementation of the service `CmsRoutesImplService`.\n// After #7070, this class should be replaced with a real implementation.\n@Injectable({\n  providedIn: 'root',\n  useExisting: CmsRoutesImplService,\n})\nexport abstract class CmsRoutesService {\n  abstract handleCmsRoutesInGuard(\n    pageContext: PageContext,\n    componentTypes: string[],\n    currentUrl: string,\n    currentPageLabel: string\n  ): boolean;\n}\n","import { Injectable } from '@angular/core';\nimport { TranslationChunkService, TranslationService } from '@spartacus/core';\nimport { CmsComponentsService } from './cms-components.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsI18nService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    protected translation: TranslationService,\n    protected translationChunk: TranslationChunkService\n  ) {}\n\n  loadForComponents(componentTypes: string[]) {\n    const i18nKeys = this.cmsComponentsService.getI18nKeys(componentTypes);\n    const i18nChunks = new Set<string>();\n    for (const key of i18nKeys) {\n      i18nChunks.add(this.translationChunk.getChunkNameForKey(key));\n    }\n    this.translation.loadChunks(Array.from(i18nChunks));\n  }\n}\n","import { Injectable, Injector } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { CmsActivatedRouteSnapshot } from '@spartacus/core';\nimport { concat, from, isObservable, Observable, of } from 'rxjs';\nimport { endWith, first, skipWhile } from 'rxjs/operators';\nimport { CmsComponentsService } from './cms-components.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsGuardsService {\n  constructor(\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector\n  ) {}\n\n  cmsPageCanActivate(\n    componentTypes: string[],\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const guards = this.cmsComponentsService.getGuards(componentTypes);\n\n    if (guards.length) {\n      const canActivateObservables = guards.map((guardClass) => {\n        const guard = this.injector.get<CanActivate>(guardClass, null);\n        if (isCanActivate(guard)) {\n          return wrapIntoObservable(guard.canActivate(route, state)).pipe(\n            first()\n          );\n        } else {\n          throw new Error('Invalid CanActivate guard in cmsMapping');\n        }\n      });\n\n      return concat(...canActivateObservables).pipe(\n        skipWhile((canActivate: boolean | UrlTree) => canActivate === true),\n        endWith(true),\n        first()\n      );\n    } else {\n      return of(true);\n    }\n  }\n}\n\nfunction wrapIntoObservable<T>(\n  value: T | Promise<T> | Observable<T>\n): Observable<T> {\n  if (isObservable(value)) {\n    return value;\n  }\n\n  if (isPromise(value)) {\n    return from(Promise.resolve(value));\n  }\n\n  return of(value);\n}\n\nfunction isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nfunction isCanActivate(guard: any): guard is CanActivate {\n  return guard && isFunction<CanActivate>(guard.canActivate);\n}\n\nfunction isFunction<T>(v: any): v is T {\n  return typeof v === 'function';\n}\n","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  CmsActivatedRouteSnapshot,\n  CmsService,\n  Page,\n  PageContext,\n  PageType,\n  SemanticPathService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport {\n  filter,\n  map,\n  switchMap,\n  take,\n  tap,\n  withLatestFrom,\n} from 'rxjs/operators';\nimport { CmsComponentsService } from '../services/cms-components.service';\nimport { CmsGuardsService } from '../services/cms-guards.service';\nimport { CmsI18nService } from '../services/cms-i18n.service';\nimport { CmsRoutesService } from '../services/cms-routes.service';\n\n/**\n * Helper service for `CmsPageGuard`\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageGuardService {\n  constructor(\n    protected semanticPathService: SemanticPathService,\n    protected cmsService: CmsService,\n    protected cmsRoutes: CmsRoutesService,\n    protected cmsI18n: CmsI18nService,\n    protected cmsGuards: CmsGuardsService,\n    protected cmsComponentsService: CmsComponentsService,\n    protected routing: RoutingService\n  ) {}\n\n  /**\n   * Takes CMS components types in the current CMS page, triggers (configurable) side effects and returns a boolean - whether the route can be activated.\n   *\n   * Based on `cmsComponents` config for the components in the page:\n   * - Evaluates components' guards; if one of them emits false or UrlTree - the route cannot be activated or redirects to the given UrlTree, respectively.\n   * - If all components' guards emitted true, then the route can be activated\n   * - Then we trigger loading of configured i18n chunks in parallel\n   * - And we register the configured children routes of cms components\n   *\n   * @param pageContext current cms page context\n   * @param pageData cms page data\n   * @param route activated route snapshot\n   * @param state router state snapshot\n   *\n   * @returns boolean observable - whether the route can be activated\n   */\n  canActivatePage(\n    pageContext: PageContext,\n    pageData: Page,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.cmsService.getPageComponentTypes(pageContext).pipe(\n      take(1),\n      switchMap((componentTypes) =>\n        this.cmsComponentsService.determineMappings(componentTypes)\n      ),\n      switchMap((componentTypes) =>\n        this.cmsGuards\n          .cmsPageCanActivate(componentTypes, route, state)\n          .pipe(withLatestFrom(of(componentTypes)))\n      ),\n      tap(([canActivate, componentTypes]) => {\n        if (canActivate === true) {\n          this.cmsI18n.loadForComponents(componentTypes);\n        }\n      }),\n      map(([canActivate, componentTypes]) => {\n        const pageLabel = pageData.label || pageContext.id; // for content pages the page label returned from backend can be different than ID initially assumed from route\n        if (canActivate === true && !route?.data?.cxCmsRouteContext) {\n          return this.cmsRoutes.handleCmsRoutesInGuard(\n            pageContext,\n            componentTypes,\n            state.url,\n            pageLabel\n          );\n        }\n        return canActivate;\n      })\n    );\n  }\n\n  /**\n   * Activates the \"NOT FOUND\" cms page.\n   *\n   * It loads cms page data for the \"NOT FOUND\" page and puts it in the state of the the requested page label.\n   * Then it processes its CMS components with the method `canActivatePage()` of this service. For more, see its docs.\n   */\n  canActivateNotFoundPage(\n    pageContext: PageContext,\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    const notFoundCmsPageContext: PageContext = {\n      type: PageType.CONTENT_PAGE,\n      id: this.semanticPathService.get('notFound'),\n    };\n\n    return this.cmsService.getPage(notFoundCmsPageContext).pipe(\n      switchMap((notFoundPage) => {\n        if (notFoundPage) {\n          return this.cmsService.getPageIndex(notFoundCmsPageContext).pipe(\n            tap((notFoundIndex) => {\n              this.cmsService.setPageFailIndex(pageContext, notFoundIndex);\n              this.routing.changeNextPageContext(notFoundCmsPageContext);\n            }),\n            switchMap((notFoundIndex) =>\n              this.cmsService.getPageIndex(pageContext).pipe(\n                // we have to wait for page index update\n                filter((index) => index === notFoundIndex)\n              )\n            ),\n            switchMap(() =>\n              this.canActivatePage(pageContext, notFoundPage, route, state)\n            )\n          );\n        }\n        return of(false);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport {\n  CmsActivatedRouteSnapshot,\n  CmsService,\n  ProtectedRoutesGuard,\n  RouteLoadStrategy,\n  RoutingConfigService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { first, switchMap, take } from 'rxjs/operators';\nimport { CmsPageGuardService } from './cms-page-guard.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CmsPageGuard implements CanActivate {\n  static guardName = 'CmsPageGuard';\n\n  constructor(\n    protected routingService: RoutingService,\n    protected cmsService: CmsService,\n    protected protectedRoutesGuard: ProtectedRoutesGuard,\n    protected service: CmsPageGuardService,\n    protected routingConfig: RoutingConfigService\n  ) {}\n\n  /**\n   * Tries to load the CMS page data for the anticipated route and returns:\n   * - `true` - if it can be activated\n   * - `false` - if it cannot be activated\n   * - `UrlTree` - if user should be redirected to a given `UrlTree`\n   *\n   * If the route can be activated, it fires additional calculations on the CMS components present on this CMS page,\n   * based on their configuration (`cmsComponents` config).\n   *\n   * For more, see docs of the `CmsPageGuardService.canActivatePage`.\n   */\n  canActivate(\n    route: CmsActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.protectedRoutesGuard.canActivate(route).pipe(\n      switchMap((canActivate) =>\n        canActivate === true\n          ? this.routingService.getNextPageContext().pipe(\n              take(1),\n              switchMap((pageContext) =>\n                this.cmsService.getPage(pageContext, this.shouldReload()).pipe(\n                  first(),\n                  switchMap((pageData) =>\n                    pageData\n                      ? this.service.canActivatePage(\n                          pageContext,\n                          pageData,\n                          route,\n                          state\n                        )\n                      : this.service.canActivateNotFoundPage(\n                          pageContext,\n                          route,\n                          state\n                        )\n                  )\n                )\n              )\n            )\n          : of(canActivate)\n      )\n    );\n  }\n\n  /**\n   * Returns whether we should reload the CMS page data, even when it was loaded before.\n   */\n  private shouldReload(): boolean {\n    return this.routingConfig.getLoadStrategy() !== RouteLoadStrategy.ONCE;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ActiveCartService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, startWith } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\n\n@Component({\n  selector: 'cx-mini-cart',\n  templateUrl: './mini-cart.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MiniCartComponent {\n  iconTypes = ICON_TYPE;\n\n  quantity$: Observable<number> = this.activeCartService.getActive().pipe(\n    startWith({ deliveryItemsQuantity: 0 }),\n    map((cart) => cart.deliveryItemsQuantity || 0)\n  );\n\n  total$: Observable<string> = this.activeCartService.getActive().pipe(\n    filter((cart) => !!cart.totalPrice),\n    map((cart) => cart.totalPrice.formattedValue)\n  );\n\n  constructor(protected activeCartService: ActiveCartService) {}\n}\n","<a\n  [attr.aria-label]=\"\n    'miniCart.item' | cxTranslate: { count: quantity$ | async }\n  \"\n  [routerLink]=\"{ cxRoute: 'cart' } | cxUrl\"\n>\n  <cx-icon [type]=\"iconTypes.CART\"></cx-icon>\n\n  <span class=\"total\">\n    {{ 'miniCart.total' | cxTranslate: { total: total$ | async } }}\n  </span>\n\n  <span class=\"count\">\n    {{ 'miniCart.count' | cxTranslate: { count: quantity$ | async } }}\n  </span>\n</a>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { IconModule } from '../../../cms-components/misc/icon/icon.module';\nimport { MiniCartComponent } from './mini-cart.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, IconModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MiniCartComponent: {\n          component: MiniCartComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [MiniCartComponent],\n  exports: [MiniCartComponent],\n})\nexport class MiniCartModule {}\n","export const ORDER_ENTRIES_CONTEXT = Symbol('ORDER_ENTRIES_CONTEXT');\n","import { Component, OnInit } from '@angular/core';\nimport {\n  ActiveCartService,\n  Cart,\n  CmsParagraphComponent,\n  CmsService,\n  OrderEntry,\n  PromotionLocation,\n  SelectiveCartService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-save-for-later',\n  templateUrl: './save-for-later.component.html',\n})\nexport class SaveForLaterComponent implements OnInit {\n  saveForLater$: Observable<Cart>;\n  cart$: Observable<Cart>;\n  entries$: Observable<OrderEntry[]>;\n  cartLoaded$: Observable<boolean>;\n  data$: Observable<CmsParagraphComponent>;\n  isCartEmpty$: Observable<boolean>;\n  CartLocation = PromotionLocation;\n\n  constructor(\n    protected cmsService: CmsService,\n    protected cartService: ActiveCartService,\n    protected selectiveCartService: SelectiveCartService\n  ) {}\n\n  ngOnInit() {\n    this.isCartEmpty$ = this.cartService\n      .getActive()\n      .pipe(map((cart) => !(cart && cart.totalItems && cart.totalItems > 0)));\n    this.saveForLater$ = this.selectiveCartService.getCart();\n    this.entries$ = this.selectiveCartService\n      .getEntries()\n      .pipe(filter((entries) => entries.length > 0));\n    this.cartLoaded$ = combineLatest([\n      this.cartService.isStable(),\n      this.selectiveCartService.isStable(),\n    ]).pipe(map(([cartLoaded, sflLoaded]) => cartLoaded && sflLoaded));\n    this.data$ = this.cmsService.getComponentData(\n      'EmptyCartParagraphComponent'\n    );\n  }\n\n  moveToCart(item: OrderEntry) {\n    this.selectiveCartService.removeEntry(item);\n    this.cartService.addEntry(item.product.code, item.quantity);\n  }\n}\n","<ng-container *ngIf=\"isCartEmpty$ | async\">\n  <p\n    *ngIf=\"data$ | async as data\"\n    [innerHTML]=\"data.content\"\n    class=\"cx-empty-cart-info\"\n  ></p>\n</ng-container>\n\n<ng-container *ngIf=\"saveForLater$ | async as saveForLater\">\n  <ng-container *ngIf=\"entries$ | async as entries\">\n    <div *ngIf=\"saveForLater.totalItems > 0\" class=\"cart-details-wrapper\">\n      <div class=\"cx-total\">\n        {{\n          'saveForLaterItems.itemTotal'\n            | cxTranslate: { count: saveForLater.totalItems }\n        }}\n      </div>\n      <cx-cart-item-list\n        [items]=\"entries\"\n        [readonly]=\"false\"\n        [cartIsLoading]=\"!(cartLoaded$ | async)\"\n        [promotionLocation]=\"CartLocation.SaveForLater\"\n        [options]=\"{\n          isSaveForLater: true,\n          optionalBtn: moveToCartBtn\n        }\"\n      ></cx-cart-item-list>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template let-ctx #moveToCartBtn>\n  <div class=\"col-md-3 col-lg-3 col-xl-3 cx-sfl-btn\">\n    <button\n      class=\"link cx-action-link\"\n      [disabled]=\"ctx.loading\"\n      (click)=\"moveToCart(ctx.item)\"\n      type=\"button\"\n    >\n      {{ 'saveForLaterItems.moveToCart' | cxTranslate }}\n    </button>\n  </div>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  CmsConfig,\n  FeaturesConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CartSharedModule } from '../cart-shared/cart-shared.module';\nimport { SaveForLaterComponent } from './save-for-later.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, CartSharedModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\n      cmsComponents: {\n        SaveForLaterComponent: {\n          component: SaveForLaterComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [SaveForLaterComponent],\n  exports: [SaveForLaterComponent],\n})\nexport class SaveForLaterModule {}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CartModule } from '@spartacus/core';\nimport { CmsPageGuard } from '../../cms-structure/guards/cms-page.guard';\nimport { PAGE_LAYOUT_HANDLER } from '../../cms-structure/page/page-layout/page-layout-handler';\nimport { PageLayoutComponent } from '../../cms-structure/page/page-layout/page-layout.component';\nimport { AddToCartModule } from './add-to-cart/add-to-cart.module';\nimport { AddToWishListModule } from './add-to-wishlist/add-to-wish-list.module';\nimport { CartDetailsModule } from './cart-details/cart-details.module';\nimport { CartPageLayoutHandler } from './cart-page-layout-handler';\nimport { ActiveCartOrderEntriesContext } from './cart-page/active-cart-order-entries-context';\nimport { CartSharedModule } from './cart-shared/cart-shared.module';\nimport { CartTotalsModule } from './cart-totals/cart-totals.module';\nimport { MiniCartModule } from './mini-cart/mini-cart.module';\nimport { AddOrderEntriesContext } from './order-entries-context/add-order-entries.context';\nimport { GetOrderEntriesContext } from './order-entries-context/get-order-entries.context';\nimport { ORDER_ENTRIES_CONTEXT } from './order-entries-context/order-entires.context';\nimport { SaveForLaterModule } from './save-for-later/save-for-later.module';\n\nexport type OrderEntriesContext = Partial<\n  AddOrderEntriesContext & GetOrderEntriesContext\n>;\n\n@NgModule({\n  imports: [\n    NgbModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    SaveForLaterModule,\n    RouterModule.forChild([\n      {\n        // @ts-ignore\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'cart',\n          cxContext: {\n            [ORDER_ENTRIES_CONTEXT]: ActiveCartOrderEntriesContext,\n          },\n        },\n      },\n    ]),\n  ],\n  exports: [\n    AddToWishListModule,\n    CartDetailsModule,\n    CartTotalsModule,\n    CartSharedModule,\n    AddToCartModule,\n    MiniCartModule,\n    CartModule,\n    SaveForLaterModule,\n  ],\n  declarations: [],\n  providers: [\n    {\n      provide: PAGE_LAYOUT_HANDLER,\n      useExisting: CartPageLayoutHandler,\n      multi: true,\n    },\n  ],\n})\nexport class CartComponentModule {}\n","import { NgModule } from '@angular/core';\nimport { CartValidationWarningsModule } from './cart-warnings/cart-validation-warnings.module';\nimport { CartItemValidationWarningModule } from './cart-item-warning/cart-item-validation-warning.module';\n\n@NgModule({\n  imports: [CartValidationWarningsModule, CartItemValidationWarningModule],\n  providers: [],\n})\nexport class CartValidationComponentsModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { Observable, of } from 'rxjs';\nimport {\n  CartValidationService,\n  SemanticPathService,\n  GlobalMessageService,\n  ActiveCartService,\n  GlobalMessageType,\n  CartConfigService,\n  CartValidationStatusCode,\n} from '@spartacus/core';\nimport { map, withLatestFrom } from 'rxjs/operators';\nimport { CartValidationStateService } from '../cart-validation-state.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartValidationGuard implements CanActivate {\n  constructor(\n    protected cartValidationService: CartValidationService,\n    protected semanticPathService: SemanticPathService,\n    protected router: Router,\n    protected globalMessageService: GlobalMessageService,\n    protected activeCartService: ActiveCartService,\n    protected cartValidationStateService: CartValidationStateService,\n    protected cartConfigService: CartConfigService\n  ) {}\n\n  protected GLOBAL_MESSAGE_TIMEOUT = 10000;\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return !this.cartConfigService.isCartValidationEnabled()\n      ? of(true)\n      : this.cartValidationService.validateCart().pipe(\n          withLatestFrom(this.activeCartService.getEntries()),\n          map(([cartModificationList, cartEntries]) => {\n            this.cartValidationStateService.updateValidationResultAndRoutingId(\n              cartModificationList?.cartModifications\n            );\n\n            if (cartModificationList?.cartModifications?.length !== 0) {\n              let validationResultMessage;\n\n              if (\n                cartEntries.length === 1 &&\n                cartEntries[0].product.code ===\n                  cartModificationList?.cartModifications[0].entry.product\n                    .code &&\n                cartModificationList?.cartModifications[0].statusCode ===\n                  CartValidationStatusCode.NO_STOCK\n              ) {\n                validationResultMessage = {\n                  key: 'validation.cartEntryRemoved',\n                  params: {\n                    name: cartModificationList?.cartModifications[0].entry\n                      .product.name,\n                  },\n                };\n              } else {\n                validationResultMessage = {\n                  key: 'validation.cartEntriesChangeDuringCheckout',\n                };\n              }\n\n              this.globalMessageService.add(\n                validationResultMessage,\n                GlobalMessageType.MSG_TYPE_ERROR,\n                this.GLOBAL_MESSAGE_TIMEOUT\n              );\n              this.activeCartService.reloadActiveCart();\n              return this.router.parseUrl(this.semanticPathService.get('cart'));\n            }\n\n            return true;\n          })\n        );\n  }\n}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport { CmsBannerComponent, Image, ImageGroup } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-banner',\n  templateUrl: './banner.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerComponent {\n  @HostBinding('class') styleClasses: string | undefined;\n\n  data$: Observable<CmsBannerComponent> = this.component.data$.pipe(\n    tap((data) => (this.styleClasses = data.styleClasses))\n  );\n\n  constructor(protected component: CmsComponentData<CmsBannerComponent>) {}\n\n  /**\n   * Returns `_blank` to force opening the link in a new window whenever the\n   * `data.external` flag is set to true.\n   */\n  getTarget(data: CmsBannerComponent): string | null {\n    return data.external === 'true' || data.external === true ? '_blank' : null;\n  }\n\n  getImage(data: CmsBannerComponent): Image | ImageGroup | undefined {\n    if (data.media) {\n      if ('url' in data.media) {\n        return data.media as Image;\n      } else {\n        return data.media as ImageGroup;\n      }\n    }\n  }\n}\n","<ng-container *ngIf=\"data$ | async as data\">\n  <cx-generic-link\n    *ngIf=\"data.urlLink\"\n    [url]=\"data.urlLink\"\n    [target]=\"getTarget(data)\"\n  >\n    <p class=\"headline\" *ngIf=\"data.headline\" [innerHTML]=\"data.headline\"></p>\n    <cx-media [container]=\"getImage(data)\"></cx-media>\n    <p class=\"content\" *ngIf=\"data.content\" [innerHTML]=\"data.content\"></p>\n  </cx-generic-link>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { BannerComponent } from './banner.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, GenericLinkModule, MediaModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        SimpleResponsiveBannerComponent: {\n          component: BannerComponent,\n        },\n        BannerComponent: {\n          component: BannerComponent,\n        },\n        SimpleBannerComponent: {\n          component: BannerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BannerComponent],\n  exports: [BannerComponent],\n})\nexport class BannerModule {}\n","import {\n  ComponentFactoryResolver,\n  ComponentRef,\n  ElementRef,\n  Injectable,\n  Injector,\n  NgModuleRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { ComponentHandler } from './component-handler';\nimport { Observable } from 'rxjs';\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\n\n/**\n * Default component handler used for dynamically launching cms components implemented\n * as native Angular components.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DefaultComponentHandler implements ComponentHandler {\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\n    return typeof componentMapping.component === 'function';\n  }\n\n  getPriority(): Priority {\n    return Priority.FALLBACK;\n  }\n\n  launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector,\n    module?: NgModuleRef<any>\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\n    return new Observable<{\n      elementRef: ElementRef;\n      componentRef?: ComponentRef<any>;\n    }>((subscriber) => {\n      let componentRef: ComponentRef<any>;\n\n      const injector = elementInjector ?? viewContainerRef.injector;\n\n      const dispose = () => {\n        if (componentRef) {\n          componentRef.destroy();\n        }\n      };\n\n      const factory = this.getComponentFactory(\n        injector,\n        componentMapping.component\n      );\n\n      if (factory) {\n        componentRef = viewContainerRef.createComponent(\n          factory,\n          undefined,\n          injector,\n          undefined,\n          module\n        );\n        subscriber.next({ elementRef: componentRef.location, componentRef });\n      }\n\n      return dispose;\n    });\n  }\n\n  protected getComponentFactory(injector: Injector, component: any): any {\n    if (!component) {\n      return null;\n    }\n    const factory = injector\n      .get(ComponentFactoryResolver)\n      .resolveComponentFactory(component);\n\n    return factory;\n  }\n}\n","import {\n  ComponentRef,\n  ElementRef,\n  Injectable,\n  Injector,\n  NgModuleRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { CmsComponentMapping, Priority } from '@spartacus/core';\nimport { from, Observable } from 'rxjs';\nimport { DefaultComponentHandler } from './default-component.handler';\nimport { switchMap } from 'rxjs/operators';\nimport { ComponentHandler } from './component-handler';\n\n/**\n * Lazy component handler used for launching lazy loaded cms components implemented\n * as native Angular components.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LazyComponentHandler implements ComponentHandler {\n  constructor(protected defaultHandler: DefaultComponentHandler) {}\n\n  /**\n   * We want to mach dynamic import signature () => import('')\n   */\n  hasMatch(componentMapping: CmsComponentMapping): boolean {\n    return (\n      typeof componentMapping.component === 'function' &&\n      this.isNotClass(componentMapping.component)\n    );\n  }\n\n  private isNotClass(symbol: any): boolean {\n    const signature = symbol.toString().substr(0, 20).replace(' ', '');\n    return signature.startsWith('function()') || signature.startsWith('()=>');\n  }\n\n  getPriority(): Priority {\n    return Priority.LOW;\n  }\n\n  launcher(\n    componentMapping: CmsComponentMapping,\n    viewContainerRef: ViewContainerRef,\n    elementInjector?: Injector,\n    module?: NgModuleRef<any>\n  ): Observable<{ elementRef: ElementRef; componentRef?: ComponentRef<any> }> {\n    return from(componentMapping.component()).pipe(\n      switchMap((component) =>\n        this.defaultHandler.launcher(\n          { ...componentMapping, component },\n          viewContainerRef,\n          elementInjector,\n          module\n        )\n      )\n    );\n  }\n}\n","import {\n  Directive,\n  Injector,\n  OnDestroy,\n  OnInit,\n  Renderer2,\n  ViewContainerRef,\n} from '@angular/core';\nimport { CmsComponent, DynamicAttributeService } from '@spartacus/core';\nimport { map } from 'rxjs/operators';\nimport { Subscription } from 'rxjs';\nimport { CmsComponentData } from '../model/cms-component-data';\nimport { CmsComponentsService } from '../../services/cms-components.service';\nimport { ComponentHandlerService } from './services/component-handler.service';\nimport { CmsInjectorService } from './services/cms-injector.service';\nimport { ComponentWrapperDirective } from './component-wrapper.directive';\n\n@Directive({\n  selector: '[cxInnerComponentsHost]',\n})\nexport class InnerComponentsHostDirective implements OnInit, OnDestroy {\n  protected innerComponents$ = this.data.data$.pipe(\n    map((data) => data?.composition?.inner ?? [])\n  );\n\n  protected componentWrappers: any[] = [];\n  protected subscription?: Subscription;\n\n  constructor(\n    protected data: CmsComponentData<CmsComponent>,\n    protected vcr: ViewContainerRef,\n    // dependencies required for ComponentWrapper directive\n    protected cmsComponentsService: CmsComponentsService,\n    protected injector: Injector,\n    protected dynamicAttributeService: DynamicAttributeService,\n    protected renderer: Renderer2,\n    protected componentHandler: ComponentHandlerService,\n    protected cmsInjector: CmsInjectorService\n  ) {}\n\n  ngOnInit(): void {\n    this.subscription = this.innerComponents$.subscribe((x) => {\n      this.renderComponents(x);\n    });\n  }\n\n  protected renderComponents(components: string[]) {\n    this.clearComponents();\n    components.forEach((component) => this.renderComponent(component));\n  }\n\n  protected renderComponent(component: string) {\n    const componentWrapper = new ComponentWrapperDirective(\n      this.vcr,\n      this.cmsComponentsService,\n      this.injector,\n      this.dynamicAttributeService,\n      this.renderer,\n      this.componentHandler,\n      this.cmsInjector\n    );\n    componentWrapper.cxComponentWrapper = { flexType: component, uid: '' };\n    componentWrapper.ngOnInit();\n    this.componentWrappers.push(componentWrapper);\n  }\n\n  protected clearComponents() {\n    this.componentWrappers.forEach((wrapper) => wrapper.ngOnDestroy());\n    this.componentWrappers = [];\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n    this.clearComponents();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ComponentWrapperDirective } from './component-wrapper.directive';\nimport { ComponentHandler } from './handlers/component-handler';\nimport { DefaultComponentHandler } from './handlers/default-component.handler';\nimport { LazyComponentHandler } from './handlers/lazy-component.handler';\nimport { InnerComponentsHostDirective } from './inner-components-host.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ComponentWrapperDirective, InnerComponentsHostDirective],\n  exports: [ComponentWrapperDirective, InnerComponentsHostDirective],\n})\nexport class PageComponentModule {\n  static forRoot(): ModuleWithProviders<PageComponentModule> {\n    return {\n      ngModule: PageComponentModule,\n      providers: [\n        {\n          provide: ComponentHandler,\n          useExisting: DefaultComponentHandler,\n          multi: true,\n        },\n        {\n          provide: ComponentHandler,\n          useExisting: LazyComponentHandler,\n          multi: true,\n        },\n      ],\n    };\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageComponentModule } from '../component/page-component.module';\nimport { PageSlotComponent } from './page-slot.component';\nimport { PageSlotService } from './page-slot.service';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageComponentModule],\n  declarations: [PageSlotComponent],\n  exports: [PageSlotComponent],\n})\nexport class PageSlotModule {\n  // instantiate PageSlotService ASAP, so it can examine SSR pre-rendered DOM\n  constructor(_pageSlot: PageSlotService) {}\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PageSlotModule } from '../../../cms-structure/page/slot/page-slot.module';\nimport { OutletModule } from '../../outlet/outlet.module';\nimport { PageLayoutComponent } from './page-layout.component';\nimport { PageTemplateDirective } from './page-template.directive';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, PageSlotModule],\n  declarations: [PageLayoutComponent, PageTemplateDirective],\n  exports: [PageLayoutComponent, PageTemplateDirective],\n})\nexport class PageLayoutModule {}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class PWAModuleConfig {\n  pwa?: {\n    enabled?: boolean;\n    addToHomeScreen?: boolean;\n  };\n}\n\nexport const defaultPWAModuleConfig: PWAModuleConfig = {\n  pwa: {\n    enabled: false,\n    addToHomeScreen: false,\n  },\n};\n\ndeclare module '@spartacus/core' {\n  interface Config extends PWAModuleConfig {}\n}\n","import { Injectable } from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  WindowRef,\n} from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { PWAModuleConfig } from '../pwa.module-config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddToHomeScreenService {\n  protected deferredEvent: any;\n\n  protected canPrompt = new BehaviorSubject<boolean>(false);\n\n  canPrompt$: Observable<boolean> = this.canPrompt.asObservable();\n\n  constructor(\n    protected config: PWAModuleConfig,\n    protected globalMessageService: GlobalMessageService,\n    protected winRef: WindowRef\n  ) {\n    if (this.config.pwa.addToHomeScreen) {\n      this.init();\n    }\n  }\n\n  init() {\n    if (this.winRef.nativeWindow) {\n      this.winRef.nativeWindow.addEventListener(\n        'beforeinstallprompt',\n        (event) => {\n          event.preventDefault();\n          this.deferredEvent = event;\n          this.enableAddToHomeScreen();\n        }\n      );\n\n      this.winRef.nativeWindow.addEventListener('appinstalled', () => {\n        this.globalMessageService.add(\n          { key: 'pwa.addedToHomeScreen' },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n\n        this.disableAddToHomeScreen();\n        this.deferredEvent = null;\n      });\n    }\n  }\n\n  enableAddToHomeScreen(): void {\n    this.canPrompt.next(true);\n  }\n\n  disableAddToHomeScreen(): void {\n    this.canPrompt.next(false);\n  }\n\n  firePrompt(): void {\n    if (this.deferredEvent) {\n      this.deferredEvent.prompt();\n    }\n  }\n}\n","import { OnInit, Directive } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { AddToHomeScreenService } from '../services/add-to-home-screen.service';\n\n@Directive()\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nexport abstract class AddToHomeScreenComponent implements OnInit {\n  canPrompt$: Observable<boolean>;\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {}\n\n  ngOnInit(): void {\n    this.canPrompt$ = this.addToHomeScreenService.canPrompt$;\n  }\n\n  prompt(): void {\n    this.addToHomeScreenService.firePrompt();\n  }\n}\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-banner',\n  templateUrl: './add-to-home-screen-banner.component.html',\n})\nexport class AddToHomeScreenBannerComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","<div *ngIf=\"canPrompt$ | async\">\n  <div class=\"cx-add-to-home-screen-banner\">\n    <div class=\"cx-add-to-home-screen-banner-inner\">\n      <p>\n        {{ 'pwa.addToHomeScreenDescription' | cxTranslate }}\n      </p>\n      <ul>\n        <li>{{ 'pwa.noInstallationNeeded' | cxTranslate }}</li>\n        <li>{{ 'pwa.fastAccessToApplication' | cxTranslate }}</li>\n      </ul>\n      <button (click)=\"prompt()\" class=\"btn btn-primary\">\n        {{ 'pwa.addToHomeScreen' | cxTranslate }}\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { AddToHomeScreenService } from '../../services/add-to-home-screen.service';\nimport { AddToHomeScreenComponent } from '../add-to-home-screen.component';\n\n@Component({\n  selector: 'cx-add-to-home-screen-btn',\n  templateUrl: './add-to-home-screen-btn.component.html',\n})\nexport class AddToHomeScreenBtnComponent extends AddToHomeScreenComponent {\n  constructor(protected addToHomeScreenService: AddToHomeScreenService) {\n    super(addToHomeScreenService);\n  }\n}\n","<span (click)=\"prompt()\">\n  <ng-content *ngIf=\"canPrompt$ | async\"></ng-content>\n</span>\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, isDevMode, NgModule } from '@angular/core';\nimport {\n  ServiceWorkerModule,\n  SwRegistrationOptions,\n} from '@angular/service-worker';\nimport { Config, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { AddToHomeScreenBannerComponent } from './components/add-to-home-screen-banner/add-to-home-screen-banner.component';\nimport { AddToHomeScreenBtnComponent } from './components/add-to-home-screen-btn/add-to-home-screen-btn.component';\nimport { defaultPWAModuleConfig, PWAModuleConfig } from './pwa.module-config';\nimport { AddToHomeScreenService } from './services/add-to-home-screen.service';\n\nexport function pwaConfigurationFactory(\n  pwaConfig: PWAModuleConfig\n): SwRegistrationOptions {\n  return { enabled: (!isDevMode() && pwaConfig.pwa.enabled) || false };\n}\n\nexport function pwaFactory(addToHomeScreenService): any {\n  const result = () => addToHomeScreenService;\n  return result;\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ServiceWorkerModule.register('ngsw-worker.js'),\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(defaultPWAModuleConfig),\n    {\n      provide: SwRegistrationOptions,\n      useFactory: pwaConfigurationFactory,\n      deps: [Config],\n    },\n    {\n      provide: APP_INITIALIZER,\n      useFactory: pwaFactory,\n      deps: [AddToHomeScreenService],\n      multi: true,\n    },\n  ],\n  declarations: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n  exports: [AddToHomeScreenBtnComponent, AddToHomeScreenBannerComponent],\n})\nexport class PwaModule {}\n","import { Injector } from '@angular/core';\nimport { Route, Router } from '@angular/router';\nimport { CmsPageGuard } from '../../guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../page/page-layout/page-layout.component';\n\nconst cmsRoute: Route = {\n  path: '**',\n  canActivate: [CmsPageGuard],\n  component: PageLayoutComponent,\n};\n\nexport function addCmsRoute(injector: Injector): () => void {\n  const result = () => {\n    const router = injector.get(Router);\n    router.config.push(cmsRoute);\n  };\n  return result;\n}\n","import { NgModule, APP_INITIALIZER, Injector } from '@angular/core';\nimport { addCmsRoute } from './add-cms-route';\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      deps: [Injector],\n      useFactory: addCmsRoute,\n    },\n  ],\n})\nexport class CmsRouteModule {}\n","import { RoutesConfig, RoutingConfig } from '@spartacus/core';\n\nexport const defaultStorefrontRoutesConfig: RoutesConfig = {\n  home: { paths: [''] },\n  notFound: { paths: ['not-found'] },\n  cart: { paths: ['cart'] },\n\n  // semantic links for login related pages\n  login: {\n    paths: ['login'],\n    protected: false,\n    authFlow: true,\n  },\n  register: {\n    paths: ['login/register'],\n    protected: false,\n    authFlow: true,\n  },\n  forgotPassword: {\n    paths: ['login/forgot-password'],\n    protected: false,\n    authFlow: true,\n  },\n  resetPassword: {\n    paths: ['login/pw/change'],\n    protected: false,\n    authFlow: true,\n  },\n  logout: { paths: ['logout'], protected: false, authFlow: true },\n\n  // plp routes\n  search: { paths: ['search/:query'] },\n  category: {\n    paths: ['category/:categoryCode'],\n    paramsMapping: { categoryCode: 'code' },\n  },\n  brand: { paths: ['Brands/:brandName/c/:brandCode'] },\n\n  // pdp routes\n  product: {\n    paths: ['product/:productCode/:name'],\n    paramsMapping: { productCode: 'code' },\n  },\n\n  termsAndConditions: { paths: ['terms-and-conditions'] },\n\n  /** @deprecated since 4.2, use order lib instead */\n  orders: {\n    paths: ['my-account/orders'],\n  },\n  /** @deprecated since 4.2, use order lib instead */\n  orderDetails: {\n    paths: ['my-account/order/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  /** @deprecated since 4.2, use order lib instead */\n  orderGuest: {\n    paths: ['guest/order/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  /** @deprecated since 4.2, use order lib instead */\n  orderReturn: {\n    paths: ['my-account/order/return/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  /** @deprecated since 4.2, use order lib instead */\n  orderReturnConfirmation: {\n    paths: ['my-account/order/return/confirmation/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  /** @deprecated since 4.2, use order lib instead */\n  orderCancel: {\n    paths: ['my-account/order/cancel/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  /** @deprecated since 4.2, use order lib instead */\n  orderCancelConfirmation: {\n    paths: ['my-account/order/cancel/confirmation/:orderCode'],\n    paramsMapping: { orderCode: 'code' },\n  },\n  /** @deprecated since 4.2, use order lib instead */\n  returnRequestDetails: {\n    paths: ['my-account/return-request/:returnCode'],\n    paramsMapping: { returnCode: 'rma' },\n  },\n  coupons: { paths: ['my-account/coupons'] },\n  couponClaim: {\n    paths: ['my-account/coupon/claim/:couponCode'],\n    paramsMapping: { couponCode: 'code' },\n  },\n  /** @deprecated since 4.2, use order lib instead */\n  replenishmentOrders: {\n    paths: ['my-account/my-replenishments'],\n  },\n  /** @deprecated since 4.2, use order lib instead */\n  replenishmentDetails: {\n    paths: ['my-account/my-replenishment/:replenishmentOrderCode'],\n    paramsMapping: { replenishmentOrderCode: 'replenishmentOrderCode' },\n  },\n};\n\nexport const defaultRoutingConfig: RoutingConfig = {\n  routing: {\n    routes: defaultStorefrontRoutesConfig,\n  },\n};\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport {\n  provideDefaultConfig,\n  RoutingModule as CoreRoutingModule,\n} from '@spartacus/core';\nimport { CmsRouteModule } from './cms-route/cms-route.module';\nimport { defaultRoutingConfig } from './default-routing-config';\n\n@NgModule({\n  imports: [CoreRoutingModule.forRoot(), CmsRouteModule],\n})\nexport class RoutingModule {\n  static forRoot(): ModuleWithProviders<RoutingModule> {\n    return {\n      ngModule: RoutingModule,\n      providers: [provideDefaultConfig(defaultRoutingConfig)],\n    };\n  }\n}\n","import { isDevMode } from '@angular/core';\nimport { UrlMatchResult, UrlSegment } from '@angular/router';\n\n/**\n * Matches the pattern '[ ** / ] marker / :paramName'\n *\n * @param marker phrase that indicates the start of the match\n * @param paramName name of the parameter present after the marker\n * @param precedingParamName name of the parameter for every preceding url segment\n *        i.e. `param` will result in `param0`, `param1`, ...\n */\nexport function getSuffixUrlMatcher({\n  marker,\n  paramName,\n  precedingParamName,\n}: {\n  marker: string;\n  paramName: string;\n  precedingParamName?: string;\n}) {\n  precedingParamName = precedingParamName || 'param';\n  const matcher = function suffixUrlMatcher(\n    segments: UrlSegment[]\n  ): UrlMatchResult | null {\n    const markerIndex = findLastIndex(segments, ({ path }) => path === marker);\n    const isMarkerLastSegment = markerIndex === segments.length - 1;\n\n    if (markerIndex === -1 || isMarkerLastSegment) {\n      return null;\n    }\n\n    const paramIndex = markerIndex + 1;\n    const posParams: { [name: string]: UrlSegment } = {\n      [paramName]: segments[paramIndex],\n    };\n\n    for (let i = 0; i < markerIndex; i++) {\n      posParams[`${precedingParamName}${i}`] = segments[i];\n    }\n\n    return { consumed: segments.slice(0, paramIndex + 1), posParams };\n  };\n\n  if (isDevMode()) {\n    matcher['_suffixRouteConfig'] = { marker, paramName, precedingParamName }; // property added for easier debugging of routes\n  }\n\n  return matcher;\n}\n\nfunction findLastIndex<T>(elements: T[], predicate: (el: T) => boolean) {\n  for (let index = elements.length - 1; index >= 0; index--) {\n    if (predicate(elements[index])) {\n      return index;\n    }\n  }\n  return -1;\n}\n","import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\nimport { WindowRef } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class PageMetaLinkService {\n  constructor(\n    protected winRef: WindowRef,\n    protected rendererFactory: RendererFactory2\n  ) {}\n\n  /**\n   * Adds a canonical link element to the document head.\n   *\n   * If an id is provided, the link will be updated.\n   * If no url is provided, the link element will be deleted.\n   */\n  setCanonicalLink(url: string | undefined): void {\n    let link: HTMLLinkElement = this.winRef.document.querySelector(\n      'link[rel=\"canonical\"]'\n    ) as HTMLLinkElement;\n\n    if (!url) {\n      // Removing the link is an edge case, but useful if the canonical url\n      // is created in CSR while developing/testing.\n      link?.remove();\n      return;\n    }\n\n    if (!link) {\n      link = this.renderer.createElement('link');\n      link.rel = 'canonical';\n      link.href = url;\n      this.renderer.appendChild(this.winRef.document.head, link);\n    } else {\n      link?.setAttribute('href', url);\n    }\n  }\n\n  protected get renderer(): Renderer2 {\n    return this.rendererFactory.createRenderer(null, null);\n  }\n}\n","import { Injectable, OnDestroy } from '@angular/core';\nimport { Meta, MetaDefinition, Title } from '@angular/platform-browser';\nimport {\n  isNotNullable,\n  PageMeta,\n  PageMetaService,\n  PageRobotsMeta,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { PageMetaLinkService } from './page-meta-link.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SeoMetaService implements OnDestroy {\n  constructor(\n    protected ngTitle: Title,\n    protected ngMeta: Meta,\n    protected pageMetaService: PageMetaService,\n    protected pageMetaLinkService?: PageMetaLinkService\n  ) {}\n\n  private subscription: Subscription;\n\n  init() {\n    this.subscription = this.pageMetaService\n      .getMeta()\n      .pipe(filter(isNotNullable))\n      .subscribe((meta) => (this.meta = meta));\n  }\n\n  protected set meta(meta: PageMeta) {\n    this.title = meta.title;\n    this.description = meta.description;\n    this.image = meta.image;\n    this.robots = meta.robots;\n    this.canonicalUrl = meta.canonicalUrl;\n  }\n\n  protected set title(title: string | undefined) {\n    this.ngTitle.setTitle(title || '');\n  }\n\n  protected set description(value: string | undefined) {\n    if (value) {\n      this.addTag({ name: 'description', content: value || '' });\n    } else {\n      this.ngMeta.removeTag('name=\"description\"');\n    }\n  }\n\n  protected set image(imageUrl: string | undefined) {\n    if (imageUrl) {\n      this.addTag({ name: 'og:image', content: imageUrl });\n    } else {\n      this.ngMeta.removeTag('name=\"og:image\"');\n    }\n  }\n\n  protected set robots(value: PageRobotsMeta[] | undefined) {\n    if (value && value.length > 0) {\n      this.addTag({ name: 'robots', content: value.join(', ') });\n    }\n  }\n\n  /**\n   * Add the canonical Url to the head of the page.\n   *\n   * If the canonical url already exists the link is removed. This is quite\n   * unlikely though, since canonical links are (typically) only added in SSR.\n   */\n  protected set canonicalUrl(url: string | undefined) {\n    this.pageMetaLinkService?.setCanonicalLink(url);\n  }\n\n  protected addTag(meta: MetaDefinition): void {\n    if (meta.content) {\n      this.ngMeta.updateTag(meta);\n    }\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { SeoConfig } from './seo.config';\n\nexport const defaultSeoConfig: SeoConfig = {\n  seo: {\n    structuredData: {\n      disableInDevMode: true,\n    },\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class SeoConfig {\n  seo?: SeoOptions;\n}\n\nexport interface SeoOptions {\n  structuredData?: StructuredData;\n}\n\nexport interface StructuredData {\n  disableInDevMode?: boolean;\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends SeoConfig {}\n}\n","import { APP_INITIALIZER, Provider } from '@angular/core';\nimport { LanguageService, WindowRef } from '@spartacus/core';\n\nexport const htmlLangProvider: Provider = {\n  provide: APP_INITIALIZER,\n  multi: true,\n  useFactory: setHtmlLangAttribute,\n  deps: [WindowRef, LanguageService],\n};\n\n/**\n * Sets active language in <html lang=\"\">\n */\nexport function setHtmlLangAttribute(\n  winRef: WindowRef,\n  languageService: LanguageService\n): () => void {\n  const result = () => {\n    languageService.getActive().subscribe((lang) => {\n      winRef.document.documentElement.lang = lang.replace(/_/g, '-');\n    });\n  };\n  return result;\n}\n","import { isPlatformBrowser } from '@angular/common';\nimport {\n  Inject,\n  Injectable,\n  isDevMode,\n  PLATFORM_ID,\n  Renderer2,\n  RendererFactory2,\n  SecurityContext,\n} from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { WindowRef } from '@spartacus/core';\nimport { SeoConfig } from '../config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdScriptFactory {\n  constructor(\n    @Inject(PLATFORM_ID) protected platformId: string,\n    protected winRef: WindowRef,\n    protected rendererFactory: RendererFactory2,\n    protected sanitizer: DomSanitizer,\n    protected config: SeoConfig\n  ) {}\n\n  build(schema: {}[]): void {\n    if (schema && this.isJsonLdRequired()) {\n      this.getJsonLdScriptElement().innerHTML = this.sanitize(schema);\n    }\n  }\n\n  /**\n   * Indicates whether json ld data should be generated.\n   *\n   * This is only required on the server, but can be enabled in dev mode.\n   */\n  isJsonLdRequired(): boolean {\n    return (\n      !isPlatformBrowser(this.platformId) ||\n      (isDevMode() && !this.config.seo?.structuredData?.disableInDevMode)\n    );\n  }\n\n  /**\n   * Creates a json-ld script element. The element is created one, and appended\n   * to the html body element.\n   *\n   * ```html\n   * <script id=\"json-ld\" type=\"application/ld+json\">\n   * </script>\n   * ```\n   */\n  protected getJsonLdScriptElement(): HTMLScriptElement {\n    const id = 'json-ld';\n    let scriptElement: HTMLScriptElement = <HTMLScriptElement>(\n      this.winRef.document.getElementById(id)\n    );\n\n    if (!scriptElement) {\n      const renderer: Renderer2 = this.rendererFactory.createRenderer(\n        null,\n        null\n      );\n      const script: HTMLScriptElement = renderer.createElement('script');\n      script.id = id;\n      script.type = 'application/ld+json';\n      renderer.appendChild(this.winRef.document.body, script);\n      scriptElement = script;\n    }\n    return scriptElement;\n  }\n\n  /**\n   * Sanitizes the given json-ld schema by leveraging the angular HTML sanitizer.\n   *\n   * The given schema is not trusted, as malicious code could be injected (XSS)\n   * into the json-ld script.\n   */\n  sanitize(schema: {}): string {\n    return JSON.stringify(schema, (_key, value) =>\n      typeof value === 'string'\n        ? this.sanitizer.sanitize(SecurityContext.HTML, value)\n        : value\n    );\n  }\n}\n","import { Directive, HostBinding, Input } from '@angular/core';\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n/**\n * Low level directive that adds a json-ld script tag to the component.\n * This code bypasses the strict XSS security, as otherwise we're not able\n * to append a script tag with JS inside.\n *\n * This helper directive is actually not used in Spartacus, as Spartacus\n * appends json-ld the data to the document body.\n *\n * This directive can however be used by merchants to write static schema data\n * to the DOM in a save way.\n */\n@Directive({\n  selector: '[cxJsonLd]',\n})\nexport class JsonLdDirective {\n  /**\n   * Writes the schema data to a json-ld script element.\n   */\n  @Input() set cxJsonLd(schema: string | {}) {\n    this.jsonLD = this.generateJsonLdScript(schema);\n  }\n\n  @HostBinding('innerHTML') jsonLD: SafeHtml;\n\n  constructor(\n    protected jsonLdScriptFactory: JsonLdScriptFactory,\n    protected sanitizer: DomSanitizer\n  ) {}\n\n  /**\n   * Returns the json-ld script tag with the schema data. The script is\n   * _bypassing_ sanitization explicitly.\n   */\n  protected generateJsonLdScript(schema: string | {}): SafeHtml {\n    if (schema && this.jsonLdScriptFactory.isJsonLdRequired()) {\n      const sanitizedSchema = this.jsonLdScriptFactory.sanitize(schema);\n      const html = `<script type=\"application/ld+json\">${sanitizedSchema}</script>`;\n      return this.sanitizer.bypassSecurityTrustHtml(html);\n    }\n  }\n}\n","import { InjectionToken } from '@angular/core';\n\n/**\n * Injection token to extend schema builders for adding structural data (json-ld).\n *\n * Some builders (i.e. `JSONLD_PRODUCT_BUILDER`) might have additional\n * lower level builder to further extend the schema.\n */\nexport const SCHEMA_BUILDER = new InjectionToken('SchemaBuilderToken');\n\n/**\n * Injection token to add specific json-ld builders for product related schemas.\n * See see https://schema.org/product for more information.\n */\nexport const JSONLD_PRODUCT_BUILDER = new InjectionToken(\n  'JsonLdProductBuilderToken'\n);\n","import { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { SchemaBuilder } from './builders/schema.interface';\nimport { SCHEMA_BUILDER } from './builders/tokens';\nimport { JsonLdScriptFactory } from './json-ld-script.factory';\n\n/**\n * Factory service that is used to build the structured data for\n * all configured schema builders.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class StructuredDataFactory implements OnDestroy {\n  constructor(\n    private scriptBuilder: JsonLdScriptFactory,\n    @Optional()\n    @Inject(SCHEMA_BUILDER)\n    private builders: SchemaBuilder[]\n  ) {}\n\n  protected subscription: Subscription = new Subscription();\n\n  /**\n   * Initiates the build of structured data by collecting all schema\n   * builders.\n   */\n  build(): void {\n    if (this.scriptBuilder.isJsonLdRequired() && this.builders) {\n      this.subscription.add(\n        this.collectSchemas().subscribe((schema: {}[]) => {\n          this.scriptBuilder.build(schema);\n        })\n      );\n    }\n  }\n\n  /**\n   * Collects all schema builders and observe their structured data.\n   */\n  protected collectSchemas(): Observable<any[]> {\n    return combineLatest(this.builders.map((builder) => builder.build()));\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { JsonLdDirective } from './json-ld.directive';\nimport { StructuredDataFactory } from './structured-data.factory';\n\n/**\n * Factory to build the structure data\n * without any interaction with the UI.\n */\nexport function getStructuredDataFactory(injector: Injector): () => void {\n  const result = () => {\n    const factory = injector.get(StructuredDataFactory);\n    factory.build();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [JsonLdDirective],\n  exports: [JsonLdDirective],\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      useFactory: getStructuredDataFactory,\n      deps: [Injector],\n      multi: true,\n    },\n  ],\n})\nexport class StructuredDataModule {}\n","import { APP_INITIALIZER, Injector, NgModule } from '@angular/core';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultSeoConfig } from './config';\nimport { htmlLangProvider } from './html-lang-provider';\nimport { SeoMetaService } from './seo-meta.service';\nimport { StructuredDataModule } from './structured-data/structured-data.module';\n\nexport function initSeoService(injector: Injector): () => void {\n  const result = () => {\n    const service = injector.get(SeoMetaService);\n    service.init();\n  };\n  return result;\n}\n\n@NgModule({\n  imports: [StructuredDataModule],\n  providers: [\n    provideDefaultConfig(defaultSeoConfig),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: initSeoService,\n      deps: [Injector],\n      multi: true,\n    },\n    htmlLangProvider,\n  ],\n})\nexport class SeoModule {}\n","import { Injectable } from '@angular/core';\nimport { PageMeta, PageMetaService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SchemaBuilder } from '../schema.interface';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreadcrumbSchemaBuilder implements SchemaBuilder {\n  constructor(protected pageMetaService: PageMetaService) {}\n\n  build(): Observable<any> {\n    return this.pageMetaService\n      .getMeta()\n      .pipe(map((pageMeta: PageMeta) => this.collect(pageMeta)));\n  }\n\n  protected collect(pageMeta: PageMeta): any {\n    if (!pageMeta?.breadcrumbs) {\n      return;\n    }\n    const crumbs = pageMeta.breadcrumbs.map((crumb, index) => {\n      return {\n        '@type': 'ListItem',\n        position: index + 1,\n        item: {\n          '@id': crumb.link,\n          name: crumb.label,\n        },\n      };\n    });\n\n    if (pageMeta.title) {\n      crumbs.push({\n        '@type': 'ListItem',\n        position: crumbs.length + 1,\n        item: {\n          '@id': pageMeta.title,\n          name: pageMeta.title,\n        },\n      });\n    }\n\n    return {\n      '@context': 'http://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: crumbs,\n    };\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the basic structured data for the product, see https://schema.org/product.\n * This builder includes data for sku number, name, description, brand and main image.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdBaseProductBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    return of({\n      ...this.getProductBase(product),\n      ...this.getProductBrand(product),\n      ...this.getProductImage(product),\n    });\n  }\n\n  /**\n   * Returns the product sku, name and description.\n   */\n  private getProductBase(product: Product) {\n    const result: any = { sku: product.code };\n    if (product.name) {\n      result.name = product.name;\n    }\n    if (product.summary) {\n      result.description = product.summary;\n    }\n    return result;\n  }\n\n  /**\n   * Returns the image object with the main product image url.\n   *\n   * If the image is not available, an empty object is returned.\n   */\n  protected getProductImage(product: Product): { image?: string } {\n    const image = product.images?.PRIMARY?.['zoom']?.url;\n    return image ? { image } : {};\n  }\n\n  /**\n   * Returns the brand object with the product manufacturer.\n   *\n   * If the brand is not available, an empty object is returned.\n   */\n  protected getProductBrand(product: Product): { brand?: string } {\n    const brand = product.manufacturer;\n    return brand ? { brand } : {};\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product offer, see https://schema.org/offers.\n * The data includes the price, currency and availability level.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductOfferBuilder implements JsonLdBuilder<Product> {\n  build(product: Product): Observable<any> {\n    const schema: any = { '@type': 'Offer' };\n\n    if (product.price?.value) {\n      schema.price = product.price.value;\n      if (product.price.currencyIso) {\n        schema.priceCurrency = product.price.currencyIso;\n      }\n    }\n\n    if (product.stock && product.stock.stockLevelStatus) {\n      schema.availability =\n        product.stock.stockLevelStatus === 'inStock' ? 'InStock' : 'OutOfStock';\n    }\n\n    return of({ offers: schema });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { SeoConfig } from '../../../config';\nimport { JsonLdBuilder } from '../schema.interface';\n\n/**\n * Builds the structured data for the product reviews, see https://schema.org/Review.\n * The data includes the aggregated product rating and the individual reviews.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class JsonLdProductReviewBuilder implements JsonLdBuilder<Product> {\n  constructor(\n    protected reviewService: ProductReviewService,\n    protected config: SeoConfig\n  ) {}\n\n  build(product: Product): Observable<any> {\n    return this.reviewService.getByProductCode(product.code).pipe(\n      map((reviews: Review[]) =>\n        reviews?.length > 0\n          ? {\n              aggregateRating: this.buildAggregatedReviews(product, reviews),\n              review: reviews.map((review) => this.buildReviews(review)),\n            }\n          : {}\n      )\n    );\n  }\n\n  protected buildAggregatedReviews(product: Product, reviews: Review[]) {\n    const aggregated: any = {\n      '@type': 'AggregateRating',\n    };\n    if (product.averageRating) {\n      aggregated.ratingValue = product.averageRating;\n    }\n    if (reviews) {\n      aggregated.ratingCount = reviews.filter((rev) => !!rev.rating).length;\n      aggregated.reviewCount = reviews.filter((rev) => !!rev.comment).length;\n    }\n    return aggregated;\n  }\n\n  protected buildReviews(review: Review) {\n    const reviewSchema: any = {\n      '@type': 'review',\n    };\n\n    if (review.principal && review.principal.name) {\n      reviewSchema.author = review.principal.name;\n    }\n    if (review.date) {\n      const date = new Date(review.date);\n      reviewSchema.datePublished = `${date.getFullYear()}-${\n        date.getMonth() + 1\n      }-${date.getDate()}`;\n    }\n    if (review.headline) {\n      reviewSchema.name = review.headline;\n    }\n    if (review.comment) {\n      reviewSchema.description = review.comment;\n    }\n    if (review.rating) {\n      reviewSchema.reviewRating = {\n        '@type': 'Rating',\n        ratingValue: review.rating.toString(),\n      };\n    }\n\n    return reviewSchema;\n  }\n}\n","import { Inject, Injectable, Optional } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\nimport { CurrentProductService } from '../../../../../cms-components/product/current-product.service';\nimport { JsonLdBuilder, SchemaBuilder } from '../schema.interface';\nimport { JSONLD_PRODUCT_BUILDER } from '../tokens';\n\n/**\n * Adds the minimal structured data for the product, see https://schema.org/product.\n * The actual data collection is delegated to `JsonLdBuilder`s, which can be injected\n * using the `JSONLD_PRODUCT_BUILDER` token.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductSchemaBuilder implements SchemaBuilder {\n  constructor(\n    private currentProduct: CurrentProductService,\n    @Optional()\n    @Inject(JSONLD_PRODUCT_BUILDER)\n    protected builders: JsonLdBuilder<Product>[]\n  ) {}\n\n  build(): Observable<any> {\n    return this.currentProduct.getProduct().pipe(\n      switchMap((product: Product) => {\n        if (product) {\n          return combineLatest(this.collect(product)).pipe(\n            map((res: {}[]) => Object.assign({}, ...res))\n          );\n        }\n        return of({});\n      })\n    );\n  }\n\n  protected collect(product: Product): Observable<any>[] {\n    if (!product || !product.code) {\n      return [];\n    }\n    const builders = this.builders\n      ? this.builders.map((builder) => builder.build(product))\n      : [];\n    return [\n      of({\n        '@context': 'http://schema.org',\n        '@type': 'Product',\n      }),\n      ...builders,\n    ];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BreadcrumbSchemaBuilder } from './breadcrumb/index';\nimport {\n  JsonLdBaseProductBuilder,\n  JsonLdProductOfferBuilder,\n  JsonLdProductReviewBuilder,\n  ProductSchemaBuilder,\n} from './product/index';\nimport { JSONLD_PRODUCT_BUILDER, SCHEMA_BUILDER } from './tokens';\n\n/**\n * Provides several standard json-ld builders that contribute\n * to collecting and building json-ld data.\n */\n@NgModule({\n  providers: [\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: ProductSchemaBuilder,\n      multi: true,\n    },\n    {\n      provide: SCHEMA_BUILDER,\n      useExisting: BreadcrumbSchemaBuilder,\n      multi: true,\n    },\n    // lower level json-ld builder classes offering fine-grained control\n    // for product related schemas\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdBaseProductBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductOfferBuilder,\n      multi: true,\n    },\n    {\n      provide: JSONLD_PRODUCT_BUILDER,\n      useExisting: JsonLdProductReviewBuilder,\n      multi: true,\n    },\n  ],\n})\nexport class JsonLdBuilderModule {}\n","import { BREAKPOINT } from '../../layout/config/layout-config';\n\nexport enum PageSection {\n  HEADER = 'header',\n  FOOTER = 'footer',\n  NAVIGATION = 'navigation',\n}\n\nexport interface CmsStructureOptions {\n  /**\n   * The componentId is used to provide a static configuration of (cms) components.\n   */\n  componentId?: string;\n  /**\n   * Page slot position is used to provide the slot configuration.\n   */\n  pageSlotPosition?: string;\n  /**\n   * The page template is used to provide the page slot to the given page template.\n   */\n  pageTemplate?: string;\n  /**\n   * The section is used to provide the page slot to the given section.\n   */\n  section?: PageSection | string;\n  /**\n   * The breakpoint is used to provide the page slot for a specific breakpoint.\n   */\n  breakpoint?: BREAKPOINT;\n}\n","import { ValueProvider } from '@angular/core';\nimport { CmsStructureConfig, provideConfig } from '@spartacus/core';\nimport { LayoutConfig } from '../../layout/config/layout-config';\nimport { CmsStructureOptions } from './cms-structure.model';\n\n/**\n * Helper function to simplify the creation of static CMS structure (`CmsStructureConfig`).\n * The helper function leverage the `provideConfig`, and is only providing an easy way to\n * generate the cms structure. The function creates a configuration structure for components,\n * page slot and page template. The following example adds a component to a page slot:\n *\n * ```ts\n * provideCmsStructure({\n *   componentId: 'LoginComponent',\n *   pageSlotPosition: 'SiteLogin'\n * })\n * ```\n *\n * @param options.componentId component identifier is used to provide component structure\n * @param options.pageSlotPosition page slot position is used to provide the slot configuration\n * @param options.pageTemplate the page template is used to provide the page slot to the given page template\n * @param options.section the section is used to provide the page slot to the given section\n * @param options.breakpoint the breakpoint is used to provide the page slot for a specific breakpoint\n */\nexport function provideCmsStructure(\n  options: CmsStructureOptions\n): ValueProvider {\n  return provideConfig({\n    ...buildCmsStructure(options),\n    ...buildLayoutConfig(options),\n  });\n}\n\n/**\n * @private\n */\nfunction buildCmsStructure({\n  componentId,\n  pageSlotPosition,\n}: CmsStructureOptions = {}): CmsStructureConfig {\n  const config: CmsStructureConfig = { cmsStructure: {} };\n\n  if (componentId) {\n    config.cmsStructure = {\n      components: {\n        [componentId]: {\n          typeCode: componentId,\n          flexType: componentId,\n        },\n      },\n    };\n  }\n\n  if (componentId && pageSlotPosition) {\n    config.cmsStructure.slots = {\n      [pageSlotPosition]: { componentIds: [componentId] },\n    };\n  }\n  return config;\n}\n\n/**\n * @private\n */\nfunction buildLayoutConfig({\n  pageTemplate,\n  pageSlotPosition,\n  breakpoint,\n  section,\n}: CmsStructureOptions = {}): LayoutConfig {\n  const layoutConfig: LayoutConfig = {};\n  if (pageTemplate && pageSlotPosition) {\n    const pageTemplateSlots: any = {};\n    if (breakpoint) {\n      pageTemplateSlots[breakpoint] = {\n        slots: [pageSlotPosition],\n      };\n    } else {\n      pageTemplateSlots.slots = [pageSlotPosition];\n    }\n    layoutConfig.layoutSlots = {\n      [pageTemplate]: pageTemplateSlots,\n    };\n  }\n\n  if (section && pageSlotPosition) {\n    const sectionSlots: any = {};\n    if (breakpoint) {\n      sectionSlots[breakpoint] = { slots: [pageSlotPosition] };\n    } else {\n      sectionSlots.slots = [pageSlotPosition];\n    }\n    if (layoutConfig.layoutSlots) {\n      layoutConfig.layoutSlots[section] = sectionSlots;\n    } else {\n      layoutConfig.layoutSlots = {\n        [section]: sectionSlots,\n      };\n    }\n  }\n  return layoutConfig;\n}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport {\n  CmsBannerCarouselComponent as model,\n  CmsService,\n  ContentSlotComponentData,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, tap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/index';\n\n/**\n * Generic carousel that renders CMS Components.\n */\n@Component({\n  selector: 'cx-banner-carousel',\n  templateUrl: 'banner-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BannerCarouselComponent {\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter(Boolean),\n    tap((d: model) => (this.theme = `${d.effect}-theme`))\n  );\n\n  private items$: Observable<Observable<ContentSlotComponentData>[]> =\n    this.componentData$.pipe(\n      map((data) => data.banners.trim().split(' ')),\n      map((codes) =>\n        codes.map((code) => this.cmsService.getComponentData(code))\n      )\n    );\n\n  /**\n   * Adds a specific theme for the carousel. The effect can be\n   * used in CSS customisations.\n   */\n  @HostBinding('class') theme = '';\n\n  constructor(\n    private componentData: CmsComponentData<model>,\n    private cmsService: CmsService\n  ) {}\n\n  /**\n   * Returns an Obervable with an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  getItems(): Observable<Observable<ContentSlotComponentData>[]> {\n    return this.items$;\n  }\n}\n","<cx-carousel\n  [items]=\"getItems() | async\"\n  [template]=\"template\"\n  itemWidth=\"100%\"\n  class=\"inline-navigation\"\n></cx-carousel>\n\n<ng-template #template let-item=\"item\">\n  <ng-container\n    [cxComponentWrapper]=\"{\n      flexType: item.typeCode,\n      typeCode: item.typeCode,\n      uid: item?.uid\n    }\"\n  >\n  </ng-container>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { CarouselModule, MediaModule } from '../../../shared/components/index';\nimport { BannerCarouselComponent } from './banner-carousel.component';\n\n@NgModule({\n  imports: [CommonModule, PageComponentModule, CarouselModule, MediaModule],\n  providers: [\n    provideDefaultConfig({\n      cmsComponents: {\n        RotatingImagesComponent: {\n          component: BannerCarouselComponent,\n        },\n      },\n    } as CmsConfig),\n  ],\n  declarations: [BannerCarouselComponent],\n  exports: [BannerCarouselComponent],\n})\nexport class BannerCarouselModule {}\n","import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\nimport { CmsLinkComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-link',\n  templateUrl: './link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class LinkComponent {\n  @HostBinding('class') styleClasses: string;\n\n  data$: Observable<CmsLinkComponent> = this.component.data$.pipe(\n    tap((data) => (this.styleClasses = data?.styleClasses))\n  );\n\n  constructor(protected component: CmsComponentData<CmsLinkComponent>) {}\n\n  /**\n   * Returns `_blank` to force opening the link in a new window whenever the\n   * `data.target` flag is set to `true`.\n   */\n  getTarget(data: CmsLinkComponent): string | null {\n    return data.target === 'true' || data.target === true ? '_blank' : null;\n  }\n}\n","<cx-generic-link\n  *ngIf=\"data$ | async as data\"\n  [url]=\"data.url\"\n  [style]=\"data.styleAttributes\"\n  [target]=\"getTarget(data)\"\n  >{{ data.linkName }}</cx-generic-link\n>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { LinkComponent } from './link.component';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, GenericLinkModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSLinkComponent: { component: LinkComponent },\n      },\n    }),\n  ],\n  declarations: [LinkComponent],\n  exports: [LinkComponent],\n})\nexport class LinkModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostListener,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CmsParagraphComponent } from '@spartacus/core';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-paragraph',\n  templateUrl: './paragraph.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ParagraphComponent {\n  @HostListener('click', ['$event'])\n  public handleClick(event: Event): void {\n    if (this.router && event.target instanceof HTMLAnchorElement) {\n      const element = event.target as HTMLAnchorElement;\n      const href = element?.getAttribute('href');\n\n      // Use router for internal link navigation\n      if (href?.indexOf('/') === 0) {\n        event.preventDefault();\n        this.router.navigate([`/${href}`]);\n      }\n    }\n  }\n\n  /**\n   * @deprecated since version 5.0\n   * Use the following constructor instead:\n   * ```\n   * constructor(\n   *   public component: CmsComponentData<CmsParagraphComponent>,\n   *   protected router: Router\n   * ) {}\n   * ```\n   */\n  constructor(component: CmsComponentData<CmsParagraphComponent>);\n  constructor(\n    public component: CmsComponentData<CmsParagraphComponent>,\n    protected router?: Router\n  ) {}\n}\n","<p\n  *ngIf=\"component.data$ | async as data\"\n  [innerHTML]=\"data.content | cxSupplementHashAnchors\"\n></p>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { SupplementHashAnchorsModule } from '../../../shared/pipes/suplement-hash-anchors/supplement-hash-anchors.module';\nimport { ParagraphComponent } from './paragraph.component';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, SupplementHashAnchorsModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSParagraphComponent: {\n          component: ParagraphComponent,\n        },\n        CMSTabParagraphComponent: {\n          component: ParagraphComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ParagraphComponent],\n  exports: [ParagraphComponent],\n})\nexport class CmsParagraphModule {}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n  QueryList,\n  ViewChildren,\n} from '@angular/core';\nimport {\n  CmsService,\n  CMSTabParagraphContainer,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { distinctUntilChanged, map, switchMap, take } from 'rxjs/operators';\nimport { ComponentWrapperDirective } from '../../../cms-structure/page/component/component-wrapper.directive';\nimport { CmsComponentData } from '../../../cms-structure/page/model/index';\nimport { BreakpointService } from '../../../layout/breakpoint/breakpoint.service';\nimport { BREAKPOINT } from '../../../layout/config/layout-config';\n\n@Component({\n  selector: 'cx-tab-paragraph-container',\n  templateUrl: './tab-paragraph-container.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TabParagraphContainerComponent\n  implements AfterViewInit, OnInit, OnDestroy\n{\n  activeTabNum = 0;\n\n  @ViewChildren(ComponentWrapperDirective)\n  children!: QueryList<ComponentWrapperDirective>;\n\n  tabTitleParams: (Observable<any> | null)[] = [];\n\n  // TODO: it is not used any more, so can be removed in 5.0\n  subscription: Subscription;\n\n  constructor(\n    public componentData: CmsComponentData<CMSTabParagraphContainer>,\n    protected cmsService: CmsService,\n    protected winRef: WindowRef,\n    protected breakpointService: BreakpointService\n  ) {}\n\n  components$: Observable<any[]> = this.componentData.data$.pipe(\n    distinctUntilChanged((x, y) => x?.components === y?.components),\n    switchMap((data) =>\n      combineLatest(\n        (data?.components ?? '').split(' ').map((component) =>\n          this.cmsService.getComponentData<any>(component).pipe(\n            distinctUntilChanged(),\n            map((tab) => {\n              if (!tab) {\n                return undefined;\n              }\n\n              if (!tab.flexType) {\n                tab = {\n                  ...tab,\n                  flexType: tab.typeCode,\n                };\n              }\n\n              return {\n                ...tab,\n                title: `${data.uid}.tabs.${tab.uid}`,\n              };\n            })\n          )\n        )\n      )\n    )\n  );\n\n  select(tabNum: number, event?: MouseEvent): void {\n    this.breakpointService\n      ?.isDown(BREAKPOINT.sm)\n      .pipe(take(1))\n      .subscribe((res) => {\n        if (res) {\n          this.activeTabNum = this.activeTabNum === tabNum ? -1 : tabNum;\n          if (event && event?.target) {\n            const target = event.target as HTMLElement;\n            const parentNode = target.parentNode as HTMLElement;\n            this.winRef?.nativeWindow?.scrollTo(0, parentNode.offsetTop);\n          }\n        } else {\n          this.activeTabNum = tabNum;\n        }\n      });\n  }\n\n  ngOnInit(): void {\n    this.activeTabNum =\n      this.winRef?.nativeWindow?.history?.state?.activeTab ?? this.activeTabNum;\n  }\n\n  ngAfterViewInit(): void {\n    // If the sub cms components data exist, the components created before ngAfterViewInit are called.\n    // In this case, the title parameters are directly pulled from them.\n    if (this.children.length > 0) {\n      this.getTitleParams(this.children);\n    }\n  }\n\n  tabCompLoaded(componentRef: any): void {\n    this.tabTitleParams.push(componentRef.instance.tabTitleParam$);\n  }\n\n  private getTitleParams(children: QueryList<ComponentWrapperDirective>) {\n    children.forEach((comp) => {\n      if (comp.cmpRef?.instance.tabTitleParam$) {\n        this.tabTitleParams.push(comp.cmpRef.instance.tabTitleParam$);\n      } else {\n        this.tabTitleParams.push(null);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","<ng-container *ngIf=\"components$ | async as components\">\n  <ng-container *ngFor=\"let component of components; let i = index\">\n    <ng-container *ngIf=\"component\">\n      <button [class.active]=\"i === activeTabNum\" (click)=\"select(i, $event)\">\n        {{\n          component.title | cxTranslate: { param: tabTitleParams[i] | async }\n        }}\n      </button>\n    </ng-container>\n  </ng-container>\n\n  <ng-container *ngFor=\"let component of components; let i = index\">\n    <ng-container *ngIf=\"component\">\n      <div [class.active]=\"i === activeTabNum\">\n        <ng-template [cxOutlet]=\"component.flexType\" [cxOutletContext]=\"{}\">\n          <ng-container\n            [cxComponentWrapper]=\"component\"\n            (cxComponentRef)=\"tabCompLoaded($event)\"\n          ></ng-container>\n        </ng-template>\n      </div>\n    </ng-container>\n  </ng-container>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { PageComponentModule } from '../../../cms-structure/page/component/page-component.module';\nimport { TabParagraphContainerComponent } from './tab-paragraph-container.component';\n\n@NgModule({\n  imports: [CommonModule, PageComponentModule, OutletModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSTabParagraphContainer: {\n          component: TabParagraphContainerComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [TabParagraphContainerComponent],\n  exports: [TabParagraphContainerComponent],\n})\nexport class TabParagraphContainerModule {}\n","import { Injectable } from '@angular/core';\nimport { Address, UserAddressService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AddressBookComponentService {\n  constructor(protected userAddressService: UserAddressService) {}\n\n  getAddresses(): Observable<Address[]> {\n    return this.userAddressService.getAddresses();\n  }\n\n  getAddressesStateLoading(): Observable<boolean> {\n    return this.userAddressService.getAddressesLoading();\n  }\n\n  loadAddresses() {\n    this.userAddressService.loadAddresses();\n  }\n\n  addUserAddress(address: Address) {\n    this.userAddressService.addUserAddress(address);\n  }\n\n  updateUserAddress(addressId: string, address: Address) {\n    this.userAddressService.updateUserAddress(addressId, address);\n  }\n  setAddressAsDefault(addressId: string): void {\n    this.userAddressService.setAddressAsDefault(addressId);\n  }\n\n  deleteUserAddress(addressId: string): void {\n    this.userAddressService.deleteUserAddress(addressId);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnInit,\n} from '@angular/core';\nimport { Address } from '@spartacus/core';\nimport { ModalService } from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../misc/icon/index';\n\n@Component({\n  selector: 'cx-suggested-addresses-dialog',\n  templateUrl: './suggested-addresses-dialog.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SuggestedAddressDialogComponent implements OnInit {\n  iconTypes = ICON_TYPE;\n\n  constructor(protected modalService: ModalService) {}\n\n  @Input()\n  suggestedAddresses: Address[];\n  @Input()\n  enteredAddress: Address;\n\n  selectedAddress: Address;\n\n  ngOnInit(): void {\n    this.selectedAddress = this.suggestedAddresses.length\n      ? this.suggestedAddresses[0]\n      : this.enteredAddress;\n  }\n\n  closeModal(reason?: any): void {\n    this.modalService.closeActiveModal(reason);\n  }\n}\n","<div class=\"cx-dialog-header modal-header\">\n  <div class=\"cx-dialog-title modal-title\">\n    {{ 'addressSuggestion.verifyYourAddress' | cxTranslate }}\n  </div>\n  <button\n    type=\"button\"\n    class=\"close\"\n    [attr.aria-label]=\"'common.close' | cxTranslate\"\n    (click)=\"closeModal()\"\n  >\n    <span aria-hidden=\"true\">\n      <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </span>\n  </button>\n</div>\n<div class=\"cx-dialog-body modal-body\" ngForm>\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"cx-dialog-info col-md-12\">\n        <p>\n          {{ 'addressSuggestion.ensureAccuracySuggestChange' | cxTranslate }}\n          {{ 'addressSuggestion.chooseAddressToUse' | cxTranslate }}\n        </p>\n      </div>\n    </div>\n\n    <div class=\"row\">\n      <div class=\"cx-dialog-options col-md-12\">\n        <div\n          class=\"form-check\"\n          *ngFor=\"let suggestedAddress of suggestedAddresses; let i = index\"\n        >\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"selectedAddress\"\n            [(ngModel)]=\"selectedAddress\"\n            [value]=\"suggestedAddress\"\n            [id]=\"'suggested-addresses--suggested-' + i\"\n          />\n          <label\n            class=\"form-check-label cx-dialog-label\"\n            [for]=\"'suggested-addresses--suggested-' + i\"\n          >\n            {{ 'addressSuggestion.suggestedAddress' | cxTranslate }}\n            {{ suggestedAddresses?.length > 1 ? i + 1 : null }}\n          </label>\n          <div class=\"cx-dialog-suggested\">\n            {{ suggestedAddress?.firstName }} {{ suggestedAddress?.lastName\n            }}<br />\n            {{ suggestedAddress?.line1 }}<br />\n            <span>{{ suggestedAddress?.line2 }}</span\n            ><br />\n            {{ suggestedAddress?.town }} {{ suggestedAddress?.region?.isocode\n            }}<br />\n            {{ suggestedAddress?.postalCode }}\n          </div>\n        </div>\n        <div class=\"form-check\">\n          <input\n            class=\"form-check-input\"\n            type=\"radio\"\n            name=\"selectedAddress\"\n            [(ngModel)]=\"selectedAddress\"\n            [value]=\"enteredAddress\"\n            id=\"suggested-addresses--entered\"\n          />\n          <label\n            class=\"form-check-label cx-dialog-label\"\n            for=\"suggested-addresses--entered\"\n          >\n            {{ 'addressSuggestion.enteredAddress' | cxTranslate }}\n          </label>\n          <div class=\"cx-dialog-entered\">\n            {{ enteredAddress?.firstName }} {{ enteredAddress?.lastName }}<br />\n            {{ enteredAddress?.line1 }}<br />\n            <span>{{ enteredAddress?.line2 }}</span\n            ><br />\n            {{ enteredAddress?.town }} {{ enteredAddress?.region?.isocode\n            }}<br />\n            {{ enteredAddress?.postalCode }}\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"cx-dialog-actions col-sm-12 col-md-6 offset-md-6\">\n        <button\n          class=\"btn btn-secondary btn-block cx-dialog-buttons\"\n          (click)=\"closeModal()\"\n        >\n          {{ 'addressSuggestion.editAddress' | cxTranslate }}\n        </button>\n        <button\n          cxAutoFocus\n          class=\"btn btn-primary btn-block cx-dialog-buttons\"\n          (click)=\"closeModal(selectedAddress)\"\n        >\n          {{ 'addressSuggestion.saveAddress' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport {\n  Address,\n  AddressValidation,\n  Country,\n  ErrorModel,\n  GlobalMessageService,\n  GlobalMessageType,\n  Region,\n  Title,\n  TranslationService,\n  UserAddressService,\n  UserService,\n} from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, switchMap, take, tap } from 'rxjs/operators';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../shared/components/modal/index';\nimport { sortTitles } from '../../../../shared/utils/forms/title-utils';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\n\n@Component({\n  selector: 'cx-address-form',\n  templateUrl: './address-form.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AddressFormComponent implements OnInit, OnDestroy {\n  countries$: Observable<Country[]>;\n  titles$: Observable<Title[]>;\n  regions$: Observable<Region[]>;\n  selectedCountry$: BehaviorSubject<string> = new BehaviorSubject<string>('');\n  addresses$: Observable<Address[]>;\n\n  @Input()\n  addressData: Address;\n\n  @Input()\n  actionBtnLabel: string;\n\n  @Input()\n  cancelBtnLabel: string;\n\n  @Input()\n  setAsDefaultField = true;\n\n  @Input()\n  showTitleCode: boolean;\n\n  @Input()\n  showCancelBtn = true;\n\n  @Output()\n  submitAddress = new EventEmitter<any>();\n\n  @Output()\n  backToAddress = new EventEmitter<any>();\n\n  addressVerifySub: Subscription;\n  regionsSub: Subscription;\n  suggestedAddressModalRef: ModalRef;\n\n  addressForm: FormGroup = this.fb.group({\n    country: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    titleCode: [''],\n    firstName: ['', Validators.required],\n    lastName: ['', Validators.required],\n    line1: ['', Validators.required],\n    line2: [''],\n    town: ['', Validators.required],\n    region: this.fb.group({\n      isocode: [null, Validators.required],\n    }),\n    postalCode: ['', Validators.required],\n    phone: '',\n    defaultAddress: [false],\n  });\n\n  constructor(\n    protected fb: FormBuilder,\n    protected userService: UserService,\n    protected userAddressService: UserAddressService,\n    protected globalMessageService: GlobalMessageService,\n    protected modalService: ModalService,\n    protected translation: TranslationService\n  ) {}\n\n  ngOnInit() {\n    // Fetching countries\n    this.countries$ = this.userAddressService.getDeliveryCountries().pipe(\n      tap((countries: Country[]) => {\n        if (Object.keys(countries).length === 0) {\n          this.userAddressService.loadDeliveryCountries();\n        }\n      })\n    );\n\n    // Fetching titles\n    this.titles$ = this.getTitles();\n\n    // Fetching regions\n    this.regions$ = this.selectedCountry$.pipe(\n      switchMap((country) => this.userAddressService.getRegions(country)),\n      tap((regions: Region[]) => {\n        const regionControl = this.addressForm.get('region.isocode');\n        if (regions && regions.length > 0) {\n          regionControl.enable();\n        } else {\n          regionControl.disable();\n        }\n      })\n    );\n\n    if (this.addressData && Object.keys(this.addressData).length !== 0) {\n      this.addressForm.patchValue(this.addressData);\n\n      this.countrySelected(this.addressData.country);\n      if (this.addressData.region) {\n        this.regionSelected(this.addressData.region);\n      }\n    }\n\n    this.addresses$ = this.userAddressService.getAddresses();\n  }\n\n  getTitles(): Observable<Title[]> {\n    return combineLatest([\n      this.translation.translate('addressForm.defaultTitle'),\n      this.userService.getTitles(),\n    ]).pipe(\n      map(([noneTitleText, titles]) => {\n        const noneTitle = { code: '', name: noneTitleText };\n        titles.sort(sortTitles);\n        return [noneTitle, ...titles];\n      })\n    );\n  }\n\n  protected handleAddressVerificationResults(results: AddressValidation) {\n    if (results.decision === 'ACCEPT') {\n      this.submitAddress.emit(this.addressForm.value);\n    } else if (results.decision === 'REJECT') {\n      // TODO: Workaround: allow server for decide is titleCode mandatory (if yes, provide personalized message)\n      if (\n        results.errors.errors.some(\n          (error: ErrorModel) => error.subject === 'titleCode'\n        )\n      ) {\n        this.globalMessageService.add(\n          { key: 'addressForm.titleRequired' },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n      } else {\n        this.globalMessageService.add(\n          { key: 'addressForm.invalidAddress' },\n          GlobalMessageType.MSG_TYPE_ERROR\n        );\n      }\n    } else if (results.decision === 'REVIEW') {\n      this.openSuggestedAddress(results);\n    }\n  }\n\n  countrySelected(country: Country): void {\n    this.addressForm.get('country')?.get('isocode')?.setValue(country.isocode);\n    this.selectedCountry$.next(country.isocode);\n  }\n\n  regionSelected(region: Region): void {\n    this.addressForm.get('region')?.get('isocode')?.setValue(region.isocode);\n  }\n\n  toggleDefaultAddress(): void {\n    this.addressForm['controls'].defaultAddress.setValue(\n      this.addressForm.value.defaultAddress\n    );\n  }\n\n  back(): void {\n    this.backToAddress.emit();\n  }\n\n  verifyAddress(): void {\n    if (this.addressForm.valid) {\n      if (this.addressForm.get('region').value.isocode) {\n        this.regionsSub = this.regions$.pipe(take(1)).subscribe((regions) => {\n          const obj = regions.find(\n            (region) =>\n              region.isocode ===\n              this.addressForm.controls['region'].value.isocode\n          );\n          Object.assign(this.addressForm.value.region, {\n            isocodeShort: obj.isocodeShort,\n          });\n        });\n      }\n\n      if (this.addressForm.dirty) {\n        this.userAddressService\n          .verifyAddress(this.addressForm.value)\n          .subscribe((result) => {\n            this.handleAddressVerificationResults(result);\n          });\n      } else {\n        // address form value not changed\n        // ignore duplicate address\n        this.submitAddress.emit(undefined);\n      }\n    } else {\n      this.addressForm.markAllAsTouched();\n    }\n  }\n\n  openSuggestedAddress(results: AddressValidation): void {\n    if (!this.suggestedAddressModalRef) {\n      this.suggestedAddressModalRef = this.modalService.open(\n        SuggestedAddressDialogComponent,\n        { centered: true, size: 'lg' }\n      );\n      this.suggestedAddressModalRef.componentInstance.enteredAddress =\n        this.addressForm.value;\n      this.suggestedAddressModalRef.componentInstance.suggestedAddresses =\n        results.suggestedAddresses;\n      this.suggestedAddressModalRef.result\n        .then((address) => {\n          if (address) {\n            address = Object.assign(\n              {\n                titleCode: this.addressForm.value.titleCode,\n                phone: this.addressForm.value.phone,\n                selected: true,\n              },\n              address\n            );\n            this.submitAddress.emit(address);\n          }\n          this.suggestedAddressModalRef = null;\n        })\n        .catch(() => {\n          // this  callback is called when modal is closed with Esc key or clicking backdrop\n          const address = Object.assign(\n            {\n              selected: true,\n            },\n            this.addressForm.value\n          );\n          this.submitAddress.emit(address);\n          this.suggestedAddressModalRef = null;\n        });\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.addressVerifySub) {\n      this.addressVerifySub.unsubscribe();\n    }\n\n    if (this.regionsSub) {\n      this.regionsSub.unsubscribe();\n    }\n  }\n}\n","<form (ngSubmit)=\"verifyAddress()\" [formGroup]=\"addressForm\">\n  <div class=\"row\">\n    <div class=\"col-md-12 col-lg-9\">\n      <div class=\"form-group\" formGroupName=\"country\">\n        <ng-container *ngIf=\"countries$ | async as countries\">\n          <div *ngIf=\"countries.length !== 0\">\n            <label>\n              <span class=\"label-content required\">{{\n                'addressForm.country' | cxTranslate\n              }}</span>\n              <ng-select\n                aria-required=\"true\"\n                class=\"country-select\"\n                formControlName=\"isocode\"\n                [searchable]=\"true\"\n                [clearable]=\"false\"\n                [items]=\"countries\"\n                bindLabel=\"name\"\n                bindValue=\"isocode\"\n                placeholder=\"{{ 'addressForm.selectOne' | cxTranslate }}\"\n                (change)=\"countrySelected($event)\"\n              >\n              </ng-select>\n              <cx-form-errors\n                aria-live=\"assertive\"\n                aria-atomic=\"true\"\n                [control]=\"addressForm.get('country.isocode')\"\n              ></cx-form-errors>\n            </label>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"form-group\" *ngIf=\"showTitleCode\">\n        <ng-container *ngIf=\"titles$ | async as titles\">\n          <div *ngIf=\"titles.length !== 0\">\n            <label>\n              <span class=\"label-content required\">{{\n                'addressForm.title' | cxTranslate\n              }}</span>\n              <ng-select\n                formControlName=\"titleCode\"\n                [searchable]=\"true\"\n                [clearable]=\"false\"\n                [items]=\"titles\"\n                bindLabel=\"name\"\n                bindValue=\"code\"\n                [placeholder]=\"'addressForm.title' | cxTranslate\"\n              >\n              </ng-select>\n            </label>\n          </div>\n        </ng-container>\n      </div>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content required\">{{\n            'addressForm.firstName.label' | cxTranslate\n          }}</span>\n          <input\n            aria-required=\"true\"\n            class=\"form-control\"\n            type=\"text\"\n            placeholder=\"{{\n              'addressForm.firstName.placeholder' | cxTranslate\n            }}\"\n            formControlName=\"firstName\"\n          />\n          <cx-form-errors\n            aria-live=\"assertive\"\n            aria-atomic=\"true\"\n            [control]=\"addressForm.get('firstName')\"\n          ></cx-form-errors>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content required\">{{\n            'addressForm.lastName.label' | cxTranslate\n          }}</span>\n          <input\n            aria-required=\"true\"\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"{{ 'addressForm.lastName.placeholder' | cxTranslate }}\"\n            formControlName=\"lastName\"\n          />\n          <cx-form-errors\n            aria-live=\"assertive\"\n            aria-atomic=\"true\"\n            [control]=\"addressForm.get('lastName')\"\n          ></cx-form-errors>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content required\">{{\n            'addressForm.address1' | cxTranslate\n          }}</span>\n          <input\n            aria-required=\"true\"\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"{{ 'addressForm.streetAddress' | cxTranslate }}\"\n            formControlName=\"line1\"\n          />\n          <cx-form-errors\n            aria-live=\"assertive\"\n            aria-atomic=\"true\"\n            [control]=\"addressForm.get('line1')\"\n          ></cx-form-errors>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content\">{{\n            'addressForm.address2' | cxTranslate\n          }}</span>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            placeholder=\"{{ 'addressForm.aptSuite' | cxTranslate }}\"\n            formControlName=\"line2\"\n          />\n        </label>\n      </div>\n      <div class=\"row\">\n        <div class=\"form-group col-md-6\">\n          <label>\n            <span class=\"label-content required\">{{\n              'addressForm.city.label' | cxTranslate\n            }}</span>\n            <input\n              aria-required=\"true\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"{{ 'addressForm.city.placeholder' | cxTranslate }}\"\n              formControlName=\"town\"\n            />\n            <cx-form-errors\n              aria-live=\"assertive\"\n              aria-atomic=\"true\"\n              [control]=\"addressForm.get('town')\"\n            ></cx-form-errors>\n          </label>\n        </div>\n        <div class=\"form-group col-md-6\">\n          <label>\n            <span class=\"label-content required\">{{\n              'addressForm.zipCode.label' | cxTranslate\n            }}</span>\n            <input\n              aria-required=\"true\"\n              type=\"text\"\n              class=\"form-control\"\n              placeholder=\"{{\n                'addressForm.zipCode.placeholder' | cxTranslate\n              }}\"\n              formControlName=\"postalCode\"\n            />\n            <cx-form-errors\n              aria-live=\"assertive\"\n              aria-atomic=\"true\"\n              [control]=\"addressForm.get('postalCode')\"\n            ></cx-form-errors>\n          </label>\n        </div>\n        <ng-container\n          *ngIf=\"regions$ | async as regions\"\n          formGroupName=\"region\"\n        >\n          <ng-container *ngIf=\"regions.length !== 0\">\n            <div class=\"form-group col-md-6\">\n              <label>\n                <span class=\"label-content required\">{{\n                  'addressForm.state' | cxTranslate\n                }}</span>\n                <ng-select\n                  aria-required=\"true\"\n                  class=\"region-select\"\n                  formControlName=\"isocode\"\n                  [searchable]=\"true\"\n                  [clearable]=\"false\"\n                  [items]=\"regions\"\n                  bindLabel=\"{{ regions[0].name ? 'name' : 'isocode' }}\"\n                  bindValue=\"{{ regions[0].name ? 'isocode' : 'region' }}\"\n                  placeholder=\"{{ 'addressForm.selectOne' | cxTranslate }}\"\n                >\n                </ng-select>\n                <cx-form-errors\n                  aria-live=\"assertive\"\n                  aria-atomic=\"true\"\n                  [control]=\"addressForm.get('region.isocode')\"\n                ></cx-form-errors>\n              </label>\n            </div>\n          </ng-container>\n        </ng-container>\n      </div>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content\">{{\n            'addressForm.phoneNumber.label' | cxTranslate\n          }}</span>\n          <input\n            type=\"tel\"\n            class=\"form-control\"\n            placeholder=\"{{\n              'addressForm.phoneNumber.placeholder' | cxTranslate\n            }}\"\n            formControlName=\"phone\"\n          />\n        </label>\n      </div>\n      <div\n        class=\"form-group\"\n        *ngIf=\"(addresses$ | async).length && setAsDefaultField\"\n      >\n        <div class=\"form-check\">\n          <label>\n            <input\n              type=\"checkbox\"\n              class=\"form-check-input\"\n              formControlName=\"defaultAddress\"\n              (change)=\"toggleDefaultAddress()\"\n            />\n            <span class=\"form-check-label\">{{\n              'addressForm.setAsDefault' | cxTranslate\n            }}</span>\n          </label>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div class=\"cx-address-form-btns row\">\n    <div class=\"col-md-12 col-lg-6\" *ngIf=\"showCancelBtn\">\n      <button class=\"btn btn-block btn-action\" (click)=\"back()\">\n        {{ cancelBtnLabel || ('addressForm.chooseAddress' | cxTranslate) }}\n      </button>\n    </div>\n    <div class=\"col-md-12 col-lg-6\">\n      <button class=\"btn btn-block btn-primary\" type=\"submit\">\n        {{ actionBtnLabel || ('common.continue' | cxTranslate) }}\n      </button>\n    </div>\n  </div>\n</form>\n","import { Component, OnInit } from '@angular/core';\nimport { Address, TranslationService } from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Card } from '../../../shared/components/card';\nimport { AddressBookComponentService } from './address-book.component.service';\n\n@Component({\n  selector: 'cx-address-book',\n  templateUrl: './address-book.component.html',\n})\nexport class AddressBookComponent implements OnInit {\n  addresses$: Observable<Address[]>;\n  cards$: Observable<Card[]>;\n  addressesStateLoading$: Observable<boolean>;\n  currentAddress: Address;\n\n  showAddAddressForm = false;\n  showEditAddressForm = false;\n  editCard: string;\n\n  constructor(\n    public service: AddressBookComponentService,\n    protected translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.addresses$ = this.service.getAddresses();\n    this.addressesStateLoading$ = this.service.getAddressesStateLoading();\n    this.service.loadAddresses();\n  }\n\n  addAddressButtonHandle(): void {\n    this.showEditAddressForm = false;\n    this.showAddAddressForm = true;\n  }\n\n  editAddressButtonHandle(address: Address): void {\n    this.showAddAddressForm = false;\n    this.showEditAddressForm = true;\n    this.currentAddress = address;\n  }\n\n  addAddressSubmit(address: Address): void {\n    this.showAddAddressForm = false;\n    this.service.addUserAddress(address);\n  }\n\n  addAddressCancel(): void {\n    this.showAddAddressForm = false;\n  }\n\n  editAddressSubmit(address: Address): void {\n    this.showEditAddressForm = false;\n    this.service.updateUserAddress(this.currentAddress['id'], address);\n  }\n\n  editAddressCancel(): void {\n    this.showEditAddressForm = false;\n  }\n\n  getCardContent(address: Address) {\n    return combineLatest([\n      this.translation.translate('addressCard.default'),\n      this.translation.translate('addressCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('common.edit'),\n      this.translation.translate('addressBook.areYouSureToDeleteAddress'),\n    ]).pipe(\n      map(\n        ([\n          defaultText,\n          setAsDefaultText,\n          textDelete,\n          textEdit,\n          textVerifyDeleteMsg,\n        ]) => {\n          let region = '';\n\n          if (address.region && address.region.isocode) {\n            region = address.region.isocode + ', ';\n          }\n\n          const actions: { name: string; event: string }[] = [];\n          if (!address.defaultAddress) {\n            actions.push({ name: setAsDefaultText, event: 'default' });\n          }\n          actions.push({ name: textEdit, event: 'edit' });\n          actions.push({ name: textDelete, event: 'delete' });\n\n          return {\n            textBold: address.firstName + ' ' + address.lastName,\n            text: [\n              address.line1,\n              address.line2,\n              address.town + ', ' + region + address.country.isocode,\n              address.postalCode,\n              address.phone,\n            ],\n            actions: actions,\n            header: address.defaultAddress ? `✓ ${defaultText}` : '',\n            deleteMsg: textVerifyDeleteMsg,\n          };\n        }\n      )\n    );\n  }\n\n  setAddressAsDefault(addressId: string): void {\n    this.service.setAddressAsDefault(addressId);\n  }\n\n  deleteAddress(addressId: string): void {\n    this.service.deleteUserAddress(addressId);\n  }\n\n  setEdit(addressId: string): void {\n    if (this.editCard !== addressId) {\n      this.editCard = addressId;\n    } else {\n      this.deleteAddress(addressId);\n    }\n  }\n\n  cancelCard(): void {\n    this.editCard = null;\n  }\n}\n","<div class=\"cx-section\">\n  <ng-container\n    *ngIf=\"\n      (addresses$ | async).length &&\n      !(showAddAddressForm || showEditAddressForm)\n    \"\n  >\n    <div class=\"row\">\n      <div class=\"col-md-6\">\n        <button\n          class=\"btn btn-block btn-action\"\n          (click)=\"addAddressButtonHandle()\"\n        >\n          {{ 'addressBook.addNewAddress' | cxTranslate }}\n        </button>\n      </div>\n    </div>\n\n    <div\n      class=\"row cx-address-deck\"\n      *ngIf=\"!(addressesStateLoading$ | async); else loading\"\n    >\n      <div\n        *ngFor=\"let address of addresses$ | async\"\n        class=\"col-md-6 cx-address-card\"\n      >\n        <cx-card\n          [border]=\"true\"\n          [fitToContainer]=\"true\"\n          [content]=\"getCardContent(address) | async\"\n          (editCard)=\"editAddressButtonHandle(address)\"\n          (setDefaultCard)=\"setAddressAsDefault(address.id)\"\n          (deleteCard)=\"setEdit(address.id)\"\n          [editMode]=\"address.id === editCard\"\n          (cancelCard)=\"cancelCard()\"\n        ></cx-card>\n      </div>\n    </div>\n  </ng-container>\n\n  <ng-container *ngIf=\"!(addresses$ | async).length || showAddAddressForm\">\n    <section>\n      <p class=\"cx-section-msg\">\n        {{ 'addressBook.addNewShippingAddress' | cxTranslate }}\n      </p>\n      <cx-address-form\n        class=\"cx-form\"\n        showTitleCode=\"true\"\n        [showCancelBtn]=\"!((addresses$ | async).length === 0)\"\n        actionBtnLabel=\"{{ 'addressBook.addAddress' | cxTranslate }}\"\n        cancelBtnLabel=\"{{ 'addressBook.backToAddressList' | cxTranslate }}\"\n        [setAsDefaultField]=\"!((addresses$ | async).length === 0)\"\n        (submitAddress)=\"addAddressSubmit($event)\"\n        (backToAddress)=\"addAddressCancel()\"\n        (cancelCard)=\"cancelCard()\"\n      ></cx-address-form>\n    </section>\n  </ng-container>\n\n  <ng-container *ngIf=\"showEditAddressForm\">\n    <section>\n      <p class=\"cx-section-msg\">\n        {{ 'addressBook.editShippingAddress' | cxTranslate }}\n      </p>\n      <cx-address-form\n        showTitleCode=\"true\"\n        actionBtnLabel=\"{{ 'addressBook.updateAddress' | cxTranslate }}\"\n        cancelBtnLabel=\"{{ 'addressBook.backToAddressList' | cxTranslate }}\"\n        [addressData]=\"currentAddress\"\n        (submitAddress)=\"editAddressSubmit($event)\"\n        (backToAddress)=\"editAddressCancel()\"\n      ></cx-address-form>\n    </section>\n  </ng-container>\n</div>\n\n<ng-template #loading>\n  <div class=\"col-md-12 cx-address-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../misc/icon/index';\nimport { AddressFormComponent } from './address-form.component';\nimport { SuggestedAddressDialogComponent } from './suggested-addresses-dialog/suggested-addresses-dialog.component';\nimport { FormErrorsModule } from '../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    RouterModule,\n    NgSelectModule,\n    IconModule,\n    I18nModule,\n    FormErrorsModule,\n  ],\n  declarations: [AddressFormComponent, SuggestedAddressDialogComponent],\n  exports: [AddressFormComponent, SuggestedAddressDialogComponent],\n})\nexport class AddressFormModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UserAddressService,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { AddressBookComponent } from './address-book.component';\nimport { AddressFormModule } from './address-form/address-form.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    AddressFormModule,\n    SpinnerModule,\n    I18nModule,\n  ],\n  declarations: [AddressBookComponent],\n  exports: [AddressBookComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountAddressBookComponent: {\n          component: AddressBookComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n    UserAddressService,\n  ],\n})\nexport class AddressBookModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CustomerCoupon,\n  RoutingService,\n  TranslationService,\n} from '@spartacus/core';\nimport { map } from 'rxjs/operators';\nimport { combineLatest, Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MyCouponsComponentService {\n  sortLabels: Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }>;\n\n  protected readonly RELEVANCE = ':relevance';\n  protected readonly CUSTOMER_COUPON_CODE = ':customerCouponCode:';\n\n  constructor(\n    protected routingService: RoutingService,\n    protected translation: TranslationService\n  ) {}\n\n  launchSearchPage(coupon: CustomerCoupon): void {\n    this.routingService.go(\n      {\n        cxRoute: 'search',\n        params: { query: this.buildSearchParam(coupon) },\n      },\n      {\n        queryParams: {\n          couponcode: coupon.couponId,\n        },\n      }\n    );\n  }\n\n  private buildSearchParam(coupon: CustomerCoupon): string {\n    return coupon.allProductsApplicable\n      ? this.RELEVANCE\n      : this.RELEVANCE + this.CUSTOMER_COUPON_CODE + coupon.couponId;\n  }\n\n  getSortLabels(): Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }> {\n    return combineLatest([\n      this.translation.translate('myCoupons.startDateAsc'),\n      this.translation.translate('myCoupons.startDateDesc'),\n      this.translation.translate('myCoupons.endDateAsc'),\n      this.translation.translate('myCoupons.endDateDesc'),\n    ]).pipe(\n      map(\n        ([\n          textByStartDateAsc,\n          textByStartDateDesc,\n          textByEndDateAsc,\n          textByEndDateDesc,\n        ]) => {\n          return {\n            byStartDateAsc: textByStartDateAsc,\n            byStartDateDesc: textByStartDateDesc,\n            byEndDateAsc: textByEndDateAsc,\n            byEndDateDesc: textByEndDateDesc,\n          };\n        }\n      )\n    );\n  }\n}\n","import { Component, ViewChild, ElementRef } from '@angular/core';\nimport { ModalService } from '../../../../../shared/components/modal/index';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/index';\nimport { CustomerCoupon } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-coupon-dialog',\n  templateUrl: './coupon-dialog.component.html',\n})\nexport class CouponDialogComponent {\n  iconTypes = ICON_TYPE;\n  coupon: CustomerCoupon;\n\n  @ViewChild('dialog', { read: ElementRef })\n  dialog: ElementRef;\n\n  constructor(protected modalService: ModalService) {}\n\n  dismissModal(reason?: any): void {\n    this.modalService.dismissActiveModal(reason);\n  }\n}\n","<div #dialog>\n  <!-- Modal Header -->\n\n  <div class=\"cx-dialog-header modal-header\">\n    <div class=\"cx-dialog-title modal-title\">\n      {{ 'myCoupons.dialogTitle' | cxTranslate }}\n    </div>\n    <button\n      type=\"button\"\n      class=\"close\"\n      [attr.aria-label]=\"'common.close' | cxTranslate\"\n      (click)=\"dismissModal('Cross click')\"\n    >\n      <span aria-hidden=\"true\">\n        <cx-icon [type]=\"iconTypes.CLOSE\"></cx-icon>\n      </span>\n    </button>\n  </div>\n  <!-- Modal Body -->\n  <div class=\"cx-dialog-body modal-body\">\n    <div class=\"cx-dialog-row\">\n      <div class=\"cx-dialog-item col-sm-12 col-md-12\">\n        <div class=\"cx-coupon-card-head\">\n          <span class=\"card-label-bold cx-coupon-card-id\">{{\n            coupon?.couponId\n          }}</span>\n          <span>: {{ coupon?.name }}</span>\n        </div>\n        <div class=\"cx-coupon-description\">{{ coupon?.description }}</div>\n\n        <div class=\"cx-coupon-dialog-date\">\n          <p>{{ 'myCoupons.effectiveTitle' | cxTranslate }}</p>\n          <div class=\"cx-coupon-date\">\n            {{ coupon?.startDate | cxDate: 'medium' }} -\n            {{ coupon?.endDate | cxDate: 'medium' }}\n          </div>\n        </div>\n\n        <div class=\"cx-coupon-dialog-status\">\n          <p>{{ 'myCoupons.status' | cxTranslate }}</p>\n          <div class=\"cx-coupon-status {{ coupon?.status | lowercase }}\">\n            {{ 'myCoupons.' + coupon?.status | cxTranslate }}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../shared/components/modal/index';\nimport { CouponDialogComponent } from './coupon-dialog/coupon-dialog.component';\nimport { CustomerCoupon } from '@spartacus/core';\nimport { MyCouponsComponentService } from '../my-coupons.component.service';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-coupon-card',\n  templateUrl: './coupon-card.component.html',\n})\nexport class CouponCardComponent {\n  @Input() coupon: CustomerCoupon;\n  @Input() couponSubscriptionLoading$: Observable<boolean>;\n  modalRef: ModalRef;\n\n  @Output()\n  notificationChanged = new EventEmitter<{\n    couponId: string;\n    notification: boolean;\n  }>();\n\n  constructor(\n    protected modalService: ModalService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  onSubscriptionChange(): void {\n    this.notificationChanged.emit({\n      couponId: this.coupon.couponId,\n      notification: !this.coupon.notificationOn,\n    });\n  }\n\n  readMore() {\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(CouponDialogComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.coupon = this.coupon;\n  }\n\n  findProducts(): void {\n    this.myCouponsComponentService.launchSearchPage(this.coupon);\n  }\n}\n","<div class=\"card\">\n  <div class=\"card-body cx-card-body\">\n    <div class=\"cx-coupon-data\">\n      <div class=\"cx-coupon-card-row top\">\n        <div class=\"cx-coupon-card-head\">\n          <span class=\"card-label-bold cx-coupon-card-id\">{{\n            coupon?.couponId\n          }}</span>\n          <span>: {{ coupon?.name }}</span>\n        </div>\n\n        <div class=\"cx-coupon-status {{ coupon?.status | lowercase }}\">\n          {{ 'myCoupons.' + coupon?.status | cxTranslate }}\n        </div>\n      </div>\n\n      <div class=\"cx-coupon-card-date\">\n        <p>{{ 'myCoupons.effectiveTitle' | cxTranslate }}</p>\n        <div class=\"cx-coupon-date\">\n          <div class=\"cx-coupon-date-start\">\n            {{ coupon?.startDate | cxDate: 'medium' }} -&nbsp;\n          </div>\n          <div class=\"cx-coupon-date-end\">\n            {{ coupon?.endDate | cxDate: 'medium' }}\n          </div>\n        </div>\n      </div>\n\n      <a (click)=\"readMore()\" class=\"cx-card-read-more\">{{\n        'myCoupons.readMore' | cxTranslate\n      }}</a>\n\n      <div class=\"cx-coupon-card-row bottom\">\n        <div class=\"cx-coupon-notification form-check\">\n          <label>\n            <input\n              type=\"checkbox\"\n              class=\"form-check-input\"\n              [checked]=\"coupon?.notificationOn\"\n              [class.disabled]=\"couponSubscriptionLoading$ | async\"\n              [disabled]=\"couponSubscriptionLoading$ | async\"\n              (change)=\"onSubscriptionChange()\"\n            />\n            <span class=\"form-check-label\">\n              {{ 'myCoupons.notification' | cxTranslate }}\n            </span>\n          </label>\n        </div>\n\n        <div class=\"cx-coupon-find-product col-lg-6 col-md-12 col-sm-6\">\n          <button class=\"btn btn-block btn-action\" (click)=\"findProducts()\">\n            {{ 'myCoupons.findProducts' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport {\n  CustomerCouponSearchResult,\n  CustomerCouponService,\n  PaginationModel,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/icon.model';\nimport { MyCouponsComponentService } from './my-coupons.component.service';\n\n@Component({\n  selector: 'cx-my-coupons',\n  templateUrl: './my-coupons.component.html',\n})\nexport class MyCouponsComponent implements OnInit, OnDestroy {\n  couponResult$: Observable<CustomerCouponSearchResult>;\n  couponsLoading$: Observable<boolean>;\n  couponSubscriptionLoading$: Observable<boolean>;\n\n  iconTypes = ICON_TYPE;\n\n  private subscriptions = new Subscription();\n\n  private PAGE_SIZE = 10;\n  private sortMapping = {\n    byStartDateAsc: 'startDate:asc',\n    byStartDateDesc: 'startDate:desc',\n    byEndDateAsc: 'endDate:asc',\n    byEndDateDesc: 'endDate:desc',\n  };\n  sort = 'byStartDateAsc';\n\n  sortOptions = [\n    {\n      code: 'byStartDateAsc',\n      selected: false,\n    },\n    {\n      code: 'byStartDateDesc',\n      selected: false,\n    },\n    {\n      code: 'byEndDateAsc',\n      selected: false,\n    },\n    {\n      code: 'byEndDateDesc',\n      selected: false,\n    },\n  ];\n\n  pagination: PaginationModel;\n  sortLabels: Observable<{\n    byStartDateAsc: string;\n    byStartDateDesc: string;\n    byEndDateAsc: string;\n    byEndDateDesc: string;\n  }>;\n\n  constructor(\n    protected couponService: CustomerCouponService,\n    protected myCouponsComponentService: MyCouponsComponentService\n  ) {}\n\n  ngOnInit(): void {\n    this.couponResult$ = this.couponService\n      .getCustomerCoupons(this.PAGE_SIZE)\n      .pipe(\n        tap(\n          (coupons) =>\n            (this.pagination = {\n              currentPage: coupons.pagination.page,\n              pageSize: coupons.pagination.count,\n              totalPages: coupons.pagination.totalPages,\n              totalResults: coupons.pagination.totalCount,\n              sort: this.sort,\n            })\n        )\n      );\n    this.couponsLoading$ = this.couponService.getCustomerCouponsLoading();\n    this.couponSubscriptionLoading$ = combineLatest([\n      this.couponService.getSubscribeCustomerCouponResultLoading(),\n      this.couponService.getUnsubscribeCustomerCouponResultLoading(),\n    ]).pipe(\n      map(([subscribing, unsubscribing]) => subscribing || unsubscribing)\n    );\n    this.sortLabels = this.myCouponsComponentService.getSortLabels();\n\n    this.subscriptions\n      .add(\n        this.couponService\n          .getSubscribeCustomerCouponResultError()\n          .subscribe((error) => {\n            this.subscriptionFail(error);\n          })\n      )\n      .add(\n        this.couponService\n          .getUnsubscribeCustomerCouponResultError()\n          .subscribe((error) => {\n            this.subscriptionFail(error);\n          })\n      );\n  }\n\n  private subscriptionFail(error: boolean) {\n    if (error) {\n      this.couponService.loadCustomerCoupons(this.PAGE_SIZE);\n    }\n  }\n\n  sortChange(sort: string): void {\n    this.sort = sort;\n\n    this.couponService.loadCustomerCoupons(\n      this.PAGE_SIZE,\n      this.pagination.currentPage,\n      this.sortMapping[sort]\n    );\n  }\n\n  pageChange(page: number): void {\n    this.couponService.loadCustomerCoupons(\n      this.PAGE_SIZE,\n      page,\n      this.sortMapping[this.sort]\n    );\n  }\n\n  notificationChange({\n    couponId,\n    notification,\n  }: {\n    couponId: string;\n    notification: boolean;\n  }): void {\n    if (notification) {\n      this.couponService.subscribeCustomerCoupon(couponId);\n    } else {\n      this.couponService.unsubscribeCustomerCoupon(couponId);\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n  }\n}\n","<div class=\"cx-section\">\n  <ng-container *ngIf=\"!(couponsLoading$ | async); else loading\">\n    <ng-container *ngIf=\"couponResult$ | async as couponResult\">\n      <div class=\"cx-my-coupons-header\">\n        <h3>{{ 'myCoupons.myCoupons' | cxTranslate }}</h3>\n      </div>\n\n      <ng-container\n        *ngIf=\"couponResult.pagination.totalCount > 0; else noCoupons\"\n      >\n        <div class=\"cx-my-coupons-sort top row\">\n          <label\n            class=\"\n              cx-my-coupons-form-group\n              form-group\n              col-sm-12 col-md-4 col-lg-4\n            \"\n          >\n            <span>{{ 'myCoupons.sortBy' | cxTranslate }}</span>\n            <cx-sorting\n              [sortOptions]=\"sortOptions\"\n              [sortLabels]=\"sortLabels | async\"\n              (sortListEvent)=\"sortChange($event)\"\n              [selectedOption]=\"sort\"\n            >\n            </cx-sorting>\n          </label>\n          <div class=\"cx-my-coupons-pagination cx-mycoupon-thead-mobile\">\n            <cx-pagination\n              [pagination]=\"pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n\n        <div class=\"row cx-coupon-deck\">\n          <div\n            *ngFor=\"let coupon of couponResult.coupons\"\n            class=\"col-md-6 cx-coupon-card\"\n          >\n            <cx-coupon-card\n              [coupon]=\"coupon\"\n              [couponSubscriptionLoading$]=\"couponSubscriptionLoading$\"\n              (notificationChanged)=\"notificationChange($event)\"\n            ></cx-coupon-card>\n          </div>\n        </div>\n\n        <div class=\"cx-my-coupons-sort bottom row\">\n          <label\n            class=\"\n              cx-my-coupons-form-group\n              form-group\n              cx-mycoupon-thead-mobile\n              col-sm-12 col-md-4 col-lg-4\n            \"\n          >\n            <span>{{ 'myCoupons.sortBy' | cxTranslate }}</span>\n            <cx-sorting\n              [sortOptions]=\"sortOptions\"\n              [sortLabels]=\"sortLabels | async\"\n              (sortListEvent)=\"sortChange($event)\"\n              [selectedOption]=\"sort\"\n              placeholder=\"{{ 'myCoupons.sortBy' | cxTranslate }}\"\n            >\n            </cx-sorting>\n          </label>\n          <div class=\"cx-my-coupons-pagination\">\n            <cx-pagination\n              [pagination]=\"pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n        <div class=\"cx-my-coupons-notes\">\n          <span>\n            <cx-icon [type]=\"iconTypes.INFO\"></cx-icon>\n            {{ 'myCoupons.notesPreffix' | cxTranslate\n            }}<a [routerLink]=\"['/my-account/notification-preference']\">{{\n              'myCoupons.notesLink' | cxTranslate\n            }}</a\n            >{{ 'myCoupons.notesSuffix' | cxTranslate }}</span\n          >\n        </div>\n      </ng-container>\n    </ng-container>\n\n    <ng-template #noCoupons>\n      <section>\n        <p class=\"cx-section-msg\">\n          {{ 'myCoupons.noCouponsMessage' | cxTranslate }}\n        </p>\n      </section>\n    </ng-template>\n  </ng-container>\n\n  <ng-template #loading>\n    <div class=\"col-md-12 cx-coupon-spinner\">\n      <cx-spinner></cx-spinner>\n    </div>\n  </ng-template>\n</div>\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport {\n  RoutingService,\n  CustomerCouponService,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  template: '',\n  selector: 'cx-coupon-claim',\n})\nexport class CouponClaimComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n\n  constructor(\n    protected couponService: CustomerCouponService,\n    protected routingService: RoutingService,\n    protected messageService: GlobalMessageService\n  ) {}\n\n  ngOnInit(): void {\n    this.routingService\n      .getRouterState()\n      .subscribe((k) => {\n        const couponCode = k.state.params.couponCode;\n        if (couponCode) {\n          this.couponService.claimCustomerCoupon(couponCode);\n          this.subscription = this.couponService\n            .getClaimCustomerCouponResultSuccess()\n            .subscribe((success) => {\n              if (success) {\n                this.messageService.add(\n                  { key: 'myCoupons.claimCustomerCoupon' },\n                  GlobalMessageType.MSG_TYPE_CONFIRMATION\n                );\n              }\n              this.routingService.go({ cxRoute: 'coupons' });\n            });\n        } else {\n          this.routingService.go({ cxRoute: 'notFound' });\n        }\n      })\n      .unsubscribe();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { MyCouponsComponent } from './my-coupons.component';\nimport { CouponCardComponent } from './coupon-card/coupon-card.component';\n\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\nimport { CouponDialogComponent } from './coupon-card/coupon-dialog/coupon-dialog.component';\nimport { CouponClaimComponent } from './coupon-claim/coupon-claim.component';\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../cms-structure/page/page-layout/page-layout.component';\nimport { IconModule } from '../../misc/icon/icon.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    CardModule,\n    SpinnerModule,\n    I18nModule,\n    RouterModule,\n    UrlModule,\n    IconModule,\n    ListNavigationModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'couponClaim' },\n      },\n    ]),\n  ],\n  declarations: [\n    MyCouponsComponent,\n    CouponCardComponent,\n    CouponDialogComponent,\n    CouponClaimComponent,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MyCouponsComponent: {\n          component: MyCouponsComponent,\n          guards: [AuthGuard],\n        },\n        CouponClaimComponent: {\n          component: CouponClaimComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [MyCouponsComponent, CouponClaimComponent],\n})\nexport class MyCouponsModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport {\n  PaginationModel,\n  Product,\n  ProductInterestEntryRelation,\n  ProductInterestSearchResult,\n  ProductScope,\n  ProductService,\n  TranslationService,\n  UserInterestsService,\n} from '@spartacus/core';\nimport { map, tap } from 'rxjs/operators';\n\ninterface ProductInterestSearchResultUI extends ProductInterestSearchResult {\n  results?: (ProductInterestEntryRelation & {\n    product$?: Observable<Product>;\n  })[];\n}\n\n@Component({\n  selector: 'cx-my-interests',\n  templateUrl: './my-interests.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MyInterestsComponent implements OnInit, OnDestroy {\n  private DEFAULT_PAGE_SIZE = 10;\n  private sortMapping = {\n    byNameAsc: 'name:asc',\n    byNameDesc: 'name:desc',\n  };\n\n  sort = 'byNameAsc';\n  sortOptions = [\n    {\n      code: 'byNameAsc',\n      selected: false,\n    },\n    {\n      code: 'byNameDesc',\n      selected: false,\n    },\n  ];\n  pagination: PaginationModel;\n\n  interests$: Observable<ProductInterestSearchResultUI>;\n  isRemoveDisabled$: Observable<boolean>;\n  getInterestsloading$: Observable<boolean>;\n  sortLabels: Observable<{ byNameAsc: string; byNameDesc: string }>;\n\n  constructor(\n    private productInterestService: UserInterestsService,\n    private translationService: TranslationService,\n    private productService: ProductService\n  ) {}\n\n  ngOnInit() {\n    this.interests$ = this.productInterestService\n      .getAndLoadProductInterests(this.DEFAULT_PAGE_SIZE)\n      .pipe(\n        tap(\n          (interests) =>\n            (this.pagination = {\n              currentPage: interests.pagination.page,\n              pageSize: interests.pagination.count,\n              totalPages: interests.pagination.totalPages,\n              totalResults: interests.pagination.totalCount,\n              sort: 'byNameAsc',\n            })\n        ),\n        map((interest) => ({\n          ...interest,\n          results: interest.results\n            ? interest.results.map((result) => ({\n                ...result,\n                product$: this.getProduct(result),\n              }))\n            : interest.results,\n        }))\n      );\n\n    this.getInterestsloading$ =\n      this.productInterestService.getProdutInterestsLoading();\n    this.isRemoveDisabled$ = combineLatest([\n      this.getInterestsloading$,\n      this.productInterestService.getRemoveProdutInterestLoading(),\n    ]).pipe(map(([getLoading, removeLoading]) => getLoading || removeLoading));\n\n    this.sortLabels = this.getSortLabels();\n  }\n\n  private getSortLabels(): Observable<{\n    byNameAsc: string;\n    byNameDesc: string;\n  }> {\n    return combineLatest([\n      this.translationService.translate('myInterests.sorting.byNameAsc'),\n      this.translationService.translate('myInterests.sorting.byNameDesc'),\n    ]).pipe(\n      map(([asc, desc]) => {\n        return {\n          byNameAsc: asc,\n          byNameDesc: desc,\n        };\n      })\n    );\n  }\n\n  private getProduct(\n    interest: ProductInterestEntryRelation\n  ): Observable<Product> {\n    return this.productService.get(interest.product.code, ProductScope.DETAILS);\n  }\n\n  removeInterest(\n    relation: ProductInterestEntryRelation & {\n      product$?: Observable<Product>;\n    }\n  ): void {\n    this.productInterestService.removeProdutInterest({\n      product: relation.product,\n      productInterestEntry: relation.productInterestEntry,\n    });\n  }\n\n  sortChange(sort: string): void {\n    this.sort = sort;\n    this.productInterestService.loadProductInterests(\n      this.DEFAULT_PAGE_SIZE,\n      0,\n      this.sortMapping[sort]\n    );\n  }\n\n  pageChange(page: number): void {\n    this.productInterestService.loadProductInterests(\n      this.DEFAULT_PAGE_SIZE,\n      page,\n      this.sortMapping[this.sort]\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.productInterestService.clearProductInterests();\n    this.productInterestService.resetRemoveInterestState();\n  }\n}\n","<div *ngIf=\"interests$ | async as interests\" class=\"container\">\n  <div class=\"cx-product-interests-title h3\">\n    <h3>{{ 'myInterests.header' | cxTranslate }}</h3>\n  </div>\n  <div\n    class=\"cx-product-interests-body\"\n    *ngIf=\"!(getInterestsloading$ | async); else loading\"\n  >\n    <ng-container *ngIf=\"interests.pagination.totalCount > 0; else noInterest\">\n      <div class=\"cx-product-interests-sort top row\">\n        <label\n          class=\"\n            cx-product-interests-form-group\n            form-group\n            col-sm-12 col-md-4 col-lg-4\n          \"\n          ><span>{{ 'myInterests.sortBy' | cxTranslate }}</span>\n          <cx-sorting\n            [sortOptions]=\"sortOptions\"\n            [sortLabels]=\"sortLabels | async\"\n            (sortListEvent)=\"sortChange($event)\"\n            [selectedOption]=\"sort\"\n            placeholder=\"{{ 'myInterests.sortBy' | cxTranslate }}\"\n          >\n          </cx-sorting>\n        </label>\n        <div\n          class=\"\n            cx-product-interests-pagination cx-product-interests-thead-mobile\n          \"\n        >\n          <cx-pagination\n            [pagination]=\"pagination\"\n            (viewPageEvent)=\"pageChange($event)\"\n          ></cx-pagination>\n        </div>\n      </div>\n      <table class=\"table cx-product-interests-table\">\n        <thead class=\"cx-product-interests-thead-mobile\">\n          <th scope=\"col\">\n            {{ 'myInterests.item' | cxTranslate }}\n          </th>\n          <th scope=\"col\"></th>\n          <th scope=\"col\">\n            {{ 'myInterests.price' | cxTranslate }}\n          </th>\n          <th scope=\"col\">\n            {{ 'myInterests.notifications' | cxTranslate }}\n          </th>\n          <th scope=\"col\"></th>\n        </thead>\n        <tbody>\n          <tr\n            *ngFor=\"let interest of interests.results\"\n            class=\"cx-product-interests-product-item\"\n          >\n            <ng-container *ngIf=\"interest.product$ | async as product\">\n              <td>\n                <div class=\"cx-product-interests-label\">\n                  <a\n                    class=\"cx-product-interests-product-image-link\"\n                    tabindex=\"-1\"\n                    [routerLink]=\"\n                      { cxRoute: 'product', params: product } | cxUrl\n                    \"\n                  >\n                    <cx-media\n                      [container]=\"product.images?.PRIMARY\"\n                      format=\"thumbnail\"\n                    ></cx-media>\n                  </a>\n                </div>\n              </td>\n              <td>\n                <div class=\"cx-info col-10\">\n                  <div class=\"cx-info-container row\">\n                    <div>\n                      <div *ngIf=\"product.name\" class=\"cx-name\">\n                        <a\n                          class=\"cx-link cx-product-interests-product-code-link\"\n                          [routerLink]=\"\n                            { cxRoute: 'product', params: product } | cxUrl\n                          \"\n                        >\n                          {{ product.name }}\n                        </a>\n                      </div>\n                      <div *ngIf=\"product.code\" class=\"cx-code\">\n                        <span>{{\n                          'myInterests.productId'\n                            | cxTranslate: { code: product.code }\n                        }}</span>\n                      </div>\n\n                      <ng-container\n                        *ngFor=\"let baseOptions of product.baseOptions\"\n                      >\n                        <div\n                          *ngFor=\"\n                            let variant of baseOptions.selected\n                              ?.variantOptionQualifiers\n                          \"\n                          class=\"cx-property\"\n                        >\n                          <div\n                            class=\"cx-label cx-product-interests-variant-name\"\n                          >\n                            {{ variant.name }}\n                          </div>\n                          <div\n                            class=\"cx-value cx-product-interests-variant-value\"\n                          >\n                            {{ variant.value }}\n                          </div>\n                        </div>\n                      </ng-container>\n                      <div\n                        class=\"cx-property\"\n                        *ngIf=\"product.stock.stockLevelStatus === 'outOfStock'\"\n                      >\n                        <div\n                          class=\"cx-label cx-product-interests-product-stock\"\n                        >\n                          {{ 'myInterests.outOfStock' | cxTranslate }}\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </td>\n              <td>\n                <div class=\"cx-product-interests-product-price\">\n                  <div class=\"d-md-none cx-product-interests-label\">\n                    {{ 'myInterests.price' | cxTranslate }}\n                  </div>\n                  <span>{{ product.price.formattedValue }}</span>\n                </div>\n              </td>\n              <td>\n                <div class=\"cx-product-interests-subscriptions\">\n                  <div class=\"d-md-none cx-product-interests-label\">\n                    {{ 'myInterests.notifications' | cxTranslate }}\n                  </div>\n                  <div\n                    class=\"cx-product-interests-notification\"\n                    *ngFor=\"let interestEntry of interest.productInterestEntry\"\n                  >\n                    <span class=\"cx-product-interests-type\">\n                      {{\n                        'myInterests.' + interestEntry.interestType\n                          | cxTranslate\n                      }}\n                    </span>\n                    <span class=\"cx-product-interests-expiration-date\">\n                      {{\n                        'myInterests.expirationDate'\n                          | cxTranslate\n                            : {\n                                expirationDate:\n                                  interestEntry.expirationDate | date\n                              }\n                      }}\n                    </span>\n                  </div>\n                </div>\n              </td>\n              <td>\n                <div class=\"cx-actions cx-product-interests-remove-button\">\n                  <button\n                    type=\"button\"\n                    class=\"link cx-product-interests-remove-btn\"\n                    [disabled]=\"isRemoveDisabled$ | async\"\n                    (click)=\"removeInterest(interest)\"\n                  >\n                    {{ 'myInterests.remove' | cxTranslate }}\n                  </button>\n                </div>\n              </td>\n            </ng-container>\n          </tr>\n        </tbody>\n      </table>\n      <div class=\"cx-product-interests-sort bottom row\">\n        <label\n          class=\"\n            cx-product-interests-form-group cx-product-interests-thead-mobile\n            form-group\n            col-sm-12 col-md-4 col-lg-4\n          \"\n          ><span>{{ 'myInterests.sortBy' | cxTranslate }}</span>\n          <cx-sorting\n            [sortOptions]=\"sortOptions\"\n            [sortLabels]=\"sortLabels | async\"\n            (sortListEvent)=\"sortChange($event)\"\n            [selectedOption]=\"sort\"\n            placeholder=\"{{ 'myInterests.sortBy' | cxTranslate }}\"\n          >\n          </cx-sorting>\n        </label>\n        <div class=\"cx-product-interests-pagination\">\n          <cx-pagination\n            [pagination]=\"pagination\"\n            (viewPageEvent)=\"pageChange($event)\"\n          ></cx-pagination>\n        </div>\n      </div>\n    </ng-container>\n  </div>\n</div>\n<ng-template #noInterest>\n  <div class=\"cx-product-interests-message\">\n    {{ 'myInterests.noInterests' | cxTranslate }}\n  </div>\n</ng-template>\n<ng-template #loading>\n  <div class=\"cx-spinner\">\n    <cx-spinner></cx-spinner>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ListNavigationModule } from '../../../shared/components/list-navigation/list-navigation.module';\nimport { MyInterestsComponent } from './my-interests.component';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\n\n@NgModule({\n  declarations: [MyInterestsComponent],\n  imports: [\n    CommonModule,\n    I18nModule,\n    RouterModule,\n    ListNavigationModule,\n    I18nModule,\n    UrlModule,\n    MediaModule,\n    SpinnerModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        MyInterestsComponent: {\n          component: MyInterestsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [MyInterestsComponent],\n})\nexport class MyInterestsModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport {\n  NotificationPreference,\n  UserNotificationPreferenceService,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'cx-notification-preference',\n  templateUrl: './notification-preference.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NotificationPreferenceComponent implements OnInit {\n  preferences$: Observable<NotificationPreference[]>;\n  isLoading$: Observable<boolean>;\n\n  protected preferences: NotificationPreference[] = [];\n\n  constructor(\n    private notificationPreferenceService: UserNotificationPreferenceService\n  ) {}\n\n  ngOnInit() {\n    this.notificationPreferenceService.resetNotificationPreferences();\n    this.preferences$ = this.notificationPreferenceService\n      .getPreferences()\n      .pipe(tap((preferences) => (this.preferences = preferences)));\n    this.notificationPreferenceService.loadPreferences();\n\n    this.isLoading$ = combineLatest([\n      this.notificationPreferenceService.getPreferencesLoading(),\n      this.notificationPreferenceService.getUpdatePreferencesResultLoading(),\n    ]).pipe(\n      map(([prefsLoading, updateLoading]) => prefsLoading || updateLoading)\n    );\n  }\n\n  updatePreference(preference: NotificationPreference) {\n    const updatedPreferences = [];\n    this.preferences.forEach((p) => {\n      if (p.channel === preference.channel) {\n        updatedPreferences.push({\n          ...p,\n          enabled: !p.enabled,\n        });\n      } else {\n        updatedPreferences.push(p);\n      }\n    });\n    this.notificationPreferenceService.updatePreferences(updatedPreferences);\n  }\n}\n","<ng-container *ngIf=\"preferences$ | async as preferences\">\n  <div *ngIf=\"preferences.length > 0; else loading\">\n    <div class=\"row d-flex justify-content-center\">\n      <div class=\"col-md-8\">\n        <div class=\"pref-header\">\n          {{ 'notificationPreference.message' | cxTranslate }}\n        </div>\n        <div class=\"form-check cx-notification-channels\">\n          <ng-container *ngFor=\"let preference of preferences\">\n            <label *ngIf=\"preference.visible\" class=\"pref-channel\">\n              <input\n                class=\"form-check-input cx-np-checkbox\"\n                role=\"checkbox\"\n                type=\"checkbox\"\n                [checked]=\"preference.enabled\"\n                (change)=\"updatePreference(preference)\"\n                [disabled]=\"isLoading$ | async\"\n              />\n              <span class=\"form-check-label\">\n                {{\n                  'notificationPreference.' + preference.channel | cxTranslate\n                }}\n                {{ preference.value }}\n              </span>\n            </label>\n          </ng-container>\n        </div>\n        <label class=\"pref-note\"\n          ><strong>{{ 'notificationPreference.note' | cxTranslate }}</strong\n          >{{ 'notificationPreference.noteMessage' | cxTranslate }}\n        </label>\n      </div>\n    </div>\n  </div>\n\n  <ng-template #loading>\n    <div class=\"cx-spinner\">\n      <cx-spinner></cx-spinner>\n    </div>\n  </ng-template>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { NotificationPreferenceComponent } from './notification-preference.component';\n\n@NgModule({\n  declarations: [NotificationPreferenceComponent],\n  imports: [CommonModule, SpinnerModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        NotificationPreferenceComponent: {\n          component: NotificationPreferenceComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  exports: [NotificationPreferenceComponent],\n})\nexport class NotificationPreferenceModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  Input,\n} from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { RoutingService } from '@spartacus/core';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-amend-order-actions',\n  templateUrl: './amend-order-actions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class AmendOrderActionsComponent {\n  @Input() orderCode: string;\n  @Input() amendOrderForm: FormGroup;\n  @Input() backRoute: string;\n  @Input() forwardRoute: string;\n\n  @HostBinding('class') styles = 'row';\n\n  constructor(protected routingService: RoutingService) {}\n\n  continue(event: Event): void {\n    if (this.amendOrderForm.valid) {\n      this.routingService.go({\n        cxRoute: this.forwardRoute,\n        params: { code: this.orderCode },\n      });\n    } else {\n      this.amendOrderForm.markAllAsTouched();\n      event.stopPropagation();\n    }\n  }\n}\n","<div class=\"col-xs-12 col-md-4 col-lg-3\">\n  <a\n    [routerLink]=\"\n      {\n        cxRoute: backRoute,\n        params: { code: orderCode }\n      } | cxUrl\n    \"\n    class=\"btn btn-block btn-action\"\n  >\n    {{ 'common.back' | cxTranslate }}\n  </a>\n</div>\n<div class=\"col-xs-12 col-md-4 col-lg-3\">\n  <button\n    *ngIf=\"forwardRoute\"\n    class=\"btn btn-block btn-primary\"\n    (click)=\"continue($event)\"\n  >\n    {{ 'common.continue' | cxTranslate }}\n  </button>\n\n  <button *ngIf=\"!forwardRoute\" class=\"btn btn-block btn-primary\" type=\"submit\">\n    {{ 'orderDetails.cancellationAndReturn.submit' | cxTranslate }}\n  </button>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { AmendOrderActionsComponent } from './amend-order-actions.component';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [CommonModule, RouterModule, UrlModule, I18nModule],\n  declarations: [AmendOrderActionsComponent],\n  exports: [AmendOrderActionsComponent],\n})\nexport class AmendOrderActionsModule {}\n","/**\n * @deprecated since 4.2 - use order lib instead\n */\nexport enum AmendOrderType {\n  CANCEL,\n  RETURN,\n}\n","import { Order } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n// TODO: remove this token in 5.0\nexport abstract class OrderDetailsServiceTransitionalToken {\n  abstract getOrderDetails(): Observable<Order>;\n}\n","import { Injectable } from '@angular/core';\nimport {\n  getLastValueSync,\n  Order,\n  RoutingService,\n  UnifiedInjector,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { OrderDetailsServiceTransitionalToken } from '../order-transitional-tokens';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderDetailsService {\n  orderCode$: Observable<string>;\n  orderLoad$: Observable<{}>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private routingService: RoutingService,\n    private unifiedInjector?: UnifiedInjector\n  ) {\n    this.orderCode$ = this.routingService.getRouterState().pipe(\n      map((routingData) => routingData.state.params.orderCode),\n      distinctUntilChanged()\n    );\n\n    this.orderLoad$ = this.orderCode$.pipe(\n      tap((orderCode) => {\n        if (orderCode) {\n          this.userOrderService.loadOrderDetails(orderCode);\n        } else {\n          this.userOrderService.clearOrderDetails();\n        }\n      }),\n      shareReplay({ bufferSize: 1, refCount: true })\n    );\n  }\n\n  getOrderDetails(): Observable<Order> {\n    if (this.unifiedInjector) {\n      const serivce = getLastValueSync(\n        this.unifiedInjector.get(OrderDetailsServiceTransitionalToken)\n      );\n      if (serivce) {\n        return serivce.getOrderDetails();\n      }\n    }\n\n    return this.orderLoad$.pipe(\n      switchMap(() => this.userOrderService.getOrderDetails())\n    );\n  }\n}\n","import { formatCurrency, getCurrencySymbol } from '@angular/common';\nimport { Injectable } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Order, OrderEntry, Price } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport { OrderDetailsService } from '../order-details/order-details.service';\nimport { AmendOrderType } from './amend-order.model';\n\nfunction ValidateQuantityToCancel(control: FormControl) {\n  if (!control.value) {\n    return null;\n  }\n  const quantity = Object.values(control.value).reduce(\n    (acc: number, val: number) => acc + val,\n    0\n  );\n  return quantity > 0 ? null : { cxNoSelectedItemToCancel: true };\n}\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Injectable()\nexport abstract class OrderAmendService {\n  protected amendType: AmendOrderType;\n  protected form: FormGroup;\n\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  /**\n   * Returns entries for the given order.\n   */\n  abstract getEntries(): Observable<OrderEntry[]>;\n\n  /**\n   * Returns entries with an amended quantity.\n   */\n  getAmendedEntries(): Observable<OrderEntry[]> {\n    return this.getForm().pipe(\n      switchMap((form) => {\n        return this.getEntries().pipe(\n          map((entries) =>\n            entries.filter(\n              (entry) => this.getFormControl(form, entry).value > 0\n            )\n          )\n        );\n      })\n    );\n  }\n\n  /**\n   * Submits the amended order.\n   */\n  abstract save(): void;\n\n  getOrder(): Observable<Order> {\n    return this.orderDetailsService.getOrderDetails();\n  }\n\n  /**\n   * returns the form with form data at runtime\n   */\n  getForm(): Observable<FormGroup> {\n    return this.getOrder().pipe(\n      tap((order) => {\n        if (!this.form || this.form.get('orderCode').value !== order.code) {\n          this.buildForm(order);\n        }\n      }),\n      map(() => this.form)\n    );\n  }\n\n  private buildForm(order: Order): void {\n    this.form = new FormGroup({});\n    this.form.addControl('orderCode', new FormControl(order.code));\n\n    const entryGroup = new FormGroup(\n      {},\n      { validators: [ValidateQuantityToCancel] }\n    );\n    this.form.addControl('entries', entryGroup);\n\n    (order.entries || []).forEach((entry) => {\n      const key = entry.entryNumber.toString();\n      entryGroup.addControl(\n        key,\n        new FormControl(0, {\n          validators: [\n            Validators.min(0),\n            Validators.max(this.getMaxAmendQuantity(entry)),\n          ],\n        })\n      );\n    });\n  }\n\n  protected getFormControl(form: FormGroup, entry: OrderEntry): FormControl {\n    return <FormControl>form.get('entries').get(entry.entryNumber.toString());\n  }\n\n  /**\n   * As discussed, this calculation is moved to SPA side.\n   * The calculation and validation should be in backend facade layer.\n   */\n  getAmendedPrice(entry: OrderEntry): Price {\n    const amendedQuantity = this.getFormControl(this.form, entry).value;\n    const amendedPrice = Object.assign({}, entry.basePrice);\n    amendedPrice.value =\n      Math.round(entry.basePrice.value * amendedQuantity * 100) / 100;\n\n    amendedPrice.formattedValue = formatCurrency(\n      amendedPrice.value,\n      // TODO: user current language\n      'en',\n      getCurrencySymbol(amendedPrice.currencyIso, 'narrow'),\n      amendedPrice.currencyIso\n    );\n\n    return amendedPrice;\n  }\n\n  getMaxAmendQuantity(entry: OrderEntry) {\n    return (\n      (this.isCancellation()\n        ? entry.cancellableQuantity\n        : entry.returnableQuantity) || entry.quantity\n    );\n  }\n\n  isCancellation() {\n    return this.amendType === AmendOrderType.CANCEL;\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { OrderEntry, Price } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { OrderAmendService } from '../amend-order.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-amend-order-items',\n  templateUrl: './amend-order-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrReturnItemsComponent {\n  @Input() entries: OrderEntry[];\n  @Input() isConfirmation = false;\n\n  form$: Observable<FormGroup> = this.orderAmendService.getForm();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  getControl(form: FormGroup, entry: OrderEntry): FormControl {\n    const control = <FormControl>(\n      form.get('entries').get(entry.entryNumber.toString())\n    );\n    return control;\n  }\n\n  setAll(form: FormGroup): void {\n    this.entries.forEach((entry) =>\n      this.getControl(form, entry).setValue(this.getMaxAmendQuantity(entry))\n    );\n  }\n\n  getItemPrice(entry: OrderEntry): Price {\n    return this.orderAmendService.getAmendedPrice(entry);\n  }\n\n  getMaxAmendQuantity(entry: OrderEntry) {\n    return this.orderAmendService.getMaxAmendQuantity(entry);\n  }\n\n  isCancellation() {\n    return this.orderAmendService.isCancellation();\n  }\n}\n","<div *ngIf=\"form$ | async as form\">\n  <button\n    *ngIf=\"!isConfirmation\"\n    class=\"btn btn-link cx-action-link\"\n    (click)=\"setAll(form)\"\n  >\n    {{ 'orderDetails.cancellationAndReturn.setAll' | cxTranslate }}\n  </button>\n\n  <div class=\"d-none d-md-block cx-item-list-header\">\n    <div class=\"row\">\n      <div class=\"text-left col-6\">\n        {{ 'orderDetails.cancellationAndReturn.item' | cxTranslate }}\n      </div>\n      <div class=\"text-center col-2\">\n        {{ 'orderDetails.cancellationAndReturn.itemPrice' | cxTranslate }}\n      </div>\n      <div *ngIf=\"!isConfirmation\" class=\"text-center col-2\">\n        {{ 'orderDetails.cancellationAndReturn.quantity' | cxTranslate }}\n      </div>\n      <div class=\"cx-item-list-qty col-2 text-right\">\n        {{\n          (isCancellation()\n            ? 'orderDetails.cancellationAndReturn.cancelQty'\n            : 'orderDetails.cancellationAndReturn.returnQty'\n          ) | cxTranslate\n        }}\n      </div>\n      <div *ngIf=\"isConfirmation\" class=\"cx-item-list-total col-2\">\n        {{ 'orderDetails.cancellationAndReturn.totalPrice' | cxTranslate }}\n      </div>\n    </div>\n  </div>\n\n  <div class=\"cx-item-list-row\" *ngFor=\"let item of entries; let i = index\">\n    <div class=\"row cx-item-list-items\">\n      <!-- Item Image -->\n      <cx-media\n        class=\"col-2\"\n        [container]=\"item.product.images?.PRIMARY\"\n        format=\"thumbnail\"\n      ></cx-media>\n\n      <!-- Item Information -->\n      <div class=\"cx-info col-10\">\n        <div class=\"cx-info-container row\">\n          <!-- Item Description -->\n          <div class=\"col-md-4 col-xl-5 cx-list-item-desc\">\n            <div *ngIf=\"item.product.name\" class=\"cx-name\">\n              {{ item.product.name }}\n            </div>\n            <div *ngIf=\"item.product.code\" class=\"cx-code\">\n              {{ 'cartItems.id' | cxTranslate }} {{ item.product.code }}\n            </div>\n            <!-- Variants -->\n            <ng-container *ngIf=\"item.product.baseOptions?.length\">\n              <div\n                *ngFor=\"\n                  let variant of item.product.baseOptions[0]?.selected\n                    ?.variantOptionQualifiers\n                \"\n                class=\"cx-property\"\n              >\n                <div class=\"cx-label\" *ngIf=\"variant.name\">\n                  {{ variant.name }}:\n                </div>\n                <div class=\"cx-value\" *ngIf=\"variant.value\">\n                  {{ variant.value }}\n                </div>\n              </div>\n            </ng-container>\n          </div>\n          <!-- Price -->\n          <div\n            *ngIf=\"item.basePrice\"\n            class=\"cx-price col-md-3 col-lg-3 col-xl-2\"\n          >\n            <div class=\"cx-label d-block d-md-none d-lg-none d-xl-none\">\n              {{ 'orderDetails.cancellationAndReturn.itemPrice' | cxTranslate }}\n            </div>\n            <div *ngIf=\"item.basePrice\" class=\"cx-value\">\n              {{ item.basePrice?.formattedValue }}\n            </div>\n          </div>\n          <!-- item Quantity -->\n          <div *ngIf=\"!isConfirmation\" class=\"cx-request-qty col-md-3\">\n            <div\n              class=\"cx-label d-block d-md-none d-lg-none d-xl-none\"\n              placement=\"left\"\n              title=\"{{ 'cartItems.quantityTitle' | cxTranslate }}\"\n            >\n              {{ 'orderDetails.cancellationAndReturn.quantity' | cxTranslate }}\n            </div>\n            <div class=\"cx-value\">\n              {{ getMaxAmendQuantity(item) }}\n            </div>\n          </div>\n          <!-- Amended Quantity -->\n          <div class=\"cx-quantity col-xs-12 col-md-2 col-sm-12\">\n            <div class=\"cx-label d-block d-md-none d-lg-none d-xl-none\">\n              {{\n                (isCancellation()\n                  ? 'orderDetails.cancellationAndReturn.cancelQty'\n                  : 'orderDetails.cancellationAndReturn.returnQty'\n                ) | cxTranslate\n              }}\n            </div>\n\n            <div\n              *ngIf=\"isConfirmation\"\n              class=\"w-100 text-center cx-order-quantity-value\"\n            >\n              {{ getControl(form, item).value }}\n            </div>\n            <cx-item-counter\n              *ngIf=\"!isConfirmation\"\n              [min]=\"0\"\n              [max]=\"getMaxAmendQuantity(item)\"\n              [control]=\"getControl(form, item)\"\n            >\n            </cx-item-counter>\n          </div>\n          <!-- Total Price -->\n          <div *ngIf=\"isConfirmation\" class=\"cx-total col-3\">\n            <div class=\"cx-label d-block d-md-none\">\n              {{\n                'orderDetails.cancellationAndReturn.totalPrice' | cxTranslate\n              }}\n            </div>\n            <div class=\"cx-value\">\n              {{ getItemPrice(item)?.formattedValue }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FeaturesConfigModule, I18nModule } from '@spartacus/core';\nimport {\n  FormErrorsModule,\n  ItemCounterModule,\n  MediaModule,\n} from '../../../../../shared/index';\nimport { CancelOrReturnItemsComponent } from './amend-order-items.component';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    I18nModule,\n    MediaModule,\n    ItemCounterModule,\n    FeaturesConfigModule,\n    FormErrorsModule,\n  ],\n  declarations: [CancelOrReturnItemsComponent],\n  exports: [CancelOrReturnItemsComponent],\n})\nexport class AmendOrderItemsModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-cancel-order-confirmation',\n  templateUrl: './cancel-order-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrderConfirmationComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<OrderEntry[]> =\n    this.orderAmendService.getAmendedEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  submit(form: FormGroup) {\n    if (form.valid) {\n      this.orderAmendService.save();\n    } else {\n      form.markAllAsTouched();\n    }\n  }\n}\n","<form\n  *ngIf=\"form$ | async as form\"\n  [formGroup]=\"form\"\n  (ngSubmit)=\"submit(form)\"\n>\n  <ng-container *ngTemplateOutlet=\"actions\"></ng-container>\n\n  <cx-amend-order-items\n    *ngIf=\"entries$ | async as entries\"\n    [entries]=\"entries\"\n    [isConfirmation]=\"true\"\n  >\n  </cx-amend-order-items>\n\n  <ng-container *ngTemplateOutlet=\"actions\"></ng-container>\n\n  <ng-template #actions>\n    <cx-amend-order-actions\n      *ngIf=\"orderCode\"\n      [orderCode]=\"orderCode\"\n      [amendOrderForm]=\"form\"\n      backRoute=\"orderCancel\"\n    ></cx-amend-order-actions>\n  </ng-template>\n</form>\n","import { Injectable } from '@angular/core';\nimport {\n  CancelOrReturnRequestEntryInput,\n  GlobalMessageService,\n  GlobalMessageType,\n  OrderEntry,\n  RoutingService,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../order-details/order-details.service';\nimport { AmendOrderType } from '../amend-order.model';\nimport { OrderAmendService } from '../amend-order.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderCancellationService extends OrderAmendService {\n  amendType = AmendOrderType.CANCEL;\n\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected userOrderService: UserOrderService,\n    protected routing: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {\n    super(orderDetailsService);\n  }\n  /**\n   * Return cancellable order entries.\n   */\n  getEntries(): Observable<OrderEntry[]> {\n    return this.getOrder().pipe(\n      filter((order) => !!order?.entries),\n      map((order) =>\n        order.entries.filter(\n          (entry) => entry.entryNumber !== -1 && entry.cancellableQuantity > 0\n        )\n      )\n    );\n  }\n\n  save(): void {\n    const orderCode = this.form.value.orderCode;\n    const entries = this.form.value.entries;\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\n      .filter((entryNumber) => <number>entries[entryNumber] > 0)\n      .map(\n        (entryNumber) =>\n          ({\n            orderEntryNumber: Number(entryNumber),\n            quantity: <number>entries[entryNumber],\n          } as CancelOrReturnRequestEntryInput)\n      );\n\n    this.form.reset();\n\n    this.userOrderService.cancelOrder(orderCode, {\n      cancellationRequestEntryInputs: inputs,\n    });\n\n    this.userOrderService\n      .getCancelOrderSuccess()\n      .pipe(first(Boolean))\n      .subscribe(() => this.afterSave(orderCode));\n  }\n\n  private afterSave(orderCode: string): void {\n    this.userOrderService.resetCancelOrderProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'orderDetails.cancellationAndReturn.cancelSuccess',\n        params: { orderCode },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routing.go({\n      cxRoute: 'orders',\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { SemanticPathService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderCancellationService } from './order-cancellation.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderCancellationGuard implements CanActivate {\n  constructor(\n    protected orderAmendService: OrderCancellationService,\n    protected semanticPathService: SemanticPathService,\n    protected router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.orderAmendService.getForm().pipe(\n      map((form) => {\n        if (!form.valid) {\n          // the order code is not available in the route\n          // as long as we're inside a guard, hence we redirect\n          // to the common orders page.\n          return this.router.parseUrl(this.semanticPathService.get('orders'));\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderCancellationGuard } from '../order-cancellation.guard';\nimport { OrderCancellationService } from '../order-cancellation.service';\nimport { CancelOrderConfirmationComponent } from './cancel-order-confirmation.component';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderCancelConfirmation',\n        },\n      },\n    ]),\n    ReactiveFormsModule,\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CancelOrderConfirmationComponent: {\n          component: CancelOrderConfirmationComponent,\n          guards: [AuthGuard, OrderCancellationGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderCancellationService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [CancelOrderConfirmationComponent],\n  exports: [CancelOrderConfirmationComponent],\n})\nexport class CancelOrderConfirmationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-cancel-order',\n  templateUrl: './cancel-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CancelOrderComponent {\n  orderCode: string;\n\n  form$: Observable<FormGroup> = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n}\n","<ng-container *ngIf=\"form$ | async as form\">\n  <ng-container *ngTemplateOutlet=\"actions\"></ng-container>\n\n  <cx-amend-order-items *ngIf=\"entries$ | async as entries\" [entries]=\"entries\">\n  </cx-amend-order-items>\n\n  <cx-form-errors\n    aria-live=\"assertive\"\n    aria-atomic=\"true\"\n    [control]=\"form.get('entries')\"\n  ></cx-form-errors>\n\n  <ng-container *ngTemplateOutlet=\"actions\"></ng-container>\n\n  <ng-template #actions>\n    <cx-amend-order-actions\n      *ngIf=\"orderCode\"\n      [orderCode]=\"orderCode\"\n      [amendOrderForm]=\"form\"\n      backRoute=\"orderDetails\"\n      forwardRoute=\"orderCancelConfirmation\"\n    ></cx-amend-order-actions>\n  </ng-template>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport {\n  CmsPageGuard,\n  PageLayoutComponent,\n} from '../../../../../../cms-structure/index';\nimport { FormErrorsModule } from '../../../../../../shared/index';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderCancellationService } from '../order-cancellation.service';\nimport { CancelOrderComponent } from './cancel-order.component';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderCancel',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CancelOrderComponent: {\n          component: CancelOrderComponent,\n          guards: [AuthGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderCancellationService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [CancelOrderComponent],\n  exports: [CancelOrderComponent],\n})\nexport class CancelOrderModule {}\n","import { NgModule } from '@angular/core';\nimport { CancelOrderConfirmationModule } from './cancel-order-confirmation/cancel-order-confirmation.module';\nimport { CancelOrderModule } from './cancel-order/cancel-order.module';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [CancelOrderModule, CancelOrderConfirmationModule],\n})\nexport class OrderCancellationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CancelOrReturnRequestEntryInput,\n  GlobalMessageService,\n  GlobalMessageType,\n  OrderEntry,\n  OrderReturnRequestService,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, first, map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../../order-details/order-details.service';\nimport { AmendOrderType } from '../amend-order.model';\nimport { OrderAmendService } from '../amend-order.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderReturnService extends OrderAmendService {\n  amendType = AmendOrderType.RETURN;\n\n  constructor(\n    protected orderDetailsService: OrderDetailsService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected routing: RoutingService,\n    protected globalMessageService: GlobalMessageService\n  ) {\n    super(orderDetailsService);\n  }\n\n  getEntries(): Observable<OrderEntry[]> {\n    return this.getOrder().pipe(\n      filter((order) => !!order.entries),\n      map((order) =>\n        order.entries.filter(\n          (entry) => entry.entryNumber !== -1 && entry.returnableQuantity > 0\n        )\n      )\n    );\n  }\n\n  save(): void {\n    const orderCode = this.form.value.orderCode;\n    const entries = this.form.value.entries;\n    const inputs: CancelOrReturnRequestEntryInput[] = Object.keys(entries)\n      .filter((entryNumber) => <number>entries[entryNumber] > 0)\n      .map(\n        (entryNumber) =>\n          ({\n            orderEntryNumber: Number(entryNumber),\n            quantity: <number>entries[entryNumber],\n          } as CancelOrReturnRequestEntryInput)\n      );\n\n    this.form.reset();\n\n    this.returnRequestService.createOrderReturnRequest({\n      orderCode,\n      returnRequestEntryInputs: inputs,\n    });\n\n    this.returnRequestService\n      .getReturnRequestSuccess()\n      .pipe(first(Boolean))\n      .subscribe(() => this.afterSave());\n  }\n\n  private afterSave(): void {\n    this.returnRequestService\n      .getOrderReturnRequest()\n      .pipe(first((r) => !!r))\n      .subscribe((returnRequest) => {\n        const rma = returnRequest.rma;\n        this.globalMessageService.add(\n          {\n            key: 'orderDetails.cancellationAndReturn.returnSuccess',\n            params: { rma },\n          },\n          GlobalMessageType.MSG_TYPE_CONFIRMATION\n        );\n        this.routing.go({\n          cxRoute: 'returnRequestDetails',\n          params: { rma },\n        });\n      });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport { SemanticPathService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderReturnService } from './order-return.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class OrderReturnGuard implements CanActivate {\n  constructor(\n    protected orderAmendService: OrderReturnService,\n    protected semanticPathService: SemanticPathService,\n    protected router: Router\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    return this.orderAmendService.getForm().pipe(\n      map((form) => {\n        if (!form.valid) {\n          // the order code is not available in the route\n          // as long as we're inside a guard, hence we redirect\n          // to the common orders page.\n          return this.router.parseUrl(this.semanticPathService.get('orders'));\n        } else {\n          return true;\n        }\n      })\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-return-order-confirmation',\n  templateUrl: './return-order-confirmation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnOrderConfirmationComponent {\n  orderCode: string;\n\n  form$ = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<OrderEntry[]> =\n    this.orderAmendService.getAmendedEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n\n  submit(form: FormGroup): void {\n    form.disable();\n    this.orderAmendService.save();\n  }\n}\n","<form\n  *ngIf=\"form$ | async as form\"\n  [formGroup]=\"form\"\n  (ngSubmit)=\"submit(form)\"\n>\n  <ng-container *ngTemplateOutlet=\"actions\"></ng-container>\n\n  <cx-amend-order-items\n    *ngIf=\"entries$ | async as entries\"\n    [entries]=\"entries\"\n    [isConfirmation]=\"true\"\n  >\n  </cx-amend-order-items>\n\n  <ng-container *ngTemplateOutlet=\"actions\"></ng-container>\n\n  <ng-template #actions>\n    <cx-amend-order-actions\n      *ngIf=\"orderCode\"\n      [orderCode]=\"orderCode\"\n      [amendOrderForm]=\"form\"\n      backRoute=\"orderReturn\"\n    ></cx-amend-order-actions>\n  </ng-template>\n</form>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderReturnGuard } from '../order-return.guard';\nimport { OrderReturnService } from '../order-return.service';\nimport { ReturnOrderConfirmationComponent } from './return-order-confirmation.component';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderReturnConfirmation',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    I18nModule,\n    ReactiveFormsModule,\n    AmendOrderActionsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnOrderConfirmationComponent: {\n          component: ReturnOrderConfirmationComponent,\n          guards: [AuthGuard, OrderReturnGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderReturnService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReturnOrderConfirmationComponent],\n  exports: [ReturnOrderConfirmationComponent],\n})\nexport class ReturnOrderConfirmationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { OrderEntry } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { OrderAmendService } from '../../amend-order.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-return-order',\n  templateUrl: './return-order.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnOrderComponent {\n  orderCode: string;\n\n  form$: Observable<FormGroup> = this.orderAmendService\n    .getForm()\n    .pipe(tap((form) => (this.orderCode = form.value.orderCode)));\n\n  entries$: Observable<OrderEntry[]> = this.orderAmendService.getEntries();\n\n  constructor(protected orderAmendService: OrderAmendService) {}\n}\n","<ng-container *ngIf=\"form$ | async as form\">\n  <ng-container *ngTemplateOutlet=\"actions\"></ng-container>\n\n  <cx-amend-order-items *ngIf=\"entries$ | async as entries\" [entries]=\"entries\">\n  </cx-amend-order-items>\n\n  <cx-form-errors\n    aria-live=\"assertive\"\n    aria-atomic=\"true\"\n    [control]=\"form.get('entries')\"\n  ></cx-form-errors>\n\n  <ng-container *ngTemplateOutlet=\"actions\"></ng-container>\n\n  <ng-template #actions>\n    <cx-amend-order-actions\n      *ngIf=\"orderCode\"\n      [orderCode]=\"orderCode\"\n      [amendOrderForm]=\"form\"\n      backRoute=\"orderDetails\"\n      forwardRoute=\"orderReturnConfirmation\"\n    ></cx-amend-order-actions>\n  </ng-template>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { AuthGuard, CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../../../cms-structure/page/page-layout/page-layout.component';\nimport { FormErrorsModule } from '../../../../../../shared/index';\nimport { AmendOrderActionsModule } from '../../amend-order-actions/amend-order-actions.module';\nimport { AmendOrderItemsModule } from '../../amend-order-items/amend-order-items.module';\nimport { OrderAmendService } from '../../amend-order.service';\nimport { OrderReturnService } from '../order-return.service';\nimport { ReturnOrderComponent } from './return-order.component';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: {\n          cxRoute: 'orderReturn',\n        },\n      },\n    ]),\n    AmendOrderItemsModule,\n    AmendOrderActionsModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnOrderComponent: {\n          component: ReturnOrderComponent,\n          guards: [AuthGuard],\n          providers: [\n            {\n              provide: OrderAmendService,\n              useExisting: OrderReturnService,\n            },\n          ],\n        },\n      },\n    }),\n  ],\n  declarations: [ReturnOrderComponent],\n  exports: [ReturnOrderComponent],\n})\nexport class ReturnOrderModule {}\n","import { NgModule } from '@angular/core';\nimport { ReturnOrderConfirmationModule } from './return-order-confirmation/return-order-confirmation.module';\nimport { ReturnOrderModule } from './return-order/return-order.module';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [ReturnOrderModule, ReturnOrderConfirmationModule],\n})\nexport class OrderReturnModule {}\n","import { Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-order-details-actions',\n  templateUrl: './order-detail-actions.component.html',\n})\nexport class OrderDetailActionsComponent {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<any> = this.orderDetailsService.getOrderDetails();\n}\n","<ng-container *ngIf=\"order$ | async as order\">\n  <div class=\"cx-nav row\">\n    <div class=\"col-xs-12 col-md-4 col-lg-3\">\n      <button\n        [routerLink]=\"{ cxRoute: 'orders' } | cxUrl\"\n        class=\"btn btn-block btn-action\"\n      >\n        {{ 'common.back' | cxTranslate }}\n      </button>\n    </div>\n\n    <div class=\"col-xs-12 col-md-4 col-lg-3\">\n      <a\n        *ngIf=\"order.cancellable\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orderCancel',\n            params: order\n          } | cxUrl\n        \"\n        class=\"btn btn-block btn-action\"\n      >\n        {{ 'orderDetails.cancellationAndReturn.cancelAction' | cxTranslate }}\n      </a>\n\n      <a\n        *ngIf=\"order.returnable\"\n        [routerLink]=\"\n          {\n            cxRoute: 'orderReturn',\n            params: order\n          } | cxUrl\n        \"\n        class=\"btn btn-block btn-action\"\n      >\n        {{ 'orderDetails.cancellationAndReturn.returnAction' | cxTranslate }}\n      </a>\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnDestroy } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { ConsignmentTracking, UserOrderService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-tracking-events',\n  templateUrl: './tracking-events.component.html',\n})\nexport class TrackingEventsComponent implements OnDestroy {\n  tracking$: Observable<ConsignmentTracking>;\n  shipDate: Date;\n  consignmentCode: string;\n\n  constructor(\n    public activeModal: NgbActiveModal,\n    private userOrderService: UserOrderService\n  ) {}\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","<div class=\"cx-consignment-tracking-dialog\">\n  <!-- Modal Header -->\n  <ng-container *ngIf=\"tracking$ | async as consignmentTracking; else loading\">\n    <div class=\"header modal-header\">\n      <div class=\"title modal-title\">\n        {{ 'orderDetails.consignmentTracking.dialog.header' | cxTranslate }}\n      </div>\n      <button\n        type=\"button\"\n        class=\"close\"\n        [attr.aria-label]=\"'common.close' | cxTranslate\"\n        (click)=\"activeModal.dismiss('Cross click')\"\n      >\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <!-- Modal Body -->\n    <!-- shipment header -->\n    <ng-container\n      *ngIf=\"\n        consignmentTracking?.carrierDetails && consignmentTracking?.trackingID;\n        else noTracking\n      \"\n    >\n      <div class=\"shipment-heading\">\n        <div class=\"row\">\n          <div class=\"col-sm-12 col-md-6\">\n            <div class=\"shipment-title\">\n              {{\n                'orderDetails.consignmentTracking.dialog.shipped' | cxTranslate\n              }}\n            </div>\n            <div class=\"shipment-content\">\n              {{ shipDate | cxDate: 'medium' }}\n            </div>\n          </div>\n          <div class=\"col-sm-12 col-md-6\">\n            <div class=\"shipment-title\">\n              {{\n                'orderDetails.consignmentTracking.dialog.estimate' | cxTranslate\n              }}\n            </div>\n            <div class=\"shipment-content\">\n              {{ consignmentTracking?.targetArrivalDate | cxDate: 'medium' }}\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-sm-12 col-md-6\">\n            <div class=\"shipment-title\">\n              {{\n                'orderDetails.consignmentTracking.dialog.carrier' | cxTranslate\n              }}\n            </div>\n            <div class=\"shipment-content\">\n              {{ consignmentTracking?.carrierDetails?.name }}\n            </div>\n          </div>\n          <div class=\"col-sm-12 col-md-6\">\n            <div class=\"shipment-title\">\n              {{\n                'orderDetails.consignmentTracking.dialog.trackingId'\n                  | cxTranslate\n              }}\n            </div>\n            <div class=\"shipment-content\">\n              <ng-container *ngIf=\"consignmentTracking?.trackingUrl\">\n                <a target=\"_blank\" [href]=\"consignmentTracking.trackingUrl\">{{\n                  consignmentTracking?.trackingID\n                }}</a>\n              </ng-container>\n              <ng-container *ngIf=\"!consignmentTracking?.trackingUrl\">\n                <label>\n                  {{ consignmentTracking?.trackingID }}\n                </label>\n              </ng-container>\n            </div>\n          </div>\n        </div>\n      </div>\n    </ng-container>\n\n    <!-- tracking events -->\n    <div class=\"events modal-body\">\n      <ng-container\n        *ngFor=\"let consignmentEvent of consignmentTracking.trackingEvents\"\n      >\n        <div class=\"event-body\">\n          <div class=\"event-content\">\n            {{ consignmentEvent.eventDate | cxDate: 'medium' }}\n          </div>\n          <div class=\"event-title\">\n            {{ consignmentEvent.referenceCode }}\n          </div>\n          <div class=\"event-content\">{{ consignmentEvent.detail }}</div>\n          <div class=\"event-city\">\n            location: {{ consignmentEvent.location }}\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </ng-container>\n\n  <ng-template #noTracking>\n    <div class=\"no-tracking-heading\">\n      <div class=\"shipment-content\">\n        {{ 'orderDetails.consignmentTracking.dialog.noTracking' | cxTranslate }}\n      </div>\n    </div>\n  </ng-template>\n\n  <ng-template #loading>\n    <div class=\"tracking-loading\">\n      <div class=\"header modal-header\">\n        <div class=\"title modal-title\">\n          {{\n            'orderDetails.consignmentTracking.dialog.loadingHeader'\n              | cxTranslate\n          }}\n        </div>\n        <button\n          type=\"button\"\n          class=\"close btn-dismiss\"\n          [attr.aria-label]=\"'common.close' | cxTranslate\"\n          (click)=\"activeModal.dismiss('Cross click')\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <!-- Modal Body -->\n      <div class=\"body modal-body\">\n        <div class=\"row\">\n          <div class=\"col-sm-12\">\n            <cx-spinner></cx-spinner>\n          </div>\n        </div>\n      </div>\n    </div>\n  </ng-template>\n</div>\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport {\n  Consignment,\n  ConsignmentTracking,\n  UserOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  ModalRef,\n  ModalService,\n} from '../../../../../../shared/components/modal/index';\nimport { TrackingEventsComponent } from './tracking-events/tracking-events.component';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-consignment-tracking',\n  templateUrl: './consignment-tracking.component.html',\n})\nexport class ConsignmentTrackingComponent implements OnInit, OnDestroy {\n  consignmentStatus: string[] = [\n    'SHIPPED',\n    'IN_TRANSIT',\n    'DELIVERY_COMPLETED',\n    'DELIVERY_REJECTED',\n    'DELIVERING',\n  ];\n  modalRef: ModalRef;\n\n  @Input()\n  consignment: Consignment;\n  @Input()\n  orderCode: string;\n  consignmentTracking$: Observable<ConsignmentTracking>;\n\n  constructor(\n    private userOrderService: UserOrderService,\n    private modalService: ModalService\n  ) {}\n\n  ngOnInit() {\n    this.consignmentTracking$ = this.userOrderService.getConsignmentTracking();\n  }\n\n  openTrackingDialog(consignment: Consignment) {\n    this.userOrderService.loadConsignmentTracking(\n      this.orderCode,\n      consignment.code\n    );\n    let modalInstance: any;\n    this.modalRef = this.modalService.open(TrackingEventsComponent, {\n      centered: true,\n      size: 'lg',\n    });\n\n    modalInstance = this.modalRef.componentInstance;\n    modalInstance.tracking$ = this.consignmentTracking$;\n    modalInstance.shipDate = consignment.statusDate;\n    modalInstance.consignmentCode = consignment.code;\n  }\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearConsignmentTracking();\n  }\n}\n","<ng-container *ngIf=\"consignment && consignment.status\">\n  <div *ngIf=\"consignmentStatus.includes(consignment.status)\">\n    <button\n      (click)=\"openTrackingDialog(consignment)\"\n      class=\"btn btn-action btn-track\"\n      type=\"button\"\n    >\n      {{ 'orderDetails.consignmentTracking.action' | cxTranslate }}\n    </button>\n  </div>\n</ng-container>\n","import { Component, Input } from '@angular/core';\nimport {\n  Consignment,\n  Order,\n  OrderEntry,\n  PromotionLocation,\n} from '@spartacus/core';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-order-consigned-entries',\n  templateUrl: './order-consigned-entries.component.html',\n})\nexport class OrderConsignedEntriesComponent {\n  @Input() consignments: Consignment[];\n  @Input() order: Order;\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\n\n  getConsignmentProducts(consignment: Consignment): OrderEntry[] {\n    const products: OrderEntry[] = [];\n    consignment.entries.forEach((element) => {\n      products.push(element.orderEntry);\n    });\n\n    return products;\n  }\n}\n","<div *ngFor=\"let consignment of consignments\" class=\"cx-list row\">\n  <div class=\"cx-list-header col-12\">\n    <div class=\"cx-list-status\">\n      <span *ngIf=\"consignment\">\n        {{ 'orderDetails.deliveryStatus_' + consignment?.status | cxTranslate }}\n      </span>\n    </div>\n    <div *ngIf=\"consignment?.statusDate\" class=\"cx-list-date\">\n      <div>{{ consignment?.statusDate | cxDate }}</div>\n    </div>\n\n    <cx-consignment-tracking\n      [orderCode]=\"order.code\"\n      [consignment]=\"consignment\"\n      *cxFeature=\"'consignmentTracking'\"\n    >\n    </cx-consignment-tracking>\n  </div>\n  <div class=\"cx-list-item col-12\">\n    <cx-cart-item-list\n      [items]=\"consignment.entries\"\n      [readonly]=\"true\"\n      [promotionLocation]=\"promotionLocation\"\n    ></cx-cart-item-list>\n  </div>\n</div>\n","export const completedValues = ['DELIVERY_COMPLETED', 'PICKUP_COMPLETE'];\nexport const cancelledValues = ['CANCELLED'];\n","import { Component, OnInit } from '@angular/core';\nimport { Consignment, PromotionLocation } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { OrderDetailsService } from '../order-details.service';\nimport {\n  cancelledValues,\n  completedValues,\n} from './order-consigned-entries/order-consigned-entries.model';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-order-details-items',\n  templateUrl: './order-detail-items.component.html',\n})\nexport class OrderDetailItemsComponent implements OnInit {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  promotionLocation: PromotionLocation = PromotionLocation.Order;\n  order$: Observable<any> = this.orderDetailsService.getOrderDetails();\n  others$: Observable<Consignment[]>;\n  completed$: Observable<Consignment[]>;\n  cancel$: Observable<Consignment[]>;\n\n  ngOnInit() {\n    this.others$ = this.getOtherStatus(...completedValues, ...cancelledValues);\n    this.completed$ = this.getExactStatus(completedValues);\n    this.cancel$ = this.getExactStatus(cancelledValues);\n  }\n\n  private getExactStatus(\n    consignmentStatus: string[]\n  ): Observable<Consignment[]> {\n    return this.order$.pipe(\n      map((order) => {\n        if (Boolean(order.consignments)) {\n          return order.consignments.filter((consignment) =>\n            consignmentStatus.includes(consignment.status)\n          );\n        }\n      })\n    );\n  }\n\n  private getOtherStatus(\n    ...consignmentStatus: string[]\n  ): Observable<Consignment[]> {\n    return this.order$.pipe(\n      map((order) => {\n        if (Boolean(order.consignments)) {\n          return order.consignments.filter(\n            (consignment) => !consignmentStatus.includes(consignment.status)\n          );\n        }\n      })\n    );\n  }\n}\n","<ng-container *ngIf=\"order$ | async as order\">\n  <ng-container\n    *ngIf=\"\n      order.consignments?.length ||\n      order.unconsignedEntries?.length ||\n      order.replenishmentOrderCode\n    \"\n  >\n    <cx-promotions\n      [promotions]=\"order.appliedOrderPromotions || []\"\n    ></cx-promotions>\n  </ng-container>\n\n  <!-- consigned entries -->\n  <ng-container *ngIf=\"order.consignments?.length\">\n    <cx-order-consigned-entries\n      *ngIf=\"others$ | async as others\"\n      [order]=\"order\"\n      [consignments]=\"others\"\n    ></cx-order-consigned-entries>\n\n    <cx-order-consigned-entries\n      *ngIf=\"completed$ | async as completed\"\n      [order]=\"order\"\n      [consignments]=\"completed\"\n    ></cx-order-consigned-entries>\n\n    <cx-order-consigned-entries\n      *ngIf=\"cancel$ | async as cancel\"\n      [order]=\"order\"\n      [consignments]=\"cancel\"\n    ></cx-order-consigned-entries>\n  </ng-container>\n\n  <!-- unconsigned entries OR any entries -->\n  <ng-container\n    *ngIf=\"\n      order?.unconsignedEntries?.length ||\n      (order?.entries && order?.replenishmentOrderCode)\n    \"\n  >\n    <div class=\"cx-list row\">\n      <div *ngIf=\"order?.statusDisplay\" class=\"cx-list-header col-12\">\n        <div class=\"cx-list-status\">\n          {{\n            'orderDetails.statusDisplay_' + order?.statusDisplay | cxTranslate\n          }}\n        </div>\n      </div>\n      <div class=\"cx-list-item col-12\">\n        <cx-cart-item-list\n          [items]=\"\n            order?.unconsignedEntries ? order.unconsignedEntries : order.entries\n          \"\n          [readonly]=\"true\"\n          [promotionLocation]=\"promotionLocation\"\n        ></cx-cart-item-list>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-order-details-shipping',\n  templateUrl: './order-detail-shipping.component.html',\n})\nexport class OrderDetailShippingComponent implements OnInit {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<any>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","<ng-container *ngIf=\"order$ | async as order\">\n  <cx-order-overview [order]=\"order\"></cx-order-overview>\n</ng-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { OrderDetailsService } from '../order-details.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-order-details-totals',\n  templateUrl: './order-detail-totals.component.html',\n})\nexport class OrderDetailTotalsComponent implements OnInit {\n  constructor(protected orderDetailsService: OrderDetailsService) {}\n\n  order$: Observable<any>;\n\n  ngOnInit() {\n    this.order$ = this.orderDetailsService.getOrderDetails();\n  }\n}\n","<ng-container *ngIf=\"order$ | async as order\">\n  <div class=\"row justify-content-end\">\n    <div class=\"cx-summary col-sm-12 col-md-6 col-lg-5 col-xl-4\">\n      <cx-order-summary [cart]=\"order\"></cx-order-summary>\n    </div>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  FeaturesConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ConsignmentTrackingComponent } from '../../../../cms-components/myaccount/order/order-details/order-detail-items/consignment-tracking/consignment-tracking.component';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport {\n  CardModule,\n  OrderOverviewModule,\n  SpinnerModule,\n} from '../../../../shared/index';\nimport { CartSharedModule } from '../../../cart/cart-shared/cart-shared.module';\nimport { PromotionsModule } from '../../../misc/promotions/promotions.module';\nimport { OrderDetailActionsComponent } from './order-detail-actions/order-detail-actions.component';\nimport { TrackingEventsComponent } from './order-detail-items/consignment-tracking/tracking-events/tracking-events.component';\nimport { OrderConsignedEntriesComponent } from './order-detail-items/order-consigned-entries/order-consigned-entries.component';\nimport { OrderDetailItemsComponent } from './order-detail-items/order-detail-items.component';\nimport { OrderDetailShippingComponent } from './order-detail-shipping/order-detail-shipping.component';\nimport { OrderDetailTotalsComponent } from './order-detail-totals/order-detail-totals.component';\nimport { OrderDetailsService } from './order-details.service';\n\nconst moduleComponents = [\n  OrderDetailActionsComponent,\n  OrderDetailItemsComponent,\n  OrderDetailTotalsComponent,\n  OrderDetailShippingComponent,\n  TrackingEventsComponent,\n  ConsignmentTrackingComponent,\n  OrderConsignedEntriesComponent,\n];\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CardModule,\n    CommonModule,\n    I18nModule,\n    FeaturesConfigModule,\n    PromotionsModule,\n    OrderOverviewModule,\n    UrlModule,\n    SpinnerModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'order', cxRoute: 'orderGuest' },\n      },\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'orderDetails' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig | FeaturesConfig>{\n      cmsComponents: {\n        AccountOrderDetailsActionsComponent: {\n          component: OrderDetailActionsComponent,\n        },\n        AccountOrderDetailsItemsComponent: {\n          component: OrderDetailItemsComponent,\n        },\n        AccountOrderDetailsTotalsComponent: {\n          component: OrderDetailTotalsComponent,\n        },\n        AccountOrderDetailsShippingComponent: {\n          component: OrderDetailShippingComponent,\n        },\n      },\n      features: {\n        consignmentTracking: '1.2',\n      },\n    }),\n    OrderDetailsService,\n  ],\n  declarations: [...moduleComponents],\n  exports: [...moduleComponents],\n})\nexport class OrderDetailsModule {}\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport {\n  isNotUndefined,\n  Order,\n  OrderHistoryList,\n  RoutingService,\n  TranslationService,\n  UserOrderService,\n  UserReplenishmentOrderService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, take, tap } from 'rxjs/operators';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-order-history',\n  templateUrl: './order-history.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderHistoryComponent implements OnDestroy {\n  constructor(\n    protected routing: RoutingService,\n    protected userOrderService: UserOrderService,\n    protected translation: TranslationService,\n    protected userReplenishmentOrderService: UserReplenishmentOrderService\n  ) {}\n\n  private PAGE_SIZE = 5;\n  sortType: string;\n\n  orders$: Observable<OrderHistoryList> = this.userOrderService\n    .getOrderHistoryList(this.PAGE_SIZE)\n    .pipe(\n      tap((orders: OrderHistoryList) => {\n        if (orders.pagination) {\n          this.sortType = orders.pagination.sort;\n        }\n      })\n    );\n\n  hasReplenishmentOrder$: Observable<boolean> =\n    this.userReplenishmentOrderService\n      .getReplenishmentOrderDetails()\n      .pipe(map((order) => order && Object.keys(order).length !== 0));\n\n  isLoaded$: Observable<boolean> =\n    this.userOrderService.getOrderHistoryListLoaded();\n\n  /**\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\n   */\n  tabTitleParam$: Observable<number> = this.orders$.pipe(\n    map((order) => order.pagination?.totalResults),\n    filter(isNotUndefined),\n    take(1)\n  );\n\n  ngOnDestroy(): void {\n    this.userOrderService.clearOrderList();\n  }\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchOrders(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchOrders(event);\n  }\n\n  goToOrderDetail(order: Order): void {\n    this.routing.go({\n      cxRoute: 'orderDetails',\n      params: order,\n    });\n  }\n\n  getSortLabels(): Observable<{ byDate: string; byOrderNumber: string }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.orderNumber'),\n    ]).pipe(\n      map(([textByDate, textByOrderNumber]) => {\n        return {\n          byDate: textByDate,\n          byOrderNumber: textByOrderNumber,\n        };\n      })\n    );\n  }\n\n  private fetchOrders(event: { sortCode: string; currentPage: number }): void {\n    this.userOrderService.loadOrderList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n}\n","<ng-container\n  *ngIf=\"{\n    orderHistory: orders$ | async,\n    replenishmentOrder: hasReplenishmentOrder$ | async\n  } as type\"\n>\n  <ng-container *ngIf=\"type.orderHistory\">\n    <div [ngClass]=\"type.replenishmentOrder ? '' : 'container'\">\n      <!-- HEADER -->\n      <div\n        [ngClass]=\"\n          type.replenishmentOrder\n            ? 'cx-replenishment-details-order-history-header'\n            : 'cx-order-history-header'\n        \"\n      >\n        <h4 *ngIf=\"type.replenishmentOrder\">\n          {{ 'orderHistory.replenishmentHistory' | cxTranslate }}\n        </h4>\n        <h3 *ngIf=\"!type.replenishmentOrder\">\n          {{ 'orderHistory.orderHistory' | cxTranslate }}\n        </h3>\n      </div>\n\n      <!-- BODY -->\n      <div class=\"cx-order-history-body\">\n        <ng-container\n          *ngIf=\"type.orderHistory.pagination.totalResults > 0; else noOrder\"\n        >\n          <!-- Select Form and Pagination Top -->\n          <div class=\"cx-order-history-sort top row\">\n            <label\n              class=\"\n                cx-order-history-form-group\n                form-group\n                col-sm-12 col-md-4 col-lg-4\n              \"\n              ><span>\n                {{ 'orderHistory.sortBy' | cxTranslate }}\n              </span>\n              <cx-sorting\n                [sortOptions]=\"type.orderHistory.sorts\"\n                [sortLabels]=\"getSortLabels() | async\"\n                (sortListEvent)=\"changeSortCode($event)\"\n                [selectedOption]=\"type.orderHistory.pagination.sort\"\n                placeholder=\"{{ 'orderHistory.sortBy' | cxTranslate }}\"\n              ></cx-sorting>\n            </label>\n            <div\n              *ngIf=\"type.orderHistory.pagination.totalPages > 1\"\n              class=\"cx-order-history-pagination\"\n            >\n              <cx-pagination\n                [pagination]=\"type.orderHistory.pagination\"\n                (viewPageEvent)=\"pageChange($event)\"\n              ></cx-pagination>\n            </div>\n          </div>\n          <!-- TABLE -->\n          <table class=\"table cx-order-history-table\">\n            <thead class=\"cx-order-history-thead-mobile\">\n              <th scope=\"col\">\n                {{ 'orderHistory.orderId' | cxTranslate }}\n              </th>\n              <th scope=\"col\">{{ 'orderHistory.date' | cxTranslate }}</th>\n              <th scope=\"col\">\n                {{ 'orderHistory.status' | cxTranslate }}\n              </th>\n              <th scope=\"col\">{{ 'orderHistory.total' | cxTranslate }}</th>\n            </thead>\n            <tbody>\n              <tr\n                *ngFor=\"let order of type.orderHistory.orders\"\n                (click)=\"goToOrderDetail(order)\"\n              >\n                <td class=\"cx-order-history-code\">\n                  <div class=\"d-md-none cx-order-history-label\">\n                    {{ 'orderHistory.orderId' | cxTranslate }}\n                  </div>\n                  <a\n                    [routerLink]=\"\n                      {\n                        cxRoute: 'orderDetails',\n                        params: order\n                      } | cxUrl\n                    \"\n                    class=\"cx-order-history-value\"\n                  >\n                    {{ order?.code }}</a\n                  >\n                </td>\n                <td class=\"cx-order-history-placed\">\n                  <div class=\"d-md-none cx-order-history-label\">\n                    {{ 'orderHistory.date' | cxTranslate }}\n                  </div>\n                  <a\n                    [routerLink]=\"\n                      {\n                        cxRoute: 'orderDetails',\n                        params: order\n                      } | cxUrl\n                    \"\n                    class=\"cx-order-history-value\"\n                    >{{ order?.placed | cxDate: 'longDate' }}</a\n                  >\n                </td>\n                <td class=\"cx-order-history-status\">\n                  <div class=\"d-md-none cx-order-history-label\">\n                    {{ 'orderHistory.status' | cxTranslate }}\n                  </div>\n                  <a\n                    [routerLink]=\"\n                      {\n                        cxRoute: 'orderDetails',\n                        params: order\n                      } | cxUrl\n                    \"\n                    class=\"cx-order-history-value\"\n                  >\n                    {{\n                      'orderDetails.statusDisplay_' + order?.statusDisplay\n                        | cxTranslate\n                    }}</a\n                  >\n                </td>\n                <td class=\"cx-order-history-total\">\n                  <div class=\"d-md-none cx-order-history-label\">\n                    {{ 'orderHistory.total' | cxTranslate }}\n                  </div>\n                  <a\n                    [routerLink]=\"\n                      {\n                        cxRoute: 'orderDetails',\n                        params: order\n                      } | cxUrl\n                    \"\n                    class=\"cx-order-history-value\"\n                  >\n                    {{ order?.total.formattedValue }}</a\n                  >\n                </td>\n              </tr>\n            </tbody>\n          </table>\n          <!-- Select Form and Pagination Bottom -->\n          <div class=\"cx-order-history-sort bottom row\">\n            <div\n              *ngIf=\"type.orderHistory.pagination.totalPages > 1\"\n              class=\"cx-order-history-pagination\"\n            >\n              <cx-pagination\n                [pagination]=\"type.orderHistory.pagination\"\n                (viewPageEvent)=\"pageChange($event)\"\n              ></cx-pagination>\n            </div>\n          </div>\n        </ng-container>\n\n        <!-- NO ORDER CONTAINER -->\n        <ng-template #noOrder>\n          <div\n            *ngIf=\"isLoaded$ | async\"\n            [ngClass]=\"\n              type.replenishmentOrder\n                ? 'cx-replenishment-details-order-history-no-order row'\n                : 'cx-order-history-no-order row'\n            \"\n          >\n            <div\n              [ngClass]=\"\n                type.replenishmentOrder ? '' : 'col-sm-12 col-md-6 col-lg-4'\n              \"\n            >\n              <ng-container *ngIf=\"type.replenishmentOrder; else otherOrder\">\n                <div>{{ 'orderHistory.notFound' | cxTranslate }}</div>\n              </ng-container>\n\n              <ng-template #otherOrder>\n                <div>{{ 'orderHistory.noOrders' | cxTranslate }}</div>\n                <a\n                  [routerLink]=\"{ cxRoute: 'home' } | cxUrl\"\n                  routerLinkActive=\"active\"\n                  class=\"btn btn-primary btn-block\"\n                  >{{ 'orderHistory.startShopping' | cxTranslate }}</a\n                >\n              </ng-template>\n            </div>\n          </div>\n        </ng-template>\n      </div>\n    </div>\n  </ng-container>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { OrderHistoryComponent } from './order-history.component';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'orders' },\n      },\n    ]),\n    RouterModule,\n    FormsModule,\n    NgSelectModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  declarations: [OrderHistoryComponent],\n  exports: [OrderHistoryComponent],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountOrderHistoryComponent: {\n          component: OrderHistoryComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n})\nexport class OrderHistoryModule {}\n","import { LayoutConfig } from '../../../../layout/config/layout-config';\nimport { DIALOG_TYPE } from '../../../../layout/launch-dialog/index';\nimport { ReplenishmentOrderCancellationDialogComponent } from '../../../../shared/components/replenishment-order-cancellation-dialog/replenishment-order-cancellation-dialog.component';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\nexport const defaultReplenishmentOrderCancellationLayoutConfig: LayoutConfig = {\n  launch: {\n    REPLENISHMENT_ORDER: {\n      inline: true,\n      component: ReplenishmentOrderCancellationDialogComponent,\n      dialogType: DIALOG_TYPE.DIALOG,\n    },\n  },\n};\n","import {\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ReplenishmentOrder,\n  UserReplenishmentOrderService,\n} from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { LAUNCH_CALLER } from '../../../../../layout/launch-dialog/config/launch-config';\nimport { LaunchDialogService } from '../../../../../layout/launch-dialog/services/launch-dialog.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-replenishment-order-cancellation',\n  templateUrl: './replenishment-order-cancellation.component.html',\n})\nexport class ReplenishmentOrderCancellationComponent implements OnDestroy {\n  @ViewChild('element') element: ElementRef;\n\n  private subscription = new Subscription();\n\n  replenishmentOrder$: Observable<ReplenishmentOrder> =\n    this.userReplenishmentOrderService.getReplenishmentOrderDetails();\n\n  constructor(\n    protected userReplenishmentOrderService: UserReplenishmentOrderService,\n    protected vcr: ViewContainerRef,\n    protected launchDialogService: LaunchDialogService\n  ) {}\n\n  openDialog() {\n    const dialog = this.launchDialogService.openDialog(\n      LAUNCH_CALLER.REPLENISHMENT_ORDER,\n      this.element,\n      this.vcr\n    );\n\n    if (dialog) {\n      this.subscription.add(dialog.pipe(take(1)).subscribe());\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.userReplenishmentOrderService.clearReplenishmentOrderDetails();\n  }\n}\n","<div class=\"cx-cancel-replenishment-btns row\">\n  <div class=\"col-xs-12 col-md-5 col-lg-4\">\n    <a\n      class=\"btn btn-block btn-action\"\n      [routerLink]=\"\n        {\n          cxRoute: 'replenishmentOrders'\n        } | cxUrl\n      \"\n    >\n      {{ 'common.back' | cxTranslate }}\n    </a>\n  </div>\n  <div\n    *ngIf=\"(replenishmentOrder$ | async).active\"\n    class=\"col-xs-12 col-md-5 col-lg-4\"\n  >\n    <button #element class=\"btn btn-block btn-action\" (click)=\"openDialog()\">\n      {{ 'orderDetails.cancelReplenishment.title' | cxTranslate }}\n    </button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport {\n  ReplenishmentOrder,\n  RoutingService,\n  UserReplenishmentOrderService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  map,\n  shareReplay,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReplenishmentOrderDetailsService {\n  protected replenishmentOrderCode$ = this.routingService.getRouterState().pipe(\n    map((routingData) => routingData.state.params.replenishmentOrderCode),\n    distinctUntilChanged()\n  );\n\n  protected replenishmentOrderLoad$ = this.replenishmentOrderCode$.pipe(\n    tap((replenishmentOrderCode: string) => {\n      if (Boolean(replenishmentOrderCode)) {\n        this.userReplenishmentOrderService.loadReplenishmentOrderDetails(\n          replenishmentOrderCode\n        );\n      } else {\n        this.userReplenishmentOrderService.clearReplenishmentOrderDetails();\n      }\n    }),\n    shareReplay({ bufferSize: 1, refCount: true })\n  );\n\n  constructor(\n    protected routingService: RoutingService,\n    protected userReplenishmentOrderService: UserReplenishmentOrderService\n  ) {}\n\n  getOrderDetails(): Observable<ReplenishmentOrder> {\n    return this.replenishmentOrderLoad$.pipe(\n      switchMap((_) =>\n        this.userReplenishmentOrderService.getReplenishmentOrderDetails()\n      )\n    );\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideConfig,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport {\n  CardModule,\n  ListNavigationModule,\n  ReplenishmentOrderCancellationDialogModule,\n  SpinnerModule,\n} from '../../../../shared/index';\nimport { CartSharedModule } from '../../../cart/cart-shared/cart-shared.module';\nimport { PromotionsModule } from '../../../misc/promotions/promotions.module';\nimport { OrderDetailItemsComponent } from '../order-details/order-detail-items/order-detail-items.component';\nimport { OrderDetailShippingComponent } from '../order-details/order-detail-shipping/order-detail-shipping.component';\nimport { OrderDetailTotalsComponent } from '../order-details/order-detail-totals/order-detail-totals.component';\nimport { OrderDetailsService } from '../order-details/order-details.service';\nimport { OrderHistoryComponent } from '../order-history/order-history.component';\nimport { defaultReplenishmentOrderCancellationLayoutConfig } from './default-replenishment-order-cancellation-layout.config';\nimport { ReplenishmentOrderCancellationComponent } from './replenishment-order-cancellation/replenishment-order-cancellation.component';\nimport { ReplenishmentOrderDetailsService } from './replenishment-order-details.service';\n\nconst moduleComponents = [ReplenishmentOrderCancellationComponent];\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [\n    CartSharedModule,\n    CardModule,\n    CommonModule,\n    I18nModule,\n    PromotionsModule,\n    UrlModule,\n    ReplenishmentOrderCancellationDialogModule,\n    SpinnerModule,\n    ListNavigationModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'replenishmentDetails' },\n      },\n    ]),\n  ],\n  providers: [\n    provideConfig(defaultReplenishmentOrderCancellationLayoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReplenishmentDetailItemsComponent: {\n          component: OrderDetailItemsComponent,\n          providers: [\n            {\n              provide: OrderDetailsService,\n              useExisting: ReplenishmentOrderDetailsService,\n            },\n          ],\n        },\n        ReplenishmentDetailTotalsComponent: {\n          component: OrderDetailTotalsComponent,\n          providers: [\n            {\n              provide: OrderDetailsService,\n              useExisting: ReplenishmentOrderDetailsService,\n            },\n          ],\n        },\n        ReplenishmentDetailShippingComponent: {\n          component: OrderDetailShippingComponent,\n          providers: [\n            {\n              provide: OrderDetailsService,\n              useExisting: ReplenishmentOrderDetailsService,\n            },\n          ],\n        },\n        ReplenishmentDetailActionsComponent: {\n          component: ReplenishmentOrderCancellationComponent,\n        },\n        ReplenishmentDetailOrderHistoryComponent: {\n          component: OrderHistoryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [...moduleComponents],\n  exports: [...moduleComponents],\n})\nexport class ReplenishmentOrderDetailsModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  OnDestroy,\n  ViewChild,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ReplenishmentOrder,\n  ReplenishmentOrderList,\n  RoutingService,\n  TranslationService,\n  UserReplenishmentOrderService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { map, take, tap } from 'rxjs/operators';\nimport { LAUNCH_CALLER } from '../../../../layout/launch-dialog/config/launch-config';\nimport { LaunchDialogService } from '../../../../layout/launch-dialog/services/launch-dialog.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-replenishment-order-history',\n  templateUrl: './replenishment-order-history.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReplenishmentOrderHistoryComponent implements OnDestroy {\n  @ViewChild('element') element: ElementRef;\n\n  private subscription = new Subscription();\n\n  private PAGE_SIZE = 5;\n  sortType: string;\n\n  replenishmentOrders$: Observable<ReplenishmentOrderList> =\n    this.userReplenishmentOrderService\n      .getReplenishmentOrderHistoryList(this.PAGE_SIZE)\n      .pipe(\n        tap((replenishmentOrders: ReplenishmentOrderList) => {\n          if (replenishmentOrders.pagination) {\n            this.sortType = replenishmentOrders.pagination.sort;\n          }\n        })\n      );\n\n  isLoaded$: Observable<boolean> =\n    this.userReplenishmentOrderService.getReplenishmentOrderHistoryListSuccess();\n\n  constructor(\n    protected routing: RoutingService,\n    protected userReplenishmentOrderService: UserReplenishmentOrderService,\n    protected translation: TranslationService,\n    protected vcr: ViewContainerRef,\n    protected launchDialogService: LaunchDialogService\n  ) {}\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchReplenishmentOrders(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchReplenishmentOrders(event);\n  }\n\n  goToOrderDetail(order: ReplenishmentOrder): void {\n    this.routing.go({\n      cxRoute: 'replenishmentDetails',\n      params: order,\n    });\n  }\n\n  getSortLabels(): Observable<{\n    byDate: string;\n    byReplenishmentNumber: string;\n    byNextOrderDate: string;\n  }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.replenishmentNumber'),\n      this.translation.translate('sorting.nextOrderDate'),\n    ]).pipe(\n      map(([textByDate, textByOrderNumber, textbyNextOrderDate]) => {\n        return {\n          byDate: textByDate,\n          byReplenishmentNumber: textByOrderNumber,\n          byNextOrderDate: textbyNextOrderDate,\n        };\n      })\n    );\n  }\n\n  openDialog(event: Event, replenishmentOrderCode: string): void {\n    const dialog = this.launchDialogService.openDialog(\n      LAUNCH_CALLER.REPLENISHMENT_ORDER,\n      this.element,\n      this.vcr,\n      replenishmentOrderCode\n    );\n\n    if (dialog) {\n      this.subscription.add(dialog.pipe(take(1)).subscribe());\n    }\n    event.stopPropagation();\n  }\n\n  private fetchReplenishmentOrders(event: {\n    sortCode: string;\n    currentPage: number;\n  }): void {\n    this.userReplenishmentOrderService.loadReplenishmentOrderList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n    this.userReplenishmentOrderService.clearReplenishmentOrderList();\n  }\n}\n","<ng-container *ngIf=\"replenishmentOrders$ | async as replenishmentOrders\">\n  <div class=\"container\">\n    <!-- HEADER -->\n    <div class=\"cx-replenishment-order-history-header\">\n      <h3>\n        {{ 'orderHistory.replenishmentOrderHistory' | cxTranslate }}\n      </h3>\n    </div>\n\n    <!-- BODY -->\n    <div class=\"cx-replenishment-order-history-body\">\n      <ng-container\n        *ngIf=\"replenishmentOrders.pagination.totalResults > 0; else noOrder\"\n      >\n        <!-- Select Form and Pagination Top -->\n        <div class=\"cx-replenishment-order-history-sort top row\">\n          <label\n            class=\"\n              cx-replenishment-order-history-form-group\n              form-group\n              col-sm-12 col-md-4 col-lg-4\n            \"\n          >\n            <span>{{ 'orderHistory.sortBy' | cxTranslate }}</span>\n            <cx-sorting\n              [sortOptions]=\"replenishmentOrders.sorts\"\n              [sortLabels]=\"getSortLabels() | async\"\n              (sortListEvent)=\"changeSortCode($event)\"\n              [selectedOption]=\"replenishmentOrders.pagination.sort\"\n              placeholder=\"{{ 'orderHistory.sortBy' | cxTranslate }}\"\n            ></cx-sorting>\n          </label>\n          <div\n            class=\"cx-replenishment-order-history-pagination\"\n            *ngIf=\"replenishmentOrders.pagination.totalPages > 1\"\n          >\n            <cx-pagination\n              [pagination]=\"replenishmentOrders.pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n        <!-- TABLE -->\n        <table class=\"table cx-replenishment-order-history-table\">\n          <thead class=\"cx-replenishment-order-history-thead-mobile\">\n            <th scope=\"col\">\n              <span class=\"cx-replenishment-order-history-ellipses\">\n                {{ 'orderHistory.replenishmentOrderId' | cxTranslate }}\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"cx-replenishment-order-history-ellipses\">\n                {{ 'orderHistory.purchaseOrderNumber' | cxTranslate }}\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"cx-replenishment-order-history-ellipses\">\n                {{ 'orderHistory.startOn' | cxTranslate }}\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"cx-replenishment-order-history-ellipses\">\n                {{ 'orderHistory.frequency' | cxTranslate }}\n              </span>\n            </th>\n            <th scope=\"col\">\n              <span class=\"cx-replenishment-order-history-ellipses\">\n                {{ 'orderHistory.nextOrderDate' | cxTranslate }}\n              </span>\n            </th>\n            <th scope=\"col\" class=\"cx-replenishment-order-history-total\">\n              <span class=\"cx-replenishment-order-history-ellipses\">\n                {{ 'orderHistory.total' | cxTranslate }}\n              </span>\n            </th>\n            <th scope=\"col\"></th>\n          </thead>\n          <tbody>\n            <tr\n              *ngFor=\"let order of replenishmentOrders.replenishmentOrders\"\n              (click)=\"goToOrderDetail(order)\"\n            >\n              <td class=\"cx-replenishment-order-history-code\">\n                <div class=\"d-md-none cx-replenishment-order-history-label\">\n                  {{ 'orderHistory.replenishmentOrderId' | cxTranslate }}\n                </div>\n                <a\n                  [routerLink]=\"\n                    {\n                      cxRoute: 'replenishmentDetails',\n                      params: order\n                    } | cxUrl\n                  \"\n                  class=\"cx-replenishment-order-history-value\"\n                >\n                  {{ order?.replenishmentOrderCode }}</a\n                >\n              </td>\n              <td>\n                <div class=\"d-md-none cx-replenishment-order-history-label\">\n                  {{ 'orderHistory.purchaseOrderNumber' | cxTranslate }}\n                </div>\n                <a\n                  [routerLink]=\"\n                    {\n                      cxRoute: 'replenishmentDetails',\n                      params: order\n                    } | cxUrl\n                  \"\n                  class=\"\n                    cx-replenishment-order-history-value\n                    cx-purchase-order-number\n                  \"\n                >\n                  {{\n                    order?.purchaseOrderNumber?.length > 0\n                      ? order?.purchaseOrderNumber\n                      : ('orderHistory.emptyPurchaseOrderId' | cxTranslate)\n                  }}\n                </a>\n              </td>\n              <td>\n                <div class=\"d-md-none cx-replenishment-order-history-label\">\n                  {{ 'orderHistory.startOn' | cxTranslate }}\n                </div>\n                <a\n                  [routerLink]=\"\n                    {\n                      cxRoute: 'replenishmentDetails',\n                      params: order\n                    } | cxUrl\n                  \"\n                  class=\"cx-replenishment-order-history-value\"\n                >\n                  {{ order?.firstDate | cxDate: 'M/d/yyyy' }}</a\n                >\n              </td>\n              <td class=\"cx-replenishment-order-history-frequency\">\n                <div class=\"d-md-none cx-replenishment-order-history-label\">\n                  {{ 'orderHistory.frequency' | cxTranslate }}\n                </div>\n                <a\n                  [routerLink]=\"\n                    {\n                      cxRoute: 'replenishmentDetails',\n                      params: order\n                    } | cxUrl\n                  \"\n                  class=\"cx-replenishment-order-history-value\"\n                >\n                  {{ order?.trigger.displayTimeTable | slice: 0:-12 }}\n                </a>\n              </td>\n              <td>\n                <div class=\"d-md-none cx-replenishment-order-history-label\">\n                  {{ 'orderHistory.nextOrderDate' | cxTranslate }}\n                </div>\n\n                <a\n                  [routerLink]=\"\n                    {\n                      cxRoute: 'replenishmentDetails',\n                      params: order\n                    } | cxUrl\n                  \"\n                  class=\"\n                    cx-replenishment-order-history-value cx-next-order-date\n                  \"\n                >\n                  {{\n                    order?.active\n                      ? (order?.trigger.activationTime | cxDate: 'M/d/yyyy')\n                      : ('orderHistory.cancelled' | cxTranslate)\n                  }}\n                </a>\n              </td>\n              <td class=\"cx-replenishment-order-history-total\">\n                <div class=\"d-md-none cx-replenishment-order-history-label\">\n                  {{ 'orderHistory.total' | cxTranslate }}\n                </div>\n                <a\n                  [routerLink]=\"\n                    {\n                      cxRoute: 'replenishmentDetails',\n                      params: order\n                    } | cxUrl\n                  \"\n                  class=\"cx-replenishment-order-history-value\"\n                >\n                  {{ order?.totalPriceWithTax.formattedValue }}</a\n                >\n              </td>\n              <td class=\"cx-replenishment-order-history-cancel\">\n                <div\n                  class=\"d-md-none cx-replenishment-order-history-label\"\n                ></div>\n                <button\n                  (click)=\"openDialog($event, order?.replenishmentOrderCode)\"\n                  class=\"cx-order-cancel btn btn-link\"\n                  #element\n                  *ngIf=\"order?.active\"\n                >\n                  {{ 'orderHistory.cancel' | cxTranslate }}\n                </button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <!-- Select Form and Pagination Bottom -->\n        <div class=\"cx-replenishment-order-history-sort bottom row\">\n          <div class=\"cx-replenishment-order-history-pagination\">\n            <cx-pagination\n              [pagination]=\"replenishmentOrders.pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n              *ngIf=\"replenishmentOrders.pagination.totalPages > 1\"\n            ></cx-pagination>\n          </div>\n        </div>\n      </ng-container>\n\n      <!-- NO ORDER CONTAINER -->\n      <ng-template #noOrder>\n        <div\n          class=\"cx-replenishment-order-history-no-order row\"\n          *ngIf=\"isLoaded$ | async\"\n        >\n          <div class=\"col-sm-12 col-md-6 col-lg-4\">\n            <div>{{ 'orderHistory.noReplenishmentOrders' | cxTranslate }}</div>\n            <a\n              [routerLink]=\"{ cxRoute: 'home' } | cxUrl\"\n              routerLinkActive=\"active\"\n              class=\"btn btn-primary btn-block\"\n              >{{ 'orderHistory.startShopping' | cxTranslate }}</a\n            >\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideConfig,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { defaultReplenishmentOrderCancellationLayoutConfig } from '../replenishment-order-details/default-replenishment-order-cancellation-layout.config';\nimport { ReplenishmentOrderHistoryComponent } from './replenishment-order-history.component';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'replenishmentOrders' },\n      },\n    ]),\n    RouterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideConfig(defaultReplenishmentOrderCancellationLayoutConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountReplenishmentHistoryComponent: {\n          component: ReplenishmentOrderHistoryComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [ReplenishmentOrderHistoryComponent],\n  exports: [ReplenishmentOrderHistoryComponent],\n})\nexport class ReplenishmentOrderHistoryModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  OrderReturnRequestService,\n  RoutingService,\n  ReturnRequest,\n  GlobalMessageService,\n  GlobalMessageType,\n} from '@spartacus/core';\nimport { Observable, combineLatest } from 'rxjs';\nimport { filter, map, tap, distinctUntilChanged } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ReturnRequestService {\n  constructor(\n    protected routingService: RoutingService,\n    protected returnRequestService: OrderReturnRequestService,\n    protected globalMessageService: GlobalMessageService\n  ) {}\n\n  get isCancelling$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestLoading();\n  }\n\n  get isCancelSuccess$(): Observable<boolean> {\n    return this.returnRequestService.getCancelReturnRequestSuccess();\n  }\n\n  getReturnRequest(): Observable<ReturnRequest> {\n    return combineLatest([\n      this.routingService.getRouterState(),\n      this.returnRequestService.getOrderReturnRequest(),\n      this.returnRequestService.getReturnRequestLoading(),\n    ]).pipe(\n      map(([routingState, returnRequest, isLoading]) => [\n        routingState.state.params['returnCode'],\n        returnRequest,\n        isLoading,\n      ]),\n      filter(([returnCode]) => Boolean(returnCode)),\n      tap(([returnCode, returnRequest, isLoading]) => {\n        if (\n          (returnRequest === undefined || returnRequest.rma !== returnCode) &&\n          !isLoading\n        ) {\n          this.returnRequestService.loadOrderReturnRequestDetail(returnCode);\n        }\n      }),\n      map(([_, returnRequest]) => returnRequest),\n      filter(Boolean),\n      distinctUntilChanged()\n    );\n  }\n\n  clearReturnRequest(): void {\n    this.returnRequestService.clearOrderReturnRequestDetail();\n  }\n\n  cancelReturnRequest(returnRequestCode: string): void {\n    this.returnRequestService.cancelOrderReturnRequest(returnRequestCode, {\n      status: 'CANCELLING',\n    });\n  }\n\n  cancelSuccess(rma: string): void {\n    this.returnRequestService.resetCancelReturnRequestProcessState();\n    this.globalMessageService.add(\n      {\n        key: 'returnRequest.cancelSuccess',\n        params: { rma },\n      },\n      GlobalMessageType.MSG_TYPE_CONFIRMATION\n    );\n    this.routingService.go({\n      cxRoute: 'orders',\n    });\n  }\n\n  backToList(): void {\n    this.routingService.go(\n      { cxRoute: 'orders' },\n      {\n        state: {\n          activeTab: 1,\n        },\n      }\n    );\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ReturnRequest } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequestService } from '../return-request.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-return-request-items',\n  templateUrl: './return-request-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestItemsComponent {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<ReturnRequest> =\n    this.returnRequestService.getReturnRequest();\n}\n","<ng-container *ngIf=\"returnRequest$ | async as returnRequest\">\n  <div class=\"d-none d-md-block d-lg-block d-xl-block\">\n    <div class=\"cx-item-list-header row\">\n      <div class=\"cx-item-list-desc col-md-5 col-lg-5 col-xl-6\">\n        {{ 'returnRequest.item' | cxTranslate }}\n      </div>\n      <div class=\"cx-item-list-price col-md-2 col-lg-2 col-xl-2\">\n        {{ 'returnRequest.itemPrice' | cxTranslate }}\n      </div>\n      <div class=\"cx-item-list-qty col-md-3 col-lg-3 col-xl-2\">\n        {{ 'returnRequest.returnQty' | cxTranslate }}\n      </div>\n      <div class=\"cx-item-list-total col-md-2 col-lg-2 col-xl-2\">\n        {{ 'returnRequest.total' | cxTranslate }}\n      </div>\n    </div>\n  </div>\n\n  <div\n    class=\"cx-item-list-row\"\n    *ngFor=\"let returnEntry of returnRequest.returnEntries; let i = index\"\n  >\n    <div class=\"cx-item-list-items\">\n      <div class=\"row\">\n        <!-- Item Image -->\n        <div class=\"col-2 cx-image-container\">\n          <cx-media\n            [container]=\"returnEntry.orderEntry?.product.images?.PRIMARY\"\n            format=\"thumbnail\"\n          ></cx-media>\n        </div>\n        <!-- Item Information -->\n        <div class=\"cx-info col-10\">\n          <div class=\"cx-info-container row\">\n            <!-- Item Description -->\n            <div class=\"col-md-3 col-lg-4 col-xl-5\">\n              <div *ngIf=\"returnEntry.orderEntry?.product.name\" class=\"cx-name\">\n                {{ returnEntry.orderEntry?.product.name }}\n              </div>\n              <div *ngIf=\"returnEntry.orderEntry?.product.code\" class=\"cx-code\">\n                {{ 'cartItems.id' | cxTranslate }}\n                {{ returnEntry.orderEntry?.product.code }}\n              </div>\n              <!-- Variants -->\n              <div\n                *ngFor=\"\n                  let variant of (returnEntry.orderEntry?.product\n                    .baseOptions)[0]?.selected?.variantOptionQualifiers\n                \"\n                class=\"cx-property\"\n              >\n                <div class=\"cx-label\" *ngIf=\"variant.name\">\n                  {{ variant.name }}:\n                </div>\n                <div class=\"cx-value\" *ngIf=\"variant.value\">\n                  {{ variant.value }}\n                </div>\n              </div>\n            </div>\n            <!-- Item Price -->\n            <div\n              *ngIf=\"returnEntry.orderEntry?.basePrice\"\n              class=\"cx-price col-md-3 col-lg-2 col-xl-2\"\n            >\n              <div class=\"cx-label d-block d-md-none d-lg-none d-xl-none\">\n                {{ 'returnRequest.itemPrice' | cxTranslate }}\n              </div>\n              <div class=\"cx-value\">\n                {{ returnEntry.orderEntry?.basePrice?.formattedValue }}\n              </div>\n            </div>\n            <!-- return Quantity -->\n            <div class=\"cx-quantity col-md-3 col-lg-3 col-xl-3\">\n              <div class=\"cx-label d-block d-md-none d-lg-none d-xl-none\">\n                {{ 'returnRequest.returnQty' | cxTranslate }}\n              </div>\n              <div class=\"cx-value\">\n                {{ returnEntry.expectedQuantity }}\n              </div>\n            </div>\n            <!-- Total Price -->\n            <div class=\"cx-total col-md-3 col-lg-3 col-xl-2\">\n              <div class=\"cx-label d-block d-md-none d-lg-none d-xl-none\">\n                {{ 'returnRequest.total' | cxTranslate }}\n              </div>\n              <div class=\"cx-value\">\n                {{ returnEntry.refundAmount?.formattedValue }}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport { ReturnRequest } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { ReturnRequestService } from '../return-request.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-return-request-overview',\n  templateUrl: './return-request-overview.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestOverviewComponent implements OnInit, OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  rma: string;\n  subscription: Subscription;\n\n  returnRequest$: Observable<ReturnRequest> = this.returnRequestService\n    .getReturnRequest()\n    .pipe(tap((returnRequest) => (this.rma = returnRequest.rma)));\n\n  isCancelling$ = this.returnRequestService.isCancelling$;\n\n  ngOnInit(): void {\n    this.subscription = this.returnRequestService.isCancelSuccess$.subscribe(\n      (success) => {\n        if (success) {\n          this.returnRequestService.cancelSuccess(this.rma);\n        }\n      }\n    );\n  }\n\n  cancelReturn(returnRequestCode: string): void {\n    this.returnRequestService.cancelReturnRequest(returnRequestCode);\n  }\n\n  back(): void {\n    this.returnRequestService.backToList();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n}\n","<ng-container *ngIf=\"returnRequest$ | async as returnRequest\">\n  <div class=\"cx-nav row\">\n    <div class=\"col-xs-12 col-md-4 col-lg-3\">\n      <button (click)=\"back()\" class=\"btn btn-block btn-action\">\n        {{ 'common.back' | cxTranslate }}\n      </button>\n    </div>\n\n    <div class=\"col-xs-12 col-md-4 col-lg-3\">\n      <button\n        *ngIf=\"returnRequest.cancellable\"\n        class=\"btn btn-block btn-primary\"\n        (click)=\"cancelReturn(returnRequest.rma)\"\n        [disabled]=\"isCancelling$ | async\"\n      >\n        {{ 'returnRequest.cancel' | cxTranslate }}\n      </button>\n    </div>\n  </div>\n  <div class=\"cx-header row\">\n    <div class=\"cx-detail col-sm-12 col-md-4\">\n      <div class=\"cx-detail-label\">\n        {{ 'returnRequest.returnRequestId' | cxTranslate }}\n      </div>\n      <div class=\"cx-detail-value\">{{ returnRequest.rma }}</div>\n    </div>\n    <div class=\"cx-detail col-sm-12 col-md-4\">\n      <div class=\"cx-detail-label\">\n        {{ 'returnRequest.orderCode' | cxTranslate }}\n      </div>\n      <div class=\"cx-detail-value\">{{ returnRequest.order?.code }}</div>\n    </div>\n    <div class=\"cx-detail col-sm-12 col-md-4\">\n      <div class=\"cx-detail-label\">\n        {{ 'returnRequest.status' | cxTranslate }}\n      </div>\n      <div class=\"cx-detail-value\">\n        {{\n          'returnRequestList.statusDisplay_' + returnRequest?.status\n            | cxTranslate\n        }}\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport { ReturnRequest } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ReturnRequestService } from '../return-request.service';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-return-request-totals',\n  templateUrl: './return-request-totals.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ReturnRequestTotalsComponent implements OnDestroy {\n  constructor(protected returnRequestService: ReturnRequestService) {}\n\n  returnRequest$: Observable<ReturnRequest> =\n    this.returnRequestService.getReturnRequest();\n\n  ngOnDestroy() {\n    this.returnRequestService.clearReturnRequest();\n  }\n}\n","<ng-container *ngIf=\"returnRequest$ | async as returnRequest\">\n  <div class=\"row justify-content-end\">\n    <div class=\"cx-summary col-sm-12 col-md-6 col-lg-5 col-xl-4\">\n      <h4>{{ 'returnRequest.summary' | cxTranslate }}</h4>\n      <div class=\"cx-summary-row\">\n        <div class=\"col-6 cx-summary-label\">\n          {{ 'returnRequest.subtotal' | cxTranslate }}\n        </div>\n        <div class=\"col-6 cx-summary-amount\">\n          {{ returnRequest.subTotal?.formattedValue }}\n        </div>\n      </div>\n      <div class=\"cx-summary-row\">\n        <div class=\"col-6 cx-summary-label\">\n          {{ 'returnRequest.deliveryCode' | cxTranslate }}\n        </div>\n        <div class=\"col-6 cx-summary-amount\">\n          {{ returnRequest.deliveryCost?.formattedValue }}\n        </div>\n      </div>\n      <div class=\"cx-summary-row cx-summary-total\">\n        <div class=\"col-6 cx-summary-label\">\n          {{ 'returnRequest.estimatedRefund' | cxTranslate }}\n        </div>\n        <div class=\"col-6 cx-summary-amount\">\n          {{ returnRequest.totalPrice?.formattedValue }}\n        </div>\n      </div>\n      <div class=\"cx-summary-row cx-footnote\">\n        {{ 'returnRequest.note' | cxTranslate }}\n      </div>\n    </div>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { CmsPageGuard } from '../../../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../../../cms-structure/page/page-layout/page-layout.component';\nimport { MediaModule } from '../../../../shared/index';\nimport { ReturnRequestItemsComponent } from './return-request-items/return-request-items.component';\nimport { ReturnRequestOverviewComponent } from './return-request-overview/return-request-overview.component';\nimport { ReturnRequestTotalsComponent } from './return-request-totals/return-request-totals.component';\n\nconst components = [\n  ReturnRequestOverviewComponent,\n  ReturnRequestItemsComponent,\n  ReturnRequestTotalsComponent,\n];\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [AuthGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'returnRequestDetails' },\n      },\n    ]),\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    MediaModule,\n    FeaturesConfigModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ReturnRequestOverviewComponent: {\n          component: ReturnRequestOverviewComponent,\n        },\n        ReturnRequestItemsComponent: {\n          component: ReturnRequestItemsComponent,\n        },\n        ReturnRequestTotalsComponent: {\n          component: ReturnRequestTotalsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [...components],\n  exports: [...components],\n})\nexport class ReturnRequestDetailModule {}\n","import { ChangeDetectionStrategy, Component, OnDestroy } from '@angular/core';\nimport {\n  isNotUndefined,\n  OrderReturnRequestService,\n  ReturnRequestList,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { filter, map, take, tap } from 'rxjs/operators';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@Component({\n  selector: 'cx-order-return-request-list',\n  templateUrl: './order-return-request-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OrderReturnRequestListComponent implements OnDestroy {\n  constructor(\n    private returnRequestService: OrderReturnRequestService,\n    private translation: TranslationService\n  ) {}\n\n  private PAGE_SIZE = 5;\n  sortType: string;\n\n  returnRequests$: Observable<ReturnRequestList> = this.returnRequestService\n    .getOrderReturnRequestList(this.PAGE_SIZE)\n    .pipe(\n      tap((requestList: ReturnRequestList) => {\n        if (requestList.pagination) {\n          this.sortType = requestList.pagination.sort;\n        }\n      })\n    );\n\n  /**\n   * When \"Order Return\" feature is enabled, this component becomes one tab in\n   * TabParagraphContainerComponent. This can be read from TabParagraphContainer.\n   */\n  tabTitleParam$: Observable<number> = this.returnRequests$.pipe(\n    map((returnRequests) => returnRequests.pagination?.totalResults),\n    filter(isNotUndefined),\n    take(1)\n  );\n\n  ngOnDestroy(): void {\n    this.returnRequestService.clearOrderReturnRequestList();\n  }\n\n  changeSortCode(sortCode: string): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode,\n      currentPage: 0,\n    };\n    this.sortType = sortCode;\n    this.fetchReturnRequests(event);\n  }\n\n  pageChange(page: number): void {\n    const event: { sortCode: string; currentPage: number } = {\n      sortCode: this.sortType,\n      currentPage: page,\n    };\n    this.fetchReturnRequests(event);\n  }\n\n  getSortLabels(): Observable<{ byDate: string; byRMA: string }> {\n    return combineLatest([\n      this.translation.translate('sorting.date'),\n      this.translation.translate('sorting.rma'),\n    ]).pipe(\n      map(([textByDate, textByRma]) => {\n        return {\n          byDate: textByDate,\n          byRMA: textByRma,\n        };\n      })\n    );\n  }\n\n  private fetchReturnRequests(event: {\n    sortCode: string;\n    currentPage: number;\n  }): void {\n    this.returnRequestService.loadOrderReturnRequestList(\n      this.PAGE_SIZE,\n      event.currentPage,\n      event.sortCode\n    );\n  }\n}\n","<ng-container *ngIf=\"returnRequests$ | async as returnRequests\">\n  <div class=\"container\">\n    <!-- BODY -->\n    <div class=\"cx-order-history-body\">\n      <ng-container *ngIf=\"returnRequests.pagination.totalResults > 0\">\n        <!-- Select Form and Pagination Top -->\n        <div class=\"cx-order-history-sort top row\">\n          <label\n            class=\"\n              cx-order-history-form-group\n              form-group\n              col-sm-12 col-md-4 col-lg-4\n            \"\n            ><span>{{ 'returnRequestList.sortBy' | cxTranslate }}</span>\n            <cx-sorting\n              [sortOptions]=\"returnRequests.sorts\"\n              [sortLabels]=\"getSortLabels() | async\"\n              (sortListEvent)=\"changeSortCode($event)\"\n              [selectedOption]=\"returnRequests.pagination.sort\"\n            ></cx-sorting>\n          </label>\n          <div class=\"cx-order-history-pagination\">\n            <cx-pagination\n              [pagination]=\"returnRequests.pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n        <!-- TABLE -->\n        <table class=\"table cx-order-history-table\">\n          <thead class=\"cx-order-history-thead-mobile\">\n            <th scope=\"col\">\n              {{ 'returnRequestList.returnRequestId' | cxTranslate }}\n            </th>\n            <th scope=\"col\">{{ 'returnRequestList.orderId' | cxTranslate }}</th>\n            <th scope=\"col\">\n              {{ 'returnRequestList.date' | cxTranslate }}\n            </th>\n            <th scope=\"col\">{{ 'returnRequestList.status' | cxTranslate }}</th>\n          </thead>\n          <tbody>\n            <tr *ngFor=\"let return of returnRequests.returnRequests\">\n              <td class=\"cx-order-history-code\">\n                <div class=\"d-md-none cx-order-history-label\">\n                  {{ 'returnRequestList.returnRequestId' | cxTranslate }}\n                </div>\n                <a\n                  [routerLink]=\"\n                    {\n                      cxRoute: 'returnRequestDetails',\n                      params: return\n                    } | cxUrl\n                  \"\n                  class=\"cx-order-history-value\"\n                >\n                  {{ return?.rma }}</a\n                >\n              </td>\n              <td class=\"cx-order-history-code\">\n                <div class=\"d-md-none cx-order-history-label\">\n                  {{ 'returnRequestList.orderId' | cxTranslate }}\n                </div>\n                <a\n                  [routerLink]=\"\n                    {\n                      cxRoute: 'orderDetails',\n                      params: return?.order\n                    } | cxUrl\n                  \"\n                  class=\"cx-order-history-value\"\n                >\n                  {{ return?.order?.code }}</a\n                >\n              </td>\n\n              <td class=\"cx-order-history-placed\">\n                <div class=\"d-md-none cx-order-history-label\">\n                  {{ 'returnRequestList.date' | cxTranslate }}\n                </div>\n                {{ return?.creationTime | cxDate: 'longDate' }}\n              </td>\n              <td class=\"cx-order-history-status\">\n                <div class=\"d-md-none cx-order-history-label\">\n                  {{ 'returnRequestList.status' | cxTranslate }}\n                </div>\n                {{\n                  'returnRequestList.statusDisplay_' + return?.status\n                    | cxTranslate\n                }}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <!-- Select Form and Pagination Bottom -->\n        <div class=\"cx-order-history-sort bottom row\">\n          <label\n            class=\"\n              cx-order-history-form-group\n              form-group\n              col-sm-12 col-md-4 col-lg-4\n            \"\n            ><span>{{ 'returnRequestList.sortBy' | cxTranslate }}</span>\n            <cx-sorting\n              [sortOptions]=\"returnRequests.sorts\"\n              [sortLabels]=\"getSortLabels() | async\"\n              (sortListEvent)=\"changeSortCode($event)\"\n              [selectedOption]=\"returnRequests.pagination.sort\"\n            ></cx-sorting>\n          </label>\n          <div class=\"cx-order-history-pagination\">\n            <cx-pagination\n              [pagination]=\"returnRequests.pagination\"\n              (viewPageEvent)=\"pageChange($event)\"\n            ></cx-pagination>\n          </div>\n        </div>\n      </ng-container>\n    </div>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { ListNavigationModule } from '../../../../shared/components/list-navigation/list-navigation.module';\nimport { OrderReturnRequestListComponent } from './order-return-request-list.component';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        OrderReturnRequestListComponent: {\n          component: OrderReturnRequestListComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [OrderReturnRequestListComponent],\n  exports: [OrderReturnRequestListComponent],\n})\nexport class ReturnRequestListModule {}\n","import { NgModule } from '@angular/core';\nimport {\n  OrderCancellationModule,\n  OrderReturnModule,\n} from './amend-order/index';\nimport { OrderDetailsModule } from './order-details/order-details.module';\nimport { OrderHistoryModule } from './order-history/order-history.module';\nimport { ReplenishmentOrderDetailsModule } from './replenishment-order-details/replenishment-order-details.module';\nimport { ReplenishmentOrderHistoryModule } from './replenishment-order-history/replenishment-order-history.module';\nimport { ReturnRequestDetailModule } from './return-request-detail/return-request-detail.module';\nimport { ReturnRequestListModule } from './return-request-list/order-return-request-list.module';\n\n/**\n * @deprecated since 4.2 - use order lib instead\n */\n@NgModule({\n  imports: [\n    OrderHistoryModule,\n    OrderDetailsModule,\n    ReplenishmentOrderDetailsModule,\n    OrderCancellationModule,\n    OrderReturnModule,\n    ReplenishmentOrderHistoryModule,\n    ReturnRequestListModule,\n    ReturnRequestDetailModule,\n  ],\n})\nexport class OrderModule {}\n","import { Component, OnInit } from '@angular/core';\nimport {\n  PaymentDetails,\n  TranslationService,\n  UserPaymentService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon';\nimport { Card } from '../../../shared/components/card/card.component';\n\n@Component({\n  selector: 'cx-payment-methods',\n  templateUrl: './payment-methods.component.html',\n})\nexport class PaymentMethodsComponent implements OnInit {\n  paymentMethods$: Observable<PaymentDetails[]>;\n  editCard: string;\n  iconTypes = ICON_TYPE;\n  loading$: Observable<boolean>;\n\n  constructor(\n    private userPaymentService: UserPaymentService,\n    private translation: TranslationService\n  ) {}\n\n  ngOnInit(): void {\n    this.paymentMethods$ = this.userPaymentService.getPaymentMethods().pipe(\n      tap((paymentDetails) => {\n        // Set first payment method to DEFAULT if none is set\n        if (\n          paymentDetails.length > 0 &&\n          !paymentDetails.find((paymentDetail) => paymentDetail.defaultPayment)\n        ) {\n          this.setDefaultPaymentMethod(paymentDetails[0]);\n        }\n      })\n    );\n\n    this.editCard = null;\n    this.loading$ = this.userPaymentService.getPaymentMethodsLoading();\n    this.userPaymentService.loadPaymentMethods();\n  }\n\n  getCardContent({\n    defaultPayment,\n    accountHolderName,\n    expiryMonth,\n    expiryYear,\n    cardNumber,\n    cardType,\n  }: PaymentDetails): Observable<Card> {\n    return combineLatest([\n      this.translation.translate('paymentCard.setAsDefault'),\n      this.translation.translate('common.delete'),\n      this.translation.translate('paymentCard.deleteConfirmation'),\n      this.translation.translate('paymentCard.expires', {\n        month: expiryMonth,\n        year: expiryYear,\n      }),\n      this.translation.translate('paymentCard.defaultPaymentMethod'),\n    ]).pipe(\n      map(\n        ([\n          textSetAsDefault,\n          textDelete,\n          textDeleteConfirmation,\n          textExpires,\n          textDefaultPaymentMethod,\n        ]) => {\n          const actions: { name: string; event: string }[] = [];\n          if (!defaultPayment) {\n            actions.push({ name: textSetAsDefault, event: 'default' });\n          }\n          actions.push({ name: textDelete, event: 'edit' });\n          const card: Card = {\n            header: defaultPayment ? textDefaultPaymentMethod : null,\n            textBold: accountHolderName,\n            text: [cardNumber, textExpires],\n            actions,\n            deleteMsg: textDeleteConfirmation,\n            img: this.getCardIcon(cardType.code),\n          };\n\n          return card;\n        }\n      )\n    );\n  }\n\n  deletePaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.deletePaymentMethod(paymentMethod.id);\n    this.editCard = null;\n  }\n\n  setEdit(paymentMethod: PaymentDetails): void {\n    this.editCard = paymentMethod.id;\n  }\n\n  cancelCard(): void {\n    this.editCard = null;\n  }\n\n  setDefaultPaymentMethod(paymentMethod: PaymentDetails): void {\n    this.userPaymentService.setPaymentMethodAsDefault(paymentMethod.id);\n  }\n\n  getCardIcon(code: string): string {\n    let ccIcon: string;\n    if (code === 'visa') {\n      ccIcon = this.iconTypes.VISA;\n    } else if (code === 'master' || code === 'mastercard_eurocard') {\n      ccIcon = this.iconTypes.MASTER_CARD;\n    } else if (code === 'diners') {\n      ccIcon = this.iconTypes.DINERS_CLUB;\n    } else if (code === 'amex') {\n      ccIcon = this.iconTypes.AMEX;\n    } else {\n      ccIcon = this.iconTypes.CREDIT_CARD;\n    }\n\n    return ccIcon;\n  }\n}\n","<ng-container *ngIf=\"paymentMethods$ | async as paymentMethods\">\n  <div class=\"cx-payment container\">\n    <div class=\"cx-header\">\n      <h3>{{ 'paymentMethods.paymentMethods' | cxTranslate }}</h3>\n    </div>\n\n    <div class=\"cx-body\">\n      <div class=\"cx-msg\">\n        {{\n          'paymentMethods.newPaymentMethodsAreAddedDuringCheckout' | cxTranslate\n        }}\n      </div>\n      <div *ngIf=\"loading$ | async; else cards\"><cx-spinner></cx-spinner></div>\n      <ng-template #cards>\n        <div class=\"cx-existing row\">\n          <div\n            class=\"cx-payment-card col-sm-12 col-md-12 col-lg-6\"\n            *ngFor=\"let paymentMethod of paymentMethods\"\n          >\n            <div class=\"cx-payment-inner\">\n              <cx-card\n                [border]=\"true\"\n                [fitToContainer]=\"true\"\n                [content]=\"getCardContent(paymentMethod) | async\"\n                (deleteCard)=\"deletePaymentMethod(paymentMethod)\"\n                (setDefaultCard)=\"setDefaultPaymentMethod(paymentMethod)\"\n                (editCard)=\"setEdit(paymentMethod)\"\n                [editMode]=\"editCard === paymentMethod.id\"\n                (cancelCard)=\"cancelCard()\"\n              ></cx-card>\n            </div>\n          </div>\n        </div>\n      </ng-template>\n    </div>\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { CardModule } from '../../../shared/components/card/card.module';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { PaymentMethodsComponent } from './payment-methods.component';\n\n@NgModule({\n  imports: [CommonModule, CardModule, SpinnerModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        AccountPaymentDetailsComponent: {\n          component: PaymentMethodsComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [PaymentMethodsComponent],\n  exports: [PaymentMethodsComponent],\n})\nexport class PaymentMethodsModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  CmsPageTitleComponent,\n  isNotNullable,\n  PageMetaService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-page-title',\n  templateUrl: './page-title.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PageTitleComponent implements OnInit {\n  title$: Observable<string>;\n\n  constructor(\n    public component: CmsComponentData<CmsPageTitleComponent>,\n    protected pageMetaService: PageMetaService\n  ) {}\n\n  ngOnInit(): void {\n    this.setTitle();\n  }\n\n  private setTitle(): void {\n    this.title$ = this.pageMetaService.getMeta().pipe(\n      filter(isNotNullable),\n      map((meta) => (meta.heading || meta.title) ?? '')\n    );\n  }\n}\n","<h1 class=\"cx-visually-hidden\">{{ title$ | async }}</h1>\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport {\n  CmsBreadcrumbsComponent,\n  PageMetaService,\n  TranslationService,\n} from '@spartacus/core';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { PageTitleComponent } from '../page-header/page-title.component';\n\n@Component({\n  selector: 'cx-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class BreadcrumbComponent extends PageTitleComponent implements OnInit {\n  crumbs$: Observable<any[]>;\n\n  constructor(\n    public component: CmsComponentData<CmsBreadcrumbsComponent>,\n    protected pageMetaService: PageMetaService,\n    private translation: TranslationService\n  ) {\n    super(component, pageMetaService);\n  }\n\n  ngOnInit(): void {\n    super.ngOnInit();\n    this.setCrumbs();\n  }\n\n  private setCrumbs(): void {\n    this.crumbs$ = combineLatest([\n      this.pageMetaService.getMeta(),\n      this.translation.translate('common.home'),\n    ]).pipe(\n      map(([meta, textHome]) =>\n        meta?.breadcrumbs ? meta.breadcrumbs : [{ label: textHome, link: '/' }]\n      )\n    );\n  }\n}\n","<nav>\n  <span *ngFor=\"let crumb of crumbs$ | async\">\n    <a [routerLink]=\"crumb.link\" [innerHTML]=\"crumb.label\"></a>\n  </span>\n</nav>\n<h1>{{ title$ | async }}</h1>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  PageMetaModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, PageMetaModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        BreadcrumbComponent: {\n          component: BreadcrumbComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [BreadcrumbComponent],\n  exports: [BreadcrumbComponent],\n})\nexport class BreadcrumbModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CmsNavigationComponent,\n  CmsService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { NavigationNode } from './navigation-node.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationService {\n  constructor(\n    protected cmsService: CmsService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  public createNavigation(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    return combineLatest([data$, this.getNavigationNode(data$)]).pipe(\n      map(([data, nav]) => {\n        return data\n          ? {\n              title: data.name,\n              children: [nav],\n            }\n          : undefined;\n      })\n    );\n  }\n\n  /**\n   * returns an observable with the `NavigationNode` for the given `CmsNavigationComponent`.\n   * This function will load the navigation underlying entries and children if they haven't been\n   * loaded so far.\n   */\n  public getNavigationNode(\n    data$: Observable<CmsNavigationComponent>\n  ): Observable<NavigationNode> {\n    if (!data$) {\n      return of();\n    }\n    return data$.pipe(\n      filter((data) => !!data),\n      switchMap((data) => {\n        const navigation = data.navigationNode ? data.navigationNode : data;\n        return this.cmsService.getNavigationEntryItems(navigation.uid).pipe(\n          tap((items) => {\n            if (items === undefined) {\n              this.loadNavigationEntryItems(navigation, true);\n            } else {\n              // we should check whether the existing node items are what expected\n              const expectedItems = [];\n              this.loadNavigationEntryItems(navigation, false, expectedItems);\n              const existingItems = Object.keys(items).map(\n                (key) => items[key].uid\n              );\n              const missingItems = expectedItems.filter(\n                (it) => !existingItems.includes(it.id)\n              );\n              if (missingItems.length > 0) {\n                this.cmsService.loadNavigationItems(\n                  navigation.uid,\n                  missingItems\n                );\n              }\n            }\n          }),\n          filter(Boolean),\n          map((items) => this.populateNavigationNode(navigation, items))\n        );\n      })\n    );\n  }\n\n  /**\n   * Loads all navigation entry items' type and id. Dispatch action to load all these items\n   * @param nodeData\n   * @param root\n   * @param itemsList\n   */\n  private loadNavigationEntryItems(\n    nodeData: any,\n    root: boolean,\n    itemsList = []\n  ): void {\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      nodeData.entries.forEach((entry) => {\n        itemsList.push({\n          superType: entry.itemSuperType,\n          id: entry.itemId,\n        });\n      });\n    }\n\n    if (nodeData.children && nodeData.children.length > 0) {\n      nodeData.children.forEach((child) =>\n        this.loadNavigationEntryItems(child, false, itemsList)\n      );\n    }\n\n    if (root) {\n      this.cmsService.loadNavigationItems(nodeData.uid, itemsList);\n    }\n  }\n\n  /**\n   * Create a new node tree for the view\n   * @param nodeData\n   * @param items\n   */\n  private populateNavigationNode(nodeData: any, items: any): NavigationNode {\n    const node: NavigationNode = {};\n\n    if (nodeData.title) {\n      // the node title will be populated by the first entry (if any)\n      // if there's no nodeData.title available\n      node.title = nodeData.title;\n    }\n\n    // populate style classes to apply CMS driven styling\n    if (nodeData.styleClasses) {\n      node.styleClasses = nodeData.styleClasses;\n    }\n    // populate style attributes to apply CMS driven styling\n    if (nodeData.styleAttributes) {\n      node.styleAttributes = nodeData.styleAttributes;\n    }\n\n    if (nodeData.entries && nodeData.entries.length > 0) {\n      this.populateLink(node, nodeData.entries[0], items);\n    }\n\n    if (nodeData.children?.length > 0) {\n      const children = nodeData.children\n        .map((child) => this.populateNavigationNode(child, items))\n        .filter(Boolean);\n      if (children.length > 0) {\n        node.children = children;\n      }\n    }\n\n    // return null in case there are no children\n    return Object.keys(node).length === 0 ? null : node;\n  }\n\n  /**\n   * The node link is driven by the first entry.\n   */\n  private populateLink(node: NavigationNode, entry, items) {\n    const item = items[`${entry.itemId}_${entry.itemSuperType}`];\n\n    // now we only consider CMSLinkComponent\n    if (item && entry.itemType === 'CMSLinkComponent') {\n      if (!node.title) {\n        node.title = item.linkName;\n      }\n      const url = this.getLink(item);\n      // only populate the node link if we have a visible node\n      if (node.title && url) {\n        node.url = url;\n        // the backend provide boolean value for the target\n        // in case the link should be opened in a new window\n        if (item.target === 'true' || item.target === true) {\n          node.target = '_blank';\n        }\n      }\n      // populate style classes to apply CMS driven styling\n      if (item.styleClasses) {\n        node.styleClasses = item.styleClasses;\n      }\n      // populate style attributes to apply CMS driven styling\n      if (item.styleAttributes) {\n        node.styleAttributes = item.styleAttributes;\n      }\n    }\n  }\n\n  /**\n   *\n   * Gets the URL or link to a related item (category),\n   * also taking into account content pages (contentPageLabelOrId)\n   * and product pages (productCode)\n   */\n  protected getLink(item): string | string[] {\n    if (item.url) {\n      return item.url;\n    } else if (item.contentPageLabelOrId) {\n      return item.contentPageLabelOrId;\n    } else if (item.categoryCode) {\n      return this.semanticPathService.transform({\n        cxRoute: 'category',\n        params: {\n          code: item.categoryCode,\n          name: item.name,\n        },\n      });\n    } else if (item.productCode) {\n      return this.semanticPathService.transform({\n        cxRoute: 'product',\n        params: {\n          code: item.productCode,\n          name: item.name,\n        },\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { NavigationStart, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HamburgerMenuService {\n  isExpanded: BehaviorSubject<boolean> = new BehaviorSubject(false);\n\n  constructor(router: Router) {\n    router.events\n      .pipe(filter((event) => event instanceof NavigationStart))\n      .subscribe(() => {\n        this.toggle(true);\n      });\n  }\n\n  /**\n   * toggles the expand state of the hamburger menu\n   */\n  toggle(forceCollapse?: boolean): void {\n    if (forceCollapse) {\n      this.isExpanded.next(false);\n    } else {\n      this.isExpanded.next(!this.isExpanded.value);\n    }\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnDestroy,\n  Renderer2,\n  OnInit,\n} from '@angular/core';\nimport { NavigationEnd, Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { debounceTime, filter } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../misc/icon/index';\nimport { NavigationNode } from './navigation-node.model';\nimport { distinctUntilChanged } from 'rxjs/operators';\nimport { HamburgerMenuService } from './../../../layout/header/hamburger-menu/hamburger-menu.service';\n\n@Component({\n  selector: 'cx-navigation-ui',\n  templateUrl: './navigation-ui.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationUIComponent implements OnInit, OnDestroy {\n  /**\n   * The navigation node to render.\n   */\n  @Input() node: NavigationNode;\n\n  /**\n   * The number of child nodes that must be wrapped.\n   */\n  @Input() wrapAfter: number;\n\n  /**\n   * Flag indicates whether to reset the state of menu navigation (ie. Collapse all submenus) when the menu is closed.\n   */\n  @Input() resetMenuOnClose: boolean;\n\n  /**\n   * the icon type that will be used for navigation nodes\n   * with children.\n   */\n  iconType = ICON_TYPE;\n\n  /**\n   * Indicates whether the navigation should support flyout.\n   * If flyout is set to true, the\n   * nested child navigation nodes will only appear on hover or focus.\n   */\n  @Input() @HostBinding('class.flyout') flyout = true;\n\n  @Input() @HostBinding('class.is-open') isOpen = false;\n\n  private openNodes: HTMLElement[] = [];\n  private subscriptions = new Subscription();\n  private resize = new EventEmitter();\n\n  @HostListener('window:resize')\n  onResize() {\n    this.resize.next();\n  }\n\n  constructor(\n    private router: Router,\n    private renderer: Renderer2,\n    private elemRef: ElementRef,\n    protected hamburgerMenuService: HamburgerMenuService\n  ) {\n    this.subscriptions.add(\n      this.router.events\n        .pipe(filter((event) => event instanceof NavigationEnd))\n        .subscribe(() => this.clear())\n    );\n    this.subscriptions.add(\n      this.resize.pipe(debounceTime(50)).subscribe(() => {\n        this.alignWrappersToRightIfStickOut();\n      })\n    );\n  }\n\n  /**\n   * During initialization of this component, we will check the resetMenuOnClose flag and attach a menu reset listener if needed.\n   */\n  ngOnInit() {\n    if (this.resetMenuOnClose) {\n      this.resetOnMenuCollapse();\n    }\n  }\n\n  /**\n   * This method performs the action of resetting the menu (close all sub menus and return to main options)\n   * when the menu is closed.\n   */\n  resetOnMenuCollapse(): void {\n    this.subscriptions.add(\n      this.hamburgerMenuService?.isExpanded\n        .pipe(distinctUntilChanged(), filter(Boolean))\n        .subscribe(() => {\n          this.reinitalizeMenu();\n        })\n    );\n  }\n\n  /**\n   * This method performs the actions required to reset the state of the menu and reset any visual components.\n   */\n  reinitalizeMenu(): void {\n    if (this.openNodes?.length > 0) {\n      this.clear();\n      this.renderer.removeClass(this.elemRef.nativeElement, 'is-open');\n    }\n  }\n\n  toggleOpen(event: UIEvent): void {\n    if (event.type === 'keydown') {\n      event.preventDefault();\n    }\n    const node = <HTMLElement>event.currentTarget;\n    if (this.openNodes.includes(node)) {\n      if (event.type === 'keydown') {\n        this.back();\n      } else {\n        this.openNodes = this.openNodes.filter((n) => n !== node);\n        this.renderer.removeClass(node, 'is-open');\n      }\n    } else {\n      this.openNodes.push(node);\n    }\n\n    this.updateClasses();\n\n    event.stopImmediatePropagation();\n    event.stopPropagation();\n  }\n\n  back(): void {\n    if (this.openNodes[this.openNodes.length - 1]) {\n      this.renderer.removeClass(\n        this.openNodes[this.openNodes.length - 1],\n        'is-open'\n      );\n      this.openNodes.pop();\n      this.updateClasses();\n    }\n  }\n\n  clear(): void {\n    this.openNodes = [];\n    this.updateClasses();\n  }\n\n  onMouseEnter(event: MouseEvent) {\n    this.alignWrapperToRightIfStickOut(<HTMLElement>event.currentTarget);\n    this.focusAfterPreviousClicked(event);\n  }\n\n  getTotalDepth(node: NavigationNode, depth = 0): number {\n    if (node.children && node.children.length > 0) {\n      return Math.max(\n        ...node.children.map((n) => this.getTotalDepth(n, depth + 1))\n      );\n    } else {\n      return depth;\n    }\n  }\n\n  getColumnCount(length: number): number {\n    return Math.round(length / (this.wrapAfter || length));\n  }\n\n  focusAfterPreviousClicked(event: MouseEvent) {\n    const target: HTMLElement = <HTMLElement>(\n      (event.target || event.relatedTarget)\n    );\n    if (\n      target.ownerDocument.activeElement.matches('nav[tabindex]') &&\n      target.parentElement.matches('.flyout')\n    ) {\n      target.focus();\n    }\n    return target.ownerDocument;\n  }\n\n  ngOnDestroy() {\n    if (this.subscriptions) {\n      this.subscriptions.unsubscribe();\n    }\n  }\n\n  private alignWrapperToRightIfStickOut(node: HTMLElement) {\n    const wrapper = <HTMLElement>node.querySelector('.wrapper');\n    const body = <HTMLElement>node.closest('body');\n    if (wrapper) {\n      this.renderer.removeStyle(wrapper, 'margin-left');\n      if (\n        wrapper.offsetLeft + wrapper.offsetWidth >\n        body.offsetLeft + body.offsetWidth\n      ) {\n        this.renderer.setStyle(\n          wrapper,\n          'margin-left',\n          `${node.offsetWidth - wrapper.offsetWidth}px`\n        );\n      }\n    }\n  }\n\n  private alignWrappersToRightIfStickOut() {\n    const navs = <HTMLCollection>this.elemRef.nativeElement.childNodes;\n    Array.from(navs)\n      .filter((node) => node.tagName === 'NAV')\n      .forEach((nav) => this.alignWrapperToRightIfStickOut(<HTMLElement>nav));\n  }\n\n  private updateClasses(): void {\n    this.openNodes.forEach((node, i) => {\n      if (i + 1 < this.openNodes.length) {\n        this.renderer.addClass(node, 'is-opened');\n        this.renderer.removeClass(node, 'is-open');\n      } else {\n        this.renderer.removeClass(node, 'is-opened');\n        this.renderer.addClass(node, 'is-open');\n      }\n    });\n\n    this.isOpen = this.openNodes.length > 0;\n  }\n}\n","<div\n  *ngIf=\"flyout && node?.children.length > 1\"\n  class=\"back is-open\"\n  (click)=\"back()\"\n>\n  <span>\n    <cx-icon [type]=\"iconType.CARET_LEFT\"></cx-icon>\n    {{ 'common.back' | cxTranslate }}\n  </span>\n</div>\n\n<ng-container *ngFor=\"let child of node?.children\">\n  <ng-container *ngTemplateOutlet=\"nav; context: { node: child, depth: 0 }\">\n  </ng-container>\n</ng-container>\n\n<!-- we generate links in a recursive manner -->\n<ng-template #nav let-node=\"node\" let-depth=\"depth\">\n  <nav\n    (click)=\"toggleOpen($event)\"\n    (mouseenter)=\"onMouseEnter($event)\"\n    (keydown.space)=\"toggleOpen($event)\"\n    (keydown.esc)=\"back()\"\n  >\n    <cx-generic-link\n      *ngIf=\"\n        node.url && (!node.children || node.children?.length === 0);\n        else heading\n      \"\n      [url]=\"node.url\"\n      [target]=\"node.target\"\n      [style]=\"node.styleAttributes\"\n      [class]=\"node.styleClasses\"\n    >\n      {{ node.title }}\n      <cx-icon\n        *ngIf=\"flyout && node.children?.length > 0\"\n        [type]=\"iconType.CARET_DOWN\"\n      ></cx-icon>\n    </cx-generic-link>\n\n    <ng-template #heading>\n      <span [attr.tabindex]=\"flyout && (depth === 0 || node.url) ? 0 : -1\">\n        {{ node.title }}\n        <cx-icon\n          *ngIf=\"flyout && node.children?.length > 0\"\n          [type]=\"iconType.CARET_DOWN\"\n        ></cx-icon>\n      </span>\n    </ng-template>\n\n    <!-- we add a wrapper to allow for better layout handling in CSS -->\n    <div class=\"wrapper\" *ngIf=\"node.children?.length > 0\">\n      <cx-generic-link\n        *ngIf=\"node.url\"\n        [url]=\"node.url\"\n        [target]=\"node.target\"\n        class=\"all\"\n      >\n        {{ 'navigation.shopAll' | cxTranslate: { navNode: node.title } }}\n      </cx-generic-link>\n      <div\n        class=\"childs\"\n        [attr.depth]=\"getTotalDepth(node)\"\n        [attr.wrap-after]=\"node.children?.length > wrapAfter ? wrapAfter : null\"\n        [attr.columns]=\"getColumnCount(node.children?.length)\"\n      >\n        <ng-container *ngFor=\"let child of node.children\">\n          <ng-container\n            *ngTemplateOutlet=\"nav; context: { node: child, depth: depth + 1 }\"\n          >\n          </ng-container>\n        </ng-container>\n      </div>\n    </div>\n  </nav>\n</ng-template>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-category-navigation',\n  templateUrl: './category-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CategoryNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  data$: Observable<CmsNavigationComponent> = this.componentData.data$;\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","<cx-navigation-ui\n  *ngIf=\"data$ | async as data\"\n  [node]=\"node$ | async\"\n  [ngClass]=\"data.styleClass\"\n  [wrapAfter]=\"data.wrapAfter\"\n  [resetMenuOnClose]=\"data.resetMenuOnClose\"\n></cx-navigation-ui>\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from './navigation-node.model';\nimport { NavigationService } from './navigation.service';\n\n@Component({\n  selector: 'cx-navigation',\n  templateUrl: './navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class NavigationComponent {\n  node$: Observable<NavigationNode> = this.service.createNavigation(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map((d) => d?.styleClass)\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","<cx-navigation-ui [node]=\"node$ | async\" [ngClass]=\"styleClass$ | async\">\n</cx-navigation-ui>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { NavigationUIComponent } from './navigation-ui.component';\nimport { NavigationComponent } from './navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    IconModule,\n    GenericLinkModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        NavigationComponent: {\n          component: NavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [NavigationComponent, NavigationUIComponent],\n  exports: [NavigationComponent, NavigationUIComponent],\n})\nexport class NavigationModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { CategoryNavigationComponent } from './category-navigation.component';\n\n@NgModule({\n  imports: [CommonModule, NavigationModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CategoryNavigationComponent: {\n          component: CategoryNavigationComponent,\n          data: {\n            resetMenuOnClose: true,\n          },\n        },\n      },\n    }),\n  ],\n  declarations: [CategoryNavigationComponent],\n  exports: [CategoryNavigationComponent],\n})\nexport class CategoryNavigationModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { CmsNavigationComponent } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { NavigationNode } from '../navigation/navigation-node.model';\nimport { NavigationService } from '../navigation/navigation.service';\n\n@Component({\n  selector: 'cx-footer-navigation',\n  templateUrl: './footer-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FooterNavigationComponent {\n  node$: Observable<NavigationNode> = this.service.getNavigationNode(\n    this.componentData.data$\n  );\n\n  styleClass$: Observable<string> = this.componentData.data$.pipe(\n    map((d) => d?.styleClass)\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<CmsNavigationComponent>,\n    protected service: NavigationService\n  ) {}\n}\n","<cx-navigation-ui\n  [node]=\"node$ | async\"\n  [flyout]=\"false\"\n  [ngClass]=\"styleClass$ | async\"\n></cx-navigation-ui>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { GenericLinkModule } from '../../../shared/components/generic-link/generic-link.module';\nimport { NavigationModule } from '../navigation/navigation.module';\nimport { FooterNavigationComponent } from './footer-navigation.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    NavigationModule,\n    GenericLinkModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        FooterNavigationComponent: {\n          component: FooterNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [FooterNavigationComponent],\n  exports: [FooterNavigationComponent],\n})\nexport class FooterNavigationModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  PageMetaModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { PageTitleComponent } from './page-title.component';\n\n@NgModule({\n  imports: [CommonModule, RouterModule, PageMetaModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        PageTitleComponent: {\n          component: PageTitleComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [PageTitleComponent],\n  exports: [PageTitleComponent],\n  entryComponents: [PageTitleComponent],\n})\nexport class PageTitleModule {}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({ name: 'cxHighlight' })\nexport class HighlightPipe implements PipeTransform {\n  transform(text: string, match?: string): string {\n    if (!match) {\n      return text;\n    }\n    return text.replace(\n      match.trim(),\n      `<span class=\"highlight\">${match.trim()}</span>`\n    );\n  }\n}\n","import { CxEvent, Suggestion } from '@spartacus/core';\n\n/**\n * Indicates that the user chose a suggestion\n */\nexport class SearchBoxSuggestionSelectedEvent extends CxEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'SearchBoxSuggestionSelectedEvent';\n  freeText: string;\n  selectedSuggestion: string;\n  searchSuggestions: Suggestion[];\n}\n\n/**\n * Indicates that the user chose a product suggestion\n */\nexport class SearchBoxProductSelectedEvent extends CxEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'SearchBoxProductSelectedEvent';\n  freeText: string;\n  productCode: string;\n}\n","import { Injectable } from '@angular/core';\nimport {\n  EventService,\n  ProductSearchPage,\n  RoutingService,\n  SearchboxService,\n  TranslationService,\n  WindowRef,\n} from '@spartacus/core';\nimport { combineLatest, Observable, of } from 'rxjs';\nimport { map, switchMap, tap } from 'rxjs/operators';\nimport {\n  SearchBoxProductSelectedEvent,\n  SearchBoxSuggestionSelectedEvent,\n} from './search-box.events';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst HAS_SEARCH_RESULT_CLASS = 'has-searchbox-results';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SearchBoxComponentService {\n  constructor(\n    public searchService: SearchboxService,\n    protected routingService: RoutingService,\n    protected translationService: TranslationService,\n    protected winRef: WindowRef,\n    protected eventService: EventService\n  ) {}\n\n  /**\n   * Executes the search for products and suggestions,\n   * unless the configuration is setup to not search for\n   * products or suggestions.\n   */\n  search(query: string, config: SearchBoxConfig): void {\n    if (!query || query === '') {\n      this.clearResults();\n      return;\n    }\n\n    if (\n      config.minCharactersBeforeRequest &&\n      query.length < config.minCharactersBeforeRequest\n    ) {\n      return;\n    }\n\n    if (config.displayProducts) {\n      this.searchService.search(query, {\n        pageSize: config.maxProducts,\n      });\n    }\n\n    if (config.displaySuggestions) {\n      this.searchService.searchSuggestions(query, {\n        pageSize: config.maxSuggestions,\n      });\n    }\n  }\n\n  /**\n   * Returns an observable with the SearchResults. When there's any\n   * result, the body tag will get a classname, so that specific style\n   * rules can be applied.\n   */\n  getResults(config: SearchBoxConfig): Observable<SearchResults> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n      this.getSearchMessage(config),\n    ]).pipe(\n      map(([productResults, suggestions, message]) => {\n        return {\n          products: productResults ? productResults.products : null,\n          suggestions,\n          message,\n        };\n      }),\n      tap((results) =>\n        this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, this.hasResults(results))\n      )\n    );\n  }\n\n  /**\n   * Clears the searchbox results, so that old values are\n   * no longer emited upon next search.\n   */\n  clearResults() {\n    this.searchService.clearResults();\n    this.toggleBodyClass(HAS_SEARCH_RESULT_CLASS, false);\n  }\n\n  hasBodyClass(className: string): boolean {\n    return this.winRef.document.body.classList.contains(className);\n  }\n\n  toggleBodyClass(className: string, add?: boolean) {\n    if (add === undefined) {\n      this.winRef.document.body.classList.toggle(className);\n    } else {\n      add\n        ? this.winRef.document.body.classList.add(className)\n        : this.winRef.document.body.classList.remove(className);\n    }\n  }\n\n  /**\n   * Dispatches a searchbox event for product selected\n   *\n   * @param eventData data for the \"SearchBoxProductSelectedEvent\"\n   */\n  dispatchProductSelectedEvent(eventData: SearchBoxProductSelectedEvent): void {\n    this.eventService.dispatch<SearchBoxProductSelectedEvent>(\n      {\n        freeText: eventData.freeText,\n        productCode: eventData.productCode,\n      },\n      SearchBoxProductSelectedEvent\n    );\n  }\n\n  /**\n   * Dispatches a searchbox event for suggestion selected\n   *\n   * @param eventData data for the \"SearchBoxSuggestionSelectedEvent\"\n   */\n  dispatchSuggestionSelectedEvent(\n    eventData: SearchBoxSuggestionSelectedEvent\n  ): void {\n    this.eventService.dispatch<SearchBoxSuggestionSelectedEvent>(\n      {\n        freeText: eventData.freeText,\n        selectedSuggestion: eventData.selectedSuggestion,\n        searchSuggestions: eventData.searchSuggestions,\n      },\n      SearchBoxSuggestionSelectedEvent\n    );\n  }\n\n  /**\n   * For search results model, it returns true when:\n   * * there is any product OR\n   * * the is any search suggestion OR\n   * * there is a message.\n   *\n   * Otherwise it returns false.\n   */\n  protected hasResults(results: SearchResults): boolean {\n    return (\n      (!!results.products && results.products.length > 0) ||\n      (!!results.suggestions && results.suggestions.length > 0) ||\n      !!results.message\n    );\n  }\n\n  /**\n   * Emits product search results in case when the config property `displayProducts` is true.\n   * Otherwise it emits an empty object.\n   */\n  protected getProductResults(\n    config: SearchBoxConfig\n  ): Observable<ProductSearchPage> {\n    if (config.displayProducts) {\n      return this.searchService.getResults();\n    } else {\n      return of({});\n    }\n  }\n\n  /**\n   * Loads suggestions from the backend. In case there's no suggestion\n   * available, we try to get an exact match suggestion.\n   */\n  protected getProductSuggestions(\n    config: SearchBoxConfig\n  ): Observable<string[]> {\n    if (!config.displaySuggestions) {\n      return of([]);\n    } else {\n      return this.searchService.getSuggestionResults().pipe(\n        map((res) => res.map((suggestion) => suggestion.value)),\n        switchMap((suggestions) => {\n          if (suggestions.length === 0) {\n            return this.getExactSuggestion(config).pipe(\n              map((match) => (match ? [match] : []))\n            );\n          } else {\n            return of(suggestions);\n          }\n        })\n      );\n    }\n  }\n\n  /**\n   * Whenever there is at least 1 product, we simulate\n   * a suggestion to provide easy access to the search result page\n   */\n  protected getExactSuggestion(config: SearchBoxConfig): Observable<string> {\n    return this.getProductResults(config).pipe(\n      switchMap((productResult) => {\n        return productResult.products && productResult.products.length > 0\n          ? this.fetchTranslation('searchBox.help.exactMatch', {\n              term: productResult.freeTextSearch,\n            })\n          : of(null);\n      })\n    );\n  }\n\n  /**\n   * Emits a 'no match' message, in case the product search results and search suggestions are empty.\n   * Otherwise it emits null.\n   */\n  protected getSearchMessage(config: SearchBoxConfig): Observable<string> {\n    return combineLatest([\n      this.getProductResults(config),\n      this.getProductSuggestions(config),\n    ]).pipe(\n      switchMap(([productResult, suggestions]) => {\n        if (\n          productResult &&\n          productResult.products &&\n          productResult.products.length === 0 &&\n          suggestions &&\n          suggestions.length === 0\n        ) {\n          return this.fetchTranslation('searchBox.help.noMatch');\n        } else {\n          return of(null);\n        }\n      })\n    );\n  }\n\n  /**\n   * Navigates to the search result page with a given query\n   */\n  launchSearchPage(query: string): void {\n    this.routingService.go({\n      cxRoute: 'search',\n      params: { query },\n    });\n  }\n\n  private fetchTranslation(\n    translationKey: string,\n    options?: any\n  ): Observable<string> {\n    return this.translationService.translate(translationKey, options);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n} from '@angular/core';\nimport {\n  CmsSearchBoxComponent,\n  PageType,\n  RoutingService,\n  WindowRef,\n} from '@spartacus/core';\nimport { Observable, of, Subscription } from 'rxjs';\nimport { filter, map, switchMap, tap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../cms-components/misc/icon/index';\nimport { CmsComponentData } from '../../../cms-structure/page/model/cms-component-data';\nimport { SearchBoxComponentService } from './search-box-component.service';\nimport {\n  SearchBoxProductSelectedEvent,\n  SearchBoxSuggestionSelectedEvent,\n} from './search-box.events';\nimport { SearchBoxConfig, SearchResults } from './search-box.model';\n\nconst DEFAULT_SEARCH_BOX_CONFIG: SearchBoxConfig = {\n  minCharactersBeforeRequest: 1,\n  displayProducts: true,\n  displaySuggestions: true,\n  maxProducts: 5,\n  maxSuggestions: 5,\n  displayProductImages: true,\n};\n\n@Component({\n  selector: 'cx-searchbox',\n  templateUrl: './search-box.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SearchBoxComponent implements OnInit, OnDestroy {\n  @Input() config: SearchBoxConfig;\n\n  /**\n   * Sets the search box input field\n   */\n  @Input('queryText')\n  set queryText(value: string) {\n    if (value) {\n      this.search(value);\n    }\n  }\n\n  iconTypes = ICON_TYPE;\n\n  /**\n   * In some occasions we need to ignore the close event,\n   * for example when we click inside the search result section.\n   */\n  private ignoreCloseEvent = false;\n  chosenWord = '';\n  public subscription: Subscription;\n\n  constructor(\n    protected searchBoxComponentService: SearchBoxComponentService,\n    @Optional()\n    protected componentData: CmsComponentData<CmsSearchBoxComponent>,\n    protected winRef: WindowRef,\n    protected routingService: RoutingService\n  ) {}\n\n  /**\n   * Returns the SearchBox configuration. The configuration is driven by multiple\n   * layers: default configuration, (optional) backend configuration and (optional)\n   * input configuration.\n   */\n  protected config$: Observable<SearchBoxConfig> = (\n    this.componentData?.data$ || of({} as any)\n  ).pipe(\n    map((config) => {\n      const isBool = (obj: SearchBoxConfig, prop: string): boolean =>\n        obj?.[prop] !== 'false' && obj?.[prop] !== false;\n\n      return {\n        ...DEFAULT_SEARCH_BOX_CONFIG,\n        ...config,\n        displayProducts: isBool(config, 'displayProducts'),\n        displayProductImages: isBool(config, 'displayProductImages'),\n        displaySuggestions: isBool(config, 'displaySuggestions'),\n        // we're merging the (optional) input of this component, but write the merged\n        // result back to the input property, as the view logic depends on it.\n        ...this.config,\n      };\n    }),\n    tap((config) => (this.config = config))\n  );\n\n  results$: Observable<SearchResults> = this.config$.pipe(\n    switchMap((config) => this.searchBoxComponentService.getResults(config))\n  );\n\n  ngOnInit(): void {\n    this.subscription = this.routingService\n      .getRouterState()\n      .pipe(filter((data) => !data.nextState))\n      .subscribe((data) => {\n        if (\n          !(\n            data.state.context?.id === 'search' &&\n            data.state.context?.type === PageType.CONTENT_PAGE\n          )\n        )\n          this.chosenWord = '';\n      });\n  }\n\n  /**\n   * Closes the searchBox and opens the search result page.\n   */\n  search(query: string): void {\n    this.searchBoxComponentService.search(query, this.config);\n    // force the searchBox to open\n    this.open();\n  }\n\n  /**\n   * Opens the type-ahead searchBox\n   */\n  open(): void {\n    this.searchBoxComponentService.toggleBodyClass('searchbox-is-active', true);\n  }\n\n  /**\n   * Dispatch UI events for Suggestion selected\n   *\n   * @param eventData the data for the event\n   */\n  dispatchSuggestionEvent(eventData: SearchBoxSuggestionSelectedEvent): void {\n    this.searchBoxComponentService.dispatchSuggestionSelectedEvent(eventData);\n  }\n\n  /**\n   * Dispatch UI events for Product selected\n   *\n   * @param eventData the data for the event\n   */\n  dispatchProductEvent(eventData: SearchBoxProductSelectedEvent): void {\n    this.searchBoxComponentService.dispatchProductSelectedEvent(eventData);\n  }\n\n  /**\n   * Closes the type-ahead searchBox.\n   */\n  close(event: UIEvent, force?: boolean): void {\n    // Use timeout to detect changes\n    setTimeout(() => {\n      if ((!this.ignoreCloseEvent && !this.isSearchBoxFocused()) || force) {\n        this.blurSearchBox(event);\n      }\n    });\n  }\n\n  protected blurSearchBox(event: UIEvent): void {\n    this.searchBoxComponentService.toggleBodyClass(\n      'searchbox-is-active',\n      false\n    );\n    if (event && event.target) {\n      (<HTMLElement>event.target).blur();\n    }\n  }\n\n  // Check if focus is on searchbox or result list elements\n  private isSearchBoxFocused(): boolean {\n    return (\n      this.getResultElements().includes(this.getFocusedElement()) ||\n      this.winRef.document.querySelector('input[aria-label=\"Search\"]') ===\n        this.getFocusedElement()\n    );\n  }\n\n  /**\n   * Especially in mobile we do not want the search icon\n   * to focus the input again when it's already open.\n   * */\n  avoidReopen(event: UIEvent): void {\n    if (this.searchBoxComponentService.hasBodyClass('searchbox-is-active')) {\n      this.close(event);\n      event.preventDefault();\n    }\n  }\n\n  // Return result list as HTMLElement array\n  private getResultElements(): HTMLElement[] {\n    return Array.from(\n      this.winRef.document.querySelectorAll(\n        '.products > li a, .suggestions > li a'\n      )\n    );\n  }\n\n  // Return focused element as HTMLElement\n  private getFocusedElement(): HTMLElement {\n    return <HTMLElement>this.winRef.document.activeElement;\n  }\n\n  updateChosenWord(chosenWord: string): void {\n    this.chosenWord = chosenWord;\n  }\n\n  private getFocusedIndex(): number {\n    return this.getResultElements().indexOf(this.getFocusedElement());\n  }\n\n  // Focus on previous item in results list\n  focusPreviousChild(event: UIEvent) {\n    event.preventDefault(); // Negate normal keyscroll\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n    // Focus on last index moving to first\n    if (results.length) {\n      if (focusedIndex < 1) {\n        results[results.length - 1].focus();\n      } else {\n        results[focusedIndex - 1].focus();\n      }\n    }\n  }\n\n  // Focus on next item in results list\n  focusNextChild(event: UIEvent) {\n    this.open();\n    event.preventDefault(); // Negate normal keyscroll\n    const [results, focusedIndex] = [\n      this.getResultElements(),\n      this.getFocusedIndex(),\n    ];\n    // Focus on first index moving to last\n    if (results.length) {\n      if (focusedIndex >= results.length - 1) {\n        results[0].focus();\n      } else {\n        results[focusedIndex + 1].focus();\n      }\n    }\n  }\n\n  /**\n   * Opens the PLP with the given query.\n   *\n   * TODO: if there's a single product match, we could open the PDP.\n   */\n  launchSearchResult(event: UIEvent, query: string): void {\n    if (!query || query.trim().length === 0) {\n      return;\n    }\n    this.close(event);\n    this.searchBoxComponentService.launchSearchPage(query);\n  }\n\n  /**\n   * Disables closing the search result list.\n   */\n  disableClose(): void {\n    this.ignoreCloseEvent = true;\n  }\n\n  preventDefault(ev: UIEvent): void {\n    ev.preventDefault();\n  }\n\n  /**\n   * Clears the search box input field\n   */\n  clear(el: HTMLInputElement): void {\n    this.disableClose();\n    el.value = '';\n    this.searchBoxComponentService.clearResults();\n\n    // Use Timeout to run after blur event to prevent the searchbox from closing on mobile\n    setTimeout(() => {\n      // Retain focus on input lost by clicking on icon\n      el.focus();\n      this.ignoreCloseEvent = false;\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.subscription?.unsubscribe();\n  }\n}\n","<label class=\"searchbox\" [class.dirty]=\"!!searchInput.value\">\n  <input\n    #searchInput\n    [placeholder]=\"'searchBox.placeholder' | cxTranslate\"\n    autocomplete=\"off\"\n    aria-describedby=\"initialDescription\"\n    aria-controls=\"results\"\n    [attr.aria-label]=\"'common.search' | cxTranslate\"\n    (focus)=\"open()\"\n    (click)=\"open()\"\n    (input)=\"search(searchInput.value)\"\n    (blur)=\"close($event)\"\n    (keydown.escape)=\"close($event)\"\n    (keydown.enter)=\"\n      close($event, true);\n      launchSearchResult($event, searchInput.value);\n      updateChosenWord(searchInput.value)\n    \"\n    (keydown.arrowup)=\"focusPreviousChild($event)\"\n    (keydown.arrowdown)=\"focusNextChild($event)\"\n    value=\"{{ chosenWord }}\"\n  />\n\n  <button\n    [attr.aria-label]=\"'common.reset' | cxTranslate\"\n    (mousedown)=\"clear(searchInput)\"\n    (keydown.enter)=\"clear(searchInput)\"\n    class=\"reset\"\n  >\n    <cx-icon [type]=\"iconTypes.RESET\"></cx-icon>\n  </button>\n\n  <div role=\"presentation\" class=\"search-icon\">\n    <cx-icon [type]=\"iconTypes.SEARCH\"></cx-icon>\n  </div>\n\n  <button\n    [attr.aria-label]=\"'common.search' | cxTranslate\"\n    class=\"search\"\n    (click)=\"open()\"\n  >\n    <cx-icon [type]=\"iconTypes.SEARCH\"></cx-icon>\n  </button>\n</label>\n\n<div\n  *ngIf=\"results$ | async as result\"\n  class=\"results\"\n  id=\"results\"\n  (click)=\"close($event, true)\"\n  role=\"listbox\"\n>\n  <div\n    *ngIf=\"result.message\"\n    class=\"message\"\n    [innerHTML]=\"result.message\"\n  ></div>\n\n  <ul\n    class=\"suggestions\"\n    attr.aria-label=\"{{ 'searchBox.ariaLabelSuggestions' | cxTranslate }}\"\n    tabindex=\"0\"\n  >\n    <li *ngFor=\"let suggestion of result.suggestions\">\n      <a\n        [innerHTML]=\"suggestion | cxHighlight: searchInput.value\"\n        [routerLink]=\"\n          {\n            cxRoute: 'search',\n            params: { query: suggestion }\n          } | cxUrl\n        \"\n        (keydown.arrowup)=\"focusPreviousChild($event)\"\n        (keydown.arrowdown)=\"focusNextChild($event)\"\n        (keydown.enter)=\"close($event, true)\"\n        (keydown.escape)=\"close($event, true)\"\n        (blur)=\"close($event)\"\n        (mousedown)=\"preventDefault($event)\"\n        (click)=\"\n          dispatchSuggestionEvent({\n            freeText: searchInput.value,\n            selectedSuggestion: suggestion,\n            searchSuggestions: result.suggestions\n          });\n          updateChosenWord(suggestion)\n        \"\n      >\n      </a>\n    </li>\n  </ul>\n\n  <ul\n    class=\"products\"\n    *ngIf=\"result.products\"\n    attr.aria-label=\"{{ 'searchBox.ariaLabelProducts' | cxTranslate }}\"\n    tabindex=\"0\"\n  >\n    <li *ngFor=\"let product of result.products\">\n      <a\n        [routerLink]=\"\n          {\n            cxRoute: 'product',\n            params: product\n          } | cxUrl\n        \"\n        [class.has-media]=\"config.displayProductImages\"\n        (keydown.arrowup)=\"focusPreviousChild($event)\"\n        (keydown.arrowdown)=\"focusNextChild($event)\"\n        (keydown.enter)=\"close($event, true)\"\n        (keydown.escape)=\"close($event, true)\"\n        (blur)=\"close($event)\"\n        (mousedown)=\"preventDefault($event)\"\n        (click)=\"\n          dispatchProductEvent({\n            freeText: searchInput.value,\n            productCode: product.code\n          })\n        \"\n      >\n        <cx-media\n          *ngIf=\"config.displayProductImages\"\n          [container]=\"product.images?.PRIMARY\"\n          format=\"thumbnail\"\n          role=\"presentation\"\n        ></cx-media>\n        <div class=\"name\" [innerHTML]=\"product.nameHtml\"></div>\n        <span class=\"price\">{{ product.price?.formattedValue }}</span>\n      </a>\n    </li>\n  </ul>\n  <span id=\"initialDescription\" class=\"cx-visually-hidden\">\n    {{ 'searchBox.initialDescription' | cxTranslate }}\n  </span>\n  <div\n    *ngIf=\"result.suggestions?.length || result.products?.length\"\n    aria-live=\"assertive\"\n    class=\"cx-visually-hidden\"\n  >\n    {{\n      'searchBox.suggestionsResult'\n        | cxTranslate: { count: result.suggestions?.length }\n    }}\n    {{\n      'searchBox.productsResult'\n        | cxTranslate: { count: result.products?.length }\n    }}\n    {{ 'searchBox.initialDescription' | cxTranslate }}\n  </div>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { IconModule } from '../../misc/icon/icon.module';\nimport { HighlightPipe } from './highlight.pipe';\nimport { SearchBoxComponent } from './search-box.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    IconModule,\n    UrlModule,\n    I18nModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        SearchBoxComponent: {\n          component: SearchBoxComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [SearchBoxComponent, HighlightPipe],\n  exports: [SearchBoxComponent, HighlightPipe],\n})\nexport class SearchBoxModule {}\n","import { Injectable } from '@angular/core';\nimport { Product, ProductService, SemanticPathService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { ProductCarouselItem } from './product-carousel.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductCarouselService {\n  constructor(\n    protected productService: ProductService,\n    protected semanticPathService: SemanticPathService\n  ) {}\n\n  /**\n   * Loads the product data and converts it `CarouselItem`.\n   */\n  loadProduct(code: string): Observable<ProductCarouselItem> {\n    return this.productService.get(code).pipe(\n      filter(Boolean),\n      map((product) => this.convertProduct(product))\n    );\n  }\n\n  /**\n   * Converts the product to a generic CarouselItem\n   */\n  private convertProduct(\n    source: Product,\n    displayTitle = true,\n    displayProductPrices = true\n  ): ProductCarouselItem {\n    const item: ProductCarouselItem = {};\n    if (displayTitle) {\n      item.title = source.name;\n    }\n    if (displayProductPrices && source.price && source.price.formattedValue) {\n      item.price = source.price.formattedValue;\n    }\n    if (source.images && source.images.PRIMARY) {\n      item.media = {\n        container: source.images.PRIMARY,\n        format: 'product',\n      };\n    }\n    item.route = this.semanticPathService.transform({\n      cxRoute: 'product',\n      params: source,\n    });\n    return item;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductCarouselComponent as model,\n  Product,\n  ProductScope,\n  ProductService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\n\n@Component({\n  selector: 'cx-product-carousel',\n  templateUrl: './product-carousel.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductCarouselComponent {\n  protected readonly PRODUCT_SCOPE = ProductScope.LIST;\n\n  private componentData$: Observable<model> = this.componentData.data$.pipe(\n    filter(Boolean)\n  );\n\n  /**\n   * returns an Observable string for the title.\n   */\n  title$: Observable<string> = this.componentData$.pipe(\n    map((data) => data.title)\n  );\n\n  /**\n   * Observable that holds an Array of Observables. This is done, so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product>[]> = this.componentData$.pipe(\n    map((data) => data.productCodes?.trim().split(' ') ?? []),\n    map((codes) =>\n      codes.map((code) =>\n        this.productService.get(code, [this.PRODUCT_SCOPE, ProductScope.PRICE])\n      )\n    )\n  );\n\n  constructor(\n    protected componentData: CmsComponentData<model>,\n    protected productService: ProductService\n  ) {}\n}\n","<cx-carousel\n  [items]=\"items$ | async\"\n  [title]=\"title$ | async\"\n  [template]=\"carouselItem\"\n  itemWidth=\"285px\"\n>\n</cx-carousel>\n\n<ng-template #carouselItem let-item=\"item\">\n  <a tabindex=\"0\" [routerLink]=\"{ cxRoute: 'product', params: item } | cxUrl\">\n    <cx-media\n      [container]=\"item.images?.PRIMARY\"\n      format=\"product\"\n      [alt]=\"item.name\"\n    ></cx-media>\n    <h3>\n      {{ item.name }}\n    </h3>\n    <div class=\"price\">\n      {{ item.price?.formattedValue }}\n    </div>\n  </a>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\nimport {\n  CarouselModule,\n  MediaModule,\n} from '../../../../shared/components/index';\nimport { ProductCarouselComponent } from './product-carousel.component';\n\n@NgModule({\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductCarouselComponent: {\n          component: ProductCarouselComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductCarouselComponent],\n  exports: [ProductCarouselComponent],\n})\nexport class ProductCarouselModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport {\n  CmsProductReferencesComponent,\n  isNotNullable,\n  Product,\n  ProductReference,\n  ProductReferenceService,\n} from '@spartacus/core';\nimport { Observable, of } from 'rxjs';\nimport { filter, map, switchMap, tap, withLatestFrom } from 'rxjs/operators';\nimport { CmsComponentData } from '../../../../cms-structure/page/model/cms-component-data';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-references',\n  templateUrl: './product-references.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReferencesComponent {\n  constructor(\n    protected cmsComponentData: CmsComponentData<CmsProductReferencesComponent>,\n    protected currentProductService: CurrentProductService,\n    protected productReferenceService: ProductReferenceService\n  ) {}\n\n  protected get componentData$(): Observable<CmsProductReferencesComponent> {\n    return this.cmsComponentData.data$.pipe(filter(Boolean));\n  }\n\n  /**\n   * Returns an Observable String for the product code\n   */\n  protected get productCode$(): Observable<string> {\n    return this.currentProductService.getProduct().pipe(\n      filter(isNotNullable),\n      map((product) => product.code),\n      tap((_) => this.productReferenceService.cleanReferences())\n    );\n  }\n\n  /**\n   * Returns an Observable String for the title\n   */\n  get title$(): Observable<string> {\n    return this.componentData$.pipe(map((data) => data?.title));\n  }\n\n  /**\n   * Observable with an Array of Observables. This is done so that\n   * the component UI could consider to lazy load the UI components when they're\n   * in the viewpoint.\n   */\n  items$: Observable<Observable<Product>[]> = this.productCode$.pipe(\n    withLatestFrom(this.componentData$),\n    tap(([productCode, data]) =>\n      this.productReferenceService.loadProductReferences(\n        productCode,\n        data?.productReferenceTypes\n      )\n    ),\n    switchMap(([productCode, data]) =>\n      this.getProductReferences(productCode, data?.productReferenceTypes)\n    )\n  );\n\n  /**\n   * Returns an observable for product references\n   */\n  private getProductReferences(\n    code: string,\n    referenceType: string\n  ): Observable<Observable<Product>[]> {\n    return this.productReferenceService\n      .getProductReferences(code, referenceType)\n      .pipe(\n        filter(Boolean),\n        map((references: ProductReference[]) =>\n          references.map((reference) => of(reference.target))\n        )\n      );\n  }\n}\n","<cx-carousel\n  [title]=\"title$ | async\"\n  [items]=\"items$ | async\"\n  [template]=\"carouselItem\"\n>\n</cx-carousel>\n\n<ng-template #carouselItem let-item=\"item\">\n  <a tabindex=\"0\" [routerLink]=\"{ cxRoute: 'product', params: item } | cxUrl\">\n    <cx-media [container]=\"item.images?.PRIMARY\" format=\"product\"></cx-media>\n    <h4>{{ item.name }}</h4>\n    <div class=\"price\">{{ item.price?.formattedValue }}</div>\n  </a>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig, UrlModule } from '@spartacus/core';\nimport { CarouselModule } from '../../../../shared/components/carousel/carousel.module';\nimport { MediaModule } from '../../../../shared/components/media/media.module';\nimport { ProductReferencesComponent } from './product-references.component';\n\n@NgModule({\n  imports: [CommonModule, CarouselModule, MediaModule, RouterModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReferencesComponent: {\n          component: ProductReferencesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReferencesComponent],\n  exports: [ProductReferencesComponent],\n})\nexport class ProductReferencesModule {}\n","import { ViewConfig } from '../../../shared/config/view-config';\n\nexport const defaultViewConfig: ViewConfig = {\n  view: {\n    defaultPageSize: 12,\n    infiniteScroll: {\n      active: false,\n      productLimit: 0,\n      showMoreButton: false,\n    },\n  },\n};\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { ImageGroup, isNotNullable, Product } from '@spartacus/core';\nimport { BehaviorSubject, combineLatest, Observable, of } from 'rxjs';\nimport { distinctUntilChanged, filter, map, tap } from 'rxjs/operators';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-images',\n  templateUrl: './product-images.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductImagesComponent {\n  protected mainMediaContainer = new BehaviorSubject<any>(null);\n\n  protected product$: Observable<Product> = this.currentProductService\n    .getProduct()\n    .pipe(\n      filter(isNotNullable),\n      distinctUntilChanged(),\n      tap((p: Product) => {\n        this.mainMediaContainer.next(p.images?.PRIMARY ? p.images.PRIMARY : {});\n      })\n    );\n\n  thumbs$: Observable<any[]> = this.product$.pipe(\n    map((p: Product) => this.createThumbs(p))\n  );\n\n  mainImage$ = combineLatest([this.product$, this.mainMediaContainer]).pipe(\n    map(([, container]) => container)\n  );\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  openImage(item: any): void {\n    this.mainMediaContainer.next(item);\n  }\n\n  isActive(thumbnail: ImageGroup): Observable<boolean> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        return (\n          container.zoom &&\n          container.zoom.url &&\n          thumbnail.zoom &&\n          thumbnail.zoom.url &&\n          container.zoom.url === thumbnail.zoom.url\n        );\n      })\n    );\n  }\n\n  /** find the index of the main media in the list of media */\n  getActive(thumbs: any[]): Observable<number> {\n    return this.mainMediaContainer.pipe(\n      filter(Boolean),\n      map((container: any) => {\n        const current = thumbs.find(\n          (t) =>\n            t.media &&\n            container.zoom &&\n            t.media.container &&\n            t.media.container.zoom &&\n            t.media.container.zoom.url === container.zoom.url\n        );\n        return thumbs.indexOf(current);\n      })\n    );\n  }\n\n  /**\n   * Return an array of CarouselItems for the product thumbnails.\n   * In case there are less then 2 thumbs, we return null.\n   */\n  private createThumbs(product: Product): Observable<any>[] {\n    if (\n      !product.images ||\n      !product.images.GALLERY ||\n      product.images.GALLERY.length < 2\n    ) {\n      return [];\n    }\n\n    return (<any[]>product.images.GALLERY).map((c) => of({ container: c }));\n  }\n}\n","<ng-container *ngIf=\"mainImage$ | async as main\">\n  <cx-media [container]=\"main\"></cx-media>\n</ng-container>\n\n<ng-container *ngIf=\"thumbs$ | async as thumbs\">\n  <cx-carousel\n    *ngIf=\"thumbs.length\"\n    class=\"thumbs\"\n    [items]=\"thumbs\"\n    itemWidth=\"120px\"\n    [hideIndicators]=\"false\"\n    [template]=\"thumb\"\n  ></cx-carousel>\n</ng-container>\n\n<ng-template #thumb let-item=\"item\">\n  <cx-media\n    [container]=\"item.container\"\n    tabindex=\"0\"\n    (focus)=\"openImage(item.container)\"\n    [class.is-active]=\"isActive(item.container) | async\"\n    format=\"product\"\n  >\n  </cx-media>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/index';\nimport { CarouselModule } from '../../../shared/components/carousel/index';\nimport { MediaModule } from '../../../shared/components/media/media.module';\nimport { ProductImagesComponent } from './product-images.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    OutletModule,\n    CarouselModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductImagesComponent: {\n          component: ProductImagesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductImagesComponent],\n  exports: [ProductImagesComponent],\n})\nexport class ProductImagesModule {}\n","import {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  Component,\n} from '@angular/core';\nimport { Product, TranslationService, WindowRef } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\n\n@Component({\n  selector: 'cx-product-intro',\n  templateUrl: './product-intro.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductIntroComponent implements AfterContentChecked {\n  reviewsTabAvailable = new BehaviorSubject<boolean>(false);\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  constructor(\n    protected currentProductService: CurrentProductService,\n    private translationService: TranslationService,\n    protected winRef: WindowRef\n  ) {}\n\n  ngAfterContentChecked() {\n    this.reviewsTabAvailable.next(!!this.getReviewsComponent());\n  }\n\n  // Scroll to views component on page and click \"Reviews\" tab\n  showReviews() {\n    // Use translated label for Reviews tab reference\n    this.translationService\n      .translate('TabPanelContainer.tabs.ProductReviewsTabComponent')\n      .subscribe((reviewsTabLabel) => {\n        const tabsComponent = this.getTabsComponent();\n        const reviewsTab = this.getTabByLabel(reviewsTabLabel, tabsComponent);\n        const reviewsComponent = this.getReviewsComponent();\n        if (reviewsTab && reviewsComponent) {\n          this.clickTabIfInactive(reviewsTab);\n          setTimeout(\n            () => reviewsComponent.scrollIntoView({ behavior: 'smooth' }),\n            0\n          );\n        }\n      })\n      .unsubscribe();\n  }\n\n  // NOTE: Does not currently exists as its own component\n  // but part of tabs component. This is likely to change in refactor.\n  private getReviewsComponent(): Element {\n    return this.winRef.document.querySelector('cx-product-reviews');\n  }\n\n  // Get Tabs Component if exists on page\n  private getTabsComponent(): Element {\n    return this.winRef.document.querySelector('cx-tab-paragraph-container');\n  }\n\n  // Click to activate tab if not already active\n  private clickTabIfInactive(tab: HTMLElement): void {\n    if (\n      !tab.classList.contains('active') ||\n      tab.classList.contains('toggled')\n    ) {\n      tab.click();\n    }\n  }\n\n  // Get Tab by label if exists on page\n  private getTabByLabel(label: string, tabsComponent: Element): HTMLElement {\n    if (tabsComponent) {\n      // NOTE: Reads through button tags to click on correct tab\n      // There may be a better way of doing this now/after refactor\n      const tabElements: HTMLCollectionOf<HTMLElement> =\n        tabsComponent.getElementsByTagName('button');\n\n      // Look through button tab elements until finding tab with label\n      for (const buttonElement of Array.from(tabElements)) {\n        if (buttonElement.innerHTML.includes(label)) {\n          return buttonElement;\n        }\n      }\n    }\n  }\n}\n","<ng-container *ngIf=\"product$ | async as product\">\n  <div class=\"rating\" *ngIf=\"product.averageRating\">\n    <cx-star-rating [rating]=\"product?.averageRating\"></cx-star-rating>\n\n    <div class=\"count\">({{ product?.numberOfReviews }})</div>\n\n    <button\n      *ngIf=\"reviewsTabAvailable | async\"\n      class=\"btn btn-link cx-action-link\"\n      (click)=\"showReviews()\"\n      [attr.aria-label]=\"\n        'productSummary.showReviewsDetailed'\n          | cxTranslate\n            : {\n                rating: product.averageRating | number: '1.0-1',\n                count: product?.numberOfReviews\n              }\n      \"\n    >\n      {{ 'productSummary.showReviews' | cxTranslate }}\n    </button>\n  </div>\n  <div class=\"rating\" *ngIf=\"!product.averageRating\">\n    {{ 'productDetails.noReviews' | cxTranslate }}\n  </div>\n  <div class=\"code\">\n    {{ 'productSummary.id' | cxTranslate }} {{ product?.code }}\n  </div>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { StarRatingModule } from '../../../shared/components/star-rating/star-rating.module';\nimport { ProductIntroComponent } from './product-intro.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule, StarRatingModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductIntroComponent: {\n          component: ProductIntroComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductIntroComponent],\n  exports: [ProductIntroComponent],\n})\nexport class ProductIntroModule {}\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport {\n  ActivatedRouterStateSnapshot,\n  CurrencyService,\n  LanguageService,\n  ProductSearchPage,\n  ProductSearchService,\n  RouterState,\n  RoutingService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, using } from 'rxjs';\nimport {\n  debounceTime,\n  distinctUntilChanged,\n  filter,\n  map,\n  shareReplay,\n  tap,\n} from 'rxjs/operators';\nimport { ProductListRouteParams, SearchCriteria } from './product-list.model';\nimport { ViewConfig } from '../../../../shared/config/view-config';\n\n/**\n * The `ProductListComponentService` is used to search products. The service is used\n * on the Product Listing Page, for listing products and the facet navigation.\n *\n * The service exposes the product search results based on the category and search\n * route parameters. The route parameters are used to query products by the help of\n * the `ProductSearchService`.\n */\n@Injectable({ providedIn: 'root' })\nexport class ProductListComponentService {\n  protected readonly RELEVANCE_ALLCATEGORIES = ':relevance:allCategories:';\n\n  constructor(\n    protected productSearchService: ProductSearchService,\n    protected routing: RoutingService,\n    protected activatedRoute: ActivatedRoute,\n    protected currencyService: CurrencyService,\n    protected languageService: LanguageService,\n    protected router: Router,\n    protected config: ViewConfig\n  ) {}\n\n  /**\n   * Emits the search results for the current search query.\n   *\n   * The `searchResults$` is _not_ concerned with querying, it only observes the\n   * `productSearchService.getResults()`\n   */\n  protected searchResults$: Observable<ProductSearchPage> =\n    this.productSearchService\n      .getResults()\n      .pipe(filter((searchResult) => Object.keys(searchResult).length > 0));\n\n  /**\n   * Observes the route and performs a search on each route change.\n   *\n   * Context changes, such as language and currencies are also taken\n   * into account, so that the search is performed again.\n   */\n  protected searchByRouting$: Observable<ActivatedRouterStateSnapshot> =\n    combineLatest([\n      this.routing.getRouterState().pipe(\n        distinctUntilChanged((x, y) => {\n          // router emits new value also when the anticipated `nextState` changes\n          // but we want to perform search only when current url changes\n          return x.state.url === y.state.url;\n        })\n      ),\n      ...this.siteContext,\n    ]).pipe(\n      debounceTime(0),\n      map(([routerState, ..._context]) => (routerState as RouterState).state),\n      tap((state: ActivatedRouterStateSnapshot) => {\n        const criteria = this.getCriteriaFromRoute(\n          state.params,\n          state.queryParams\n        );\n        this.search(criteria);\n      })\n    );\n\n  /**\n   * This stream is used for the Product Listing and Product Facets.\n   *\n   * It not only emits search results, but also performs a search on every change\n   * of the route (i.e. route params or query params).\n   *\n   * When a user leaves the PLP route, the PLP component unsubscribes from this stream\n   * so no longer the search is performed on route change.\n   */\n  readonly model$: Observable<ProductSearchPage> = using(\n    () => this.searchByRouting$.subscribe(),\n    () => this.searchResults$\n  ).pipe(shareReplay({ bufferSize: 1, refCount: true }));\n\n  /**\n   * Expose the `SearchCriteria`. The search criteria are driven by the route parameters.\n   *\n   * This search route configuration is not yet configurable\n   * (see https://github.com/SAP/spartacus/issues/7191).\n   */\n  protected getCriteriaFromRoute(\n    routeParams: ProductListRouteParams,\n    queryParams: SearchCriteria\n  ): SearchCriteria {\n    return {\n      query: queryParams.query || this.getQueryFromRouteParams(routeParams),\n      pageSize: queryParams.pageSize || this.config.view?.defaultPageSize,\n      currentPage: queryParams.currentPage,\n      sortCode: queryParams.sortCode,\n    };\n  }\n\n  /**\n   * Resolves the search query from the given `ProductListRouteParams`.\n   */\n  protected getQueryFromRouteParams({\n    query,\n    categoryCode,\n    brandCode,\n  }: ProductListRouteParams) {\n    if (query) {\n      return query;\n    }\n    if (categoryCode) {\n      return this.RELEVANCE_ALLCATEGORIES + categoryCode;\n    }\n\n    // TODO: drop support for brands as they should be treated\n    // similarly as any category.\n    if (brandCode) {\n      return this.RELEVANCE_ALLCATEGORIES + brandCode;\n    }\n  }\n\n  /**\n   * Performs a search based on the given search criteria.\n   *\n   * The search is delegated to the `ProductSearchService`.\n   */\n  protected search(criteria: SearchCriteria): void {\n    const currentPage = criteria.currentPage;\n    const pageSize = criteria.pageSize;\n    const sort = criteria.sortCode;\n\n    this.productSearchService.search(\n      criteria.query,\n      // TODO: consider dropping this complex passing of cleaned object\n      Object.assign(\n        {},\n        currentPage && { currentPage },\n        pageSize && { pageSize },\n        sort && { sort }\n      )\n    );\n  }\n\n  /**\n   * Get items from a given page without using navigation\n   */\n  getPageItems(pageNumber: number): void {\n    this.routing\n      .getRouterState()\n      .subscribe((route) => {\n        const routeCriteria = this.getCriteriaFromRoute(\n          route.state.params,\n          route.state.queryParams\n        );\n        const criteria = {\n          ...routeCriteria,\n          currentPage: pageNumber,\n        };\n        this.search(criteria);\n      })\n      .unsubscribe();\n  }\n\n  /**\n   * Sort the search results by the given sort code.\n   */\n  sort(sortCode: string): void {\n    this.route({ sortCode });\n  }\n\n  /**\n   * Routes to the next product listing page, using the given `queryParams`. The\n   * `queryParams` support sorting, pagination and querying.\n   *\n   * The `queryParams` are delegated to the Angular router `NavigationExtras`.\n   */\n  protected route(queryParams: SearchCriteria): void {\n    this.router.navigate([], {\n      queryParams,\n      queryParamsHandling: 'merge',\n      relativeTo: this.activatedRoute,\n    });\n  }\n\n  /**\n   * The site context is used to update the search query in case of a\n   * changing context. The context will typically influence the search data.\n   *\n   * We keep this private for now, as we're likely refactoring this in the next\n   * major version.\n   */\n  private get siteContext(): Observable<string>[] {\n    // TODO: we should refactor this so that custom context will be taken\n    // into account automatically. Ideally, we drop the specific context\n    // from the constructor, and query a ContextService for all contexts.\n\n    return [this.languageService.getActive(), this.currencyService.getActive()];\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { ICON_TYPE } from '../../../misc/icon/icon.model';\n\nexport enum ViewModes {\n  Grid = 'grid',\n  List = 'list',\n}\n\n@Component({\n  selector: 'cx-product-view',\n  templateUrl: './product-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductViewComponent {\n  iconTypes = ICON_TYPE;\n  @Input()\n  mode: ViewModes;\n  @Output()\n  modeChange = new EventEmitter<string>();\n\n  get buttonClass() {\n    const viewName: string = this.viewMode.toLowerCase();\n    return `cx-product-${viewName}`;\n  }\n\n  /**\n   *   Display icons inversely to allow users\n   *   to see the view they will navigate to\n   */\n  get viewMode() {\n    if (this.mode === 'list') {\n      return this.iconTypes.GRID;\n    } else if (this.mode === 'grid') {\n      return this.iconTypes.LIST;\n    }\n  }\n\n  changeMode() {\n    const newMode =\n      this.mode === ViewModes.Grid ? ViewModes.List : ViewModes.Grid;\n    this.modeChange.emit(newMode);\n  }\n}\n","<button\n  class=\"btn cx-product-layout\"\n  [ngClass]=\"buttonClass\"\n  (click)=\"changeMode()\"\n  tabindex=\"0\"\n  attr.aria-label=\"{{\n    viewMode === iconTypes.GRID\n      ? ('productView.gridView' | cxTranslate)\n      : viewMode === iconTypes.LIST\n      ? ('productView.listView' | cxTranslate)\n      : null\n  }}\"\n>\n  <cx-icon\n    *ngIf=\"viewMode === iconTypes.GRID\"\n    [type]=\"iconTypes.GRID\"\n  ></cx-icon>\n  <cx-icon\n    *ngIf=\"viewMode === iconTypes.LIST\"\n    [type]=\"iconTypes.LIST\"\n  ></cx-icon>\n</button>\n","export enum ProductDetailOutlets {\n  INTRO = 'PDP.INTRO',\n  PRICE = 'PDP.PRICE',\n  SHARE = 'PDP.SHARE',\n  SUMMARY = 'PDP.SUMMARY',\n}\nexport enum ProductListOutlets {\n  ITEM_ACTIONS = 'cx-product-list-item.actions',\n  ITEM_DETAILS = 'cx-product-list-item.details',\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n/**\n * Context for `ProductListItemComponent`.\n */\n@Injectable()\nexport abstract class ProductListItemContext {\n  readonly product$: Observable<Product>;\n}\n","import { Injectable } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { ReplaySubject } from 'rxjs';\nimport { ProductListItemContext } from './product-list-item-context.model';\n\n/**\n * Context source for `ProductListItemComponent`.\n *\n * `ProductListItemContext` should be injected instead in child components.\n */\n@Injectable()\nexport class ProductListItemContextSource extends ProductListItemContext {\n  readonly product$ = new ReplaySubject<Product>(1);\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { ProductListOutlets } from '../../product-outlets.model';\nimport { ProductListItemContextSource } from '../model/product-list-item-context-source.model';\nimport { ProductListItemContext } from '../model/product-list-item-context.model';\n\n@Component({\n  selector: 'cx-product-grid-item',\n  templateUrl: './product-grid-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    ProductListItemContextSource,\n    {\n      provide: ProductListItemContext,\n      useExisting: ProductListItemContextSource,\n    },\n  ],\n})\nexport class ProductGridItemComponent implements OnChanges {\n  readonly ProductListOutlets = ProductListOutlets;\n  @Input() product: any;\n\n  constructor(\n    protected productListItemContextSource: ProductListItemContextSource\n  ) {}\n\n  ngOnChanges(changes?: SimpleChanges): void {\n    if (changes?.product) {\n      this.productListItemContextSource.product$.next(this.product);\n    }\n  }\n}\n","<a\n  [routerLink]=\"{ cxRoute: 'product', params: product } | cxUrl\"\n  class=\"cx-product-image-container\"\n  tabindex=\"-1\"\n>\n  <cx-media\n    class=\"cx-product-image\"\n    [container]=\"product.images?.PRIMARY\"\n    format=\"product\"\n    [alt]=\"product.summary\"\n  ></cx-media>\n</a>\n<a\n  [routerLink]=\"{ cxRoute: 'product', params: product } | cxUrl\"\n  class=\"cx-product-name\"\n  [innerHTML]=\"product.nameHtml\"\n></a>\n\n<ng-template [cxOutlet]=\"ProductListOutlets.ITEM_DETAILS\">\n  <div class=\"cx-product-rating\">\n    <cx-star-rating\n      *ngIf=\"product.averageRating\"\n      [rating]=\"product?.averageRating\"\n    ></cx-star-rating>\n    <div *ngIf=\"!product.averageRating\">\n      {{ 'productDetails.noReviews' | cxTranslate }}\n    </div>\n  </div>\n  <div class=\"cx-product-price-container\">\n    <div\n      class=\"cx-product-price\"\n      [attr.aria-label]=\"'productDetails.productPrice' | cxTranslate\"\n    >\n      {{ product.price?.formattedValue }}\n    </div>\n  </div>\n</ng-template>\n\n<ng-template [cxOutlet]=\"ProductListOutlets.ITEM_ACTIONS\">\n  <cx-add-to-cart\n    *ngIf=\"product.stock?.stockLevelStatus !== 'outOfStock'\"\n    [showQuantity]=\"false\"\n    [product]=\"product\"\n  ></cx-add-to-cart>\n</ng-template>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport { ProductListOutlets } from '../../product-outlets.model';\nimport { ProductListItemContextSource } from '../model/product-list-item-context-source.model';\nimport { ProductListItemContext } from '../model/product-list-item-context.model';\n\n@Component({\n  selector: 'cx-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    ProductListItemContextSource,\n    {\n      provide: ProductListItemContext,\n      useExisting: ProductListItemContextSource,\n    },\n  ],\n})\nexport class ProductListItemComponent implements OnChanges {\n  readonly ProductListOutlets = ProductListOutlets;\n  @Input() product: any;\n\n  constructor(\n    protected productListItemContextSource: ProductListItemContextSource\n  ) {}\n\n  ngOnChanges(changes?: SimpleChanges): void {\n    if (changes?.product) {\n      this.productListItemContextSource.product$.next(this.product);\n    }\n  }\n}\n","<div class=\"row\">\n  <div class=\"col-12 col-md-4\">\n    <a\n      [routerLink]=\"{ cxRoute: 'product', params: product } | cxUrl\"\n      class=\"cx-product-image-container\"\n      tabindex=\"-1\"\n    >\n      <cx-media\n        class=\"cx-product-image\"\n        [container]=\"product.images?.PRIMARY\"\n        format=\"product\"\n        [alt]=\"product.summary\"\n      ></cx-media>\n    </a>\n  </div>\n  <div class=\"col-12 col-md-8\">\n    <a\n      [routerLink]=\"{ cxRoute: 'product', params: product } | cxUrl\"\n      class=\"cx-product-name\"\n    >\n      <h2 [innerHtml]=\"product.nameHtml\"></h2>\n    </a>\n\n    <ng-template [cxOutlet]=\"ProductListOutlets.ITEM_DETAILS\">\n      <cx-star-rating\n        *ngIf=\"product.averageRating\"\n        [rating]=\"product?.averageRating\"\n      ></cx-star-rating>\n      <div *ngIf=\"!product.averageRating\" class=\"cx-product-no-review\">\n        {{ 'productDetails.noReviews' | cxTranslate }}\n      </div>\n      <div\n        class=\"cx-product-price\"\n        [attr.aria-label]=\"'productDetails.productPrice' | cxTranslate\"\n      >\n        {{ product.price?.formattedValue }}\n      </div>\n    </ng-template>\n\n    <div class=\"row\">\n      <div class=\"col-12 col-md-8\">\n        <p class=\"cx-product-summary\" [innerHtml]=\"product.summary\">\n          {{ product.summary }}\n        </p>\n      </div>\n      <div class=\"col-12 col-md-4\">\n        <ng-template [cxOutlet]=\"ProductListOutlets.ITEM_ACTIONS\">\n          <cx-add-to-cart\n            *ngIf=\"product.stock?.stockLevelStatus !== 'outOfStock'\"\n            [showQuantity]=\"false\"\n            [product]=\"product\"\n          ></cx-add-to-cart>\n        </ng-template>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, Input, OnDestroy, ChangeDetectorRef } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { ViewModes } from '../../product-view/product-view.component';\nimport { Subscription } from 'rxjs';\nimport { ProductListComponentService } from '../product-list-component.service';\nimport { ViewConfig } from '../../../../../shared/config/view-config';\n\n@Component({\n  selector: 'cx-product-scroll',\n  templateUrl: './product-scroll.component.html',\n})\nexport class ProductScrollComponent implements OnDestroy {\n  private subscription = new Subscription();\n\n  @Input('scrollConfig')\n  set setConfig(inputConfig: ViewConfig) {\n    this.setComponentConfigurations(inputConfig);\n  }\n\n  model: ProductSearchPage;\n  @Input('model')\n  set setModel(inputModel: ProductSearchPage) {\n    this.infiniteScrollOperations(inputModel);\n  }\n\n  inputViewMode: ViewModes;\n  @Input('inputViewMode')\n  set setViewMode(inputViewMode: ViewModes) {\n    this.inputViewMode = inputViewMode;\n    //If viewMode is already set (meaning it is not the first load)\n    //Reset the product list\n    if (this.viewMode) {\n      this.resetListOnViewModeChange();\n    } else {\n      //If viewMode is not set (meaning it is the first load)\n      //Set the viewMode\n      this.viewMode = inputViewMode;\n    }\n  }\n\n  viewMode: ViewModes;\n  productLimit: number;\n  maxProducts: number;\n\n  ViewModes = ViewModes;\n  appendProducts = false;\n  resetList = false;\n  isMaxProducts = false;\n  isLastPage = false;\n  isEmpty = false;\n\n  constructor(\n    private productListComponentService: ProductListComponentService,\n    private ref: ChangeDetectorRef\n  ) {}\n\n  scrollPage(pageNumber: number): void {\n    this.appendProducts = true;\n    this.ref.markForCheck();\n    this.productListComponentService.getPageItems(pageNumber);\n  }\n\n  loadNextPage(pageNumber: number): void {\n    this.isMaxProducts = false;\n    this.scrollPage(pageNumber);\n  }\n\n  scrollToTop(): void {\n    window.scroll(0, 0);\n  }\n\n  private setComponentConfigurations(scrollConfig: ViewConfig): void {\n    const isButton = scrollConfig.view?.infiniteScroll?.showMoreButton;\n    const configProductLimit = scrollConfig.view?.infiniteScroll?.productLimit;\n\n    //Display \"show more\" button every time when button configuration is true\n    //Otherwise, only display \"show more\" when the configuration product limit is reached\n    this.productLimit = isButton ? 1 : configProductLimit;\n  }\n\n  private infiniteScrollOperations(inputModel: ProductSearchPage): void {\n    if (this.appendProducts) {\n      this.model = {\n        ...inputModel,\n        products: this.model.products.concat(inputModel.products),\n      };\n    } else {\n      this.model = inputModel;\n      this.maxProducts = this.productLimit;\n    }\n    this.setConditions();\n    this.ref.markForCheck();\n  }\n\n  private resetListOnViewModeChange(): void {\n    this.scrollToTop();\n    this.resetList = true;\n    this.productListComponentService.getPageItems(0);\n  }\n\n  //Set booleans after model has been retrieved\n  private setConditions(): void {\n    this.isEmpty = !this.model.products || this.model.products.length === 0;\n\n    this.isLastPage =\n      this.model.pagination.currentPage ===\n      this.model.pagination.totalPages - 1;\n\n    this.isMaxProducts =\n      this.productLimit &&\n      this.productLimit !== 0 &&\n      this.model.products.length >= this.maxProducts;\n\n    //Add the productLimit to the current number of products to determine the next max number of products\n    if (this.isMaxProducts) {\n      this.maxProducts = this.model.products.length + this.productLimit;\n    }\n\n    //Only change viewMode once the new model is set\n    //This prevents flickering issues\n    if (this.viewMode !== this.inputViewMode) {\n      this.viewMode = this.inputViewMode;\n    }\n\n    this.resetList = false;\n    this.appendProducts = false;\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<ng-container *ngIf=\"viewMode === ViewModes.Grid\">\n  <div\n    infiniteScroll\n    [infiniteScrollDistance]=\"5\"\n    [infiniteScrollThrottle]=\"50\"\n    [infiniteScrollDisabled]=\"isMaxProducts || isLastPage || isEmpty\"\n    (scrolled)=\"scrollPage(model?.pagination?.currentPage + 1)\"\n  >\n    <div class=\"row\">\n      <cx-product-grid-item\n        *ngFor=\"let product of model?.products\"\n        [product]=\"product\"\n        class=\"col-12 col-sm-6 col-md-4\"\n      ></cx-product-grid-item>\n    </div>\n    <div\n      [className]=\"\n        !isLastPage && model?.pagination?.currentPage > 0\n          ? 'cx-double-btn-container grid-btn-padding'\n          : 'cx-single-btn-container grid-btn-padding'\n      \"\n    >\n      <div\n        *ngIf=\"\n          (isMaxProducts || isLastPage) && model?.pagination?.currentPage > 0\n        \"\n        (click)=\"scrollToTop()\"\n        class=\"btn btn-block btn-action\"\n      >\n        {{ 'productList.backToTopBtn' | cxTranslate }}\n      </div>\n      <div\n        *ngIf=\"isMaxProducts && !isLastPage\"\n        (click)=\"loadNextPage(model?.pagination?.currentPage + 1)\"\n        class=\"btn btn-block btn-action align-btn\"\n      >\n        {{ 'productList.showMoreBtn' | cxTranslate }}\n      </div>\n    </div>\n    <div *ngIf=\"appendProducts\" class=\"cx-spinner\">\n      <cx-spinner></cx-spinner>\n    </div>\n  </div>\n</ng-container>\n\n<ng-container *ngIf=\"viewMode === ViewModes.List\">\n  <div\n    infiniteScroll\n    [infiniteScrollDistance]=\"3\"\n    [infiniteScrollThrottle]=\"50\"\n    [infiniteScrollDisabled]=\"isMaxProducts || isLastPage || isEmpty\"\n    (scrolled)=\"scrollPage(model?.pagination?.currentPage + 1)\"\n  >\n    <cx-product-list-item\n      *ngFor=\"let product of model?.products\"\n      [product]=\"product\"\n      class=\"cx-product-search-list\"\n    ></cx-product-list-item>\n    <div\n      [className]=\"\n        !isLastPage && model?.pagination?.currentPage > 0\n          ? 'cx-double-btn-container'\n          : 'cx-single-btn-container'\n      \"\n    >\n      <div\n        *ngIf=\"\n          (isMaxProducts || isLastPage) && model?.pagination?.currentPage > 0\n        \"\n        (click)=\"scrollToTop()\"\n        class=\"btn btn-block btn-action\"\n      >\n        {{ 'productList.backToTopBtn' | cxTranslate }}\n      </div>\n      <div\n        *ngIf=\"isMaxProducts && !isLastPage\"\n        (click)=\"loadNextPage(model?.pagination?.currentPage + 1)\"\n        class=\"btn btn-block btn-action align-btn\"\n      >\n        {{ 'productList.showMoreBtn' | cxTranslate }}\n      </div>\n    </div>\n    <div *ngIf=\"appendProducts\" class=\"cx-spinner\">\n      <cx-spinner></cx-spinner>\n    </div>\n  </div>\n</ng-container>\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { ProductSearchPage } from '@spartacus/core';\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\nimport { take } from 'rxjs/operators';\nimport { PageLayoutService } from '../../../../cms-structure/page/index';\nimport { ViewConfig } from '../../../../shared/config/view-config';\nimport { ViewModes } from '../product-view/product-view.component';\nimport { ProductListComponentService } from './product-list-component.service';\n\n@Component({\n  selector: 'cx-product-list',\n  templateUrl: './product-list.component.html',\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n  private subscription = new Subscription();\n\n  isInfiniteScroll: boolean;\n\n  model$: Observable<ProductSearchPage> =\n    this.productListComponentService.model$;\n\n  viewMode$ = new BehaviorSubject<ViewModes>(ViewModes.Grid);\n  ViewModes = ViewModes;\n\n  constructor(\n    private pageLayoutService: PageLayoutService,\n    private productListComponentService: ProductListComponentService,\n    public scrollConfig: ViewConfig\n  ) {}\n\n  ngOnInit(): void {\n    this.isInfiniteScroll = this.scrollConfig.view?.infiniteScroll?.active;\n\n    this.subscription.add(\n      this.pageLayoutService.templateName$\n        .pipe(take(1))\n        .subscribe((template) => {\n          this.viewMode$.next(\n            template === 'ProductGridPageTemplate'\n              ? ViewModes.Grid\n              : ViewModes.List\n          );\n        })\n    );\n  }\n\n  sortList(sortCode: string): void {\n    this.productListComponentService.sort(sortCode);\n  }\n\n  setViewMode(mode: ViewModes): void {\n    this.viewMode$.next(mode);\n  }\n\n  ngOnDestroy(): void {\n    this.subscription.unsubscribe();\n  }\n}\n","<div class=\"cx-page\" *ngIf=\"model$ | async as model\">\n  <section class=\"cx-page-section\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-12 col-lg-12\" *ngIf=\"viewMode$ | async as viewMode\">\n          <div class=\"cx-sorting top\">\n            <div class=\"row\">\n              <label\n                class=\"form-group cx-sort-dropdown col-12 col-lg-4 mr-auto\"\n              >\n                <span>{{ 'productList.sortBy' | cxTranslate }}</span>\n                <cx-sorting\n                  [sortOptions]=\"model.sorts\"\n                  (sortListEvent)=\"sortList($event)\"\n                  [selectedOption]=\"model.pagination.sort\"\n                  placeholder=\"{{ 'productList.sortBy' | cxTranslate }}\"\n                ></cx-sorting>\n              </label>\n              <div *ngIf=\"!isInfiniteScroll\" class=\"col-auto\">\n                <div\n                  class=\"cx-pagination\"\n                  [attr.aria-label]=\"\n                    'productList.productSearchPagination' | cxTranslate\n                  \"\n                >\n                  <cx-pagination\n                    [pagination]=\"model.pagination\"\n                    queryParam=\"currentPage\"\n                    [defaultPage]=\"0\"\n                  ></cx-pagination>\n                </div>\n              </div>\n              <div class=\"col-auto ml-auto ml-lg-0\">\n                <cx-product-view\n                  (modeChange)=\"setViewMode($event)\"\n                  [mode]=\"viewMode\"\n                ></cx-product-view>\n              </div>\n            </div>\n          </div>\n          <div class=\"cx-product-container\">\n            <!-- Product list when using pagination -->\n            <ng-container *ngIf=\"!isInfiniteScroll; else infiniteScroll\">\n              <ng-container *ngIf=\"viewMode === ViewModes.Grid\">\n                <div class=\"row\">\n                  <cx-product-grid-item\n                    *ngFor=\"let product of model?.products\"\n                    [product]=\"product\"\n                    class=\"col-12 col-sm-6 col-md-4\"\n                  ></cx-product-grid-item>\n                </div>\n              </ng-container>\n\n              <ng-container *ngIf=\"viewMode === ViewModes.List\">\n                <cx-product-list-item\n                  *ngFor=\"let product of model?.products\"\n                  [product]=\"product\"\n                  class=\"cx-product-search-list\"\n                ></cx-product-list-item>\n              </ng-container>\n            </ng-container>\n\n            <!-- Product list when using infinite scroll -->\n            <ng-template #infiniteScroll>\n              <cx-product-scroll\n                [scrollConfig]=\"scrollConfig\"\n                [model]=\"model\"\n                [inputViewMode]=\"viewMode\"\n              ></cx-product-scroll>\n            </ng-template>\n          </div>\n          <div class=\"cx-sorting bottom\">\n            <div class=\"row\">\n              <label\n                class=\"form-group cx-sort-dropdown col-12 col-lg-4 mr-auto\"\n              >\n                <span>{{ 'productList.sortBy' | cxTranslate }}</span>\n                <cx-sorting\n                  [sortOptions]=\"model.sorts\"\n                  (sortListEvent)=\"sortList($event)\"\n                  [selectedOption]=\"model.pagination.sort\"\n                  placeholder=\"{{ 'productList.sortBy' | cxTranslate }}\"\n                ></cx-sorting>\n              </label>\n              <div\n                *ngIf=\"!isInfiniteScroll\"\n                class=\"col-auto\"\n                [attr.aria-label]=\"\n                  'productList.productSearchPagination' | cxTranslate\n                \"\n              >\n                <div class=\"cx-pagination\">\n                  <cx-pagination\n                    [pagination]=\"model.pagination\"\n                    queryParam=\"currentPage\"\n                    [defaultPage]=\"0\"\n                  ></cx-pagination>\n                </div>\n              </div>\n              <div class=\"col-auto ml-auto ml-lg-0\">\n                <cx-product-view\n                  (modeChange)=\"setViewMode($event)\"\n                  [mode]=\"viewMode\"\n                ></cx-product-view>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n</div>\n","import { Breadcrumb, Facet } from '@spartacus/core';\n\n/**\n * UI model that holds the full list of facet and active facets for\n * the product list.\n */\nexport interface FacetList {\n  facets: Facet[];\n  activeFacets?: Breadcrumb[];\n}\n\nexport interface FacetCollapseState {\n  /**\n   * Indicates whether the facet is toggled to expand or collapse the facet values.\n   * Whether the toggle results in an expanded or collapsed state, depends on the\n   * experience, which is controlled in CSS.\n   */\n  toggled?: FacetGroupCollapsedState;\n\n  /**\n   * The top number of facet values that will be visible.\n   */\n  topVisible?: number;\n\n  /**\n   * The max number of facet values which will be visible. This includes\n   * the top visible number.\n   */\n  maxVisible?: number;\n}\n\nexport enum FacetGroupCollapsedState {\n  EXPANDED = 'EXPANDED',\n  COLLAPSED = 'COLLAPSED',\n}\n","import { Injectable } from '@angular/core';\nimport { Params } from '@angular/router';\nimport {\n  ActivatedRouterStateSnapshot,\n  Breadcrumb,\n  PageType,\n  ProductSearchPage,\n  RoutingService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map, pluck, switchMap } from 'rxjs/operators';\nimport { ProductListComponentService } from '../../container/product-list-component.service';\nimport { FacetList } from '../facet.model';\n\n/**\n * Provides access to all the facets and active facets for the Product Listing Page.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductFacetService {\n  constructor(\n    protected routing: RoutingService,\n    protected productListComponentService: ProductListComponentService\n  ) {}\n\n  protected readonly routeState$ = this.routing\n    .getRouterState()\n    .pipe(pluck('state'));\n\n  /**\n   * Returns the search results for the current page.\n   */\n  protected readonly searchResult$: Observable<ProductSearchPage> =\n    this.routeState$.pipe(\n      switchMap((state) =>\n        this.productListComponentService.model$.pipe(\n          filter((page) => this.filterForPage(state, page)),\n          map((page) => ({\n            ...page,\n            breadcrumbs: this.filterBreadcrumbs(\n              page?.breadcrumbs ?? [],\n              state.params\n            ),\n          }))\n        )\n      )\n    );\n\n  /**\n   * Observes the facets and active facets for the given page. The facet data\n   * is provided in a `FacetList`.\n   */\n  readonly facetList$: Observable<FacetList> = this.searchResult$.pipe(\n    map(\n      (result: ProductSearchPage) =>\n        ({\n          facets: result.facets,\n          activeFacets: result.breadcrumbs,\n        } as FacetList)\n    )\n  );\n\n  /**\n   * Filters the current result by verifying if the result is related to the page.\n   * This is done to avoid a combination of the next page and the current search results.\n   */\n  protected filterForPage(\n    state: ActivatedRouterStateSnapshot,\n    page: ProductSearchPage\n  ): boolean {\n    if (!page.currentQuery?.query?.value) {\n      return false;\n    }\n    if (state.context.type === PageType.CATEGORY_PAGE) {\n      return (\n        page.currentQuery.query.value.indexOf(\n          `allCategories:${state.context.id}`\n        ) > -1\n      );\n    }\n\n    if (\n      state.context.type === PageType.CONTENT_PAGE &&\n      state.context.id === 'search'\n    ) {\n      return page.currentQuery.query.value.startsWith(`${state.params.query}:`);\n    }\n    return false;\n  }\n\n  /**\n   * Filter breadcrumbs which are not actively selected but coming from\n   * the route navigation.\n   *\n   * The breadcrumbs might include the active category page code, which is not actively\n   * selected by the user.\n   */\n  protected filterBreadcrumbs(\n    breadcrumbs: Breadcrumb[],\n    params: Params\n  ): Breadcrumb[] {\n    return breadcrumbs\n      ? breadcrumbs.filter(\n          (breadcrumb) =>\n            !(\n              breadcrumb.facetCode === 'allCategories' &&\n              (breadcrumb.facetValueCode === params.categoryCode ||\n                breadcrumb.facetValueCode === params.brandCode)\n            )\n        )\n      : [];\n  }\n}\n","import { HttpUrlEncodingCodec } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Facet } from '@spartacus/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport {\n  FacetCollapseState,\n  FacetGroupCollapsedState,\n  FacetList,\n} from '../facet.model';\nimport { ProductFacetService } from './product-facet.service';\n\n/**\n * Provides access to the facets as well as their UI state. The UI state\n * represents user related changes on the facets, such as expanding or\n * collapsing a facet group or expanding the number of _visible_ facet values.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class FacetService {\n  /**\n   * An internal map where we keep the UI state of the facets.\n   */\n  protected facetState = new Map<string, BehaviorSubject<FacetCollapseState>>();\n\n  constructor(protected productFacetService: ProductFacetService) {}\n\n  /**\n   * Observes the facets for the given page and configures the initial UI state.\n   *\n   * Facets are configured on each emission so that we keep the facet UI state.\n   * This is mainly done to keep the state during usage of the facet, but also\n   * benefitial when the facets are rebuild while using them.\n   */\n  facetList$: Observable<FacetList> = this.productFacetService.facetList$.pipe(\n    tap((facetList) => {\n      facetList.facets.forEach((facet) => this.initialize(facet));\n    })\n  );\n\n  /**\n   * Returns the observed UI state for the facet.\n   *\n   * The state is initialized using the `initialize` method.\n   */\n  getState(facet: Facet): Observable<FacetCollapseState> {\n    this.initialize(facet);\n    return this.facetState.get(facet.name);\n  }\n\n  /**\n   * Returns the UI state for the facet.\n   *\n   * The state is initialized using the `initialize` method.\n   */\n  protected getStateSnapshot(facet: Facet): FacetCollapseState {\n    return (this.getState(facet) as BehaviorSubject<FacetCollapseState>).value;\n  }\n\n  /**\n   * Toggles the facet expanded state. If the expanded state becomes false,\n   * the visible values will decrease to the top values only.\n   *\n   * If the optional value argument is provided the expanded state will be set\n   * to this value, regardless of the current `expanded` state.\n   */\n  toggle(facet: Facet, isExpanded: boolean): void {\n    const state = this.getStateSnapshot(facet);\n\n    const toggledState = {\n      toggled: isExpanded\n        ? FacetGroupCollapsedState.COLLAPSED\n        : FacetGroupCollapsedState.EXPANDED,\n    } as FacetCollapseState;\n\n    if (toggledState.toggled === FacetGroupCollapsedState.COLLAPSED) {\n      toggledState.maxVisible = state.topVisible;\n    }\n\n    this.updateState(facet, toggledState);\n  }\n\n  /**\n   * Increases the visible values to the maximum values of the facet.\n   */\n  increaseVisibleValues(facet: Facet): void {\n    this.updateState(facet, { maxVisible: facet.values.length });\n  }\n\n  /**\n   * Decreases the visible values to the topValueCount.\n   *\n   * The topValueCount defaults to 6, but can be controlled in\n   * the backend as well.\n   */\n  decreaseVisibleValues(facet: Facet): void {\n    this.updateState(facet, { maxVisible: facet.topValueCount });\n  }\n\n  /**\n   * Persists the facet state and initializes the default values for the top\n   * and max visible values.\n   */\n  protected initialize(facet: Facet): void {\n    const topFacets =\n      facet.topValueCount > 0 ? facet.topValueCount : facet.values?.length || 0;\n    if (!this.hasState(facet)) {\n      this.facetState.set(\n        facet.name,\n        new BehaviorSubject({\n          topVisible: topFacets,\n          maxVisible: topFacets,\n        } as FacetCollapseState)\n      );\n    }\n  }\n\n  /**\n   * Updates the state of the facet in the local facet map.\n   */\n  protected updateState(facet: Facet, property: FacetCollapseState): void {\n    const state = { ...this.getStateSnapshot(facet), ...property };\n    this.facetState.get(facet.name).next(state);\n  }\n\n  protected hasState(facet: Facet): boolean {\n    return this.facetState.has(facet.name);\n  }\n\n  getLinkParams(query: string): { [key: string]: string } {\n    return {\n      // to avoid encoding issues with facets that have space (' ') in their name,\n      // we replace the decoded '+' back to empty space ' '.\n      // For more, see https://github.com/SAP/spartacus/issues/7348\n      query: new HttpUrlEncodingCodec().decodeValue(query).replace(/\\+/g, ' '),\n    };\n  }\n}\n","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { Breadcrumb } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\nimport { FacetList } from '../facet.model';\nimport { FacetService } from '../services/facet.service';\n\n/**\n * Active facets render the applied facet values as a list of focusable buttons\n * which can be used to remove the applied facet value.\n */\n@Component({\n  selector: 'cx-active-facets',\n  templateUrl: './active-facets.component.html',\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class ActiveFacetsComponent {\n  /** Active facets which are applied to the product results. */\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\n\n  /** Configurable icon which is used for the active facet close button */\n  @Input() closeIcon = ICON_TYPE.CLOSE;\n\n  constructor(protected facetService: FacetService) {}\n\n  getLinkParams(facet: Breadcrumb) {\n    return this.facetService.getLinkParams(facet.removeQuery?.query?.value);\n  }\n\n  /**\n   * The focus key is used to persist the focus on the facet when the DOM is being\n   * recreated. We only apply the focus key for the given _active_ facet when there\n   * the original facets is not available. This happens for non multi-valued facets.\n   *\n   * With this approach, the we keep the focus, either at the facet list or on the\n   * active facets.\n   */\n  getFocusKey(facetList: FacetList, facet: Breadcrumb) {\n    return facetList.facets?.find((f) =>\n      f.values?.find((val) => val.name === facet.facetValueName)\n    )\n      ? ''\n      : facet.facetValueName;\n  }\n}\n","<ng-container *ngIf=\"facetList$ | async as facetList\">\n  <h4 *ngIf=\"facetList?.activeFacets?.length > 0\">\n    {{ 'productList.appliedFilter' | cxTranslate }}\n  </h4>\n\n  <a\n    *ngFor=\"let facet of facetList?.activeFacets\"\n    routerLink=\"./\"\n    [queryParams]=\"getLinkParams(facet)\"\n    [cxFocus]=\"getFocusKey(facetList, facet)\"\n  >\n    <span>{{ facet.facetValueName }}</span>\n    <cx-icon aria-hidden=\"true\" [type]=\"closeIcon\"></cx-icon>\n  </a>\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../../../cms-components/misc/icon/icon.module';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { ActiveFacetsComponent } from './active-facets.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    I18nModule,\n    IconModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [ActiveFacetsComponent],\n  exports: [ActiveFacetsComponent],\n})\nexport class ActiveFacetsModule {}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  HostBinding,\n  Input,\n  QueryList,\n  ViewChild,\n  ViewChildren,\n} from '@angular/core';\nimport { Facet, FacetValue } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ICON_TYPE } from '../../../../../cms-components/misc/icon/icon.model';\nimport { FocusDirective } from '../../../../../layout/a11y/keyboard-focus/focus.directive';\nimport { FacetCollapseState } from '../facet.model';\nimport { FacetService } from '../services/facet.service';\n\n@Component({\n  selector: 'cx-facet',\n  templateUrl: './facet.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FacetComponent {\n  protected _facet: Facet;\n\n  state$: Observable<FacetCollapseState>;\n\n  /** configurable icon that is used to collapse the facet group  */\n  @Input() expandIcon: ICON_TYPE = ICON_TYPE.EXPAND;\n  @Input() collapseIcon: ICON_TYPE = ICON_TYPE.COLLAPSE;\n\n  @HostBinding('class.multi-select') isMultiSelect: boolean;\n\n  @ViewChildren('facetValue') values: QueryList<ElementRef<HTMLElement>>;\n\n  @ViewChild(FocusDirective) keyboardFocus: FocusDirective;\n\n  @Input()\n  set facet(value: Facet) {\n    this._facet = value;\n    this.isMultiSelect = !!value.multiSelect;\n    this.state$ = this.facetService.getState(value);\n  }\n\n  get facet(): Facet {\n    return this._facet;\n  }\n\n  constructor(\n    protected facetService: FacetService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  /**\n   * Handles clicking the heading of the facet group, which means toggling\n   * the visibility of the group (collapse / expand) and optionally focusing\n   * the group.\n   */\n  toggleGroup(event: UIEvent) {\n    const host: HTMLElement = this.elementRef.nativeElement;\n    const isLocked = this.keyboardFocus?.isLocked;\n\n    this.facetService.toggle(this.facet, this.isExpanded);\n\n    if (!isLocked || this.isExpanded) {\n      host.focus();\n      // we stop propagating the event as otherwise the focus on the host will trigger\n      // an unlock event from the LockFocus directive.\n      event.stopPropagation();\n    }\n  }\n\n  get isExpanded(): boolean {\n    return this.values.first.nativeElement.offsetParent !== null;\n  }\n\n  openLink(event: KeyboardEvent) {\n    (event.target as HTMLElement).click();\n    event.preventDefault();\n  }\n\n  /**\n   * Increases the number of visible values for the facet. This is delegated\n   * to `facetService.increaseVisibleValues`.\n   */\n  increaseVisibleValues(): void {\n    this.facetService.increaseVisibleValues(this.facet);\n  }\n\n  /**\n   * Decreases the number of visible values for the facet. This is delegated\n   * to `facetService.decreaseVisibleValues`.\n   */\n  decreaseVisibleValues(): void {\n    this.facetService.decreaseVisibleValues(this.facet);\n  }\n\n  getLinkParams(value: FacetValue) {\n    return this.facetService.getLinkParams(value.query?.query.value);\n  }\n}\n","<ng-container *ngIf=\"state$ | async as state\">\n  <button class=\"heading\" (click)=\"toggleGroup($event)\">\n    {{ facet.name }}\n    <cx-icon class=\"collapse-icon\" [type]=\"collapseIcon\"></cx-icon>\n    <cx-icon class=\"expand-icon\" [type]=\"expandIcon\"></cx-icon>\n  </button>\n\n  <a\n    *ngFor=\"let value of facet.values | slice: 0:state.topVisible\"\n    #facetValue\n    routerLink=\"./\"\n    [queryParams]=\"getLinkParams(value)\"\n    class=\"value\"\n    [class.selected]=\"value.selected\"\n    [cxFocus]=\"value.name\"\n    (keydown.space)=\"openLink($event)\"\n  >\n    <span>\n      <span class=\"label\">{{ value.name }}</span>\n      <span class=\"count\">{{ value.count }}</span>\n    </span>\n  </a>\n\n  <div class=\"more\">\n    <a\n      *ngFor=\"\n        let value of facet.values | slice: state.topVisible:state.maxVisible\n      \"\n      #facetValue\n      routerLink=\"./\"\n      [queryParams]=\"getLinkParams(value)\"\n      class=\"value\"\n      [class.selected]=\"value.selected\"\n      [cxFocus]=\"value.name\"\n      (keydown.space)=\"openLink($event)\"\n    >\n      <span\n        >{{ value.name }}<span class=\"count\">{{ value.count }}</span></span\n      >\n    </a>\n\n    <button\n      *ngIf=\"state.maxVisible > state.topVisible\"\n      (click)=\"decreaseVisibleValues()\"\n      class=\"cx-action-link\"\n      cxFocus=\"moreorless\"\n    >\n      {{ 'productList.showLess' | cxTranslate }}\n    </button>\n\n    <button\n      *ngIf=\"state.maxVisible > 0 && state.maxVisible < facet.values.length\"\n      (click)=\"increaseVisibleValues()\"\n      class=\"cx-action-link\"\n      cxFocus=\"moreorless\"\n    >\n      {{ 'productList.showMore' | cxTranslate }}\n    </button>\n  </div>\n</ng-container>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  Output,\n  Renderer2,\n} from '@angular/core';\nimport { Facet } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FocusConfig } from '../../../../../layout/a11y/keyboard-focus/index';\nimport { ICON_TYPE } from '../../../../misc/icon/icon.model';\nimport { FacetGroupCollapsedState, FacetList } from '../facet.model';\nimport { FacetComponent } from '../facet/facet.component';\nimport { FacetService } from '../services/facet.service';\n\n@Component({\n  selector: 'cx-facet-list',\n  templateUrl: './facet-list.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FacetListComponent {\n  private _isDialog: boolean;\n  /**\n   * Indicates that the facet navigation is rendered in dialog.\n   */\n  @Input()\n  set isDialog(value: boolean) {\n    this._isDialog = value;\n    if (value) {\n      this.renderer.addClass(document.body, 'modal-open');\n    }\n  }\n\n  get isDialog(): boolean {\n    return this._isDialog;\n  }\n\n  /** Emits when the list must close */\n  @Output() closeList = new EventEmitter();\n\n  /** The list of all facet and values related to the products in the list */\n  facetList$: Observable<FacetList> = this.facetService.facetList$;\n\n  iconTypes = ICON_TYPE;\n\n  dialogFocusConfig: FocusConfig = {\n    trap: true,\n    block: true,\n    focusOnEscape: true,\n    autofocus: 'cx-facet',\n  };\n\n  @HostListener('click') handleClick() {\n    this.close();\n  }\n\n  constructor(\n    protected facetService: FacetService,\n    protected elementRef: ElementRef,\n    protected renderer: Renderer2\n  ) {}\n\n  /**\n   * Toggles the facet group in case it is not expanded.\n   */\n  expandFacetGroup(facet: Facet, ref: FacetComponent) {\n    if (!ref.isExpanded) {\n      this.facetService.toggle(facet, ref.isExpanded);\n    }\n  }\n\n  /**\n   * Indicates that the facet group has been expanded.\n   */\n  isExpanded(facet: Facet): Observable<boolean> {\n    return this.facetService\n      .getState(facet)\n      .pipe(\n        map((value) => value.toggled === FacetGroupCollapsedState.EXPANDED)\n      );\n  }\n\n  /**\n   * Indicates that the facet group has been collapsed.\n   */\n  isCollapsed(facet: Facet): Observable<boolean> {\n    return this.facetService\n      .getState(facet)\n      .pipe(\n        map((value) => value.toggled === FacetGroupCollapsedState.COLLAPSED)\n      );\n  }\n\n  close(event?: boolean): void {\n    this.renderer.removeClass(document.body, 'modal-open');\n    this.closeList.emit(event);\n  }\n\n  block(event?: MouseEvent) {\n    event.stopPropagation();\n  }\n}\n","<div\n  class=\"inner\"\n  *ngIf=\"(facetList$ | async)?.facets as facets\"\n  [cxFocus]=\"isDialog ? dialogFocusConfig : {}\"\n  (esc)=\"close($event)\"\n  (click)=\"block($event)\"\n>\n  <h4>\n    {{ 'productList.filterBy.label' | cxTranslate }}\n    <button\n      type=\"button\"\n      class=\"close\"\n      [attr.aria-label]=\"'common.close' | cxTranslate\"\n      (click)=\"close()\"\n    >\n      <cx-icon aria-hidden=\"true\" [type]=\"iconTypes.CLOSE\"></cx-icon>\n    </button>\n  </h4>\n\n  <!-- \n      Here we'd like to introduce configurable facet components, \n      either by using specific configuration or generic sproutlets \n  -->\n  <cx-facet\n    *ngFor=\"let facet of facets\"\n    #facetRef\n    [facet]=\"facet\"\n    [cxFocus]=\"{ lock: true, trap: true, autofocus: 'a' }\"\n    (unlock)=\"expandFacetGroup(facet, facetRef)\"\n    [class.expanded]=\"isExpanded(facet) | async\"\n    [class.collapsed]=\"isCollapsed(facet) | async\"\n  ></cx-facet>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { I18nModule, UrlModule } from '@spartacus/core';\nimport { IconModule } from '../../../../../cms-components/misc/icon/index';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { FacetComponent } from './facet.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    UrlModule,\n    I18nModule,\n    IconModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [FacetComponent],\n  exports: [FacetComponent],\n})\nexport class FacetModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { I18nModule } from '@spartacus/core';\nimport { KeyboardFocusModule } from '../../../../../layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { IconModule } from '../../../../misc/icon/icon.module';\nimport { FacetModule } from '../facet/facet.module';\nimport { FacetListComponent } from './facet-list.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    IconModule,\n    FacetModule,\n    KeyboardFocusModule,\n  ],\n  declarations: [FacetListComponent],\n  exports: [FacetListComponent],\n})\nexport class FacetListModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  ViewChild,\n} from '@angular/core';\nimport { asapScheduler, BehaviorSubject, interval, Observable, of } from 'rxjs';\nimport { delayWhen, observeOn, switchMap } from 'rxjs/operators';\nimport { ICON_TYPE } from '../../../../cms-components/misc/icon/icon.model';\nimport { BreakpointService } from '../../../../layout/breakpoint/breakpoint.service';\n\n@Component({\n  selector: 'cx-product-facet-navigation',\n  templateUrl: './product-facet-navigation.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductFacetNavigationComponent {\n  iconTypes = ICON_TYPE;\n\n  /**\n   * We delay the removal of DOM so that animations can finish playing before the\n   * DOM is removed. Removing the DOM, as hidding is not enough to stop elements\n   * to be focused.\n   */\n  protected CLOSE_DELAY = 300;\n\n  /**\n   * Used to open the facet navigation in a dialog. The usage of the dialog depends\n   * on the availability of the trigger element, which is driven by CSS.\n   *\n   * The reference is also used to refocus the trigger after the dialog is closed.\n   */\n  @ViewChild('trigger') trigger: ElementRef<HTMLElement>;\n\n  protected open$ = new BehaviorSubject(false);\n\n  /**\n   * Emits the open state that indicates whether the facet list should be rendered.\n   * This is either done instantly, or after the user triggers this by using the trigger\n   * button. This driven by the visiibility of the trigger, so that the CSS drives\n   * the behaviour. This can differ per breakpoint.\n   *\n   * There's a configurable delay for the closed state, so that the DOM is not removed\n   * before some CSS animations are done.\n   */\n  isOpen$: Observable<boolean> = this.breakpointService.breakpoint$.pipe(\n    // deffer emitting a new value to the next micro-task to ensure that the `hasTrigger`\n    // method represents the actual UI state.\n    observeOn(asapScheduler),\n    switchMap(() => (this.hasTrigger ? this.open$ : of(true))),\n    delayWhen((launched) => interval(launched ? 0 : this.CLOSE_DELAY))\n  );\n\n  /**\n   * Emits the active state that indicates whether the facet list is activated. Activation\n   * is related to the css, so that a animation or transition can visualize opening/closing\n   * the list (i.e. dialog).\n   */\n  isActive$ = this.open$.pipe(\n    // deffer emitting a new value to the next micro-task to ensure the active class is\n    //  applied after the DOM is created\n    observeOn(asapScheduler)\n  );\n\n  constructor(protected breakpointService: BreakpointService) {}\n\n  launch() {\n    this.open$.next(true);\n  }\n\n  close() {\n    this.open$.next(false);\n    this.trigger.nativeElement.focus();\n  }\n\n  /**\n   * Indicates that the facet navigation should be open explicitely by a trigger.\n   * This is fully controlled by CSS, where the trigger button can be hidden\n   * (display:none) for certain screen sizes.\n   */\n  get hasTrigger() {\n    return this.trigger.nativeElement.offsetParent !== null;\n  }\n}\n","<button\n  #trigger\n  class=\"btn btn-action btn-block dialog-trigger\"\n  (click)=\"launch()\"\n>\n  <cx-icon [type]=\"iconTypes.FILTER\"></cx-icon>\n  {{ 'productList.filterBy.label' | cxTranslate }}\n</button>\n\n<cx-active-facets></cx-active-facets>\n\n<cx-facet-list\n  *ngIf=\"isOpen$ | async\"\n  [isDialog]=\"hasTrigger\"\n  (closeList)=\"close()\"\n  [class.active]=\"isActive$ | async\"\n  [class.dialog]=\"hasTrigger\"\n></cx-facet-list>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, ConfigModule, I18nModule } from '@spartacus/core';\nimport { IconModule } from '../../../misc/icon/icon.module';\nimport { ActiveFacetsModule } from './active-facets/active-facets.module';\nimport { FacetListModule } from './facet-list/facet-list.module';\nimport { ProductFacetNavigationComponent } from './product-facet-navigation.component';\n@NgModule({\n  imports: [\n    CommonModule,\n    FacetListModule,\n    ActiveFacetsModule,\n    IconModule,\n    I18nModule,\n    ConfigModule.withConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductRefinementComponent: {\n          component: ProductFacetNavigationComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductFacetNavigationComponent],\n  exports: [ProductFacetNavigationComponent],\n})\nexport class ProductFacetNavigationModule {}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  CmsConfig,\n  FeaturesConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { InfiniteScrollModule } from 'ngx-infinite-scroll';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { ViewConfig } from '../../../shared/config/view-config';\nimport {\n  ItemCounterModule,\n  ListNavigationModule,\n  MediaModule,\n  SpinnerModule,\n  StarRatingModule,\n} from '../../../shared/index';\nimport { AddToCartModule } from '../../cart/index';\nimport { IconModule } from '../../misc/icon/index';\nimport { defaultViewConfig } from '../config/default-view-config';\nimport { ProductListComponent } from './container/product-list.component';\nimport { ProductScrollComponent } from './container/product-scroll/product-scroll.component';\nimport { ProductGridItemComponent } from './product-grid-item/product-grid-item.component';\nimport { ProductListItemComponent } from './product-list-item/product-list-item.component';\nimport { ProductViewComponent } from './product-view/product-view.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    MediaModule,\n    AddToCartModule,\n    ItemCounterModule,\n    ListNavigationModule,\n    UrlModule,\n    I18nModule,\n    StarRatingModule,\n    IconModule,\n    SpinnerModule,\n    InfiniteScrollModule,\n    FeaturesConfigModule,\n    OutletModule,\n  ],\n  providers: [\n    provideDefaultConfig(<ViewConfig>defaultViewConfig),\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        CMSProductListComponent: {\n          component: ProductListComponent,\n        },\n        ProductGridComponent: {\n          component: ProductListComponent,\n        },\n        SearchResultsListComponent: {\n          component: ProductListComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [\n    ProductListComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n    ProductScrollComponent,\n  ],\n  exports: [\n    ProductListComponent,\n    ProductListItemComponent,\n    ProductGridItemComponent,\n    ProductViewComponent,\n    ProductScrollComponent,\n  ],\n})\nexport class ProductListModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product, ProductScope } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../current-product.service';\nimport { ProductDetailOutlets } from '../product-outlets.model';\n\n@Component({\n  selector: 'cx-product-summary',\n  templateUrl: './product-summary.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductSummaryComponent {\n  outlets = ProductDetailOutlets;\n\n  product$: Observable<Product> = this.currentProductService.getProduct([\n    ProductScope.DETAILS,\n    ProductScope.PRICE,\n  ]);\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","<ng-container *ngIf=\"product$ | async as product\">\n  <ng-template\n    [cxOutlet]=\"outlets.PRICE\"\n    [cxOutletContext]=\"{ product: product }\"\n  >\n    <div\n      [attr.aria-label]=\"'productSummary.newItemPrice' | cxTranslate\"\n      class=\"price\"\n    >\n      {{ product?.price?.formattedValue }}\n    </div>\n  </ng-template>\n\n  <ng-template\n    [cxOutlet]=\"outlets.SUMMARY\"\n    [cxOutletContext]=\"{ product: product }\"\n  >\n    <p [innerHTML]=\"product?.summary\" class=\"summary\"></p>\n  </ng-template>\n\n  <!-- @TODO: Temp. Comment out share link while not in use by CMS -->\n  <!-- <ng-container *cxOutlet=\"outlets.SHARE\">\n        <div>\n          <a href=\"#\" class=\"share btn-link\">\n            {{ 'productSummary.share' | cxTranslate }}\n          </a>\n        </div>\n      </ng-container> -->\n</ng-container>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { OutletModule } from '../../../cms-structure/outlet/outlet.module';\nimport { ProductSummaryComponent } from './product-summary.component';\n\n@NgModule({\n  imports: [CommonModule, OutletModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSummaryComponent: {\n          component: ProductSummaryComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductSummaryComponent],\n  exports: [ProductSummaryComponent],\n})\nexport class ProductSummaryModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Product, ProductScope } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-attributes',\n  templateUrl: './product-attributes.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductAttributesComponent {\n  product$: Observable<Product> = this.currentProductService.getProduct(\n    ProductScope.ATTRIBUTES\n  );\n\n  constructor(protected currentProductService: CurrentProductService) {}\n}\n","<ng-container *ngIf=\"product$ | async as product\">\n  <div class=\"container\">\n    <h2>{{ 'productDetails.specification' | cxTranslate }}</h2>\n    <table *ngFor=\"let class of product?.classifications\">\n      <th>\n        <h3>{{ class.name }}</h3>\n      </th>\n      <tr *ngFor=\"let feature of class.features\">\n        <td>{{ feature.name }}</td>\n        <td>\n          <ul>\n            <li *ngFor=\"let featureValue of feature?.featureValues\">\n              {{ featureValue?.value }}\n              <span\n                *ngIf=\"\n                  feature.featureUnit?.symbol?.length > 0 &&\n                  feature.featureUnit.unitType != '300'\n                \"\n              >\n                {{ feature.featureUnit.symbol }}\n              </span>\n            </li>\n          </ul>\n        </td>\n      </tr>\n    </table>\n  </div>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ProductAttributesComponent } from './product-attributes.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductSpecsTabComponent: {\n          component: ProductAttributesComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductAttributesComponent],\n  exports: [ProductAttributesComponent],\n})\nexport class ProductAttributesModule {}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { Product } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { CurrentProductService } from '../../current-product.service';\n\n@Component({\n  selector: 'cx-product-details-tab',\n  templateUrl: './product-details-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductDetailsTabComponent implements OnInit {\n  product$: Observable<Product>;\n\n  constructor(protected currentProductService: CurrentProductService) {}\n\n  ngOnInit() {\n    this.product$ = this.currentProductService.getProduct();\n  }\n}\n","<ng-container *ngIf=\"product$ | async as product\">\n  <div class=\"container\" [innerHTML]=\"product?.description\"></div>\n</ng-container>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CmsConfig, provideDefaultConfig } from '@spartacus/core';\nimport { ProductDetailsTabComponent } from './product-details-tab.component';\n\n@NgModule({\n  imports: [CommonModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductDetailsTabComponent: {\n          component: ProductDetailsTabComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductDetailsTabComponent],\n  exports: [ProductDetailsTabComponent],\n})\nexport class ProductDetailsTabModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ViewChild,\n  ElementRef,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Product, ProductReviewService, Review } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport {\n  distinctUntilChanged,\n  filter,\n  map,\n  switchMap,\n  tap,\n} from 'rxjs/operators';\nimport { CurrentProductService } from '../../current-product.service';\nimport { CustomFormValidators } from '../../../../shared/index';\n\n@Component({\n  selector: 'cx-product-reviews',\n  templateUrl: './product-reviews.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductReviewsComponent {\n  @ViewChild('titleInput', { static: false }) titleInput: ElementRef;\n  @ViewChild('writeReviewButton', { static: false })\n  writeReviewButton: ElementRef;\n\n  isWritingReview = false;\n\n  // TODO: configurable\n  initialMaxListItems = 5;\n  maxListItems: number;\n  reviewForm: FormGroup;\n\n  product$: Observable<Product> = this.currentProductService.getProduct();\n\n  reviews$: Observable<Review[]> = this.product$.pipe(\n    filter((p) => !!p),\n    map((p) => p.code),\n    distinctUntilChanged(),\n    switchMap((productCode) =>\n      this.reviewService.getByProductCode(productCode)\n    ),\n    tap(() => {\n      this.resetReviewForm();\n      this.maxListItems = this.initialMaxListItems;\n    })\n  );\n\n  constructor(\n    protected reviewService: ProductReviewService,\n    protected currentProductService: CurrentProductService,\n    private fb: FormBuilder,\n    protected cd: ChangeDetectorRef\n  ) {}\n\n  initiateWriteReview(): void {\n    this.isWritingReview = true;\n\n    this.cd.detectChanges();\n\n    if (this.titleInput && this.titleInput.nativeElement) {\n      this.titleInput.nativeElement.focus();\n    }\n  }\n\n  cancelWriteReview(): void {\n    this.isWritingReview = false;\n    this.resetReviewForm();\n\n    this.cd.detectChanges();\n\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\n      this.writeReviewButton.nativeElement.focus();\n    }\n  }\n\n  setRating(rating: number): void {\n    this.reviewForm.controls.rating.setValue(rating);\n  }\n\n  submitReview(product: Product) {\n    if (this.reviewForm.valid) {\n      this.addReview(product);\n    } else {\n      this.reviewForm.markAllAsTouched();\n    }\n  }\n\n  addReview(product: Product): void {\n    const reviewFormControls = this.reviewForm.controls;\n    const review: Review = {\n      headline: reviewFormControls.title.value,\n      comment: reviewFormControls.comment.value,\n      rating: reviewFormControls.rating.value,\n      alias: reviewFormControls.reviewerName.value,\n    };\n\n    this.reviewService.add(product.code, review);\n\n    this.isWritingReview = false;\n    this.resetReviewForm();\n\n    this.cd.detectChanges();\n\n    if (this.writeReviewButton && this.writeReviewButton.nativeElement) {\n      this.writeReviewButton.nativeElement.focus();\n    }\n  }\n\n  private resetReviewForm(): void {\n    this.reviewForm = this.fb.group({\n      title: ['', Validators.required],\n      comment: ['', Validators.required],\n      rating: [null, CustomFormValidators.starRatingEmpty],\n      reviewerName: '',\n    });\n  }\n}\n","<div class=\"container\" *ngIf=\"product$ | async as product\">\n  <h2>\n    {{ 'productDetails.reviews' | cxTranslate }} ({{ product.numberOfReviews }})\n  </h2>\n  <ng-container *ngIf=\"!isWritingReview; else writeReview\">\n    <div class=\"header\">\n      <h3>{{ 'productReview.overallRating' | cxTranslate }}</h3>\n      <button\n        #writeReviewButton\n        class=\"btn btn-primary\"\n        (click)=\"initiateWriteReview()\"\n      >\n        {{ 'productReview.writeReview' | cxTranslate }}\n      </button>\n      <cx-star-rating\n        *ngIf=\"product.averageRating\"\n        class=\"rating\"\n        [rating]=\"product.averageRating\"\n      ></cx-star-rating>\n      <div class=\"rating\" *ngIf=\"!product.averageRating\">\n        {{ 'productDetails.noReviews' | cxTranslate }}\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"!isWritingReview; else writeReview\">\n      <ng-container *ngIf=\"reviews$ | async as reviews\">\n        <div\n          class=\"review\"\n          tabindex=\"0\"\n          *ngFor=\"let review of reviews | slice: 0:maxListItems\"\n        >\n          <div class=\"title\">{{ review.headline }}</div>\n          <cx-star-rating [rating]=\"review.rating\"></cx-star-rating>\n          <div class=\"name\">\n            {{ review.alias ? review.alias : review.principal?.name }}\n          </div>\n          <div class=\"date\">{{ review.date | cxDate }}</div>\n          <div class=\"text\">{{ review.comment }}</div>\n        </div>\n        <div *ngIf=\"reviews.length > initialMaxListItems\">\n          <button\n            class=\"btn btn-primary\"\n            (click)=\"maxListItems = reviews.length\"\n            *ngIf=\"maxListItems === initialMaxListItems\"\n          >\n            {{ 'productReview.more' | cxTranslate }}\n          </button>\n          <button\n            class=\"btn btn-primary\"\n            (click)=\"maxListItems = initialMaxListItems\"\n            *ngIf=\"maxListItems !== initialMaxListItems\"\n          >\n            {{ 'productReview.less' | cxTranslate }}\n          </button>\n        </div>\n      </ng-container>\n    </ng-container>\n  </ng-container>\n\n  <ng-template #writeReview>\n    <form (ngSubmit)=\"submitReview(product)\" [formGroup]=\"reviewForm\">\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content\">{{\n            'productReview.reviewTitle' | cxTranslate\n          }}</span>\n          <input\n            aria-required=\"true\"\n            #titleInput\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"title\"\n          />\n          <cx-form-errors\n            aria-live=\"assertive\"\n            aria-atomic=\"true\"\n            [control]=\"reviewForm.get('title')\"\n          ></cx-form-errors>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content\">{{\n            'productReview.writeYourComments' | cxTranslate\n          }}</span>\n          <textarea\n            aria-required=\"true\"\n            class=\"form-control\"\n            rows=\"3\"\n            formControlName=\"comment\"\n          ></textarea>\n          <cx-form-errors\n            aria-live=\"assertive\"\n            aria-atomic=\"true\"\n            [control]=\"reviewForm.get('comment')\"\n          ></cx-form-errors>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content\">{{\n            'productReview.rating' | cxTranslate\n          }}</span>\n          <input\n            aria-required=\"true\"\n            type=\"number\"\n            formControlName=\"rating\"\n            class=\"rating-input\"\n          />\n          <cx-star-rating\n            (change)=\"setRating($event)\"\n            [disabled]=\"false\"\n          ></cx-star-rating>\n          <cx-form-errors\n            aria-live=\"assertive\"\n            aria-atomic=\"true\"\n            [control]=\"reviewForm.get('rating')\"\n          ></cx-form-errors>\n        </label>\n      </div>\n      <div class=\"form-group\">\n        <label>\n          <span class=\"label-content\">{{\n            'productReview.reviewerName' | cxTranslate\n          }}</span>\n          <input\n            type=\"text\"\n            class=\"form-control\"\n            formControlName=\"reviewerName\"\n          />\n        </label>\n      </div>\n      <div class=\"form-group row\">\n        <div class=\"col-12 col-md-4\">\n          <button\n            type=\"button\"\n            class=\"btn btn-block btn-secondary\"\n            (click)=\"cancelWriteReview()\"\n          >\n            {{ 'common.cancel' | cxTranslate }}\n          </button>\n        </div>\n        <div class=\"col-12 col-md-4\">\n          <button type=\"submit\" class=\"btn btn-block btn-primary\">\n            {{ 'common.submit' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </form>\n  </ng-template>\n</div>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { ProductReviewsComponent } from './product-reviews.component';\nimport { StarRatingModule, FormErrorsModule } from '../../../../shared/index';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    I18nModule,\n    StarRatingModule,\n    FormErrorsModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        ProductReviewsTabComponent: {\n          component: ProductReviewsComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [ProductReviewsComponent],\n  exports: [ProductReviewsComponent],\n})\nexport class ProductReviewsModule {}\n","import { NgModule } from '@angular/core';\nimport { ProductAttributesModule } from './product-attributes/product-attributes.module';\nimport { ProductDetailsTabModule } from './product-details-tab/product-details-tab.module';\nimport { ProductReviewsModule } from './product-reviews/product-reviews.module';\n\n@NgModule({\n  imports: [\n    ProductAttributesModule,\n    ProductDetailsTabModule,\n    ProductReviewsModule,\n  ],\n})\nexport class ProductTabsModule {}\n","import { Component, OnDestroy } from '@angular/core';\nimport { NotificationPreference, UserInterestsService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { ModalService } from '../../../../shared/components/modal/modal.service';\n\n@Component({\n  selector: 'cx-stock-notification-dialog',\n  templateUrl: './stock-notification-dialog.component.html',\n})\nexport class StockNotificationDialogComponent implements OnDestroy {\n  subscribeSuccess$: Observable<boolean>;\n  enabledPrefs: NotificationPreference[] = [];\n\n  constructor(\n    private modalService: ModalService,\n    private interestsService: UserInterestsService\n  ) {}\n\n  close() {\n    this.modalService.dismissActiveModal();\n  }\n\n  ngOnDestroy(): void {\n    if (this.subscribeSuccess$) {\n      this.subscribeSuccess$\n        .subscribe((success) => {\n          if (success) {\n            this.interestsService.resetAddInterestState();\n          }\n        })\n        .unsubscribe();\n    }\n  }\n}\n","<div class=\"cx-dialog-header modal-header\">\n  <div class=\"cx-dialog-title modal-title\">\n    {{ 'stockNotification.subscriptionDialog.header' | cxTranslate }}\n  </div>\n  <button\n    type=\"button\"\n    [attr.aria-label]=\"'common.close' | cxTranslate\"\n    class=\"close\"\n    tabindex=\"-1\"\n    (click)=\"close()\"\n  >\n    <span aria-hidden=\"true\">&times;</span>\n  </button>\n</div>\n\n<ng-container *ngIf=\"subscribeSuccess$ | async; else loading\">\n  <div class=\"cx-dialog-body modal-body\">\n    <div class=\"container\">\n      <p>\n        {{\n          'stockNotification.subscriptionDialog.notifiedPrefix' | cxTranslate\n        }}\n      </p>\n      <p *ngFor=\"let preference of enabledPrefs\" class=\"channels\">\n        <span>{{ preference.channel }}</span\n        ><span *ngIf=\"preference.value\">{{ ': ' + preference.value }}</span>\n      </p>\n      <p>\n        {{\n          'stockNotification.subscriptionDialog.notifiedSuffix' | cxTranslate\n        }}\n      </p>\n      <p>\n        {{\n          'stockNotification.subscriptionDialog.manageChannelsPrefix'\n            | cxTranslate\n        }}\n        <a\n          (click)=\"close()\"\n          [routerLink]=\"['/my-account/notification-preference']\"\n          class=\"link-prefs\"\n        >\n          {{\n            'stockNotification.subscriptionDialog.manageChannelsLink'\n              | cxTranslate\n          }}</a\n        >\n        {{\n          'stockNotification.subscriptionDialog.manageChannelsSuffix'\n            | cxTranslate\n        }}\n      </p>\n\n      <p>\n        {{\n          'stockNotification.subscriptionDialog.manageSubscriptionsPrefix'\n            | cxTranslate\n        }}\n        <a\n          (click)=\"close()\"\n          [routerLink]=\"['/my-account/my-interests']\"\n          class=\"link-interests\"\n        >\n          {{\n            'stockNotification.subscriptionDialog.manageSubscriptionsLink'\n              | cxTranslate\n          }}</a\n        >\n        {{\n          'stockNotification.subscriptionDialog.manageSubscriptionsSuffix'\n            | cxTranslate\n        }}\n      </p>\n      <div class=\"row\">\n        <div class=\"cx-dialog-actions col-sm-12 col-md-3 offset-md-9\">\n          <button\n            class=\"btn btn-primary btn-block btn-ok\"\n            type=\"button\"\n            (click)=\"close()\"\n          >\n            {{ 'stockNotification.subscriptionDialog.okBtn' | cxTranslate }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</ng-container>\n\n<ng-template #loading>\n  <div class=\"cx-dialog-body modal-body\">\n    <p>\n      {{ 'stockNotification.subscriptionDialog.subscribing' | cxTranslate }}\n    </p>\n    <div class=\"cx-dialog-row\">\n      <div class=\"col-sm-12\">\n        <cx-spinner></cx-spinner>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  OnDestroy,\n  OnInit,\n} from '@angular/core';\nimport {\n  GlobalMessageService,\n  GlobalMessageType,\n  isNotNullable,\n  NotificationPreference,\n  NotificationType,\n  OCC_USER_ID_ANONYMOUS,\n  Product,\n  TranslationService,\n  UserIdService,\n  UserInterestsService,\n  UserNotificationPreferenceService,\n} from '@spartacus/core';\nimport { combineLatest, Observable, Subscription } from 'rxjs';\nimport { filter, first, map, tap } from 'rxjs/operators';\nimport { ModalService } from '../../../shared/components/modal/modal.service';\nimport { CurrentProductService } from '../current-product.service';\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\n\n@Component({\n  selector: 'cx-stock-notification',\n  templateUrl: './stock-notification.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StockNotificationComponent implements OnInit, OnDestroy {\n  hasProductInterests$: Observable<boolean>;\n  prefsEnabled$: Observable<boolean>;\n  outOfStock$: Observable<boolean>;\n  isRemoveInterestLoading$: Observable<boolean>;\n  anonymous = true;\n\n  private enabledPrefs: NotificationPreference[] = [];\n  private productCode: string;\n  private subscribeSuccess$: Observable<boolean>;\n  private subscriptions = new Subscription();\n\n  constructor(\n    private currentProductService: CurrentProductService,\n    private globalMessageService: GlobalMessageService,\n    private translationService: TranslationService,\n    private interestsService: UserInterestsService,\n    private modalService: ModalService,\n    private notificationPrefService: UserNotificationPreferenceService,\n    private userIdService: UserIdService\n  ) {}\n\n  ngOnInit() {\n    this.outOfStock$ = combineLatest([\n      this.currentProductService.getProduct().pipe(filter(isNotNullable)),\n      this.userIdService.getUserId(),\n    ]).pipe(\n      tap(([product, userId]) => {\n        this.productCode = product.code;\n        if (userId !== OCC_USER_ID_ANONYMOUS) {\n          this.anonymous = false;\n          this.notificationPrefService.loadPreferences();\n          this.interestsService.loadProductInterests(\n            null,\n            null,\n            null,\n            product.code,\n            NotificationType.BACK_IN_STOCK\n          );\n        }\n      }),\n      map(\n        ([product]: [Product, String]) =>\n          !!product.stock && product.stock.stockLevelStatus === 'outOfStock'\n      )\n    );\n\n    this.hasProductInterests$ = this.interestsService\n      .getProductInterests()\n      .pipe(\n        map(\n          (interests) => !!interests.results && interests.results.length === 1\n        )\n      );\n    this.subscribeSuccess$ =\n      this.interestsService.getAddProductInterestSuccess();\n    this.isRemoveInterestLoading$ =\n      this.interestsService.getRemoveProdutInterestLoading();\n    this.prefsEnabled$ = this.notificationPrefService\n      .getEnabledPreferences()\n      .pipe(\n        tap((prefs) => (this.enabledPrefs = prefs)),\n        map((prefs) => prefs.length > 0)\n      );\n\n    this.subscriptions.add(\n      this.interestsService.getAddProductInterestError().subscribe((error) => {\n        if (error) {\n          this.onInterestAddingError();\n        }\n      })\n    );\n    this.subscriptions.add(\n      this.interestsService\n        .getRemoveProdutInterestSuccess()\n        .subscribe((success) => {\n          if (success) {\n            this.onInterestRemovingSuccess();\n          }\n        })\n    );\n  }\n\n  subscribe() {\n    this.openDialog();\n    this.interestsService.addProductInterest(\n      this.productCode,\n      NotificationType.BACK_IN_STOCK\n    );\n  }\n\n  unsubscribe() {\n    this.interestsService.removeProdutInterest(\n      {\n        product: {\n          code: this.productCode,\n        },\n        productInterestEntry: [\n          {\n            interestType: NotificationType.BACK_IN_STOCK,\n          },\n        ],\n      },\n      true\n    );\n  }\n\n  private onInterestRemovingSuccess() {\n    this.subscriptions.add(\n      this.translationService\n        .translate('stockNotification.unsubscribeSuccess')\n        .pipe(first())\n        .subscribe((text) =>\n          this.globalMessageService.add(text, GlobalMessageType.MSG_TYPE_INFO)\n        )\n    );\n    this.interestsService.resetRemoveInterestState();\n  }\n\n  private onInterestAddingError() {\n    this.modalService.dismissActiveModal();\n    this.interestsService.resetAddInterestState();\n  }\n\n  private openDialog() {\n    const modalInstance = this.modalService.open(\n      StockNotificationDialogComponent,\n      {\n        centered: true,\n        size: 'lg',\n      }\n    ).componentInstance;\n    modalInstance.subscribeSuccess$ = this.subscribeSuccess$;\n    modalInstance.enabledPrefs = this.enabledPrefs;\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.unsubscribe();\n    this.interestsService.clearProductInterests();\n    this.notificationPrefService.clearPreferences();\n  }\n}\n","<ng-container *ngIf=\"outOfStock$ | async\">\n  <ng-container *ngIf=\"!(hasProductInterests$ | async); else stopNotify\">\n    <ng-container *ngIf=\"prefsEnabled$ | async; else disableNotify\">\n      <div class=\"stock-notification-notes\">\n        <p>{{ 'stockNotification.getNotified' | cxTranslate }}</p>\n      </div>\n      <button\n        class=\"btn btn-primary btn-block btn-notify\"\n        type=\"button\"\n        (click)=\"subscribe()\"\n      >\n        {{ 'stockNotification.notifyMe' | cxTranslate }}\n      </button>\n    </ng-container>\n  </ng-container>\n</ng-container>\n\n<ng-template #disableNotify>\n  <div class=\"stock-notification-notes\" id=\"outOfStockMessage\">\n    <p>\n      <ng-container *ngIf=\"anonymous; else loggedIn\">\n        <a [routerLink]=\"{ cxRoute: 'login' } | cxUrl\">\n          {{ 'miniLogin.signInRegister' | cxTranslate }}</a\n        >\n        {{ 'stockNotification.getNotifySuffix' | cxTranslate }}<br />\n      </ng-container>\n      <ng-template #loggedIn>\n        {{ 'stockNotification.getNotify' | cxTranslate }}<br />\n        {{ 'stockNotification.activateChannelsPrefix' | cxTranslate\n        }}<a [routerLink]=\"['/my-account/notification-preference']\">{{\n          'stockNotification.channelsLink' | cxTranslate\n        }}</a\n        >{{ 'stockNotification.activateChannelsSuffix' | cxTranslate }}\n      </ng-template>\n    </p>\n  </div>\n  <button\n    class=\"btn btn-primary btn-block btn-notify\"\n    type=\"button\"\n    disabled=\"true\"\n    aria-describedby=\"outOfStockMessage\"\n  >\n    {{ 'stockNotification.notifyMe' | cxTranslate }}\n  </button>\n</ng-template>\n\n<ng-template #stopNotify>\n  <ng-container *ngIf=\"!(isRemoveInterestLoading$ | async); else loading\">\n    <div class=\"stock-notification-notes\">\n      <p>{{ 'stockNotification.notified' | cxTranslate }}</p>\n    </div>\n    <button\n      class=\"btn btn-primary btn-block btn-stop-notify\"\n      type=\"button\"\n      (click)=\"unsubscribe()\"\n    >\n      {{ 'stockNotification.stopNotify' | cxTranslate }}\n    </button>\n  </ng-container>\n</ng-template>\n\n<ng-template #loading>\n  <div class=\"cx-dialog-body modal-body\">\n    <div class=\"cx-dialog-row\">\n      <div class=\"col-sm-12\">\n        <cx-spinner></cx-spinner>\n      </div>\n    </div>\n  </div>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StockNotificationComponent } from './stock-notification.component';\nimport {\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport { StockNotificationDialogComponent } from './stock-notification-dialog/stock-notification-dialog.component';\nimport { SpinnerModule } from '../../../shared/components/spinner/spinner.module';\nimport { RouterModule } from '@angular/router';\n\n@NgModule({\n  declarations: [StockNotificationComponent, StockNotificationDialogComponent],\n  imports: [CommonModule, RouterModule, I18nModule, SpinnerModule, UrlModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        StockNotificationComponent: {\n          component: StockNotificationComponent,\n        },\n      },\n    }),\n  ],\n  exports: [StockNotificationComponent, StockNotificationDialogComponent],\n})\nexport class StockNotificationModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  ActivatedRouteSnapshot,\n  CanActivate,\n  RouterStateSnapshot,\n  UrlTree,\n} from '@angular/router';\nimport {\n  AuthConfigService,\n  AuthRedirectService,\n  AuthService,\n  OAuthFlow,\n} from '@spartacus/core';\nimport { EMPTY, Observable, of } from 'rxjs';\nimport { switchMap, take } from 'rxjs/operators';\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\n\n/**\n * Guards the _login_ route.\n *\n * Takes care of routing the user to a auth server login page (if implicit or code flow is used).\n * In case of Resource Owner Password Flow just renders the page as normal CMS page.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoginGuard implements CanActivate {\n  constructor(\n    protected authService: AuthService,\n    protected authRedirectService: AuthRedirectService,\n    protected authConfigService: AuthConfigService,\n    protected cmsPageGuard: CmsPageGuard\n  ) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> {\n    return this.authService.isUserLoggedIn().pipe(\n      take(1),\n      switchMap((isUserLoggedIn) => {\n        if (\n          this.authConfigService.getOAuthFlow() ===\n            OAuthFlow.ResourceOwnerPasswordFlow ||\n          isUserLoggedIn\n        ) {\n          return this.cmsPageGuard.canActivate(route, state);\n        } else {\n          // Remember the previous url, so we can redirect user to that page after OAuth server callback\n          this.authRedirectService.reportNotAuthGuard();\n          // This method can trigger redirect to OAuth server that's why we don't return anything in this case\n          const redirected = this.authService.loginWithRedirect();\n          if (!redirected) {\n            return of(false);\n          }\n          return EMPTY;\n        }\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  PageLayoutComponent,\n  PageLayoutModule,\n} from '../../../cms-structure/page/index';\nimport { LoginGuard } from './login.guard';\n\n/**\n * This module enables to quickly switch from Resource Owner Password Flow\n * to Implicit Flow or Authorization Code Flow. The `login` route in this case will be\n * responsible for initalizing the redirect to OAuth server to login.\n *\n * Instead of manually invoking OAuth redirect you only have to redirect to `login` page.\n */\n@NgModule({\n  imports: [\n    PageLayoutModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [LoginGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'login' },\n      },\n    ]),\n  ],\n})\nexport class LoginRouteModule {}\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router, UrlTree } from '@angular/router';\nimport {\n  AuthRedirectService,\n  AuthService,\n  CmsService,\n  PageType,\n  ProtectedRoutesService,\n  SemanticPathService,\n} from '@spartacus/core';\nimport { from, Observable } from 'rxjs';\nimport { map, switchMap } from 'rxjs/operators';\n\n/**\n * Guards the _logout_ route.\n *\n * Takes care of routing the user to a logout page (if available) or redirects to\n * the homepage. If the homepage is protected, the user is redirected\n * to the login route instead.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class LogoutGuard implements CanActivate {\n  constructor(\n    protected auth: AuthService,\n    protected cms: CmsService,\n    protected semanticPathService: SemanticPathService,\n    protected protectedRoutes: ProtectedRoutesService,\n    protected router: Router,\n    protected authRedirectService: AuthRedirectService\n  ) {}\n\n  canActivate(): Observable<boolean | UrlTree> {\n    // Logout route should never be remembered as a redirect url after login (that would cause logout right after login).\n    this.authRedirectService.reportNotAuthGuard();\n    /**\n     * First we want to complete logout process before redirecting to logout page\n     * We want to avoid errors like `token is no longer valid`\n     */\n    return from(this.logout()).pipe(\n      switchMap(() => {\n        return this.cms\n          .hasPage({\n            id: this.semanticPathService.get('logout'),\n            type: PageType.CONTENT_PAGE,\n          })\n          .pipe(\n            map((hasPage) => {\n              if (!hasPage) {\n                return this.getRedirectUrl();\n              }\n              // TODO(#9385): Use CMS page guard here.\n              return hasPage;\n            })\n          );\n      })\n    );\n  }\n\n  protected logout(): Promise<any> {\n    return this.auth.coreLogout();\n  }\n\n  /**\n   * Whenever there is no specific \"logout\" page configured in the CMS,\n   * we redirect after the user is logged out.\n   *\n   * The user gets redirected to the homepage, unless the homepage is protected\n   * (in case of a closed shop). We'll redirect to the login page instead.\n   */\n  protected getRedirectUrl(): UrlTree {\n    const cxRoute = this.protectedRoutes.shouldProtect ? 'login' : 'home';\n    return this.router.parseUrl(this.semanticPathService.get(cxRoute));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { CmsPageGuard } from '../../../cms-structure/guards/cms-page.guard';\nimport {\n  PageLayoutComponent,\n  PageLayoutModule,\n} from '../../../cms-structure/page/index';\nimport { LogoutGuard } from './logout.guard';\n\n@NgModule({\n  imports: [\n    PageLayoutModule,\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [LogoutGuard, CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'logout' },\n      },\n    ]),\n  ],\n})\nexport class LogoutModule {}\n","import { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UrlModule } from '@spartacus/core';\nimport { LoginRouteModule } from './login-route/login-route.module';\nimport { LogoutModule } from './logout/logout.module';\n\n@NgModule({\n  imports: [\n    LogoutModule,\n    LoginRouteModule,\n    ReactiveFormsModule,\n    RouterModule,\n    UrlModule,\n  ],\n})\nexport class UserComponentModule {}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\nimport { OrderEntry } from '@spartacus/core';\n\n@Component({\n  selector: 'cx-wish-list-item',\n  templateUrl: './wish-list-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class WishListItemComponent {\n  @Input()\n  isLoading = false;\n  @Input() cartEntry: OrderEntry;\n\n  @Output()\n  remove = new EventEmitter<OrderEntry>();\n\n  removeEntry(item: OrderEntry) {\n    this.remove.emit(item);\n  }\n}\n","<div class=\"row\">\n  <!-- Item Image -->\n  <div class=\"cx-image-container col-2\">\n    <a\n      [routerLink]=\"{ cxRoute: 'product', params: cartEntry.product } | cxUrl\"\n      tabindex=\"-1\"\n    >\n      <cx-media\n        [container]=\"cartEntry.product.images?.PRIMARY\"\n        format=\"thumbnail\"\n      ></cx-media>\n    </a>\n  </div>\n  <!-- Item Information -->\n  <div class=\"cx-info col-10\">\n    <div class=\"cx-info-container row\">\n      <!-- Item Description -->\n      <div class=\"col-md-5 col-lg-5 col-xl-5\">\n        <div *ngIf=\"cartEntry.product.name\" class=\"cx-name\">\n          <a\n            class=\"cx-link\"\n            [routerLink]=\"\n              { cxRoute: 'product', params: cartEntry.product } | cxUrl\n            \"\n            ><h2>{{ cartEntry.product.name }}</h2></a\n          >\n        </div>\n        <div *ngIf=\"cartEntry.product.code\" class=\"cx-code\">\n          {{ 'cartItems.id' | cxTranslate }} {{ cartEntry.product.code }}\n        </div>\n        <!-- Variants -->\n        <ng-container *ngIf=\"cartEntry.product.baseOptions?.length\">\n          <div\n            *ngFor=\"\n              let variant of cartEntry.product.baseOptions[0]?.selected\n                ?.variantOptionQualifiers\n            \"\n            class=\"cx-property\"\n          >\n            <div class=\"cx-label\" *ngIf=\"variant.name && variant.value\">\n              {{ variant.name }}: {{ variant.value }}\n            </div>\n          </div>\n        </ng-container>\n      </div>\n      <!-- Item Price -->\n      <div\n        *ngIf=\"cartEntry.basePrice\"\n        class=\"cx-price col-md-3 col-lg-4 col-xl-4\"\n      >\n        <div class=\"cx-label d-block d-md-none d-lg-none d-xl-none\">\n          {{ 'cartItems.itemPrice' | cxTranslate }}\n        </div>\n        <div *ngIf=\"cartEntry.basePrice\" class=\"cx-value\">\n          {{ cartEntry.basePrice?.formattedValue }}\n        </div>\n      </div>\n      <!-- Total -->\n      <div class=\"col-sm-8 col-md-4 col-lg-3 col-xl-3 cx-add-to-cart\">\n        <cx-add-to-cart\n          *ngIf=\"\n            cartEntry.product.stock.stockLevelStatus !== 'outOfStock';\n            else outOfStock\n          \"\n          [showQuantity]=\"false\"\n          [product]=\"cartEntry.product\"\n        ></cx-add-to-cart>\n        <ng-template #outOfStock>\n          <span class=\"cx-out-of-stock\">\n            {{ 'addToCart.outOfStock' | cxTranslate }}\n          </span>\n        </ng-template>\n      </div>\n    </div>\n    <div class=\"cx-return-button col-12\">\n      <button\n        class=\"btn cx-action-link\"\n        (click)=\"removeEntry(cartEntry)\"\n        [disabled]=\"isLoading\"\n      >\n        {{ 'common.remove' | cxTranslate }}\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { Cart, OrderEntry, WishListService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'cx-wish-list',\n  templateUrl: './wish-list.component.html',\n})\nexport class WishListComponent {\n  wishList$: Observable<Cart> = this.wishListService.getWishList();\n  loading$: Observable<boolean> = this.wishListService.getWishListLoading();\n\n  constructor(protected wishListService: WishListService) {}\n\n  removeEntry(item: OrderEntry) {\n    this.wishListService.removeEntry(item);\n  }\n}\n","<ng-container *ngIf=\"wishList$ | async as wishList\">\n  <ng-container *ngIf=\"wishList?.entries?.length > 0; else emptyWishList\">\n    <div class=\"d-none d-md-block d-lg-block d-xl-block\">\n      <div class=\"cx-item-list-header row\">\n        <div class=\"cx-item-list-desc col-md-7 col-lg-6 col-xl-6\">\n          {{ 'cartItems.description' | cxTranslate }}\n        </div>\n        <div class=\"cx-item-list-price col-md-3 col-lg-4 col-xl-4\">\n          {{ 'cartItems.itemPrice' | cxTranslate }}\n        </div>\n        <div class=\"cx-item-list-total col-md-2 col-lg-2 col-xl-2\">\n          {{ 'cartItems.total' | cxTranslate }}\n        </div>\n      </div>\n    </div>\n\n    <div class=\"cx-item-list-row\" *ngFor=\"let entry of wishList?.entries\">\n      <cx-wish-list-item\n        [cartEntry]=\"entry\"\n        [isLoading]=\"loading$ | async\"\n        class=\"cx-wish-list-items\"\n        (remove)=\"removeEntry($event)\"\n      ></cx-wish-list-item>\n    </div>\n  </ng-container>\n</ng-container>\n\n<ng-template #emptyWishList>\n  <h2>{{ 'wishlist.empty' | cxTranslate }}</h2>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport {\n  AuthGuard,\n  CmsConfig,\n  I18nModule,\n  provideDefaultConfig,\n  UrlModule,\n} from '@spartacus/core';\nimport {\n  ItemCounterModule,\n  MediaModule,\n  StarRatingModule,\n} from '../../shared/index';\nimport { AddToCartModule } from '../cart/index';\nimport { WishListItemComponent } from './components/wish-list-item/wish-list-item.component';\nimport { WishListComponent } from './components/wish-list/wish-list.component';\n\n@NgModule({\n  imports: [\n    AddToCartModule,\n    CommonModule,\n    I18nModule,\n    MediaModule,\n    RouterModule,\n    StarRatingModule,\n    UrlModule,\n    ItemCounterModule,\n  ],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        WishListComponent: {\n          component: WishListComponent,\n          guards: [AuthGuard],\n        },\n      },\n    }),\n  ],\n  declarations: [WishListComponent, WishListItemComponent],\n  exports: [WishListComponent, WishListItemComponent],\n})\nexport class WishListModule {}\n","import { inject, InjectionToken } from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  DEFAULT_URL_MATCHER,\n  UrlMatcherFactory,\n  UrlMatcherService,\n} from '@spartacus/core';\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\nexport function getProductDetailsUrlMatcherFactory(\n  service: UrlMatcherService,\n  defaultMatcherFactory: UrlMatcherFactory\n): UrlMatcherFactory {\n  const factory = (route: Route) => {\n    const defaultMatcher = defaultMatcherFactory(route);\n    const suffixPDPMatcher = getSuffixUrlMatcher({\n      marker: 'p',\n      paramName: 'productCode',\n    });\n    return service.getCombined([defaultMatcher, suffixPDPMatcher]);\n  };\n  return factory;\n}\n\n/**\n * Injection token with url matcher factory for PDP.\n * The provided url matcher matches both:\n * - the configured `paths` from routing config and\n * - custom pattern  `** / p / :productCode`\n *\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\n * or additional matchers can be added for a specific route.\n *\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\n */\nexport const PRODUCT_DETAILS_URL_MATCHER =\n  new InjectionToken<UrlMatcherFactory>('PRODUCT_DETAILS_URL_MATCHER', {\n    providedIn: 'root',\n    factory: () =>\n      getProductDetailsUrlMatcherFactory(\n        inject(UrlMatcherService),\n        inject(DEFAULT_URL_MATCHER)\n      ),\n  });\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\nimport { CmsPageGuard } from '../../cms-structure/guards/cms-page.guard';\nimport { PageLayoutComponent } from '../../cms-structure/page/page-layout/page-layout.component';\nimport { PRODUCT_DETAILS_URL_MATCHER } from './product-details-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'product' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<RoutingConfig>{\n      routing: {\n        routes: {\n          product: {\n            matchers: [PRODUCT_DETAILS_URL_MATCHER],\n          },\n        },\n      },\n    }),\n  ],\n})\nexport class ProductDetailsPageModule {}\n","import { inject, InjectionToken } from '@angular/core';\nimport { Route } from '@angular/router';\nimport {\n  DEFAULT_URL_MATCHER,\n  UrlMatcherFactory,\n  UrlMatcherService,\n} from '@spartacus/core';\nimport { getSuffixUrlMatcher } from '../../cms-structure/routing/suffix-routes/suffix-url-matcher';\n\nexport function getProductListingUrlMatcherFactory(\n  service: UrlMatcherService,\n  defaultMatcherFactory: UrlMatcherFactory\n): UrlMatcherFactory {\n  const factory = (route: Route) => {\n    const defaultMatcher = defaultMatcherFactory(route);\n    const suffixPLPMatcher = getSuffixUrlMatcher({\n      marker: 'c',\n      paramName: 'categoryCode',\n    });\n    return service.getCombined([defaultMatcher, suffixPLPMatcher]);\n  };\n  return factory;\n}\n\n/**\n * Injection token with url matcher factory for PLP.\n * The provided url matcher matches both:\n * - the configured `paths` from routing config and\n * - custom pattern  `** / c / :categoryCode`\n *\n * If the this matcher doesn't fit the requirements, it can be replaced with the DEFAULT_URL_MATCHER\n * or additional matchers can be added for a specific route.\n *\n * Note: Matchers will \"match\" a route, but do not contribute to the creation of the route, nor do they guard routes.\n */\nexport const PRODUCT_LISTING_URL_MATCHER =\n  new InjectionToken<UrlMatcherFactory>('PRODUCT_LISTING_URL_MATCHER', {\n    providedIn: 'root',\n    factory: () =>\n      getProductListingUrlMatcherFactory(\n        inject(UrlMatcherService),\n        inject(DEFAULT_URL_MATCHER)\n      ),\n  });\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig, RoutingConfig } from '@spartacus/core';\nimport { CmsPageGuard, PageLayoutComponent } from '../../cms-structure/index';\nimport { PRODUCT_LISTING_URL_MATCHER } from './product-listing-url-matcher';\n\n@NgModule({\n  imports: [\n    RouterModule.forChild([\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { pageLabel: 'search', cxRoute: 'search' },\n      },\n      {\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'brand' },\n      },\n      {\n        // The 'category' route  may include a greedy suffix url matcher '**/c/:categoryCode'\n        // So not to shadow the specific 'brand' route, the 'category' is the last route in the sequence.\n        path: null,\n        canActivate: [CmsPageGuard],\n        component: PageLayoutComponent,\n        data: { cxRoute: 'category' },\n      },\n    ]),\n  ],\n  providers: [\n    provideDefaultConfig(<RoutingConfig>{\n      routing: {\n        routes: {\n          category: {\n            matchers: [PRODUCT_LISTING_URL_MATCHER],\n          },\n        },\n      },\n    }),\n  ],\n})\nexport class ProductListingPageModule {}\n","import { Injectable, Injector } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { ActivatedRoutesService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { ContextToken } from './context.model';\n\n/**\n * Resolves the context for the specific route, based on the property `data.cxContext`\n * defined in the Angular Route.\n */\n@Injectable({ providedIn: 'root' })\nexport class RoutingContextService {\n  constructor(\n    protected activatedRoutesService: ActivatedRoutesService,\n    protected injector: Injector\n  ) {}\n\n  /**\n   * Combined context token mapping consisting of all mappings defined in currently\n   * Activated Angular Routes.\n   *\n   * The context token mapping is read from each Route's property `data.cxContext`.\n   */\n  protected readonly contextTokenMapping$: Observable<\n    Record<ContextToken, any>\n  > = this.activatedRoutesService.routes$.pipe(\n    map((routes) => this.getRoutesContextTokenMapping(routes)),\n    shareReplay({ refCount: true, bufferSize: 1 })\n  );\n\n  /**\n   * Returns the merged context token mapping, consisting of mappings\n   * defined in all Activated Angular Routes.\n   */\n  protected getRoutesContextTokenMapping(\n    routes: ActivatedRouteSnapshot[]\n  ): Record<ContextToken, any> {\n    return Object.assign({}, ...routes.map((route) => route?.data?.cxContext));\n  }\n\n  /**\n   * Resolves the specified `contextToken` from `cxContext` data parameter of the activated Angular Routes.\n   * @param contextToken\n   *\n   * @returns instance from the root injector if defined, otherwise `undefined`.\n   */\n  get<T>(contextToken: ContextToken): Observable<T | undefined> {\n    return this.contextTokenMapping$.pipe(\n      map((contextMapping) => {\n        const providerToken =\n          contextMapping?.[\n            // TODO: remove 'as any' after upgrading TypeScript to v4.4\n            // See: https://github.com/Microsoft/TypeScript/issues/24587\n            contextToken as any\n          ];\n        return this.injector.get(providerToken, undefined);\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { distinctUntilChanged, shareReplay } from 'rxjs/operators';\nimport { ContextToken } from './context.model';\nimport { RoutingContextService } from './routing-context.service';\n\n/**\n * Generic service for resolving the context for the UI components.\n */\n@Injectable({ providedIn: 'root' })\nexport class ContextService {\n  constructor(protected routingContextService: RoutingContextService) {}\n\n  /**\n   * Returns the context for the given token.\n   */\n  get<T>(contextToken: ContextToken): Observable<T | undefined> {\n    return this.resolveContext<T>(contextToken).pipe(\n      distinctUntilChanged(),\n      shareReplay({ refCount: true, bufferSize: 1 })\n    );\n  }\n\n  /**\n   * Resolves the context for the given token.\n   */\n  protected resolveContext<T>(\n    contextToken: ContextToken\n  ): Observable<T | undefined> {\n    return this.routingContextService.get(contextToken);\n  }\n}\n","import { Params } from '@angular/router';\nimport { CxEvent, PageContext } from '@spartacus/core';\n\n/**\n * Indicates that a user navigated to an arbitrary page.\n */\nexport class NavigationEvent extends CxEvent {\n  /**\n   * Event's type\n   */\n  static readonly type = 'NavigationEvent';\n  /**\n   * The page's context\n   */\n  context: PageContext;\n  /**\n   * The route's semantic name\n   */\n  semanticRoute?: string;\n  /**\n   * The current URL\n   */\n  url: string;\n  /**\n   * The current URL's params\n   */\n  params: Params;\n}\n","import { CxEvent } from '@spartacus/core';\nimport { NavigationEvent } from '../navigation/navigation.event';\n\n/**\n * Indicates that a user visited an arbitrary page.\n */\nexport abstract class PageEvent extends CxEvent {\n  /**\n   * `NavigationEvent`'s payload\n   */\n  navigation: NavigationEvent;\n}\n","import { PageEvent } from '../page/page.events';\n\n/**\n * Indicates that a user visited a cart page.\n */\nexport class CartPageEvent extends PageEvent {\n  /** event's type */\n  static readonly type = 'CartPageEvent';\n}\n","import { Injectable } from '@angular/core';\nimport { createFrom, EventService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { NavigationEvent } from '../navigation/navigation.event';\nimport { CartPageEvent } from './cart-page.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CartPageEventBuilder {\n  constructor(protected eventService: EventService) {\n    this.register();\n  }\n\n  protected register(): void {\n    this.eventService.register(CartPageEvent, this.buildCartPageEvent());\n  }\n\n  protected buildCartPageEvent(): Observable<CartPageEvent> {\n    return this.eventService.get(NavigationEvent).pipe(\n      filter((navigationEvent) => navigationEvent.semanticRoute === 'cart'),\n      map((navigationEvent) =>\n        createFrom(CartPageEvent, {\n          navigation: navigationEvent,\n        })\n      )\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CartPageEventBuilder } from './cart-page-event.builder';\n\n@NgModule({})\nexport class CartPageEventModule {\n  constructor(_cartPageEventBuilder: CartPageEventBuilder) {}\n}\n","import { PageEvent } from '../page/page.events';\n\n/**\n * Indicates that a user visited a home page.\n */\nexport class HomePageEvent extends PageEvent {\n  /** event's type */\n  static readonly type = 'HomePageEvent';\n}\n","import { Injectable } from '@angular/core';\nimport { createFrom, EventService } from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { filter, map } from 'rxjs/operators';\nimport { NavigationEvent } from '../navigation/navigation.event';\nimport { HomePageEvent } from './home-page.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class HomePageEventBuilder {\n  constructor(protected eventService: EventService) {\n    this.register();\n  }\n\n  protected register(): void {\n    this.eventService.register(HomePageEvent, this.buildHomePageEvent());\n  }\n\n  protected buildHomePageEvent(): Observable<HomePageEvent> {\n    return this.eventService.get(NavigationEvent).pipe(\n      filter((navigationEvent) => navigationEvent.semanticRoute === 'home'),\n      map((navigationEvent) =>\n        createFrom(HomePageEvent, {\n          navigation: navigationEvent,\n        })\n      )\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { HomePageEventBuilder } from './home-page-event.builder';\n\n@NgModule({})\nexport class HomePageEventModule {\n  constructor(_homePageEventBuilder: HomePageEventBuilder) {}\n}\n","import { Injectable } from '@angular/core';\nimport { ofType } from '@ngrx/effects';\nimport { RouterNavigatedAction, ROUTER_NAVIGATED } from '@ngrx/router-store';\nimport { ActionsSubject } from '@ngrx/store';\nimport {\n  ActivatedRouterStateSnapshot,\n  createFrom,\n  EventService,\n} from '@spartacus/core';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { NavigationEvent } from './navigation.event';\n\n/**\n * A builder for the NavigationEvent\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class NavigationEventBuilder {\n  constructor(\n    protected actions: ActionsSubject,\n    protected eventService: EventService\n  ) {\n    this.register();\n  }\n\n  /**\n   * Registers events\n   */\n  protected register(): void {\n    this.eventService.register(NavigationEvent, this.buildNavigationEvent());\n  }\n\n  /**\n   * Builds the navigation events\n   */\n  protected buildNavigationEvent(): Observable<NavigationEvent> {\n    return this.getNavigatedEvent().pipe(\n      map((state) =>\n        createFrom(NavigationEvent, {\n          context: state.context,\n          semanticRoute: state.semanticRoute,\n          url: state.url,\n          params: state.params,\n        })\n      )\n    );\n  }\n\n  private getNavigatedEvent(): Observable<ActivatedRouterStateSnapshot> {\n    return this.actions.pipe(\n      ofType<RouterNavigatedAction<ActivatedRouterStateSnapshot>>(\n        ROUTER_NAVIGATED\n      ),\n      map((event) => event.payload.routerState)\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NavigationEventBuilder } from './navigation-event.builder';\n\n@NgModule({})\nexport class NavigationEventModule {\n  constructor(_navigationEventBuilder: NavigationEventBuilder) {}\n}\n","import { Category, Price } from '@spartacus/core';\nimport { PageEvent } from '../page/page.events';\n\n/**\n * Indicates that a user visited a product details page.\n */\nexport class ProductDetailsPageEvent extends PageEvent {\n  /** event's type */\n  static readonly type = 'ProductDetailsPageEvent';\n  categories?: Category[];\n  code?: string;\n  name?: string;\n  price?: Price;\n}\n\n/**\n * Indicates that a user visited a category page.\n */\nexport class CategoryPageResultsEvent extends PageEvent {\n  /** event's type */\n  static readonly type = 'CategoryPageResultsEvent';\n  categoryCode: string;\n  categoryName?: string;\n  numberOfResults: Number;\n}\n\n/**\n * Indicates that the a user visited the search results page,\n * and that the search results have been retrieved.\n */\nexport class SearchPageResultsEvent extends PageEvent {\n  /** event's type */\n  static readonly type = 'SearchPageResultsEvent';\n  searchTerm: string;\n  numberOfResults: Number;\n}\n","import { Injectable } from '@angular/core';\nimport {\n  createFrom,\n  EventService,\n  ProductSearchService,\n  ProductService,\n} from '@spartacus/core';\nimport { EMPTY, Observable } from 'rxjs';\nimport { filter, map, skip, switchMap, take } from 'rxjs/operators';\nimport { NavigationEvent } from '../navigation/navigation.event';\nimport {\n  CategoryPageResultsEvent,\n  ProductDetailsPageEvent,\n  SearchPageResultsEvent,\n} from './product-page.events';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProductPageEventBuilder {\n  constructor(\n    protected eventService: EventService,\n    protected productService: ProductService,\n    protected productSearchService: ProductSearchService\n  ) {\n    this.register();\n  }\n\n  protected register(): void {\n    this.eventService.register(\n      SearchPageResultsEvent,\n      this.buildSearchPageResultsEvent()\n    );\n    this.eventService.register(\n      ProductDetailsPageEvent,\n      this.buildProductDetailsPageEvent()\n    );\n    this.eventService.register(\n      CategoryPageResultsEvent,\n      this.buildCategoryResultsPageEvent()\n    );\n  }\n\n  protected buildProductDetailsPageEvent(): Observable<ProductDetailsPageEvent> {\n    return this.eventService.get(NavigationEvent).pipe(\n      filter((navigationEvent) => navigationEvent.semanticRoute === 'product'),\n      switchMap((navigationEvent) =>\n        this.productService.get(navigationEvent.context.id).pipe(\n          filter((product) => Boolean(product)),\n          take(1),\n          map((product) =>\n            createFrom(ProductDetailsPageEvent, {\n              navigation: navigationEvent,\n              categories: product.categories,\n              code: product.code,\n              name: product.name,\n              price: product.price,\n            })\n          )\n        )\n      )\n    );\n  }\n\n  protected buildCategoryResultsPageEvent(): Observable<CategoryPageResultsEvent> {\n    const searchResults$ = this.productSearchService.getResults().pipe(\n      // skipping the initial value, and preventing emission of the previous search state\n      skip(1)\n    );\n\n    return this.eventService.get(NavigationEvent).pipe(\n      switchMap((navigationEvent) => {\n        if (navigationEvent?.semanticRoute !== 'category') {\n          return EMPTY;\n        }\n\n        return searchResults$.pipe(\n          map((searchResults) =>\n            createFrom(CategoryPageResultsEvent, {\n              navigation: navigationEvent,\n              ...{\n                categoryCode: navigationEvent?.context?.id,\n                numberOfResults: searchResults?.pagination?.totalResults ?? 0,\n                categoryName: searchResults.breadcrumbs?.[0].facetValueName,\n              },\n            })\n          )\n        );\n      })\n    );\n  }\n\n  protected buildSearchPageResultsEvent(): Observable<SearchPageResultsEvent> {\n    const searchResults$ = this.productSearchService.getResults().pipe(\n      // skipping the initial value, and preventing emission of the previous search state\n      skip(1)\n    );\n\n    return this.eventService.get(NavigationEvent).pipe(\n      switchMap((navigationEvent) => {\n        if (navigationEvent?.semanticRoute !== 'search') {\n          return EMPTY;\n        }\n\n        return searchResults$.pipe(\n          map((searchResults) =>\n            createFrom(SearchPageResultsEvent, {\n              navigation: navigationEvent,\n              ...{\n                searchTerm: searchResults?.freeTextSearch ?? '',\n                numberOfResults: searchResults?.pagination?.totalResults ?? 0,\n              },\n            })\n          )\n        );\n      })\n    );\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { ProductPageEventBuilder } from './product-page-event.builder';\n\n@NgModule({})\nexport class ProductPageEventModule {\n  constructor(_productPageEventBuilder: ProductPageEventBuilder) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class SkipLinkConfig {\n  skipLinks?: SkipLink[];\n}\n\nexport abstract class SkipLink {\n  key: string;\n  i18nKey: string;\n  target?: HTMLElement;\n  position?: SkipLinkScrollPosition;\n}\n\nexport enum SkipLinkScrollPosition {\n  BEFORE = 'BEFORE',\n  AFTER = 'AFTER',\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends SkipLinkConfig {}\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { KeyboardFocusService } from '../../keyboard-focus/services/keyboard-focus.service';\nimport { SkipLink, SkipLinkConfig } from '../config/skip-link.config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SkipLinkService {\n  private skipLinks$ = new BehaviorSubject<SkipLink[]>([]);\n\n  constructor(\n    protected config: SkipLinkConfig,\n    protected keyboardFocusService: KeyboardFocusService\n  ) {}\n\n  getSkipLinks(): Observable<SkipLink[]> {\n    return this.skipLinks$;\n  }\n\n  add(key: string, target: HTMLElement): void {\n    const found: SkipLink = this.config.skipLinks.find(\n      (skipLink) => skipLink.key === key\n    );\n\n    if (found) {\n      const existing: SkipLink[] = this.skipLinks$.value;\n      existing.splice(this.getSkipLinkIndexInArray(key), 0, {\n        target,\n        i18nKey: found.i18nKey,\n        position: found.position,\n        key,\n      });\n      this.skipLinks$.next(existing);\n    }\n  }\n\n  remove(key: string): void {\n    const found: SkipLink = this.config.skipLinks.find(\n      (skipLink) => skipLink.key === key\n    );\n\n    if (found) {\n      let existing: SkipLink[] = this.skipLinks$.value;\n      existing = existing.filter((skipLink) => skipLink.key !== key);\n      this.skipLinks$.next(existing);\n    }\n  }\n\n  scrollToTarget(skipLink: SkipLink): void {\n    const target =\n      skipLink.target instanceof HTMLElement\n        ? skipLink.target\n        : (skipLink.target as Element).parentElement;\n\n    // focus first focusable element in the\n    const firstFocusable =\n      this.keyboardFocusService.findFirstFocusable(target) || target;\n\n    // we force a tabindex if not available, to ensure we can focus into the element\n    const hasTabindex = firstFocusable.hasAttribute('tabindex');\n    if (!hasTabindex) {\n      firstFocusable.setAttribute('tabindex', '-1');\n    }\n\n    firstFocusable.focus();\n\n    // drop the tmp tabindex\n    if (!hasTabindex) {\n      firstFocusable.removeAttribute('tabindex');\n    }\n  }\n\n  protected getSkipLinkIndexInArray(key: string): number {\n    let index: number = this.config.skipLinks.findIndex(\n      (skipLink) => skipLink.key === key\n    );\n\n    while (index > 0) {\n      index--;\n      const previous: SkipLink = this.config.skipLinks[index];\n      if (previous) {\n        const existing: SkipLink[] = this.skipLinks$.value;\n        const found: number = existing.findIndex(\n          (skipLink) => skipLink.key === previous.key\n        );\n        if (found > -1) {\n          return found + 1;\n        }\n      }\n    }\n    return 0;\n  }\n}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { SkipLink } from '../config/skip-link.config';\nimport { SkipLinkService } from '../service/skip-link.service';\n\n@Component({\n  selector: 'cx-skip-link',\n  templateUrl: './skip-link.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SkipLinkComponent {\n  skipLinks$: Observable<SkipLink[]> = this.skipLinkService.getSkipLinks();\n\n  constructor(private skipLinkService: SkipLinkService) {}\n\n  scrollToTarget(skipLink: SkipLink): void {\n    this.skipLinkService.scrollToTarget(skipLink);\n  }\n}\n","<div [cxFocus]=\"{ tab: true }\" *ngIf=\"skipLinks$ | async as links\">\n  <button *ngFor=\"let link of links\" (click)=\"scrollToTarget(link)\">\n    {{ 'skipLink.skipTo' | cxTranslate }}\n    {{ link.i18nKey | cxTranslate }}\n  </button>\n</div>\n","import { SkipLinkConfig } from './skip-link.config';\n\nexport const defaultSkipLinkConfig: SkipLinkConfig = {\n  skipLinks: [\n    {\n      key: 'cx-header',\n      i18nKey: 'skipLink.labels.header',\n    },\n    {\n      key: 'cx-main',\n      i18nKey: 'skipLink.labels.main',\n    },\n    { key: 'cx-footer', i18nKey: 'skipLink.labels.footer' },\n  ],\n};\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { SkipLinkService } from '../service/skip-link.service';\n\n@Directive({\n  selector: '[cxSkipLink]',\n})\nexport class SkipLinkDirective implements OnInit, OnDestroy {\n  @Input() cxSkipLink: string;\n\n  constructor(\n    protected elementRef: ElementRef<HTMLElement>,\n    protected skipLinkService: SkipLinkService\n  ) {}\n\n  ngOnInit(): void {\n    this.skipLinkService.add(this.cxSkipLink, this.elementRef.nativeElement);\n  }\n\n  ngOnDestroy(): void {\n    this.skipLinkService.remove(this.cxSkipLink);\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  APP_INITIALIZER,\n  ComponentFactoryResolver,\n  NgModule,\n} from '@angular/core';\nimport {\n  ConfigModule,\n  I18nModule,\n  provideDefaultConfig,\n} from '@spartacus/core';\nimport { OutletPosition } from '../../../cms-structure/outlet/outlet.model';\nimport { OutletService } from '../../../cms-structure/outlet/outlet.service';\nimport { KeyboardFocusModule } from '../keyboard-focus/keyboard-focus.module';\nimport { SkipLinkComponent } from './component/skip-link.component';\nimport { defaultSkipLinkConfig } from './config/default-skip-link.config';\nimport { SkipLinkDirective } from './directive/skip-link.directive';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    I18nModule,\n    ConfigModule.withConfig(defaultSkipLinkConfig),\n    KeyboardFocusModule,\n  ],\n  declarations: [SkipLinkComponent, SkipLinkDirective],\n  exports: [SkipLinkDirective],\n  providers: [\n    provideDefaultConfig(defaultSkipLinkConfig),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: skipLinkFactory,\n      deps: [ComponentFactoryResolver, OutletService],\n      multi: true,\n    },\n  ],\n})\nexport class SkipLinkModule {}\n\n/**\n * Adds the skip link component before the cx-storefront.\n */\nexport function skipLinkFactory(\n  componentFactoryResolver: ComponentFactoryResolver,\n  outletService: OutletService\n): () => void {\n  const isReady = () => {\n    const factory =\n      componentFactoryResolver.resolveComponentFactory(SkipLinkComponent);\n    outletService.add('cx-storefront', <any>factory, OutletPosition.BEFORE);\n  };\n  return isReady;\n}\n","import { LayoutConfig } from './layout-config';\n\nexport const defaultLayoutConfig: LayoutConfig = {\n  breakpoints: {\n    xs: 576,\n    sm: 768,\n    md: 992,\n    lg: 1200,\n    xl: {\n      min: 1200,\n    },\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\nimport { Direction } from './direction.model';\n\n/**\n * The direction config provides an easy way to configure \"ltr\" versus \"rtl\" direction\n * for the storefront. The direction can be configured to detect the direction by language.\n *\n * The following configuration detects rtl languages by isoCode for Arabic and Hebrew:\n *\n * ```typescript\n * direction: {\n *   detect: true,\n *   default: DirectionMode.LTR,\n *   rtlLanguages: ['ar', 'he']\n * }\n * ```\n */\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class DirectionConfig {\n  direction?: Direction;\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends DirectionConfig {}\n}\n","import { DirectionConfig } from './direction.config';\nimport { DirectionMode } from './direction.model';\n\nexport const defaultDirectionConfig: DirectionConfig = {\n  direction: {\n    detect: true,\n    default: DirectionMode.LTR,\n    // we're not polluting the system with all defaults for ltr, but add 2 common used\n    // languages (hebrew and arabic) to easily demo directionality\n    // see https://meta.wikimedia.org/wiki/Template:List_of_language_names_ordered_by_code\n    rtlLanguages: ['he', 'ar'],\n  },\n};\n","import { Injectable, OnDestroy } from '@angular/core';\nimport {\n  ConfigInitializerService,\n  LanguageService,\n  WindowRef,\n} from '@spartacus/core';\nimport { Subscription } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { DirectionConfig } from './config/direction.config';\nimport { Direction, DirectionMode } from './config/direction.model';\n\n/**\n * The `DirectionService` can be used to add the direction to the overall storefront or individual elements.\n * By default, the direction is added to the `html` element (i.e. `<html dir=\"ltr\">`). The API of this service\n * does however provide methods to add direction to individual elements if needed.\n *\n * The direction is configurable and allows for language driven direction configuration.\n *\n * To react to the active language, the service subscribes to the active language in the initialize method. This\n * is called from an APP_INITIALIZER method and should only happen once.\n */\n@Injectable({\n  providedIn: 'root',\n})\nexport class DirectionService implements OnDestroy {\n  protected config: Direction;\n  protected startsDetecting = false;\n\n  protected subscription = new Subscription();\n\n  constructor(\n    protected configInit: ConfigInitializerService,\n    protected languageService: LanguageService,\n    protected winRef: WindowRef\n  ) {}\n\n  /**\n   * Initializes the layout direction for the storefront.\n   */\n  initialize(): Promise<any> {\n    return this.configInit\n      .getStable('direction')\n      .pipe(\n        tap((config: DirectionConfig) => {\n          this.config = config?.direction;\n          if (this.config?.detect) {\n            this.detect();\n          } else {\n            this.setDirection(\n              this.winRef.document.documentElement,\n              this.config?.default\n            );\n          }\n        })\n      )\n      .toPromise();\n  }\n\n  /**\n   * Observes the _active_ language and set the required direction for the given language.\n   * The method is guarded to ensure that the active language is observed only once.\n   */\n  protected detect() {\n    if (this.startsDetecting) {\n      return;\n    }\n    this.subscription.add(\n      this.languageService\n        .getActive()\n        .subscribe((isoCode: string) =>\n          this.setDirection(\n            this.winRef.document.documentElement,\n            this.getDirection(isoCode)\n          )\n        )\n    );\n    this.startsDetecting = true;\n  }\n\n  /**\n   * Sets the direction attribute for the given element. If the direction is undefined, the `dir`\n   * attribute is removed.\n   */\n  setDirection(el: HTMLElement, direction: DirectionMode): void {\n    if (direction) {\n      el.setAttribute('dir', direction);\n    } else {\n      el.removeAttribute('dir');\n    }\n  }\n\n  /**\n   * Gets the `DirectionMode` for the given language isoCode. The language isoCode is compared\n   * to the configured list of languages(`direction.rtlLanguages` vs `direction.ltrLanguages`).\n   *\n   * If no language is given, or no language mapping could be found, we fallback to the default\n   * `direction.mode`.\n   */\n  getDirection(language?: string): DirectionMode {\n    if (language && this.config?.rtlLanguages?.includes(language)) {\n      return DirectionMode.RTL;\n    }\n    if (language && this.config?.ltrLanguages?.includes(language)) {\n      return DirectionMode.LTR;\n    }\n    return this.config?.default;\n  }\n\n  ngOnDestroy(): void {\n    // Cleans up the subscription, to avoid memory leaks in SSR.\n    this.subscription.unsubscribe();\n  }\n}\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { FeatureConfigService, provideDefaultConfig } from '@spartacus/core';\nimport { defaultDirectionConfig } from './config/default-direction.config';\nimport { DirectionService } from './direction.service';\n\nexport function initHtmlDirAttribute(\n  directionService: DirectionService,\n  featureConfigService: FeatureConfigService\n): () => void {\n  const result = () => {\n    if (featureConfigService.isLevel('2.1')) {\n      return directionService.initialize();\n    }\n  };\n  return result;\n}\n\n/**\n * Provides a configuration and APP_INITIALIZER to add the correct (language drive) html direction.\n */\n@NgModule({\n  providers: [\n    {\n      provide: APP_INITIALIZER,\n      multi: true,\n      useFactory: initHtmlDirAttribute,\n      deps: [DirectionService, FeatureConfigService],\n    },\n    provideDefaultConfig(defaultDirectionConfig),\n  ],\n})\nexport class DirectionModule {}\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { HamburgerMenuService } from './hamburger-menu.service';\n\n@Component({\n  selector: 'cx-hamburger-menu',\n  templateUrl: './hamburger-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HamburgerMenuComponent {\n  constructor(private hamburgerMenuService: HamburgerMenuService) {}\n\n  toggle(): void {\n    this.hamburgerMenuService.toggle();\n  }\n\n  get isExpanded(): Observable<boolean> {\n    return this.hamburgerMenuService.isExpanded;\n  }\n}\n","<button\n  class=\"cx-hamburger\"\n  type=\"button\"\n  (click)=\"toggle()\"\n  [class.is-active]=\"isExpanded | async\"\n  [attr.aria-expanded]=\"isExpanded | async\"\n  [attr.aria-label]=\"'common.menu' | cxTranslate\"\n  aria-controls=\"header-account-container, header-categories-container, header-locale-container\"\n>\n  <span class=\"hamburger-box\">\n    <span class=\"hamburger-inner\"></span>\n  </span>\n</button>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { CmsConfig, I18nModule, provideDefaultConfig } from '@spartacus/core';\nimport { HamburgerMenuComponent } from './hamburger-menu.component';\n\n@NgModule({\n  imports: [CommonModule, I18nModule],\n  providers: [\n    provideDefaultConfig(<CmsConfig>{\n      cmsComponents: {\n        HamburgerMenuComponent: {\n          component: HamburgerMenuComponent,\n        },\n      },\n    }),\n  ],\n  declarations: [HamburgerMenuComponent],\n  exports: [HamburgerMenuComponent],\n})\nexport class HamburgerMenuModule {}\n","import {\n  ComponentRef,\n  Injectable,\n  Renderer2,\n  RendererFactory2,\n} from '@angular/core';\nimport { SiteContextConfig, THEME_CONTEXT_ID } from '@spartacus/core';\n\n@Injectable({ providedIn: 'root' })\nexport class ThemeService {\n  protected rootComponent: ComponentRef<any>;\n  protected renderer: Renderer2;\n  protected existingTheme: string;\n\n  constructor(\n    protected config: SiteContextConfig,\n    protected rendererFactory: RendererFactory2\n  ) {}\n\n  /**\n   * This function is to be called for the root component that is\n   * bootstrapped.\n   */\n  init(rootComponent: ComponentRef<any>): void {\n    this.renderer = this.rendererFactory.createRenderer(null, null);\n    this.rootComponent = rootComponent;\n    // Theme value is a string. It is put in the generic multi-value\n    // property of the SiteContextConfig. So the array's first item\n    // is the theme value.\n    this.setTheme(this.config.context[THEME_CONTEXT_ID]?.[0]);\n  }\n\n  setTheme(theme: string): void {\n    if (theme) {\n      const element = this.rootComponent.location.nativeElement;\n      // remove the old theme\n      this.renderer.removeClass(element, this.existingTheme);\n      // add the new theme\n      this.renderer.addClass(element, theme);\n      this.existingTheme = theme;\n    }\n  }\n}\n","import { APP_BOOTSTRAP_LISTENER, ComponentRef, NgModule } from '@angular/core';\nimport { ThemeService } from './theme.service';\n\nexport function initTheme(themeService: ThemeService) {\n  const result = (component: ComponentRef<any>) => themeService.init(component);\n  return result;\n}\n\n@NgModule({\n  providers: [\n    {\n      provide: APP_BOOTSTRAP_LISTENER,\n      multi: true,\n      useFactory: initTheme,\n      deps: [ThemeService],\n    },\n  ],\n})\nexport class ThemeModule {}\n","import { NgModule } from '@angular/core';\nimport { provideConfig } from '@spartacus/core';\nimport { OutletRefModule } from '../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { defaultLayoutConfig } from './config/default-layout.config';\nimport { DirectionModule } from './direction/direction.module';\nimport { LaunchDialogModule } from './launch-dialog/index';\nimport { ThemeModule } from './theme/theme.module';\n\n@NgModule({\n  imports: [\n    OutletRefModule,\n    LaunchDialogModule.forRoot(),\n    DirectionModule,\n    ThemeModule,\n  ],\n  providers: [provideConfig(defaultLayoutConfig)],\n  exports: [OutletRefModule],\n})\nexport class LayoutModule {}\n","export enum StorefrontOutlets {\n  STOREFRONT = 'cx-storefront',\n}\n","import {\n  Component,\n  ElementRef,\n  HostBinding,\n  HostListener,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n} from '@angular/core';\nimport { RoutingService } from '@spartacus/core';\nimport { Observable, Subscription } from 'rxjs';\nimport {\n  FocusConfig,\n  KeyboardFocusService,\n} from '../a11y/keyboard-focus/index';\nimport { SkipLinkComponent } from '../a11y/skip-link/index';\nimport { HamburgerMenuService } from '../header/hamburger-menu/hamburger-menu.service';\nimport { StorefrontOutlets } from './storefront-outlets.model';\n\n@Component({\n  selector: 'cx-storefront',\n  templateUrl: './storefront.component.html',\n})\nexport class StorefrontComponent implements OnInit, OnDestroy {\n  navigateSubscription: Subscription;\n  isExpanded$: Observable<boolean> = this.hamburgerMenuService.isExpanded;\n\n  readonly StorefrontOutlets = StorefrontOutlets;\n\n  @HostBinding('class.start-navigating') startNavigating;\n  @HostBinding('class.stop-navigating') stopNavigating;\n\n  // required by esc focus\n  @HostBinding('tabindex') tabindex = '0';\n\n  @ViewChild(SkipLinkComponent) child: SkipLinkComponent;\n\n  private keyboardFocusConfig: FocusConfig = {\n    focusOnEscape: true,\n    focusOnDoubleEscape: true,\n  };\n\n  @HostListener('keydown.escape', ['$event'])\n  handleEscape(event: KeyboardEvent): void {\n    this.keyboardFocusService.handleEscape(\n      this.elementRef.nativeElement,\n      this.keyboardFocusConfig,\n      event\n    );\n  }\n\n  constructor(\n    private hamburgerMenuService: HamburgerMenuService,\n    private routingService: RoutingService,\n    protected elementRef: ElementRef<HTMLElement>,\n    protected keyboardFocusService: KeyboardFocusService\n  ) {}\n\n  ngOnInit(): void {\n    this.navigateSubscription = this.routingService\n      .isNavigating()\n      .subscribe((val) => {\n        this.startNavigating = val === true;\n        this.stopNavigating = val === false;\n      });\n  }\n\n  collapseMenuIfClickOutside(event: any): void {\n    const element = event.target;\n    if (\n      element.nodeName.toLowerCase() === 'header' &&\n      element.className.includes('is-expanded')\n    ) {\n      this.collapseMenu();\n    }\n  }\n\n  collapseMenu(): void {\n    this.hamburgerMenuService.toggle(true);\n  }\n\n  ngOnDestroy(): void {\n    if (this.navigateSubscription) {\n      this.navigateSubscription.unsubscribe();\n    }\n  }\n}\n","<ng-template [cxOutlet]=\"StorefrontOutlets.STOREFRONT\" cxPageTemplateStyle>\n  <ng-template cxOutlet=\"cx-header\">\n    <header\n      cxSkipLink=\"cx-header\"\n      [cxFocus]=\"{ disableMouseFocus: true }\"\n      [class.is-expanded]=\"isExpanded$ | async\"\n      (keydown.escape)=\"collapseMenu()\"\n      (click)=\"collapseMenuIfClickOutside($event)\"\n    >\n      <cx-page-layout section=\"header\"></cx-page-layout>\n      <cx-page-layout section=\"navigation\"></cx-page-layout>\n    </header>\n    <cx-page-slot position=\"BottomHeaderSlot\"></cx-page-slot>\n    <cx-global-message\n      aria-atomic=\"true\"\n      aria-live=\"assertive\"\n    ></cx-global-message>\n  </ng-template>\n\n  <main cxSkipLink=\"cx-main\" [cxFocus]=\"{ disableMouseFocus: true }\">\n    <router-outlet></router-outlet>\n  </main>\n\n  <ng-template cxOutlet=\"cx-footer\">\n    <footer cxSkipLink=\"cx-footer\" [cxFocus]=\"{ disableMouseFocus: true }\">\n      <cx-page-layout section=\"footer\"></cx-page-layout>\n    </footer>\n  </ng-template>\n</ng-template>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { GlobalMessageComponentModule } from '../../cms-components/misc/global-message/global-message.module';\nimport { OutletRefModule } from '../../cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { OutletModule } from '../../cms-structure/outlet/outlet.module';\nimport { PageLayoutModule } from '../../cms-structure/page/page-layout/page-layout.module';\nimport { PageSlotModule } from '../../cms-structure/page/slot/page-slot.module';\nimport { StorefrontComponent } from './storefront.component';\nimport { KeyboardFocusModule } from '../a11y/keyboard-focus/keyboard-focus.module';\nimport { SkipLinkModule } from '../a11y/skip-link/skip-link.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    GlobalMessageComponentModule,\n    OutletModule,\n    OutletRefModule,\n    PageLayoutModule,\n    PageSlotModule,\n    KeyboardFocusModule,\n    SkipLinkModule,\n  ],\n  declarations: [StorefrontComponent],\n  exports: [StorefrontComponent],\n})\nexport class StorefrontComponentModule {}\n","import { MediaConfig } from '../../shared/components/media/media.config';\n\nexport const mediaConfig: MediaConfig = {\n  mediaFormats: {\n    mobile: { width: 400 },\n    tablet: { width: 770 },\n    desktop: { width: 1140 },\n    widescreen: { width: 1400 },\n    // product media\n    cartIcon: { width: 65 },\n    thumbnail: { width: 96 },\n    product: { width: 284 },\n    zoom: { width: 515 },\n  },\n};\n","import { LayoutConfig } from '../../layout/config/layout-config';\n\n/**\n * The layout configuration is used to define the overall layout of the storefront.\n * The configuration includes the following aspects:\n * - breakpoint layout (AKA screen layout)\n * - Page sections slot configuration (i.e. header vs footer)\n * - page template slot configuration (i.e. landing page template vs PDP page template)\n * - deferred loading configuration\n *\n * The page slot configurations is directly related to the data in the backend. If you use the\n * Spartacus sample-data, you will have an aligned setup. However, if you introduce custom page\n * templates and/or slots, you most likely need to further adjust or replace this configuration.\n */\nexport const layoutConfig: LayoutConfig = {\n  // deferredLoading: {\n  //   strategy: DeferLoadingStrategy.DEFER,\n  //   intersectionMargin: '50px',\n  // },\n  layoutSlots: {\n    header: {\n      lg: {\n        slots: [\n          'PreHeader',\n          'SiteContext',\n          'SiteLinks',\n          'SiteLogo',\n          'SearchBox',\n          'SiteLogin',\n          'MiniCart',\n          'NavigationBar',\n        ],\n      },\n      slots: ['PreHeader', 'SiteLogo', 'SearchBox', 'MiniCart'],\n    },\n    navigation: {\n      lg: { slots: [] },\n      slots: ['SiteLogin', 'NavigationBar', 'SiteContext', 'SiteLinks'],\n    },\n    footer: {\n      slots: ['Footer'],\n    },\n    LandingPage2Template: {\n      pageFold: 'Section2B',\n      slots: [\n        'Section1',\n        'Section2A',\n        'Section2B',\n        'Section2C',\n        'Section3',\n        'Section4',\n        'Section5',\n      ],\n    },\n    ContentPage1Template: {\n      slots: ['Section2A', 'Section2B'],\n    },\n    CategoryPageTemplate: {\n      pageFold: 'Section2',\n      slots: ['Section1', 'Section2', 'Section3'],\n    },\n    ProductListPageTemplate: {\n      slots: ['ProductLeftRefinements', 'ProductListSlot'],\n    },\n    ProductGridPageTemplate: {\n      slots: ['ProductLeftRefinements', 'ProductGridSlot'],\n    },\n    SearchResultsListPageTemplate: {\n      slots: [\n        'Section2',\n        'ProductLeftRefinements',\n        'SearchResultsListSlot',\n        'Section4',\n      ],\n    },\n    SearchResultsGridPageTemplate: {\n      slots: [\n        'Section2',\n        'ProductLeftRefinements',\n        'SearchResultsGridSlot',\n        'Section4',\n      ],\n    },\n    ProductDetailsPageTemplate: {\n      lg: {\n        pageFold: 'UpSelling',\n      },\n      pageFold: 'Summary',\n      slots: [\n        'Summary',\n        'UpSelling',\n        'CrossSelling',\n        'Tabs',\n        'PlaceholderContentSlot',\n      ],\n    },\n    CartPageTemplate: {\n      slots: ['TopContent', 'CenterRightContentSlot', 'EmptyCartMiddleContent'],\n    },\n    AccountPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    LoginPageTemplate: {\n      slots: ['LeftContentSlot', 'RightContentSlot'],\n    },\n    ErrorPageTemplate: {\n      slots: ['TopContent', 'MiddleContent', 'BottomContent'],\n    },\n    OrderConfirmationPageTemplate: {\n      slots: ['BodyContent', 'SideContent'],\n    },\n    MultiStepCheckoutSummaryPageTemplate: {\n      slots: ['TopContent', 'BodyContent', 'SideContent', 'BottomContent'],\n    },\n    CheckoutLoginPageTemplate: {\n      slots: ['RightContentSlot'],\n    },\n  },\n};\n","import { ValueProvider } from '@angular/core';\nimport { provideCmsStructure } from '../../cms-structure/utils/cms-structure.util';\n\nexport const defaultCmsContentProviders: ValueProvider[] = [\n  provideCmsStructure({\n    componentId: 'HamburgerMenuComponent',\n    pageSlotPosition: 'PreHeader',\n  }),\n  provideCmsStructure({\n    componentId: 'LoginComponent',\n    pageSlotPosition: 'SiteLogin',\n  }),\n];\n","import { OnNavigateConfig } from './on-navigate-config';\n\nexport const defaultOnNavigateConfig: OnNavigateConfig = {\n  enableResetViewOnNavigate: {\n    active: true,\n    ignoreQueryString: false,\n    ignoreRoutes: [],\n  },\n};\n","import { Injectable } from '@angular/core';\nimport { Config } from '@spartacus/core';\n\n@Injectable({\n  providedIn: 'root',\n  useExisting: Config,\n})\nexport abstract class OnNavigateConfig {\n  enableResetViewOnNavigate?: {\n    active?: boolean;\n    ignoreQueryString?: boolean;\n    ignoreRoutes?: string[];\n  };\n}\n\ndeclare module '@spartacus/core' {\n  interface Config extends OnNavigateConfig {}\n}\n","import { ViewportScroller } from '@angular/common';\nimport {\n  ApplicationRef,\n  ComponentRef,\n  Injectable,\n  Injector,\n} from '@angular/core';\nimport { Router, Scroll } from '@angular/router';\nimport { Subscription } from 'rxjs';\nimport { filter, pairwise } from 'rxjs/operators';\nimport { OnNavigateConfig } from './config';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class OnNavigateService {\n  protected subscription: Subscription;\n\n  get hostComponent(): ComponentRef<any> {\n    return this.injector.get(ApplicationRef)?.components?.[0];\n  }\n\n  constructor(\n    protected config: OnNavigateConfig,\n    protected router: Router,\n    protected viewportScroller: ViewportScroller,\n    protected injector: Injector\n  ) {}\n\n  /**\n   * Reads configuration and enables features based on flags set.\n   */\n  initializeWithConfig(): void {\n    if (this.config?.enableResetViewOnNavigate?.active) {\n      this.setResetViewOnNavigate(this.config.enableResetViewOnNavigate.active);\n    }\n  }\n\n  /**\n   * Resets view back to the original position when performing a back navigation and to the top when performing a front navigation\n   * and sets the focus back to the top of the page before skiplinks for any type of navigation\n   * @param enable Enable or disable this feature\n   */\n  setResetViewOnNavigate(enable: boolean): void {\n    this.subscription?.unsubscribe();\n\n    if (enable) {\n      this.subscription = this.router.events\n        .pipe(\n          filter((event): event is Scroll => event instanceof Scroll),\n          pairwise()\n        )\n        .subscribe((event) => {\n          const previousRoute = event[0];\n          const currentRoute = event[1];\n\n          if (currentRoute.position) {\n            // allow the pages to be repainted before scrolling to proper position\n            setTimeout(() =>\n              this.viewportScroller.scrollToPosition(currentRoute.position)\n            );\n          } else {\n            if (\n              this.config.enableResetViewOnNavigate?.ignoreQueryString &&\n              this.isPathEqual(previousRoute, currentRoute)\n            ) {\n              return;\n            }\n\n            if (this.isChildRoute(currentRoute)) {\n              return;\n            }\n\n            setTimeout(\n              () => this.viewportScroller.scrollToPosition([0, 0]),\n              100\n            );\n          }\n\n          this.hostComponent?.location?.nativeElement.focus();\n        });\n    }\n  }\n\n  /**\n   * Verifies if the current route is a child route from the given ignore config route\n   *\n   * @param route\n   * @returns boolean whether the route is a child route\n   */\n  private isChildRoute(route: Scroll): boolean {\n    return (\n      this.config.enableResetViewOnNavigate?.ignoreRoutes?.some((configRoute) =>\n        route.routerEvent.urlAfterRedirects.split('/').includes(configRoute)\n      ) ?? false\n    );\n  }\n\n  /**\n   * Verifies if the previous and current route are the same without the query string\n   *\n   * @param previousRoute\n   * @param currentRoute\n   * @returns boolean depending on the previous and current route are equal without the query strings\n   */\n  private isPathEqual(previousRoute: Scroll, currentRoute: Scroll): boolean {\n    return (\n      previousRoute.routerEvent.urlAfterRedirects.split('?')[0] ===\n      currentRoute.routerEvent.urlAfterRedirects.split('?')[0]\n    );\n  }\n}\n","import { APP_INITIALIZER, NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { provideDefaultConfig } from '@spartacus/core';\nimport { defaultOnNavigateConfig } from './config/default-on-navigate-config';\nimport { OnNavigateService } from './on-navigate.service';\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot([], {\n      anchorScrolling: 'enabled',\n      relativeLinkResolution: 'corrected',\n      initialNavigation: 'enabled',\n    }),\n  ],\n  providers: [\n    provideDefaultConfig(defaultOnNavigateConfig),\n    {\n      provide: APP_INITIALIZER,\n      useFactory: onNavigateFactory,\n      deps: [OnNavigateService],\n      multi: true,\n    },\n  ],\n})\nexport class AppRoutingModule {}\n\nexport function onNavigateFactory(\n  onNavigateService: OnNavigateService\n): () => void {\n  const isReady = () => onNavigateService.initializeWithConfig();\n  return isReady;\n}\n","import { AbstractControl, FormArray, FormGroup } from '@angular/forms';\n\n/**\n * Utils for Angular forms\n */\nexport namespace FormUtils {\n  /**\n   * Calls the native Angular method `#updateValueAndValidity` for the given from control\n   * and all its descendants (in case when it's `FormGroup` or `FormArray`).\n   *\n   * In particular it's useful for triggering re-emission of observables\n   * `valueChanges` and `statusChanges` for all descendant form controls.\n   *\n   * _Note: Dropping this function may be considered, when it's implemented natively\n   * by Angular. See https://github.com/angular/angular/issues/6170_\n   *\n   * @param control form control\n   * @param options additional options\n   * * `emitEvent`: When true or not given (the default), the `statusChanges` and\n   * `valueChanges` observables emit the latest status and value. When false,\n   * it doesn't trigger observables emission.\n   */\n  export function deepUpdateValueAndValidity(\n    control: AbstractControl,\n    options: { emitEvent?: boolean } = {}\n  ): void {\n    if (control instanceof FormGroup || control instanceof FormArray) {\n      Object.values(control.controls).forEach(\n        (childControl: AbstractControl) => {\n          deepUpdateValueAndValidity(childControl, options);\n        }\n      );\n    }\n\n    control.updateValueAndValidity({\n      onlySelf: true, // avoid calling `#updateValueAndValidity` for all ancestors\n      emitEvent: options.emitEvent,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BaseCoreModule } from '@spartacus/core';\nimport { GlobalMessageComponentModule } from './cms-components/misc/global-message/global-message.module';\nimport { OutletRefModule } from './cms-structure/outlet/outlet-ref/outlet-ref.module';\nimport { OutletModule } from './cms-structure/outlet/outlet.module';\nimport { PageComponentModule } from './cms-structure/page/component/page-component.module';\nimport { PageLayoutModule } from './cms-structure/page/page-layout/page-layout.module';\nimport { PageSlotModule } from './cms-structure/page/slot/page-slot.module';\nimport { PwaModule } from './cms-structure/pwa/pwa.module';\nimport { RoutingModule } from './cms-structure/routing/routing.module';\nimport { SeoModule } from './cms-structure/seo/seo.module';\nimport { KeyboardFocusModule } from './layout/a11y/keyboard-focus/keyboard-focus.module';\nimport { SkipLinkModule } from './layout/a11y/skip-link/skip-link.module';\nimport { LayoutModule } from './layout/layout.module';\nimport { StorefrontComponentModule } from './layout/main/storefront-component.module';\nimport { MediaModule } from './shared/components/media/media.module';\n\n@NgModule({\n  imports: [\n    BaseCoreModule.forRoot(),\n    RouterModule,\n    GlobalMessageComponentModule,\n    OutletModule,\n    OutletRefModule,\n    PwaModule,\n    PageLayoutModule,\n    SeoModule,\n    PageComponentModule.forRoot(),\n    PageSlotModule,\n    SkipLinkModule,\n    KeyboardFocusModule,\n    LayoutModule,\n    RoutingModule.forRoot(),\n    MediaModule.forRoot(),\n    OutletModule.forRoot(),\n    StorefrontComponentModule,\n  ],\n  exports: [LayoutModule, StorefrontComponentModule],\n})\nexport class BaseStorefrontModule {}\n","/*\n * Public API Surface of storefrontlib\n */\n\nexport * from './cms-components/index';\nexport * from './cms-pages/index';\nexport * from './cms-structure/index';\nexport * from './context/index';\nexport * from './events/index';\nexport * from './layout/index';\nexport * from './recipes/index';\nexport * from './router/index';\nexport * from './shared/index';\nexport * from './utils/index';\nexport * from './base-storefront.module';\n\n/** AUGMENTABLE_TYPES_START */\nexport { BREAKPOINT } from './layout/config/layout-config';\nexport { LAUNCH_CALLER } from './layout/launch-dialog/config/launch-config';\nexport { ICON_TYPE } from './cms-components/misc/icon';\n/** AUGMENTABLE_TYPES_END */\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["CoreRoutingModule","moduleComponents"],"mappings":"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"}