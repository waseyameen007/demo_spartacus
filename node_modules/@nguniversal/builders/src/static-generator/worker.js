/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define("@nguniversal/builders/src/static-generator/worker", ["require", "exports", "@nguniversal/common/clover/server", "fs", "path"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.render = exports.setup = void 0;
    const server_1 = require("@nguniversal/common/clover/server");
    const fs_1 = require("fs");
    const path_1 = require("path");
    let engine;
    let sharedOptions;
    function setup(options) {
        engine = new server_1.Engine();
        sharedOptions = options;
    }
    exports.setup = setup;
    function render(options) {
        return __awaiter(this, void 0, void 0, function* () {
            const { outputPath, route, port } = options;
            const html = yield engine.render({
                publicPath: outputPath,
                inlineCriticalCss: sharedOptions.inlineCriticalCss,
                url: `http://localhost:${port}/${route}`,
            });
            // This case happens when we are prerendering "/".
            const outputFolderPath = path_1.join(outputPath, route);
            const outputIndexPath = path_1.join(outputFolderPath, 'index.html');
            if (route === '/') {
                const browserIndexOutputPathOriginal = path_1.join(outputPath, 'index-ssr.html');
                yield fs_1.promises.rename(outputIndexPath, browserIndexOutputPathOriginal);
            }
            yield fs_1.promises.mkdir(outputFolderPath, { recursive: true });
            yield fs_1.promises.writeFile(outputIndexPath, html);
        });
    }
    exports.render = render;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid29ya2VyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vbW9kdWxlcy9idWlsZGVycy9zcmMvc3RhdGljLWdlbmVyYXRvci93b3JrZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBRUgsOERBQTJEO0lBQzNELDJCQUFvQztJQUNwQywrQkFBNEI7SUFNNUIsSUFBSSxNQUFjLENBQUM7SUFDbkIsSUFBSSxhQUE4QixDQUFDO0lBRW5DLFNBQWdCLEtBQUssQ0FBQyxPQUF3QjtRQUM1QyxNQUFNLEdBQUcsSUFBSSxlQUFNLEVBQUUsQ0FBQztRQUN0QixhQUFhLEdBQUcsT0FBTyxDQUFDO0lBQzFCLENBQUM7SUFIRCxzQkFHQztJQUVELFNBQXNCLE1BQU0sQ0FBQyxPQUk1Qjs7WUFDQyxNQUFNLEVBQUUsVUFBVSxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsR0FBRyxPQUFPLENBQUM7WUFDNUMsTUFBTSxJQUFJLEdBQUcsTUFBTSxNQUFNLENBQUMsTUFBTSxDQUFDO2dCQUMvQixVQUFVLEVBQUUsVUFBVTtnQkFDdEIsaUJBQWlCLEVBQUUsYUFBYSxDQUFDLGlCQUFpQjtnQkFDbEQsR0FBRyxFQUFFLG9CQUFvQixJQUFJLElBQUksS0FBSyxFQUFFO2FBQ3pDLENBQUMsQ0FBQztZQUVILGtEQUFrRDtZQUNsRCxNQUFNLGdCQUFnQixHQUFHLFdBQUksQ0FBQyxVQUFVLEVBQUUsS0FBSyxDQUFDLENBQUM7WUFDakQsTUFBTSxlQUFlLEdBQUcsV0FBSSxDQUFDLGdCQUFnQixFQUFFLFlBQVksQ0FBQyxDQUFDO1lBQzdELElBQUksS0FBSyxLQUFLLEdBQUcsRUFBRTtnQkFDakIsTUFBTSw4QkFBOEIsR0FBRyxXQUFJLENBQUMsVUFBVSxFQUFFLGdCQUFnQixDQUFDLENBQUM7Z0JBQzFFLE1BQU0sYUFBRSxDQUFDLE1BQU0sQ0FBQyxlQUFlLEVBQUUsOEJBQThCLENBQUMsQ0FBQzthQUNsRTtZQUVELE1BQU0sYUFBRSxDQUFDLEtBQUssQ0FBQyxnQkFBZ0IsRUFBRSxFQUFFLFNBQVMsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO1lBQ3RELE1BQU0sYUFBRSxDQUFDLFNBQVMsQ0FBQyxlQUFlLEVBQUUsSUFBSSxDQUFDLENBQUM7UUFDNUMsQ0FBQztLQUFBO0lBdEJELHdCQXNCQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgTExDIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQgeyBFbmdpbmUgfSBmcm9tICdAbmd1bml2ZXJzYWwvY29tbW9uL2Nsb3Zlci9zZXJ2ZXInO1xuaW1wb3J0IHsgcHJvbWlzZXMgYXMgZnMgfSBmcm9tICdmcyc7XG5pbXBvcnQgeyBqb2luIH0gZnJvbSAncGF0aCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgV29ya2VyU2V0dXBBcmdzIHtcbiAgaW5saW5lQ3JpdGljYWxDc3M/OiBib29sZWFuO1xufVxuXG5sZXQgZW5naW5lOiBFbmdpbmU7XG5sZXQgc2hhcmVkT3B0aW9uczogV29ya2VyU2V0dXBBcmdzO1xuXG5leHBvcnQgZnVuY3Rpb24gc2V0dXAob3B0aW9uczogV29ya2VyU2V0dXBBcmdzKTogdm9pZCB7XG4gIGVuZ2luZSA9IG5ldyBFbmdpbmUoKTtcbiAgc2hhcmVkT3B0aW9ucyA9IG9wdGlvbnM7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiByZW5kZXIob3B0aW9uczoge1xuICBvdXRwdXRQYXRoOiBzdHJpbmc7XG4gIHJvdXRlOiBzdHJpbmc7XG4gIHBvcnQ6IG51bWJlcjtcbn0pOiBQcm9taXNlPHZvaWQ+IHtcbiAgY29uc3QgeyBvdXRwdXRQYXRoLCByb3V0ZSwgcG9ydCB9ID0gb3B0aW9ucztcbiAgY29uc3QgaHRtbCA9IGF3YWl0IGVuZ2luZS5yZW5kZXIoe1xuICAgIHB1YmxpY1BhdGg6IG91dHB1dFBhdGgsXG4gICAgaW5saW5lQ3JpdGljYWxDc3M6IHNoYXJlZE9wdGlvbnMuaW5saW5lQ3JpdGljYWxDc3MsXG4gICAgdXJsOiBgaHR0cDovL2xvY2FsaG9zdDoke3BvcnR9LyR7cm91dGV9YCxcbiAgfSk7XG5cbiAgLy8gVGhpcyBjYXNlIGhhcHBlbnMgd2hlbiB3ZSBhcmUgcHJlcmVuZGVyaW5nIFwiL1wiLlxuICBjb25zdCBvdXRwdXRGb2xkZXJQYXRoID0gam9pbihvdXRwdXRQYXRoLCByb3V0ZSk7XG4gIGNvbnN0IG91dHB1dEluZGV4UGF0aCA9IGpvaW4ob3V0cHV0Rm9sZGVyUGF0aCwgJ2luZGV4Lmh0bWwnKTtcbiAgaWYgKHJvdXRlID09PSAnLycpIHtcbiAgICBjb25zdCBicm93c2VySW5kZXhPdXRwdXRQYXRoT3JpZ2luYWwgPSBqb2luKG91dHB1dFBhdGgsICdpbmRleC1zc3IuaHRtbCcpO1xuICAgIGF3YWl0IGZzLnJlbmFtZShvdXRwdXRJbmRleFBhdGgsIGJyb3dzZXJJbmRleE91dHB1dFBhdGhPcmlnaW5hbCk7XG4gIH1cblxuICBhd2FpdCBmcy5ta2RpcihvdXRwdXRGb2xkZXJQYXRoLCB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KTtcbiAgYXdhaXQgZnMud3JpdGVGaWxlKG91dHB1dEluZGV4UGF0aCwgaHRtbCk7XG59XG4iXX0=