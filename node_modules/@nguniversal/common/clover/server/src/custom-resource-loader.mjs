/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
import { promises } from 'fs';
import { ResourceLoader } from 'jsdom';
import { normalize } from 'path';
export class CustomResourceLoader extends ResourceLoader {
    constructor(baseUrl, publicPath, fileCache) {
        super();
        this.baseUrl = baseUrl;
        this.publicPath = publicPath;
        this.fileCache = fileCache;
    }
    fetch(url, _options) {
        if (!url.endsWith('.js') || !url.startsWith(this.baseUrl)) {
            return null;
        }
        const path = normalize(url.replace(this.baseUrl, this.publicPath));
        if (this.fileCache.has(path)) {
            // tslint:disable-next-line: no-non-null-assertion
            const filePromise = Promise.resolve(this.fileCache.get(path));
            filePromise.abort = () => undefined;
            return filePromise;
        }
        const promise = promises.readFile(path).then((content) => {
            this.fileCache.set(path, content);
            return content;
        });
        promise.abort = () => undefined;
        return promise;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3VzdG9tLXJlc291cmNlLWxvYWRlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL21vZHVsZXMvY29tbW9uL2Nsb3Zlci9zZXJ2ZXIvc3JjL2N1c3RvbS1yZXNvdXJjZS1sb2FkZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7OztHQU1HO0FBRUgsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLElBQUksQ0FBQztBQUM5QixPQUFPLEVBQWtDLGNBQWMsRUFBRSxNQUFNLE9BQU8sQ0FBQztBQUN2RSxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRWpDLE1BQU0sT0FBTyxvQkFBcUIsU0FBUSxjQUFjO0lBQ3RELFlBQ21CLE9BQWUsRUFDZixVQUFrQixFQUNsQixTQUE4QjtRQUUvQyxLQUFLLEVBQUUsQ0FBQztRQUpTLFlBQU8sR0FBUCxPQUFPLENBQVE7UUFDZixlQUFVLEdBQVYsVUFBVSxDQUFRO1FBQ2xCLGNBQVMsR0FBVCxTQUFTLENBQXFCO0lBR2pELENBQUM7SUFFRCxLQUFLLENBQUMsR0FBVyxFQUFFLFFBQXNCO1FBQ3ZDLElBQUksQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDekQsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUVELE1BQU0sSUFBSSxHQUFHLFNBQVMsQ0FBQyxHQUFHLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUM7UUFDbkUsSUFBSSxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM1QixrREFBa0Q7WUFDbEQsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUUsQ0FBNkIsQ0FBQztZQUMzRixXQUFXLENBQUMsS0FBSyxHQUFHLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQztZQUVwQyxPQUFPLFdBQVcsQ0FBQztTQUNwQjtRQUVELE1BQU0sT0FBTyxHQUFHLFFBQVEsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsSUFBSSxDQUFDLENBQUMsT0FBTyxFQUFFLEVBQUU7WUFDdkQsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1lBRWxDLE9BQU8sT0FBTyxDQUFDO1FBQ2pCLENBQUMsQ0FBNkIsQ0FBQztRQUUvQixPQUFPLENBQUMsS0FBSyxHQUFHLEdBQUcsRUFBRSxDQUFDLFNBQVMsQ0FBQztRQUVoQyxPQUFPLE9BQU8sQ0FBQztJQUNqQixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgR29vZ2xlIExMQyBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuaW1wb3J0IHsgcHJvbWlzZXMgfSBmcm9tICdmcyc7XG5pbXBvcnQgeyBBYm9ydGFibGVQcm9taXNlLCBGZXRjaE9wdGlvbnMsIFJlc291cmNlTG9hZGVyIH0gZnJvbSAnanNkb20nO1xuaW1wb3J0IHsgbm9ybWFsaXplIH0gZnJvbSAncGF0aCc7XG5cbmV4cG9ydCBjbGFzcyBDdXN0b21SZXNvdXJjZUxvYWRlciBleHRlbmRzIFJlc291cmNlTG9hZGVyIHtcbiAgY29uc3RydWN0b3IoXG4gICAgcHJpdmF0ZSByZWFkb25seSBiYXNlVXJsOiBzdHJpbmcsXG4gICAgcHJpdmF0ZSByZWFkb25seSBwdWJsaWNQYXRoOiBzdHJpbmcsXG4gICAgcHJpdmF0ZSByZWFkb25seSBmaWxlQ2FjaGU6IE1hcDxzdHJpbmcsIEJ1ZmZlcj4sXG4gICkge1xuICAgIHN1cGVyKCk7XG4gIH1cblxuICBmZXRjaCh1cmw6IHN0cmluZywgX29wdGlvbnM6IEZldGNoT3B0aW9ucyk6IEFib3J0YWJsZVByb21pc2U8QnVmZmVyPiB8IG51bGwge1xuICAgIGlmICghdXJsLmVuZHNXaXRoKCcuanMnKSB8fCAhdXJsLnN0YXJ0c1dpdGgodGhpcy5iYXNlVXJsKSkge1xuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuXG4gICAgY29uc3QgcGF0aCA9IG5vcm1hbGl6ZSh1cmwucmVwbGFjZSh0aGlzLmJhc2VVcmwsIHRoaXMucHVibGljUGF0aCkpO1xuICAgIGlmICh0aGlzLmZpbGVDYWNoZS5oYXMocGF0aCkpIHtcbiAgICAgIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTogbm8tbm9uLW51bGwtYXNzZXJ0aW9uXG4gICAgICBjb25zdCBmaWxlUHJvbWlzZSA9IFByb21pc2UucmVzb2x2ZSh0aGlzLmZpbGVDYWNoZS5nZXQocGF0aCkhKSBhcyBBYm9ydGFibGVQcm9taXNlPEJ1ZmZlcj47XG4gICAgICBmaWxlUHJvbWlzZS5hYm9ydCA9ICgpID0+IHVuZGVmaW5lZDtcblxuICAgICAgcmV0dXJuIGZpbGVQcm9taXNlO1xuICAgIH1cblxuICAgIGNvbnN0IHByb21pc2UgPSBwcm9taXNlcy5yZWFkRmlsZShwYXRoKS50aGVuKChjb250ZW50KSA9PiB7XG4gICAgICB0aGlzLmZpbGVDYWNoZS5zZXQocGF0aCwgY29udGVudCk7XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pIGFzIEFib3J0YWJsZVByb21pc2U8QnVmZmVyPjtcblxuICAgIHByb21pc2UuYWJvcnQgPSAoKSA9PiB1bmRlZmluZWQ7XG5cbiAgICByZXR1cm4gcHJvbWlzZTtcbiAgfVxufVxuIl19